<html lang="en">
<head>
<title>JPEGDEC-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
JPEG Decoder Reference 
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_MAX_WIDTH"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_MAX_WIDTH<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum supported image width<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_MAX_WIDTH   	(65535)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the number of pixels in the horizontal direction for the maximum size image that can be decoded.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MAX_HEIGHT">SCE_JPEG_MAX_HEIGHT</a></b><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_MAX_HEIGHT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_MAX_HEIGHT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum supported image height<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_MAX_HEIGHT 	(65535)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the number of pixels in the vertical direction for the maximum size image that can be decoded.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MAX_WIDTH">SCE_JPEG_MAX_WIDTH</a></b><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_MJPEG_WITH_DHT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_MJPEG_WITH_DHT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant that indicates decoding of YUV420 format JPEG data with DHT<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_MJPEG_WITH_DHT	(0)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant is used when you want to decode JPEG data with a DHT marker when the color space is YUV420 format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpeg">sceJpegDecodeMJpeg</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_MJPEG_WITHOUT_DHT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_MJPEG_WITHOUT_DHT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant that indicates decoding of YUV420 format JPEG data without DHT<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_MJPEG_WITHOUT_DHT	(1)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant is used when you want to decode JPEG data with no DHT marker when the color space is YUV420 format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpeg">sceJpegDecodeMJpeg</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_MJPEG_ANY_SAMPLING_WITHOUT_DHT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_MJPEG_ANY_SAMPLING_WITHOUT_DHT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant that indicates decoding of JPEG data without DHT<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_MJPEG_ANY_SAMPLING_WITHOUT_DHT	(2)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant is used when you want to decode JPEG data with no DHT marker when there is no color space constraint.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpeg">sceJpegDecodeMJpeg</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_MJPEG_ANY_SAMPLING"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_MJPEG_ANY_SAMPLING<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant that indicates any JPEG decoding<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_MJPEG_ANY_SAMPLING	(3)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant is used when you want to decode (all ordinary JPEG data) with practically no constraints.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpeg">sceJpegDecodeMJpeg</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_PIXEL_RGB565"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_PIXEL_RGB565<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>RGB565 16-bit color output mode constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_PIXEL_RGB565	(0)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the use of pixel format R:G:B = 5:6:5 as the color conversion result.<br>It is the same value as SCE_DISPLAY_PIXEL_RGB565.<br>The bit assignments are also similar to those of a 16-bit value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegMJpegCscWithColorOption">sceJpegMJpegCscWithColorOption</a>()<br>SCE_DISPLAY_PIXEL_RGB565<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_PIXEL_RGBA5551"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_PIXEL_RGBA5551<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>RGBA5551 16-bit color output mode constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_PIXEL_RGBA5551	(1)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the use of pixel format R:G:B:A = 5:5:5:1 as the color conversion result.<br>It is the same value as SCE_DISPLAY_PIXEL_RGBA5551.<br>The bit assignments are also similar to those of a 16-bit value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegMJpegCscWithColorOption">sceJpegMJpegCscWithColorOption</a>()<br>SCE_DISPLAY_PIXEL_RGBA5551<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_PIXEL_RGBA4444"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_PIXEL_RGBA4444<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>RGBA4444 16-bit color output mode constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_PIXEL_RGBA4444	(2)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the use of pixel format R:G:B:A = 4:4:4:4 as the color conversion result.<br>It is the same value as SCE_DISPLAY_PIXEL_RGBA4444.<br>The bit assignments are also similar to those of a 16-bit value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegMJpegCscWithColorOption">sceJpegMJpegCscWithColorOption</a>()<br>SCE_DISPLAY_PIXEL_RGBA4444<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_PIXEL_RGBA8888"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_PIXEL_RGBA8888<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>RGBA8888 32-bit color output mode constant <br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_PIXEL_RGBA8888	(3)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the use of pixel format R:G:B:A = 8:8:8:8 as the color conversion result.<br>It is the same value as SCE_DISPLAY_PIXEL_RGBA8888.<br>The bit assignments are also similar to those of a 32-bit value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegMJpegCscWithColorOption">sceJpegMJpegCscWithColorOption</a>()<br>SCE_DISPLAY_PIXEL_RGBA8888<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_COLORSPACE_JFIF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_COLORSPACE_JFIF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant that indicates YCbCr color space defined by JFIF<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_COLORSPACE_JFIF	(0)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the color converted input data is to be treated as the color space defined by JFIF (color space generally used in JPEG). It will be FULL RANGE YCbCr data.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegMJpegCscWithColorOption">sceJpegMJpegCscWithColorOption</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_JPEG_COLORSPACE_BT601"></a>
<table width="100%"><td width="70%"><font size=6>SCE_JPEG_COLORSPACE_BT601<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant that indicates YCbCr color space defined by BT601<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_JPEG_COLORSPACE_BT601	(1)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the color converted input data is to be treated as the color space defined by BT601, which is used in movies. The Y component of the data can range from 15 &lt; Y &lt; 236.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegMJpegCscWithColorOption">sceJpegMJpegCscWithColorOption</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_CSC_BILINEAR_ENABLE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_CSC_BILINEAR_ENABLE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant that indicates color conversion with bilinear interpolation<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_CSC_BILINEAR_ENABLE	(1&lt;&lt;20)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that bilinear interpolation is enabled so that color conversion is performed at lower speed but with higher picture quality.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegCsc">sceJpegCsc</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_CSC_SPLIT_ENABLE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_CSC_SPLIT_ENABLE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant that indicates splitting of data for processing<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
#define SCE_CSC_SPLIT_ENABLE 	(1&lt;&lt;21)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant is specified to split the data for processing rather than processing the entire specified image at one time when performing color conversion.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../still/JPEGDEC-Reference-English.htm#sceJpegCsc">sceJpegCsc</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegInitMJpeg"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegInitMJpeg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize Motion JPEG decoding<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegInitMJpeg</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Initialization succeeded&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function initializes Motion JPEG decoding.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int res = sceJpegInitMJpeg();

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegCreateMJpeg"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegCreateMJpeg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create Motion JPEG decoding context<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegCreateMJpeg</b>(
	int <i>iFrameWidth</i>,
<i>	</i>int <i>iFrameHeight</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iFrameWidth</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum width of output buffer (pixels)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iFrameHeight</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum height of output buffer (pixels)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Initialization succeeded&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function enables the output buffer size to be specified and creates the decoding context. The buffer size is specified in terms of pixels, where 1 pixel is always 4 bytes (ARGB8888 format). The buffer size specified here is used by the decoding function <a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpeg">sceJpegDecodeMJpeg</a>() to check the output size.<br><i>iFrameWidth</i> must not exceed 1024. In other words, Motion JPEG data with a width that is greater than 1024 cannot be decoded. The color conversion function also limits the width of actual JPEG images so that they must not exceed 720.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int res;
res = sceJpegCreateMJpeg(320, 240);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Changing the output format (such as making it 16-bit color) can be done in the MPEG library, but is not supported here.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegDecodeMJpeg"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegDecodeMJpeg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Decode and rapidly color convert Motion JPEG data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegDecodeMJpeg</b>(
	unsigned char *<i>pJpeg</i>,
	SceSize <i>isize</i>,
	void *<i>pRGBA</i>,
	int <i>omitDht</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pJpeg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to JPEG data to be decoded&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>isize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;JPEG data size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pRGBA</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to output buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>omitDht</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flag indicating whether DHT segment can be omitted&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output data pixel count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function decodes JPEG data and stores it in RGBA8888 format in the specified area. If the size of the image to be decoded exceeds the size specified with <a href="../still/JPEGDEC-Reference-English.htm#sceJpegCreateMJpeg">sceJpegCreateMJpeg</a>() (even if in only one of the width or height), an error will occur. Note that when the number of pixels in the horizontal or vertical direction of the image data to be decoded is not a multiple of 16, it is rounded up to a multiple of 16 pixels internally, and a buffer having a size of at least the rounded up number of pixels is required.<br>If the function completes normally, a value equal to (number of pixels in the x direction of the decoded data)* 65536 + (number of pixels in the y direction of the decoded data) will be returned.<br><br>Depending on the type of Motion JPEG data, the JPEG data may not contain a Huffman code definition segment (DHT segment), and in that case, the IJG-recommended Huffman code will normally be used. By specifying 1 (<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITHOUT_DHT">SCE_JPEG_MJPEG_WITHOUT_DHT</a>) for the <i>omitDht</i> argument, this kind of data can also be decoded. When this argument is specified and the data contains no DHT segment, the recommended table will be used. If the data contains a DHT segment, the contents of that table will be used. Note that by specifying <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITHOUT_DHT">SCE_JPEG_MJPEG_WITHOUT_DHT</a>, the time required for JPEG decoding will increase slightly. If you know in advance that the data will have a DHT segment, be sure to specify 0 (<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITH_DHT">SCE_JPEG_MJPEG_WITH_DHT</a>) for <i>omitDht</i>.<br><br>Since this function gives precedence to performance, it performs decoding all in one operation on the Media Engine. As a result, if it is called when other processing that also uses the Media Engine such as speech synthesis is active, a drop in processing speed may occur. In this case, use the <b><a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpegSuccessively">sceJpegDecodeMJpegSuccessively</a></b>() function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int res;
char jpegData[100*1024];
char framebuf[320*240*4];


res = sceJpegDecodeMJpeg(jpegData, sizeof(jpegData), framebuf, 
			<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITH_DHT">SCE_JPEG_MJPEG_WITH_DHT</a>);

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegDecodeMJpegYCbCr"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegDecodeMJpegYCbCr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Decode Motion JPEG data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegDecodeMJpegYCbCr</b>(
	unsigned char *<i>pJpeg</i>,
	SceSize <i>isize</i>,
	unsigned char *<i>pYCbCr</i>
	SceSize <i>osize</i>,
	int <i>omitDht</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pJpeg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to JPEG data to be decoded&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>isize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;JPEG data size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pYCbCr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to output buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>osize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of output buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>omitDht</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flag indicating whether DHT segment can be omitted&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output data pixel count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function decodes JPEG data and stores the result in the specified area. The color space that will be used for the decoded data is the same as that of the original JPEG data. Color conversion is further required to display the data on-screen.<br>If the function completes normally, a value equal to (number of pixels in the x direction of the decoded data)* 65536 + (number of pixels in the y direction of the decoded data) will be returned. The size of the decoded data depends on the height and width of the JPEG image and the color space dimensionality. An error will occur if this size exceeds the argument <i>osize</i>.<br>Note that the method of checking the buffer size differs from that used by <a href="../still/JPEGDEC-Reference-English.htm#sceJpegCreateMJpeg">sceJpegCreateMJpeg</a>().<br><br>Depending on the type of Motion JPEG data, the JPEG data may not contain a Huffman code definition segment (DHT segment), and in that case, the IJG-recommended Huffman code will normally be used. By specifying 1 (<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITHOUT_DHT">SCE_JPEG_MJPEG_WITHOUT_DHT</a>) for the <i>omitDht</i> argument, this kind of data can also be decoded. When this argument is specified and the data contains no DHT segment, the recommended table will be used. If the data contains a DHT segment, the contents of that table will be used. Note that by specifying <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITHOUT_DHT">SCE_JPEG_MJPEG_WITHOUT_DHT</a>, the time required for JPEG decoding will increase slightly. If you know in advance that the data will have a DHT segment, be sure to specify 0 (<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITH_DHT">SCE_JPEG_MJPEG_WITH_DHT</a>) for <i>omitDht</i>.<br><br>Since this function gives precedence to performance, it performs decoding all in one operation on the Media Engine. As a result, if it is called when other processing that also uses the Media Engine such as speech synthesis is active, a drop in processing speed may occur. In this case, use the <b><a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpegYCbCrSuccessively">sceJpegDecodeMJpegYCbCrSuccessively</a></b> () function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int res;
char jpegData[100*1024];
char ycbcr[320*240*3/2];

res = <a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpeg">sceJpegDecodeMJpeg</a>(jpegData, sizeof(jpegData), ycbcr, sizeof(ycbcr),
			<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITH_DHT">SCE_JPEG_MJPEG_WITH_DHT</a>);

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegDecodeMJpegSuccessively"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegDecodeMJpegSuccessively<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Decode and rapidly color convert Motion JPEG data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegDecodeMJpegSuccessively</b>(
	unsigned char *<i>pJpeg</i>,
	SceSize <i>isize</i>,
	void *<i>pRGBA</i>,
	int <i>omitDht</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pJpeg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to JPEG data to be decoded&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>isize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;JPEG data size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pRGBA</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to output buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>omitDht</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flag indicating whether DHT segment can be omitted&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output data pixel count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function decodes JPEG data and stores it in RGBA8888 format in the specified area. If the size of the image to be decoded exceeds the size specified with <a href="../still/JPEGDEC-Reference-English.htm#sceJpegCreateMJpeg">sceJpegCreateMJpeg</a>() (even if in only one of the width or height), an error will occur. Note that when the number of pixels in the horizontal or vertical direction of the image data to be decoded is not a multiple of 16, it is rounded up to a multiple of 16 pixels internally, and a buffer having a size of at least the rounded up number of pixels is required.<br>If the function completes normally, a value equal to (number of pixels in the x direction of the decoded data)* 65536 + (number of pixels in the y direction of the decoded data) will be returned.<br><br>Depending on the type of Motion JPEG data, the JPEG data may not contain a Huffman code definition segment (DHT segment), and in that case, the IJG-recommended Huffman code will normally be used. By specifying 1 (<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITHOUT_DHT">SCE_JPEG_MJPEG_WITHOUT_DHT</a>) for the <i>omitDht</i> argument, this kind of data can also be decoded. When this argument is specified and the data contains no DHT segment, the recommended table will be used. If the data contains a DHT segment, the contents of that table will be used. Note that by specifying <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITHOUT_DHT">SCE_JPEG_MJPEG_WITHOUT_DHT</a>, the time required for JPEG decoding will increase slightly. If you know in advance that the data will have a DHT segment, be sure to specify 0 (<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITH_DHT">SCE_JPEG_MJPEG_WITH_DHT</a>) for <i>omitDht</i>.<br><br>Although this function has the same features as the <b><a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpeg">sceJpegDecodeMJpeg</a></b>() function, it differs in that it performs decoding in small pieces. Since the <b><a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpeg">sceJpegDecodeMJpeg</a></b>() function gives precedence to performance and performs decoding all in one operation, other processing cannot be performed by the Media Engine during decoding. As a result, when JPEG decoding is performed while the Media Engine is performing some operation that cannot be delayed very much (such as speech synthesis using libsas), a problem may occur. In this case, use the <b>sceJpegDecodeMJpegSuccessively</b>() function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int res;
char jpegData[100*1024];
char framebuf[320*240*4];


res = sceJpegDecodeMJpegSuccessively(jpegData, sizeof(jpegData), framebuf, 
			<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITH_DHT">SCE_JPEG_MJPEG_WITH_DHT</a>);
</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegDecodeMJpegYCbCrSuccessively"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegDecodeMJpegYCbCrSuccessively<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Decode Motion JPEG data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegDecodeMJpegYCbCrSuccessively</b>(
	unsigned char *<i>pJpeg</i>,
	SceSize <i>isize</i>,
	unsigned char *<i>pYCbCr</i>
	SceSize <i>osize</i>,
	int <i>omitDht</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pJpeg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to JPEG data to be decoded&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>isize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;JPEG data size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pYCbCr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to output buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>osize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of output buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>omitDht</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flag indicating whether DHT segment can be omitted&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output data pixel count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function decodes JPEG data and stores the result in the specified area. The color space that will be used for the decoded data is the same as that of the original JPEG data. Color conversion is further required to display the data on-screen.<br>If the function completes normally, a value equal to (number of pixels in the x direction of the decoded data)* 65536 + (number of pixels in the y direction of the decoded data) will be returned. The size of the decoded data depends on the height and width of the JPEG image and the color space dimensionality. An error will occur if this size exceeds the argument <i>osize</i>.<br>Note that the method of checking the buffer size differs from that used by <a href="../still/JPEGDEC-Reference-English.htm#sceJpegCreateMJpeg">sceJpegCreateMJpeg</a>().<br><br>Depending on the type of Motion JPEG data, the JPEG data may not contain a Huffman code definition segment (DHT segment), and in that case, the IJG-recommended Huffman code will normally be used. By specifying 1 (<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITHOUT_DHT">SCE_JPEG_MJPEG_WITHOUT_DHT</a>) for the <i>omitDht</i> argument, this kind of data can also be decoded. When this argument is specified and the data contains no DHT segment, the recommended table will be used. If the data contains a DHT segment, the contents of that table will be used. Note that by specifying <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITHOUT_DHT">SCE_JPEG_MJPEG_WITHOUT_DHT</a>, the time required for JPEG decoding will increase slightly. If you know in advance that the data will have a DHT segment, be sure to specify 0 (<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITH_DHT">SCE_JPEG_MJPEG_WITH_DHT</a>) for <i>omitDht</i>.<br><br>Although this function has the same features as the <b><a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpegYCbCr">sceJpegDecodeMJpegYCbCr</a></b>() function, it differs in that it performs decoding in small pieces. Since the <b><a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpegYCbCr">sceJpegDecodeMJpegYCbCr</a></b>() function gives precedence to performance and performs decoding all in one operation, other processing cannot be performed by the Media Engine during decoding. As a result, when JPEG decoding is performed while the Media Engine is performing some operation that cannot be delayed very much (such as speech synthesis using libsas), a problem may occur. In this case, use the <b>sceJpegDecodeMJpegYCbCrSuccessively</b>() function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int res;
char jpegData[100*1024];
char ycbcr[320*240*3/2];

res = <a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpegSuccessively">sceJpegDecodeMJpegSuccessively</a>(jpegData, sizeof(jpegData), ycbcr, sizeof(ycbcr),
			<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITH_DHT">SCE_JPEG_MJPEG_WITH_DHT</a>);

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegMJpegCsc"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegMJpegCsc<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color convert Motion JPEG decoded result<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegMJpegCsc</b>(
	void *<i>pRGBA</i>,
	unsigned char *<i>pYCbCr</i>,
	int <i>xysize</i>,
	int <i>iFrameWidth</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pRGBA</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to RBGA8888 format frame buffer where color converted result is stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pYCbCr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to input buffer where YCbCr data is stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>xysize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer horizontal and vertical pixel size count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iFrameWidth</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Width of output frame buffer&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Processing completed normally&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function color converts the decoded result that was obtained from <a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpegYCbCr">sceJpegDecodeMJpegYCbCr</a>() to RGBA8888 format. If this function is used for any other purpose besides converting the decoded result obtained from <a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpegYCbCr">sceJpegDecodeMJpegYCbCr</a>(), its behavior is not guaranteed. Also, <i>iFrameWidth</i> must not exceed 1024.<br>A pointer to the buffer that contains the decoded result, which was passed to the <a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpegYCbCr">sceJpegDecodeMJpegYCbCr</a>() function, should be assigned to <i>pYCbCr</i>, and the return value of that function should be assigned to <i>xysize</i>.<br>Note that no specific error checking is performed at this time with respect to the output buffer size. The application is responsible for checking the value of <i>xysize</i> to make sure it is correct.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int res;
char jpegData[100*1024];
char ycbcr[320*240*3/2];
char framebuf[320*240*4];

res = <a href="../still/JPEGDEC-Reference-English.htm#sceJpegDecodeMJpeg">sceJpegDecodeMJpeg</a>(jpegData, sizeof(jpegData), ycbcr, sizeof(ycbcr),
			<a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_MJPEG_WITH_DHT">SCE_JPEG_MJPEG_WITH_DHT</a>);
if (res &lt; 0) {
	/* Error handling */
}
res = sceJpegMJpegCsc(framebuf, ycbcr, res, 320);

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegDeleteMJpeg"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegDeleteMJpeg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Discard the Motion JPEG decoding context<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegDeleteMJpeg</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Processing was successful&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function discards the Motion JPEG decoding context.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int res = sceJpegDeleteMJpeg();

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegFinishMJpeg"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegFinishMJpeg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Terminate Motion JPEG decoding<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegFinishMJpeg</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Processing was successful&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function terminates Motion JPEG decoding.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int res = sceJpegFinishMJpeg();

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegGetOutputInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegGetOutputInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Check JPEG decoding result<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegGetOutputInfo</b>(
	char *<i>pJpeg</i>,
	int <i>isize</i>,
<i>	</i>int *<i>pCs</i>,
	int <i>omitDht</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pJpeg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to JPEG data to be decoded&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>isize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of the JPEG data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pCs</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to variable where color space information will be stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>omitDht</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flag indicating whether or not DHT segment can be omitted&nbsp;&nbsp;<br>&nbsp;&nbsp;(Currently, the result is the same regardless of what is specified.)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;=0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of output buffer required when decoding is &nbsp;&nbsp;<br>&nbsp;&nbsp;performed without color conversion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error value (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the size of the output buffer that is required when the specified JPEG data is decoded. When <i>pCs</i> is not NULL, the color space type and color space samplings are stored at the destination pointed to by <i>*pCs</i>. The color space type has the format shown below. The color space samplings are valid only when the color space is YCbCr. Otherwise, they are indeterminate.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Bits 16:24&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Color space type; 0: Unknown; 1: Grayscale; 2: YCbCr&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Bits 8:16&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertical space sampling&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Bits 0:8&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Horizontal space sampling&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For example, when *<i>pCS</i>=0x020201, it indicates YUV422 format JPEG data.<br>The JPEG library can only handle JPEG data for which the space sampling of the first color space dimension is 1:1 and the space samplings of the second and subsequent color dimensions are all the same. As a result, this function can only obtain information related to JPEG data that satisfies this specification. If the JPEG data is of an unsupported type, an error will be returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int res;
res = sceJpegGetOutputInfo(JpegBuffer, sizeof(JpegBuffer), NULL, 0);


</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegMJpegCscWithColorOption"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegMJpegCscWithColorOption<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color conversion for motion JPEG (with option)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegMJpegCscWithColorOption</b> (
	void *<i>pRGBA</i>,
	const unsigned char *<i>pYCbCr</i>,
	int <i>xysize</i>,
<i>	</i>int *<i>iFrameWidth</i>,
	int <i>colorOption</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pRGBA</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to destination where color conversion result is to be output&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pYCbCr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to data to be color converted&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>xysize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel size of data to be color converted (enter number of pixels in &nbsp;&nbsp;<br>&nbsp;&nbsp;horizontal direction in upper 16 bits and number of pixels in vertical &nbsp;&nbsp;<br>&nbsp;&nbsp;direction in lower 16 bits)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iFrameWidth</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Width of buffer for storing color conversion result&nbsp;&nbsp;<br>&nbsp;&nbsp;(Units: pixels; must be a value from 0 to 1024)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>colorOption</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Parameter related to input/output data format&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&#8807;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Processing completed normally&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs color conversion from YCbCr to RGB. Although input data space sampling is limited to YUV420 with a maximum image size of 720*480 pixels, the color conversion coefficient and RGBA output data format can be selected when conversion is performed.<br><br>The output format is indicated using <i>colorOption</i>. Select from among the following.<br></div>
</ol>
<div style="margin-left:60px;"><ul>
<li> <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_PIXEL_RGB565">SCE_JPEG_PIXEL_RGB565</a>
<li> <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_PIXEL_RGBA5551">SCE_JPEG_PIXEL_RGBA5551</a>
<li> <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_PIXEL_RGBA4444">SCE_JPEG_PIXEL_RGBA4444</a>
<li> <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_PIXEL_RGBA8888">SCE_JPEG_PIXEL_RGBA8888</a>
</ul></div>
<div style="margin-left:50px;">The input data color space can also be specified by summing the following values and passing them in <i>colorOption</i>.<br></div>
<div style="margin-left:60px;"><ul>
<li> <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_COLORSPACE_JFIF">SCE_JPEG_COLORSPACE_JFIF</a>
<li> <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_COLORSPACE_BT601">SCE_JPEG_COLORSPACE_BT601</a>
</ul></div>
<div style="margin-left:50px;">The default color space is <a href="../still/JPEGDEC-Reference-English.htm#SCE_JPEG_COLORSPACE_JFIF">SCE_JPEG_COLORSPACE_JFIF</a>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceJpegCsc"></a>
<table width="100%"><td width="70%"><font size=6>sceJpegCsc<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color conversion with no color space sampling constraints<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;scejpeg.h&gt;
int <b>sceJpegCsc</b>(
	void *<i>pRGBA</i>,
	const unsigned char *<i>pYCbCr</i>,
	int <i>xysize</i>,
<i>	</i>int *<i>iFrameWidth</i>,
	int <i>mode</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pRGBA</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to destination where color conversion result is to be output&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pYCbCr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to data to be color converted&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>xysize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel size of data to be color converted (<i>x</i> size is in upper 16 bits and &nbsp;&nbsp;<br>&nbsp;&nbsp;<i>y</i> size is in lower 16 bits)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iFrameWidth</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame width of buffer for storing color conversion result&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Value indicating input data color space sampling and conversion method&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&#8807;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Processing completed normally&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error (for details, see "<a href="../still/JPEGDEC-Reference-English.htm#List of Error Codes">List of Error Codes</a>")&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs color conversion from YCbCr to RGB. YUV444, YUV422, and YUV420 are supported for color space sampling. When Cb and Cr have been color space sampled (for sampling other than YUV444), up sampling using a bilinear filter can be selected. Also, images with a width and height of up to 65535 pixels are supported. However, the input image color space is limited to JFIF format, the output format is limited to RGBA8888, and the speed is also slower.<br><br>For <i>mode</i>, specify the value obtained by adding<br></div>
<div style="margin-left:70px;">(vertical color space sampling coefficient) * 256<br>+ (horizontal color space sampling coefficient)<br></div>
<div style="margin-left:50px;">and by adding <a href="../still/JPEGDEC-Reference-English.htm#SCE_CSC_BILINEAR_ENABLE">SCE_CSC_BILINEAR_ENABLE</a> and <a href="../still/JPEGDEC-Reference-English.htm#SCE_CSC_SPLIT_ENABLE">SCE_CSC_SPLIT_ENABLE</a> when necessary. The lower 16 bits of the value obtained from <a href="../still/JPEGDEC-Reference-English.htm#sceJpegGetOutputInfo">sceJpegGetOutputInfo</a>() can be used directly for the color space sampling value described above.<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Error codes returned by the JPEG decoder library<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_OK">SCE_OK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_IMAGE_EMPTY">SCE_JPEG_ERROR_IMAGE_EMPTY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image size is zero&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_MARKER_LENGTH">SCE_JPEG_ERROR_BAD_MARKER_LENGTH</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid size marker found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_DHT_COUNTS">SCE_JPEG_ERROR_BAD_DHT_COUNTS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of Huffman tables is &nbsp;&nbsp;<br>&nbsp;&nbsp;invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_DHT_INDEX">SCE_JPEG_ERROR_BAD_DHT_INDEX</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650006&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A non-existent Huffman table has been specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_DQT_INDEX">SCE_JPEG_ERROR_BAD_DQT_INDEX</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650007&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A non-existent inverse &nbsp;&nbsp;<br>&nbsp;&nbsp;quantization segment has been &nbsp;&nbsp;<br>&nbsp;&nbsp;specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_DECODE_ERROR">SCE_JPEG_ERROR_DECODE_ERROR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650009&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Variable-length code decoding error&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_INVALID_POINTER">SCE_JPEG_ERROR_INVALID_POINTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid pointer argument&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_COMPONENT_ID">SCE_JPEG_ERROR_BAD_COMPONENT_ID</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650011&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A non-existent color dimension &nbsp;&nbsp;<br>&nbsp;&nbsp;has been specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_UNSUPPORT_COLORSPACE">SCE_JPEG_ERROR_UNSUPPORT_COLORSPACE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650013&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An unsupported color space &nbsp;&nbsp;<br>&nbsp;&nbsp;has been specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_MCU_SIZE">SCE_JPEG_ERROR_BAD_MCU_SIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650014&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid MCU size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_PRECISION">SCE_JPEG_ERROR_BAD_PRECISION</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650015&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid DCT coefficient precision&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_UNSUPPORT_SAMPLING">SCE_JPEG_ERROR_UNSUPPORT_SAMPLING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650016&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unsupported color space sampling&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_COMPONENT_COUNT">SCE_JPEG_ERROR_COMPONENT_COUNT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650017&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Color space dimensionality is &nbsp;&nbsp;<br>&nbsp;&nbsp;invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_EOI_EXPECTED">SCE_JPEG_ERROR_EOI_EXPECTED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650019&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No EOI was found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_IMAGE_TOO_BIG">SCE_JPEG_ERROR_IMAGE_TOO_BIG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650020&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image size is too big&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_NO_HUFF_TABLE">SCE_JPEG_ERROR_NO_HUFF_TABLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650021&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An undefined Huffman table &nbsp;&nbsp;<br>&nbsp;&nbsp;has been used&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_NO_QUANT_TABLE">SCE_JPEG_ERROR_NO_QUANT_TABLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An undefined inverse &nbsp;&nbsp;<br>&nbsp;&nbsp;quantization coefficient has &nbsp;&nbsp;<br>&nbsp;&nbsp;been used&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_NO_SOI">SCE_JPEG_ERROR_NO_SOI</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650023&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No SOI maker was found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_DQT_MARKER">SCE_JPEG_ERROR_BAD_DQT_MARKER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650024&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid DQT marker found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_DHT_MARKER">SCE_JPEG_ERROR_BAD_DHT_MARKER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650025&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid DHT marker found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_DRI_MARKER">SCE_JPEG_ERROR_BAD_DRI_MARKER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650026&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid DRI marker found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_SOF_MARKER">SCE_JPEG_ERROR_BAD_SOF_MARKER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650027&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid SOF marker found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_BAD_SOS_MARKER">SCE_JPEG_ERROR_BAD_SOS_MARKER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650028&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid SOS marker found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_SOF_DUPLICATE">SCE_JPEG_ERROR_SOF_DUPLICATE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650029&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Multiple SOF markers exist&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_NO_LOSSLESS_SUPPORT">SCE_JPEG_ERROR_NO_LOSSLESS_SUPPORT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650031&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Lossless compression is not supported&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_NO_ARITH_SUPPORT">SCE_JPEG_ERROR_NO_ARITH_SUPPORT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650032&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Arithmetic compression is not &nbsp;&nbsp;<br>&nbsp;&nbsp;supported&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_UNKNOWN_MARKER">SCE_JPEG_ERROR_UNKNOWN_MARKER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650035&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unknown marker found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_UNEXPECTED_MARKER">SCE_JPEG_ERROR_UNEXPECTED_MARKER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650037&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unexpected marker found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_INVALID_REGION">SCE_JPEG_ERROR_INVALID_REGION</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650038&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An invalid region was specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_INVALID_STATE">SCE_JPEG_ERROR_INVALID_STATE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650039&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Uninitialized. Setting function &nbsp;&nbsp;<br>&nbsp;&nbsp;cannot be called&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_OUT_OF_MEMORY">SCE_JPEG_ERROR_OUT_OF_MEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650041&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Not enough memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_CANNOT_INIT">SCE_JPEG_ERROR_CANNOT_INIT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650042&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cannot initialize&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_CANNOT_FINISH">SCE_JPEG_ERROR_CANNOT_FINISH</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650043&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cannot finish&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_INVALID_COLOR_FORMAT">SCE_JPEG_ERROR_INVALID_COLOR_FORMAT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650050&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Color space format is not &nbsp;&nbsp;<br>&nbsp;&nbsp;supported by color conversion &nbsp;&nbsp;<br>&nbsp;&nbsp;feature&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_NOT_DDR_MEMORY">SCE_JPEG_ERROR_NOT_DDR_MEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650051&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer that should point to &nbsp;&nbsp;<br>&nbsp;&nbsp;DDR memory does not point &nbsp;&nbsp;<br>&nbsp;&nbsp;there&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_JPEG_ERROR_OTHER_CODEC_WORKING">SCE_JPEG_ERROR_OTHER_CODEC_WORKING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80650052&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cannot be executed since codec &nbsp;&nbsp;<br>&nbsp;&nbsp;that cannot be used at the &nbsp;&nbsp;<br>&nbsp;&nbsp;same time as JPEG is already &nbsp;&nbsp;<br>&nbsp;&nbsp;in use&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
