<html lang="en">
<head>
<title>HeadphoneRemote-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
Headphone Remote Control Driver Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_HPRM_KEY_PLAY_PAUSE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_HPRM_KEY_PLAY_PAUSE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>PLAY/PAUSE key<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
#define SCE_HPRM_KEY_PLAY_PAUSE		0x00000001

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This bit corresponds to pressing the PLAY/PAUSE key on the remote control.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_HPRM_KEY_FF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_HPRM_KEY_FF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>FF key<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
#define SCE_HPRM_KEY_FF			0x00000004

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This bit corresponds to pressing the FF key on the remote control.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_HPRM_KEY_FR"></a>
<table width="100%"><td width="70%"><font size=6>SCE_HPRM_KEY_FR<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>FR key<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
#define SCE_HPRM_KEY_FR			0x00000008

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This bit corresponds to pressing the FR key on the remote control.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_HPRM_KEY_HOLD"></a>
<table width="100%"><td width="70%"><font size=6>SCE_HPRM_KEY_HOLD<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>HOLD switch<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
#define SCE_HPRM_KEY_HOLD	0x00000080

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This bit corresponds to the HOLD switch on the remote control.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHprmLatch"></a>
<table width="100%"><td width="70%"><font size=6>SceHprmLatch<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Headphone remote control latch information<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
typedef struct SceHprmLatch {
	unsigned int <i>uiMake</i>;	/* Released &rarr; Pressed (begin press)  */
	unsigned int <i>uiBreak</i>;	/* Pressed &rarr; Released (end press) */
	unsigned int <i>uiPress</i>;	/* Change in pressed state */
	unsigned int <i>uiRelease</i>;	/* Change in released state*/
} <b>SceHprmLatch</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiMake</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Begin press (end release) history&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBreak</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;End press (begin release) history&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiPress</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enter pressed state history&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiRelease</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enter released state history&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used to represent the latching of button states for the headphone remote control. All logic is positive logic.<br><br>The Headphone Remote Control driver keeps latch information in system global variables so that it can be accessed by the <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmPeekLatch">sceHprmPeekLatch</a>() and <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmReadLatch">sceHprmReadLatch</a>() functions. Calling <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmReadLatch">sceHprmReadLatch</a>() clears this latch information. Essentially, the latch information that is kept in this structure can be treated as a record of changes in button states since the last time <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmReadLatch">sceHprmReadLatch</a>() was called. The latch information can also be read without clearing it by calling <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmPeekLatch">sceHprmPeekLatch</a>().<br><br>The meaning of the various bit combinations and their correspondence to button-press events is shown below.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>make</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>break</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>press</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>release</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Details</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>On get</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maintain &nbsp;&nbsp;<br>&nbsp;&nbsp;released &nbsp;&nbsp;<br>&nbsp;&nbsp;state&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Since the previous call, &nbsp;&nbsp;<br>&nbsp;&nbsp;the button hasn't changed &nbsp;&nbsp;<br>&nbsp;&nbsp;state and continues to be &nbsp;&nbsp;<br>&nbsp;&nbsp;released.&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Released&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maintain &nbsp;&nbsp;<br>&nbsp;&nbsp;pressed state&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Since the previous call, &nbsp;&nbsp;<br>&nbsp;&nbsp;the button hasn't changed &nbsp;&nbsp;<br>&nbsp;&nbsp;state and continues to be &nbsp;&nbsp;<br>&nbsp;&nbsp;pressed.&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pressed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Transition to&nbsp;&nbsp;<br>&nbsp;&nbsp;released &nbsp;&nbsp;<br>&nbsp;&nbsp;state&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Since the previous call, &nbsp;&nbsp;<br>&nbsp;&nbsp;the button was pressed &nbsp;&nbsp;<br>&nbsp;&nbsp;and then released. After &nbsp;&nbsp;<br>&nbsp;&nbsp;that it continues to be &nbsp;&nbsp;<br>&nbsp;&nbsp;released.&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Released&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Transition to&nbsp;&nbsp;<br>&nbsp;&nbsp;released &nbsp;&nbsp;<br>&nbsp;&nbsp;state&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Since the previous call, &nbsp;&nbsp;<br>&nbsp;&nbsp;the button has gone from &nbsp;&nbsp;<br>&nbsp;&nbsp;being pressed to being &nbsp;&nbsp;<br>&nbsp;&nbsp;released. After that it &nbsp;&nbsp;<br>&nbsp;&nbsp;continues to be released.&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Released&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Transition to&nbsp;&nbsp;<br>&nbsp;&nbsp;pressed state&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Since the previous call, &nbsp;&nbsp;<br>&nbsp;&nbsp;the button was released &nbsp;&nbsp;<br>&nbsp;&nbsp;and then pressed. After &nbsp;&nbsp;<br>&nbsp;&nbsp;that it continues to be &nbsp;&nbsp;<br>&nbsp;&nbsp;pressed.&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pressed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Transition to&nbsp;&nbsp;<br>&nbsp;&nbsp;pressed state&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Since the previous call, &nbsp;&nbsp;<br>&nbsp;&nbsp;the button has gone from &nbsp;&nbsp;<br>&nbsp;&nbsp;being released to being &nbsp;&nbsp;<br>&nbsp;&nbsp;pressed. After that it &nbsp;&nbsp;<br>&nbsp;&nbsp;continues to be pressed.&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pressed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Press/release&nbsp;&nbsp;<br>&nbsp;&nbsp;two-way &nbsp;&nbsp;<br>&nbsp;&nbsp;transition&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The button has been both &nbsp;&nbsp;<br>&nbsp;&nbsp;pressed and released, but &nbsp;&nbsp;<br>&nbsp;&nbsp;the order cannot be &nbsp;&nbsp;<br>&nbsp;&nbsp;determined.&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unknown&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmPeekLatch">sceHprmPeekLatch</a>(), <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmReadLatch">sceHprmReadLatch</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_HPRM_CALLBACKSLOT_AUTO"></a>
<table width="100%"><td width="70%"><font size=6>SCE_HPRM_CALLBACKSLOT_AUTO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Slot is found automatically for headphone remote control<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotesvc.h&gt;
#define SCE_HPRM_CALLBACKSLOT_AUTO	-1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When callbacks are registered with <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>(), this callback indicates that the slot number is selected automatically by finding an empty slot.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="hprmcallback"></a>
<table width="100%"><td width="70%"><font size=6>hprmcallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Prototype for headphone remote control notification callback<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>hprmcallback</b> (
	int <i>count</i>,
	int <i>arg</i>
	void <i>*common</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler (does not depend on interrupt-enabled or -disabled state)<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>count</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of times callback called&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback arguments:&nbsp;&nbsp;<br>&nbsp;&nbsp;Bit 0: Headphone (1: present; 0: absent)&nbsp;&nbsp;<br>&nbsp;&nbsp;Bit 1: Headphone remote control (1: present; 0: absent)&nbsp;&nbsp;<br>&nbsp;&nbsp;Bit 2: Mic (1: present; 0: absent)&nbsp;&nbsp;<br>&nbsp;&nbsp;Bits 3-31: reserved&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>common</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback cookie value&nbsp;&nbsp;<br>&nbsp;&nbsp;Value provided by <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>() function.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Values -->
<div style="margin-left:10px;"><b>Return Values</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Always returns 0.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a prototype callback function for reporting when changes occur in the connection state and keypress state of the headphone remote control. If you want to receive callback notifications from the Headphone Remote Control driver, call <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>() to create an SceUID for the callback and register it using the <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>(), <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmUnregisterCallback">sceHprmUnregisterCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmRegisterCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmRegisterCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Register headphone remote control notification callback<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmRegisterCallback</b> (
	int <i>slot</i>,
	SceUID <i>uidCb</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler (does not depend on interrupt-enabled or -disabled state)<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>slot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback-registration slot (0-15, or SCE_HPRM _CALLBACKSLOT_AUTO)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uidCb</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback UID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Values -->
<div style="margin-left:10px;"><b>Return Values</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If an error occurs, a negative value is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Success (when a slot number (0-15) is assigned to <i>slot</i>) &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0-15&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Success. The slot number is assigned automatically (when &nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/HeadphoneRemote-Reference-English.htm#SCE_HPRM_CALLBACKSLOT_AUTO">SCE_HPRM_CALLBACKSLOT_AUTO</a> is assigned to <i>slot</i>)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function registers callbacks for reporting when changes occur in the connection state and keypress state of the headphone remote control. By first creating a callback using <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>() and registering a callback UID with the Headphone Remote Control driver using the sceHprmRegisterCallback() function, subsequent changes related to the headphone remote control will cause the callback to be generated. The thread that is created enters a wait state attached to the callback, and the callback function is called in the context of that thread.<br>Up to 16 callbacks can be registered, with the slot position specified by <i>slot</i>. Only one callback UID can be registered in each slot position. <i>slot</i> can be assigned the value <a href="../peripheral/HeadphoneRemote-Reference-English.htm#SCE_HPRM_CALLBACKSLOT_AUTO">SCE_HPRM_CALLBACKSLOT_AUTO</a>, which will automatically find an empty slot and return that slot number as the return value. This slot number should be provided to <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmUnregisterCallback">sceHprmUnregisterCallback</a>() when the callback registration is deleted.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmUnregisterCallback">sceHprmUnregisterCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmUnregisterCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmUnregisterCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete registration for headphone remote control notification callback<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmUnregisterCallback</b> (
	int <i>slot</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler (does not depend on interrupt-enabled or -disabled state)<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>slot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback-registration slot (0-15)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Values -->
<div style="margin-left:10px;"><b>Return Values</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If an error occurs, a negative value is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Success&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes the registration for a callback that was previously registered using <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmPeekLatch"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmPeekLatch<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get latched change points<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmPeekLatch</b> (
	<a href="../peripheral/HeadphoneRemote-Reference-English.htm#SceHprmLatch">SceHprmLatch</a> *<i>pLatch</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler (does not depend on interrupt-enabled or -disabled state)<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pLatch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer for receiving latch information&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Values -->
<div style="margin-left:10px;"><b>Return Values</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The number of samplings since the last time that <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmReadLatch">sceHprmReadLatch</a>() was called is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The Headphone Remote Control driver compares the keypress state for every incoming key-notification packet with the previous keypress state, and records the resulting events as either key-downs or key-ups. Key events are stored using positive logic, that is, 1 for key-down.<br><br>The sceHprmPeekLatch() function reads the keypress latch information kept by the Headphone Remote Control driver, however, it does not clear the latch information. Latch information is cleared by the <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmReadLatch">sceHprmReadLatch</a>() function.<br><br>The Headphone Remote Control driver keeps latch information in system global variables so that it can be accessed by the sceHprmPeekLatch() and <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmReadLatch">sceHprmReadLatch</a>() functions. Consequently, the <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmReadLatch">sceHprmReadLatch</a>() function can only be used by a single thread.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmReadLatch">sceHprmReadLatch</a>(), <a href="../peripheral/HeadphoneRemote-Reference-English.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmReadLatch"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmReadLatch<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get latched change points<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmReadLatch</b> (
	<a href="../peripheral/HeadphoneRemote-Reference-English.htm#SceHprmLatch">SceHprmLatch</a> *<i>pLatch</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler (does not depend on interrupt-enabled or -disabled state)<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pLatch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer for receiving latch information&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Values -->
<div style="margin-left:10px;"><b>Return Values</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The number of samplings since the last time that sceHprmReadLatch() was called is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The Headphone Remote Control driver compares the keypress state for every incoming key-notification packet with the previous keypress state, and records the resulting events as either key-downs or key-ups. Key events are stored using positive logic, that is, 1 for key-down.<br><br>The sceHprmReadLatch() function reads keypress latch information kept by the Headphone Remote Control driver, and at the same time, clears the latch information to prepare for the next acquisition of information.<br><br>The Headphone Remote Control driver keeps latch information in system global variables so that it can be accessed by the <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmPeekLatch">sceHprmPeekLatch</a>() and sceHprmReadLatch() functions. Consequently, the sceHprmReadLatch() function can only be used by one thread.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmPeekLatch">sceHprmPeekLatch</a>(), <a href="../peripheral/HeadphoneRemote-Reference-English.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmIsHeadphoneExist"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmIsHeadphoneExist<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Detect headphone connection<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmIsHeadphoneExist</b> (
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler (does not depend on interrupt-enabled or -disabled state)<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None.<br><br></div>

<!-- Return Values -->
<div style="margin-left:10px;"><b>Return Values</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If a headphone connection is detected, 1 is returned otherwise 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function detects a headphone connection. Note that if the headphone remote control is connected to the headphone jack, but headphones are not connected ahead of the remote, they will not be detected and this function will return 0. It may also return 0 if something other than a headphone or headphone remote control had been connected to the headphone jack.<br>If the headphones or the headphone remote control are connected to the headphone jack, the impose driver will automatically switch the audio output from the speakers to the headphones, but this switching is not synchronized with the state returned by sceHprmIsHeadphoneExist(). Therefore, do not use the sceHprmIsHeadphoneExist() function for determining the audio output destination. For example, sceHprmIsHeadphoneExist() might return 0, even though audio would not be output from the system speakers, in this case.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmIsRemoteExist">sceHprmIsRemoteExist</a>(), <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmIsMicrophoneExist">sceHprmIsMicrophoneExist</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmIsRemoteExist"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmIsRemoteExist<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Detect remote control<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmIsRemoteExist</b> (
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler (does not depend on interrupt-enabled or -disabled state)<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Values -->
<div style="margin-left:10px;"><b>Return Values</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the remote control is detected, 1 is returned otherwise 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function detects the remote control.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmIsHeadphoneExist">sceHprmIsHeadphoneExist</a>(), <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmIsMicrophoneExist">sceHprmIsMicrophoneExist</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmIsMicrophoneExist"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmIsMicrophoneExist<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Detect microphone connection<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmIsMicrophoneExist </b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler (does not depend on interrupt-enabled or -disabled state)<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Values -->
<div style="margin-left:10px;"><b>Return Values</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If a microphone connection is detected, 1 is returned otherwise 0 is returned.<br> <br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function detects a microphone connection. <br>Note that on a PSP-1000 or PSP-2000 series system, if the headphone remote control is connected to the headphone jack, but the microphone is not connected ahead of the remote, it will not be detected and this function will return 0.<br>On a PSP-3000 or PSP-N1000 series system, since these systems have a built-in microphone, the sceHprmIsMicrophoneExist() function always returns 1.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmIsHeadphoneExist">sceHprmIsHeadphoneExist</a>(), <a href="../peripheral/HeadphoneRemote-Reference-English.htm#sceHprmIsRemoteExist">sceHprmIsRemoteExist</a>()<br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
