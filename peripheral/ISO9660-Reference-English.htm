<html lang="en">
<head>
<title>ISO9660-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
ISO9660 Filesystem Driver Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceIoStat"></a>
<table width="100%"><td width="70%"><font size=6>SceIoStat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>File information<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr_stat.h&gt;
typedef struct {
	SceMode <i>st_mode</i>;
	Unsigned int <i>st_attr</i>;
	SceOff <i>st_size</i>;
	<a href="../kernel/Types-Reference-English.htm#ScePspDateTime">ScePspDateTime</a> <i>st_ctime</i>;
	<a href="../kernel/Types-Reference-English.htm#ScePspDateTime">ScePspDateTime</a><i> st_atime</i>;
	<a href="../kernel/Types-Reference-English.htm#ScePspDateTime">ScePspDateTime</a> <i>st_mtime</i>;
	unsigned int <i>st_private</i>[6];
}<b>SceIoStat</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>st_mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File type and access right&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>st_attr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File attribute (unused)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>st_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File size (bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>st_ctime</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File creation time&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>st_atime</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File access time&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>st_mtime</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File modification time&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>st_private</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Private data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a structure for storing file status information.<br><br>It can be obtained by using the <a href="../peripheral/ISO9660-Reference-English.htm#sceIoDread">sceIoDread</a>() function and <a href="../peripheral/ISO9660-Reference-English.htm#sceIoGetstat">sceIoGetstat</a>() function.<br>With an ISO9660 filesystem, the leading LBA of the relevant file and directory is set in the <i>st_private</i>[0] member.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/ISO9660-Reference-English.htm#sceIoDread">sceIoDread</a>(), <a href="../peripheral/ISO9660-Reference-English.htm#sceIoGetstat">sceIoGetstat</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceIoDirent"></a>
<table width="100%"><td width="70%"><font size=6>SceIoDirent<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Directory information<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr_dirent.h&gt;
typedef struct {
	struct <a href="../peripheral/ISO9660-Reference-English.htm#SceIoStat">SceIoStat</a> <i>d_stat</i>;
	char <i>d_name</i>[256];
	void *<i>d_private</i>;
	int <i>dummy</i>;
} <b>SceIoDirent</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>d_stat</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File information (<a href="../peripheral/ISO9660-Reference-English.htm#SceIoStat">SceIoStat</a> structure)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>d_name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Directory and filename (full pathname)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>d_private</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to private data (unused)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dummy</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Dummy variable (unused)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a structure for storing directory entry information.<br><br>It can be obtained by using the <a href="../peripheral/ISO9660-Reference-English.htm#sceIoDread">sceIoDread</a>() function.<br>With an ISO9660 filesystem, the leading LBA of the relevant file and directory is set in the <i>d_stat.st_private</i>[0] member.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/ISO9660-Reference-English.htm#sceIoDread">sceIoDread</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUmdDiscInfo"></a>
<table width="100%"><td width="70%"><font size=6>SceUmdDiscInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Disc information<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;umddisc.h&gt;
typedef struct {
	unsigned int <i>uiSize</i>;
	unsigned int <i>uiMediaType</i>;
}<b>SceUmdDiscInfo</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sizeof(SceUmdDiscInfo)&nbsp;&nbsp;<br>&nbsp;&nbsp;(Structure size)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiMediaType</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;UMD&trade; media type information&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a structure for storing UMD&trade; media disc information.<br><br>For the <i>uiSize</i> member, set the value of sizeof(SceUmdDiscInfo).<br>UMD&trade; media type information is set for the <i>uiMediaType</i> member.<br><br>UMD&trade; media type information is listed in the following table. A UMD&trade; may contain multiple sets of UMD&trade; media type information, and in that case, the information is returned as a logical OR of the individual sets of information.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_GAME&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Game title&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_AUDIO&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Music title&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_VIDEO&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Move title&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_CLEANER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cleaner&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_UNKNOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unknown&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/UMD-Reference-English.htm#sceUmdGetDiscInfo">sceUmdGetDiscInfo</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUmdSeekParam"></a>
<table width="100%"><td width="70%"><font size=6>SceUmdSeekParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Seek configuration information<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;umddevctl.h&gt;
typedef struct {
	SceOff <i>sk_off</i>;
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>sk_reserved;</i>
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>sk_whence;</i>
}<b>SceUmdSeekParam</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sk_off</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File offset (bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sk_reserved</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Padding (unused)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sk_whence</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Movement method&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a structure for storing file seek information.<br><br>It is used as the configuration parameters of the SCE_ISOFS_SEEK_FILE command of an <a href="../peripheral/ISO9660-Reference-English.htm#sceIoIoctl">sceIoIoctl</a> *() function.<br>The value that is set for the <i>sk_off</i> member for an ISO9660 filesystem is in terms of byte units.<br>The following table lists the values that are used for the <i>sk_whence</i> member.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SEEK_SET&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>sk_off</i> is the distance from the beginning of the file.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SEEK_CUR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>sk_off</i> is the relative distance from the current offset.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SEEK_END&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>sk_off</i> is the distance from the end of the file.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/ISO9660-Reference-English.htm#sceIoIoctlAsync">sceIoIoctlAsync</a>, <a href="../peripheral/ISO9660-Reference-English.htm#sceIoIoctl">sceIoIoctl</a>, <a href="../peripheral/ISO9660-Reference-English.htm#sceIoLseek">sceIoLseek</a><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoOpen"></a>
<table width="100%"><td width="70%"><font size=6>sceIoOpen<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Open file<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceUID <b>sceIoOpen</b> (
	const char *<i>filename</i>, 
	int <i>flag</i>, 
	SceMode <i>mode</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>filename</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer indicating the full pathname&nbsp;&nbsp;<br>&nbsp;&nbsp;Maximum pathname length:  32 bytes (including NULL)&nbsp;&nbsp;<br>&nbsp;&nbsp;Maximum filename length:  256 bytes (including NULL)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Only read can be specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unused&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, the file descriptor value is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs processing for opening a file and virtual file.<br><br>Currently, only an absolute path can be specified for the path specification in the <i>filename</i> argument.<br>The following types of characters can be used in the filename.<br></div>
</ul>
<div style="margin-left:60px;"><ul>
<li> Uppercase and lowercase alphanumeric characters
<li> Underscore
<li> Period
<li> Semicolon
</ul></div>
<div style="margin-left:50px;"><br>The maximum number of files that can be open simultaneously is 32.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoClose"></a>
<table width="100%"><td width="70%"><font size=6>sceIoClose <br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Close file<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceUID <b>sceIoClose</b> (
	SceUID <i>fd</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/ISO9660-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs processing for closing a file.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoRead"></a>
<table width="100%"><td width="70%"><font size=6>sceIoRead<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Read file data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceSSize <b>sceIoRead</b> (
	SceUID<i> fd</i>, 
	void <i>*buf,</i> 
	SceSize<i> nbyte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Read buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nbyte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size to be read (in bytes)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, the number of bytes that were read is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for reading data from a file.<br><br>The buffer address that is set for <i>buf</i>, must have word (4 bytes) alignment.<br>If the return value is a positive integer less than <i>nbyte</i>, only that amount of data was read, and the end of the file data was reached.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoLseek"></a>
<table width="100%"><td width="70%"><font size=6>sceIoLseek<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Move file I/O offset<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceOff <b>sceIoLseek</b> (
	SceUID<i> fd</i>, 
	SceOff <i>offset</i>, 
	int <i>whence</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>offset</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes from reference point&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>whence</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reference point&nbsp;&nbsp;<br>&nbsp;&nbsp;* For details, refer to the IO/File Mgr document.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, the new file offset value is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for moving the offset of the specified file.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoDopen"></a>
<table width="100%"><td width="70%"><font size=6>sceIoDopen<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Open directory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceUID <b>sceIoDopen</b>(
	const char <i>*dirname</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dirname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Directory name&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, the descriptor value is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs processing for opening the specified directory name.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoDclose"></a>
<table width="100%"><td width="70%"><font size=6>sceIoDclose<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Close directory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceUID <b>sceIoDclose</b>(
	SceUID<i> fd</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/ISO9660-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs processing for closing an opened directory.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoDread"></a>
<table width="100%"><td width="70%"><font size=6>sceIoDread<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Read directory information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
int <b>sceIoDread</b> (
	SceUID <i>fd</i>, 
	struct <a href="../peripheral/ISO9660-Reference-English.htm#SceIoDirent">SceIoDirent</a> <i>*buf</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to directory entry structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, a positive integer is returned.<br>If there is no entry to be read, 0 is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets directory entry information for one entry at a time from the beginning of the specified directory.<br><br>The LBA of the relevant file is set for the <i>d_private</i>[0] member of the <a href="../peripheral/ISO9660-Reference-English.htm#SceIoDirent">SceIoDirent</a> structure. Entries of the parent directory of the relevant directory or of the current directory cannot be obtained.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoGetstat"></a>
<table width="100%"><td width="70%"><font size=6>sceIoGetstat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get file or directory status<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
int <b>sceIoGetstat</b>(
	const char <i>*name</i>, 
	struct <a href="../peripheral/ISO9660-Reference-English.htm#SceIoStat">SceIoStat</a> <i>*buf</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Filename&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to file state structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/ISO9660-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the file or directory status.<br><br>The starting LBA of the relevant file or directory is set for the <i>st_private</i>[0] member of the <a href="../peripheral/ISO9660-Reference-English.htm#SceIoStat">SceIoStat</a> structure.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoOpenAsync"></a>
<table width="100%"><td width="70%"><font size=6>sceIoOpenAsync<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Open file asynchronously<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceUID <b>sceIoOpenAsync</b> (
	const char *<i>filename</i>, 
	int <i>flag</i>, 
	SceMode <i>mode</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>filename</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer indicating full pathname&nbsp;&nbsp;<br>&nbsp;&nbsp;Maximum pathname length:  32 bytes (including NULL)&nbsp;&nbsp;<br>&nbsp;&nbsp;Maximum filename length:  256 bytes (including NULL)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Only read can be specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unused&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, the device descriptor value is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs processing for asynchronously opening a file.<br><br>Currently, only an absolute path can be specified for the path specification in the <i>filename</i> argument.<br>The following types of characters can be used in the filename.<br></div>
<div style="margin-left:60px;"><ul>
<li> Uppercase and lowercase alphanumeric characters
<li> Underscore
<li> Period
<li> Semicolon
</ul></div>
<div style="margin-left:50px;"><br>The maximum number of files that can be open simultaneously is 32.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoCloseAsync"></a>
<table width="100%"><td width="70%"><font size=6>sceIoCloseAsync <br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Close file asynchronously<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceUID <b>sceIoCloseAsync</b> (
	SceUID <i>fd</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/ISO9660-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs processing for asynchronously closing a file.<br><br>The result of the close processing can be verified by using the <a href="../peripheral/ISO9660-Reference-English.htm#sceIoWaitAsync">sceIoWaitAsync</a>() function, <a href="../peripheral/ISO9660-Reference-English.htm#sceIoWaitAsyncCB">sceIoWaitAsyncCB</a>() function, and <a href="../peripheral/ISO9660-Reference-English.htm#sceIoPollAsync">sceIoPollAsync</a>() function.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoReadAsync"></a>
<table width="100%"><td width="70%"><font size=6>sceIoReadAsync<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Read data asynchronously<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceSSize <b>sceIoReadAsync</b> (
	SceUID <i>fd</i>, 
	void *<i>buf</i>, 
	SceSize <i>nbyte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Read buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nbyte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size to be read (in bytes)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/ISO9660-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for asynchronously reading data from a file.<br><br>The buffer address that is set for <i>buf</i>, must have word (4 bytes) alignment.<br>The size of the data that was read can be verified by using the <a href="../peripheral/ISO9660-Reference-English.htm#sceIoWaitAsync">sceIoWaitAsync</a>() function, <a href="../peripheral/ISO9660-Reference-English.htm#sceIoWaitAsyncCB">sceIoWaitAsyncCB</a>() function, and <a href="../peripheral/ISO9660-Reference-English.htm#sceIoPollAsync">sceIoPollAsync</a>() function.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoLseekAsync"></a>
<table width="100%"><td width="70%"><font size=6>sceIoLseekAsync<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Move file I/O offset asynchronously<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceOff <b>sceIoLseekAsync</b> (
	SceUID<i> fd</i>, 
	SceOff <i>offset</i>, 
	int <i>whence</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>offset</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes from reference point&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>whence</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reference point&nbsp;&nbsp;<br>&nbsp;&nbsp;* For details, refer to the IO/File Mgr document.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/ISO9660-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for asynchronously moving the offset of the specified file.<br><br>The result of the seek processing can be verified by using the <a href="../peripheral/ISO9660-Reference-English.htm#sceIoWaitAsync">sceIoWaitAsync</a>() function, <a href="../peripheral/ISO9660-Reference-English.htm#sceIoWaitAsyncCB">sceIoWaitAsyncCB</a>() function, and <a href="../peripheral/ISO9660-Reference-English.htm#sceIoPollAsync">sceIoPollAsync</a>() function.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoSetAsyncCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceIoSetAsyncCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set asynchronous processing notification callback<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
int <b>sceIoSetAsyncCallback</b>(
	SceUID <i>fd</i>, 
	SceUID<i> cbid,</i>
	int <i>arg</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cbid</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Arguments passed to callback&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/ISO9660-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the thread manager callback ID to be notified when asynchronous file I/O processing is completed.<br><br>The callback must be created in advance by using the <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>() function. When asynchronous I/O processing is completed, the <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelNotifyCallback">sceKernelNotifyCallback</a>() function is used to send a notification for the specified callback ID. Later, the thread that set the callback uses the <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCheckCallback">sceKernelCheckCallback</a>() function to check whether or not a notification exists or a wait API with a callback call such as one of the SceXXXXCB() functions is executed to call the callback function that was set when the callback was created.<br>To complete asynchronous I/O processing, a function such as <a href="../peripheral/ISO9660-Reference-English.htm#sceIoPollAsync">sceIoPollAsync</a>() or <a href="../peripheral/ISO9660-Reference-English.htm#sceIoWaitAsync">sceIoWaitAsync</a>() must be executed during the callback function that was called to obtain the execution result of the file I/O processing.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoPollAsync"></a><a name="sceIoWaitAsync"></a><a name="sceIoWaitAsyncCB"></a>
<a name="sceIoPollAsync / sceIoWaitAsync / sceIoWaitAsyncCB"></a>
<table width="100%"><td width="70%"><font size=6>sceIoPollAsync / sceIoWaitAsync / sceIoWaitAsyncCB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get asynchronous processing status<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
int <b>sceIoPollAsync</b>(
	SceUID <i>fd</i>, 
	SceIores *<i>iores</i>
);
int <b>sceIoWaitAsync</b>(
	SceUID <i>fd</i>, 
	SceIores *<i>iores</i>
);
int <b>sceIoWaitAsyncCB</b>(
	SceUID <i>fd</i>, 
	SceIores *<i>iores</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iores</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Status&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If asynchronous processing is in progress, 1 is returned.<br>If asynchronous processing has ended, 0 is returned.<br>In case of an error, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These functions get the status of asynchronous I/O processing.<br><br>The sceIoWaitAsync() function waits until asynchronous I/O processing is completed and returns 0 for the return value after storing the asynchronous I/O processing result in a variable for which a pointer is passed by the <i>result</i> argument.<br><br>The sceIoWaitAsyncCB() function checks for the existence of a callback notification while the sceIoWaitAsync() function is running.<br><br>The sceIoPollAsync() function returns to processing immediately from the sceIoWaitAsync() function without entering a wait state if asynchronous I/O processing is not completed. If asynchronous processing is not completed, it returns 1 for the return value. In this case, the value of the variable for which a pointer is passed by the <i>result</i> argument does not change.<br><br>When an asynchronous I/O function is executed, the above functions should be used to verify the processing status. When the above functions return 0, the <i>iores</i> argument is set with the return value of the synchronous I/O function that corresponds to the asynchronous I/O function that completed execution.<br>If the relevant asynchronous I/O function is <a href="../peripheral/ISO9660-Reference-English.htm#sceIoOpenAsync">sceIoOpenAsync</a>(), <i>iores</i> will be set with the file descriptor, which is the return value of <a href="../peripheral/ISO9660-Reference-English.htm#sceIoOpen">sceIoOpen</a>(). If the asynchronous I/O function is <a href="../peripheral/ISO9660-Reference-English.htm#sceIoReadAsync">sceIoReadAsync</a>(), <i>iores</i> will be set with the read size, which is the return value of <a href="../peripheral/ISO9660-Reference-English.htm#sceIoRead">sceIoRead</a>().<br>For details, refer to the descriptions of the synchronous functions that correspond to each of the asynchronous I/O functions.<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoIoctl"></a>
<table width="100%"><td width="70%"><font size=6>sceIoIoctl<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get data normally excluded from I/O processing<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
int <b>sceIoIoctl</b>(
	SceUID <i>fd</i>, 
	int <i>cmd</i>,
	const void *<i>argp</i>,
	SceSize <i>arglen</i>,
	void *<i>bufp</i>,
	SceSize <i>buflen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cmd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Command code&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>argp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Command parameter&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arglen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Command parameter size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bufp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buflen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data buffer size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/ISO9660-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a> or a positive value is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a filesystem control function that is normally used for getting and setting data that is excluded from I/O processing.<br><br>The following commands can be used.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Command</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_GET_PVD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Get PVD.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_GET_PTBL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Get path table. The buffer size can be obtained from &nbsp;&nbsp;<br>&nbsp;&nbsp;bytes 132 to 135 of the PVD by using the LSB.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_GET_FILEPOINTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Get file offset.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_GET_LBA&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Get starting LBA of file.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_GET_FSIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Get file size.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_GET_SECTOR_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Get sector size.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_SEEK_FILE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Seek processing. Details are given later.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_UNCACHED_READ&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Forced disc access read.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request read ahead.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_ACQ_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Issue a read ahead request that is statusable.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_WAIT_STAT_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Wait for read ahead status to become FINISH.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_POLL_STAT_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Get read ahead status.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ISOFS_CANCEL_STAT_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cancel waiting for read ahead status to become FINISH.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">The options of each command are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Command</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Parameter</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Parameter&nbsp;size</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Buffer&nbsp;&nbsp;<br>&nbsp;Direction&nbsp;&nbsp;<br>&nbsp;and&nbsp;Size</b>&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_GET_PVD&nbsp;</td>
<td>&nbsp;NULL&nbsp;</td>
<td>&nbsp;0&nbsp;</td>
<td>&nbsp;out&nbsp;<br>&nbsp;2048&nbsp;bytes&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_GET_PTBL&nbsp;</td>
<td>&nbsp;NULL&nbsp;</td>
<td>&nbsp;0&nbsp;</td>
<td>&nbsp;out&nbsp;<br>&nbsp;Read&nbsp;size&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_GET_FILEPOINTER&nbsp;</td>
<td>&nbsp;NULL&nbsp;</td>
<td>&nbsp;0&nbsp;</td>
<td>&nbsp;out&nbsp;<br>&nbsp;4&nbsp;bytes&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_GET_LBA&nbsp;</td>
<td>&nbsp;NULL&nbsp;</td>
<td>&nbsp;0&nbsp;</td>
<td>&nbsp;out&nbsp;<br>&nbsp;4&nbsp;bytes&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_GET_FSIZE&nbsp;</td>
<td>&nbsp;NULL&nbsp;</td>
<td>&nbsp;0&nbsp;</td>
<td>&nbsp;out&nbsp;<br>&nbsp;8&nbsp;bytes&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_GET_SECTOR_SIZE&nbsp;</td>
<td>&nbsp;NULL&nbsp;</td>
<td>&nbsp;0&nbsp;</td>
<td>&nbsp;out&nbsp;<br>&nbsp;4&nbsp;bytes&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_SEEK_FILE&nbsp;</td>
<td>&nbsp;<a href="../peripheral/ISO9660-Reference-English.htm#SceUmdSeekParam">SceUmdSeekParam</a>*&nbsp;</td>
<td>&nbsp;sizeof&nbsp;<br>&nbsp;(<a href="../peripheral/ISO9660-Reference-English.htm#SceUmdSeekParam">SceUmdSeekParam</a>&nbsp;*)&nbsp;</td>
<td>&nbsp;Null&nbsp;<br>&nbsp;0&nbsp;bytes&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_UNCACHED_READ&nbsp;</td>
<td>&nbsp;Read&nbsp;size&nbsp;<br>&nbsp;(bytes)&nbsp;</td>
<td>&nbsp;sizeof(SceSize)&nbsp;</td>
<td>&nbsp;out&nbsp;<br>&nbsp;Read&nbsp;size&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_READ_AHEAD&nbsp;</td>
<td>&nbsp;Read&nbsp;size&nbsp;<br>&nbsp;(bytes)&nbsp;</td>
<td>&nbsp;sizeof(<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a>)&nbsp;</td>
<td>&nbsp;Null&nbsp;<br>&nbsp;0bytes&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_ACQ_READ_AHEAD&nbsp;</td>
<td>&nbsp;Read&nbsp;size&nbsp;<br>&nbsp;(bytes)&nbsp;</td>
<td>&nbsp;sizeof(<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a>)&nbsp;</td>
<td>&nbsp;Null&nbsp;<br>&nbsp;0bytes&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_WAIT_STAT_READ_AHEAD&nbsp;</td>
<td>&nbsp;NULL&nbsp;</td>
<td>&nbsp;0&nbsp;</td>
<td>&nbsp;Null&nbsp;<br>&nbsp;0bytes&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_POLL_STAT_READ_AHEAD&nbsp;</td>
<td>&nbsp;NULL&nbsp;</td>
<td>&nbsp;0&nbsp;</td>
<td>&nbsp;Null&nbsp;<br>&nbsp;0bytes&nbsp;</td>
</tr>
<tr>
<td>&nbsp;SCE_ISOFS_CANCEL_STAT_READ_AHEAD&nbsp;</td>
<td>&nbsp;&nbsp;&nbsp;</td>
<td>&nbsp;&nbsp;&nbsp;</td>
<td>&nbsp;&nbsp;&nbsp;</td>
</tr></table>
</div>
<br>
<br>

<!-- sce_title -->
<a Name ="HeadingT_2_1">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_GET_PVD</b><br><br></h4></div></a>

<div style="margin-left:50px;">This command gets the primary volume descriptor. Set a buffer of at least 2048 bytes. For details about the primary volume descriptor, refer to the following document.<br></div>
<div style="margin-left:50px;"><u>http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-119.pdf</u><br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_2">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_GET_PTBL</b><br><br></h4></div></a>

<div style="margin-left:50px;">This command gets the path table. For details about the path table, refer to the following document.<br></div>
<div style="margin-left:50px;"><u>http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-119.pdf</u><br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_3">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_GET_FILEPOINTER</b><br><br></h4></div></a>

<div style="margin-left:50px;">This command gets the current offset of the specified file.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_4">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_GET_LBA</b><br><br></h4></div></a>

<div style="margin-left:50px;">This command gets the starting LBA of the specified file.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_5">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_GET_FSIZE</b><br><br></h4></div></a>

<div style="margin-left:50px;">This command gets the file size of the specified file.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_6">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_GET_SECTOR_SIZE</b><br><br></h4></div></a>

<div style="margin-left:50px;">This command gets the sector size of the device on which the specified file is saved.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_7">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_SEEK_FILE</b><br><br></h4></div></a>

<div style="margin-left:50px;">In addition to moving the file offset, which is performed by the <a href="../peripheral/ISO9660-Reference-English.htm#sceIoLseek">sceIoLseek</a>() function, this function also performs physical seek control for the optical head.<br>The required seek parameter should be set for the command parameter.<br>Although the file offset is set in terms of bytes, a physical seek accompanying optical head control seeks the following LBA.<br><br><b>Seek position (LBA) = Starting LBA where the file is located + (file offset/sector size)</b><br><br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_8">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_UNCACHED_READ</b><br><br></h4></div></a>

<div style="margin-left:50px;">This command causes data always to be read from disc without using the UMD&trade;/DVD cache function. This command should be used carefully since the reading speed drops compared with when the cache is used. Also, since data is always read from the disc, when this command is successful, the power status of the drive transitions to active.<br>In a similar manner as for <a href="../peripheral/ISO9660-Reference-English.htm#sceIoRead">sceIoRead</a>*(), a read size that is greater than or equal to zero (bytes) is returned for the return value when this command is successful.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_9">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_READ_AHEAD and SCE_ISOFS_ACQ_READ_AHEAD</b><br><br></h4></div></a>

<div style="margin-left:50px;">These commands request that the specified file be read ahead into the umdcache.<br>For a file less than 128KB, 64 sectors from the starting LBA of the file are cached.<br>If a file greater than or equal to 6.4MB is specified, it is not cached.<br>The read ahead starting position (LBA) is calculated as follows:<br><br><b>Read ahead starting position (LBA) = Starting LBA where file is located + (file offset/sector size)</b><br><br>The SCE_ISOFS_ACQ_READ_AHEAD command enables the read ahead status of the requested file descriptor to be obtained from the SCE_ISOFS_WAIT_STAT_READ_AHEAD and SCE_ISOFS_POLL_STAT_READ_AHEAD commands.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_10">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_WAIT_STAT_READ_AHEAD</b><br><br></h4></div></a>

<div style="margin-left:50px;">Executing this command places the calling thread in a wait state until the status of the specified read ahead becomes FINISH.<br>If this command is executed when no SCE_ISOFS_READ_AHEAD command was previously executed nor any read ahead request issued for the associated file descriptor, then the status of the read ahead is considered to be FINISH, and the function will return immediately without reporting an error and without the thread being placed in a wait state.<br>If the wait state is canceled by issuing SCE_ISOFS_CANCEL_STAT_READ_AHEAD, the function will return an SCE_KERNEL_ERROR_WAIT_CANCEL error.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_11">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_POLL_STAT_READ_AHEAD</b><br><br></h4></div></a>

<div style="margin-left:50px;">This command gets the status of the specified read ahead.<br>If this command is executed when no SCE_ISOFS_READ_AHEAD command was previously executed nor any read ahead request issued for the associated file descriptor, then the status of the read ahead is considered to be FINISH, and the function will return immediately without reporting an error.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Read ahead has finished&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x20&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Read ahead is executing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x10&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Read ahead is waiting&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- sce_title -->
<a Name ="HeadingT_2_12">
<div style="margin-left:40px;"><h4><b>SCE_ISOFS_CANCEL_STAT_READ_AHEAD</b><br><br></h4></div></a>

<div style="margin-left:50px;">This command wakes up the thread that was placed in a wait state by the SCE_ISOFS_WAIT_STAT_READ_AHEAD command until the read ahead status becomes FINISH.<br>This command does not cancel the read ahead itself.<br><br>For details about caching, refer to the "UMD&trade; Cache Overview."<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoIoctlAsync"></a>
<table width="100%"><td width="70%"><font size=6>sceIoIoctlAsync<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get data by asynchronous processing other than normal I/O processing<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
int <b>sceIoIoctlAsync</b>(
	SceUID <i>fd</i>, 
	int <i>cmd</i>,
	const void *<i>argp</i>,
	SceSize <i>arglen</i>,
	void *<i>bufp</i>,
	SceSize <i>buflen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cmd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Command code&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>argp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Command parameter&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arglen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Command parameter size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bufp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buflen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data buffer size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/ISO9660-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a> or a positive value is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for asynchronously performing the filesystem control function normally used for getting and setting data that is excluded from I/O processing.<br><br>The processing result can be verified by using the <a href="../peripheral/ISO9660-Reference-English.htm#sceIoWaitAsync">sceIoWaitAsync</a>() function, <a href="../peripheral/ISO9660-Reference-English.htm#sceIoWaitAsyncCB">sceIoWaitAsyncCB</a>() function, and <a href="../peripheral/ISO9660-Reference-English.htm#sceIoPollAsync">sceIoPollAsync</a>() function.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ISOFS Error Codes<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal termination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EPERM">SCE_ERROR_ERRNO_EPERM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Execution is not permitted&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOENT">SCE_ERROR_ERRNO_ENOENT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File does not exist&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EIO">SCE_ERROR_ERRNO_EIO</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input/output error&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_E2BIG">SCE_ERROR_ERRNO_E2BIG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010007&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Argument list is too long&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EBADF">SCE_ERROR_ERRNO_EBADF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010009&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOMEM">SCE_ERROR_ERRNO_ENOMEM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001000C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Required memory cannot be &nbsp;&nbsp;<br>&nbsp;&nbsp;allocated&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EACCESS">SCE_ERROR_ERRNO_EACCESS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001000D&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Access right does not exist&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFAULT">SCE_ERROR_ERRNO_EFAULT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001000E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EBUSY">SCE_ERROR_ERRNO_EBUSY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Resource is in use&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EEXIST">SCE_ERROR_ERRNO_EEXIST</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010011&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File exists&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENODEV">SCE_ERROR_ERRNO_ENODEV</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010013&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Device does not exist&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOTDIR">SCE_ERROR_ERRNO_ENOTDIR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010014&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Not a directory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EISDIR">SCE_ERROR_ERRNO_EISDIR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010015&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Is a directory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EINVAL">SCE_ERROR_ERRNO_EINVAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010016&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Argument is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EMFILE">SCE_ERROR_ERRNO_EMFILE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010018&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Too many opened files&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFBIG">SCE_ERROR_ERRNO_EFBIG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001001B&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File is too large&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EROFS">SCE_ERROR_ERRNO_EROFS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001001E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Read-only filesystem&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENAMETOOLONG">SCE_ERROR_ERRNO_ENAMETOOLONG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001005B&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File name is too long&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOBUFS">SCE_ERROR_ERRNO_ENOBUFS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010069&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer does not exist&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ETIMEDOUT">SCE_ERROR_ERRNO_ETIMEDOUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001006E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timeout occurred&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EMEDIUMTYPE">SCE_ERROR_ERRNO_EMEDIUMTYPE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001007C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Illegal medium&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOTSUP">SCE_ERROR_ERRNO_ENOTSUP</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B000&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unsupported function&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_NOMAIN_ADDR">SCE_ERROR_ERRNO_NOMAIN_ADDR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address not in main memory was&nbsp;&nbsp;<br>&nbsp;&nbsp;specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EUNIT">SCE_ERROR_ERRNO_EUNIT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unit number is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFSIZE">SCE_ERROR_ERRNO_EFSIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File size is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFLAG">SCE_ERROR_ERRNO_EFLAG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified flag is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_HARDWARE_FAILURE">SCE_UMD_HARDWARE_FAILURE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0xC0210005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A problem occurred in the drive&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_NO_MEDIUM">SCE_UMD_NO_MEDIUM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No medium exists&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_NOT_DEVICE_READY">SCE_UMD_NOT_DEVICE_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Device is not ready&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_UNKNOWN_MEDIUM">SCE_UMD_UNKNOWN_MEDIUM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0xC0210004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unknown medium&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_ERROR_REPLACED">SCE_UMD_ERROR_REPLACED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210007&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Medium was replaced when &nbsp;&nbsp;<br>&nbsp;&nbsp;replacement was prohibited&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_READAHEAD_BUSY">SCE_UMD_READAHEAD_BUSY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210011&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Read ahead request is being executed&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2008 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
