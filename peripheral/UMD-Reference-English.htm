<html lang="en">
<head>
<title>UMD-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
UMD&trade; Drive Driver Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_UMD_ALIAS_NAME"></a>
<table width="100%"><td width="70%"><font size=6>SCE_UMD_ALIAS_NAME<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>UMD&trade; media alias name<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include	&lt;mediaman.h&gt;
#define  SCE_UMD_ALIAS_NAME		"disc0:"

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant for representing an alias name of the UMD&trade; media drive of the PSP&trade;.<br><br>It consists of the name "disc" and the unit number 0:.<br>This constant should be used to specify the alias name on the PSP&trade;.<br>It is used in functions such as <a href="../peripheral/UMD-Reference-English.htm#sceUmdActivate">sceUmdActivate</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/UMD-Reference-English.htm#sceUmdActivate">sceUmdActivate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_UMD_MODE_POWERON"></a>
<table width="100%"><td width="70%"><font size=6>SCE_UMD_MODE_POWERON<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>UMD&trade; drive power on mode<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include	&lt;mediaman.h&gt;
#define  SCE_UMD_MODE_POWERON	 (0x01)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant for representing the power on state of the UMD&trade; drive.<br><br>It is used in functions such as <a href="../peripheral/UMD-Reference-English.htm#sceUmdActivate">sceUmdActivate</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/UMD-Reference-English.htm#sceUmdActivate">sceUmdActivate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="UMD™ Drive State"></a>
<table width="100%"><td width="70%"><font size=6>UMD™ Drive State<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>UMD&trade; drive state<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include	&lt;mediaman.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_MEDIA_OUT">SCE_UMD_MEDIA_OUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Media was removed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_MEDIA_IN">SCE_UMD_MEDIA_IN</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Media was inserted.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_MEDIA_CHG">SCE_UMD_MEDIA_CHG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A different media than the previous media was inserted.&nbsp;&nbsp;<br>&nbsp;&nbsp;(No callback reported)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_READY">SCE_UMD_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Drive is ready. (Block access is possible)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_NOT_READY">SCE_UMD_NOT_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Drive is not ready.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_READABLE">SCE_UMD_READABLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Drive is readable. (File access is possible)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant for representing states indicating accessibility to the UMD&trade;.<br><br>It also includes a UMD&trade; medium inserted state.<br>Many UMD&trade; drive states are reported according to an edge trigger.<br>Whether or not a UMD&trade; medium exists on startup can be verified by using the  <a href="../peripheral/UMD-Reference-English.htm#sceUmdCheckMedium">sceUmdCheckMedium</a>() function.<br>Other methods of getting the UMD&trade; drive state include using a callback according to the <a href="../peripheral/UMD-Reference-English.htm#sceUmdRegisterUMDCallBack">sceUmdRegisterUMDCallBack</a>() function and getting the state by using the <a href="../peripheral/UMD-Reference-English.htm#sceUmdGetDriveStat">sceUmdGetDriveStat</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/UMD-Reference-English.htm#sceUmdCheckMedium">sceUmdCheckMedium</a>()<br><a href="../peripheral/UMD-Reference-English.htm#sceUmdRegisterUMDCallBack">sceUmdRegisterUMDCallBack</a>(), <a href="../peripheral/UMD-Reference-English.htm#sceUmdGetDriveStat">sceUmdGetDriveStat</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="UMD™ Media Type Information"></a>
<table width="100%"><td width="70%"><font size=6>UMD™ Media Type Information<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>UMD&trade; media type information<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include	&lt;mediaman.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_FMT_GAME">SCE_UMD_FMT_GAME</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Game title&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_FMT_AUDIO">SCE_UMD_FMT_AUDIO</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Music title&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_FMT_VIDEO">SCE_UMD_FMT_VIDEO</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Movie title&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_FMT_CLEANER">SCE_UMD_FMT_CLEANER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cleaner&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_FMT_UNKNOWN">SCE_UMD_FMT_UNKNOWN</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unknown&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant for representing information related to the format type of the UMD&trade; media.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/UMD_Block-Reference-English.htm#SceUmdDiscInfo"><a href="../peripheral/UMD-Reference-English.htm#SceUmdDiscInfo">SceUmdDiscInfo</a></a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUmdDiscInfo"></a>
<table width="100%"><td width="70%"><font size=6>SceUmdDiscInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Disc information<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;umddisc.h&gt;
typedef struct {
	unsigned int <i>uiSize</i>;
	unsigned int <i>uiMediaType</i>;
}<b>SceUmdDiscInfo</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sizeof(SceUmdDiscInfo)&nbsp;&nbsp;<br>&nbsp;&nbsp;(structure size)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiMediaType</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;UMD&trade; media type information&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a structure for storing UMD&trade; media disc information.<br><br>For the <i>uiSize</i> member, set the value of sizeof(SceUmdDiscInfo).<br>UMD&trade; media type information is set for the <i>uiMediaType</i> member.<br><br>UMD&trade; media type information is listed in the following table. A UMD&trade; may contain multiple sets of UMD&trade; media type information, and in that case, the information is returned as a logical OR of the individual sets of information.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_FMT_GAME">SCE_UMD_FMT_GAME</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Game title&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_FMT_AUDIO">SCE_UMD_FMT_AUDIO</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Music title&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_FMT_VIDEO">SCE_UMD_FMT_VIDEO</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Move title&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_FMT_CLEANER">SCE_UMD_FMT_CLEANER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cleaner&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_FMT_UNKNOWN">SCE_UMD_FMT_UNKNOWN</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unknown&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/UMD-Reference-English.htm#sceUmdGetDiscInfo">sceUmdGetDiscInfo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUmdSeekParam"></a>
<table width="100%"><td width="70%"><font size=6>SceUmdSeekParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Seek configuration information<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;umddevctl.h&gt;
typedef struct {
	SceOff <i>sk_off</i>;
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>sk_reserved;</i>
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>sk_whence;</i>
}<b>SceUmdSeekParam</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sk_off</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File offset (bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sk_reserved</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Padding (unused)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sk_whence</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Movement method&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a structure for storing file seek information.<br><br>It is used as the configuration parameters of the SCE_ISOFS_SEEK_FILE and SCE_UMD_SEEK_FILE commands of an <a href="../peripheral/UMD_Block-Reference-English.htm#sceIoIoctl">sceIoIoctl</a>*() function.<br>The value that is set for the <i>sk_off</i> member for the ISO9660 filesystem is specified in units of bytes, and the value that is set for the <i>sk_off</i> member for a block device is specified in units of sectors.<br>The following table lists the values that are used for the <i>sk_whence</i> member.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SEEK_SET&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The sk_off member is the distance from the beginning of the file.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SEEK_CUR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The sk_off member is the relative distance from the current pointer.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SEEK_END&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The sk_off member is the distance from the end of the file.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/UMD_Block-Reference-English.htm#sceIoIoctlAsync">sceIoIoctlAsync</a>, <a href="../peripheral/UMD_Block-Reference-English.htm#sceIoIoctl">sceIoIoctl</a>, <a href="../peripheral/UMD_Block-Reference-English.htm#sceIoLseek">sceIoLseek</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdActivate"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdActivate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>UMD&trade; drive activation processing<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
int <b>sceUmdActivate</b>(
	const int <i>mode</i>,
	const char <i>*aliasname</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Power mode&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aliasname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;&quot;disc:0&quot; or <a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_ALIAS_NAME">SCE_UMD_ALIAS_NAME</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/UMD-Reference-English.htm#SCE_KERNEL_ERROR_OK"><a href="../peripheral/UMD_Block-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a></a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function activates the UMD&trade;/DVD drive.<br><br>Drive activation processing executes sceIoAssign() as internal processing to access the UMD&trade;/DVD and assigns the drive by using the filesystem "isofs0:," block device "umd0:," and alias name "disc0."<br>Currently, specify <a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_MODE_POWERON">SCE_UMD_MODE_POWERON</a> for the <i>mode</i> argument. This mode turns on the power if the UMD&trade; drive power was not ON. Note that the power is turned on only when DRIVE SELECT is performed for the UMD&trade;. DVD power control is not performed here.<br><br>To use this function, link mediaman_stub.a.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdGetDiscInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdGetDiscInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get disc information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
int <b>sceUmdGetDiscInfo</b>(
	<a href="../peripheral/UMD_Block-Reference-English.htm#SceUmdDiscInfo"><a href="../peripheral/UMD-Reference-English.htm#SceUmdDiscInfo">SceUmdDiscInfo</a></a> *<i>disc_info</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>disc_info</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disc information&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/UMD-Reference-English.htm#SCE_KERNEL_ERROR_OK"><a href="../peripheral/UMD_Block-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a></a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets UMD&trade; disc information.<br><br>This information that is obtained is entered in the <a href="../peripheral/UMD_Block-Reference-English.htm#SceUmdDiscInfo"><a href="../peripheral/UMD-Reference-English.htm#SceUmdDiscInfo">SceUmdDiscInfo</a></a> structure. To use this function, be sure to set <i>disc_info.uiSize</i> = sizeof(<a href="../peripheral/UMD_Block-Reference-English.htm#SceUmdDiscInfo"><a href="../peripheral/UMD-Reference-English.htm#SceUmdDiscInfo">SceUmdDiscInfo</a></a>).<br><br>To use this function, link mediaman_stub.a.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdCheckMedium"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdCheckMedium<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Verify existence of UMD&trade; medium <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
int <b>sceUmdCheckMedium</b>(
	void
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If a UMD&trade; medium exists, SCE_TRUE is returned.<br>If no UMD&trade; medium exists (or the lid is not closed), SCE_FALSE is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function verifies the existence of the media.<br><br>To use this function, link mediaman_stub.a.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdRegisterUMDCallBack"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdRegisterUMDCallBack<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Register callback that is called when UMD&trade; status transition occurs <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
SceUID <b>sceUmdRegisterUMDCallBack</b>(
	SceUID <i>cb_id</i>
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cb_id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback ID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/UMD-Reference-English.htm#SCE_KERNEL_ERROR_OK"><a href="../peripheral/UMD_Block-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a></a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function registers a callback that is called when a UMD&trade; status transition occurs.<br><br>For the <i>cb_id</i> argument, set a callback ID that was obtained by using <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>().<br>The callback is not called immediately when a UMD&trade; status transition occurs, but is called back when the <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCheckCallback">sceKernelCheckCallback</a>() or sce<i>XXXXXX</i>CB() function is executed.<br><br>The prototype of the callback that is registered by using <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>() is as follows.<br><br></div>
<div style="margin-left:70px;">int callback(int count, int arg, void *param);<br></div>
<div style="margin-left:50px;"><br>A value for judging which status occurred is set after the second argument <i>arg</i> in the callback that is called when a UMD&trade; status transition occurs. The logical OR of multiple values is set for the value<br>The following values can be set.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_MEDIA_OUT">SCE_UMD_MEDIA_OUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The medium was ejected&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_MEDIA_IN">SCE_UMD_MEDIA_IN</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The medium was inserted&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_READY">SCE_UMD_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Drive is ready.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_NOT_READY">SCE_UMD_NOT_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Drive is not ready.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_READABLE">SCE_UMD_READABLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Drive is readable.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For details about each status, refer to &quot;UMD&trade; drive status&quot; in the &quot;UMD-Overview&quot;.<br>For details of callbacks, refer to the explanation of the thread manager callback function.<br>To use this function, link mediaman_stub.a.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdUnRegisterUMDCallBack"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdUnRegisterUMDCallBack<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Cancel registration of callback that is called when UMD&trade; status transition occurs<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
SceUID <b>sceUmdUnRegisterUMDCallBack</b>(
	SceUID <i>cb_id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cb_id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback ID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/UMD-Reference-English.htm#SCE_KERNEL_ERROR_OK"><a href="../peripheral/UMD_Block-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a></a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function cancels the registration of the callback that is called when a status transition such as the UMD&trade; being inserted or ejected occurs.<br><br>The callback ID to be canceled is passed in the <i>cb_id</i> argument.<br>To use this function, link mediaman_stub.a.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdGetDriveStat"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdGetDriveStat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get UMD&trade; drive status<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
int <b>sceUmdGetDriveStat</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The UMD&trade; drive status is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the UMD&trade; drive status shown in the following table.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_MEDIA_OUT">SCE_UMD_MEDIA_OUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The medium was ejected&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_MEDIA_IN">SCE_UMD_MEDIA_IN</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The medium was inserted&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_MEDIA_CHG">SCE_UMD_MEDIA_CHG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A different medium than the previous medium was inserted.&nbsp;&nbsp;<br>&nbsp;&nbsp;(Callback notification is not supported)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_READY">SCE_UMD_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The drive is ready&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_NOT_READY">SCE_UMD_NOT_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The drive is not ready&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_READABLE">SCE_UMD_READABLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The UMD&trade; is readable&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For details about each UMD&trade; drive status, refer to the &quot;UMD-Overview&quot;.<br>To use this function, link mediaman_stub.a.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdGetErrorStat"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdGetErrorStat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get UMD&trade; error status<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
int <b>sceUmdGetErrorStat</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If there was an error, the UMD&trade; error status is returned by using a negative value.<br>If there was no error, <a href="../peripheral/UMD-Reference-English.htm#SCE_KERNEL_ERROR_OK"><a href="../peripheral/UMD_Block-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a></a> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the UMD&trade; error status.<br><br>Since a function such as <a href="../peripheral/UMD-Reference-English.htm#sceUmdActivate">sceUmdActivate</a>() returns to processing without waiting for the end of internal processing, it is not known whether the assignment processing ended properly internally. In this case, the sceUmdGetErrorStat() function can be used to verify this.<br>For example, an error may be returned when the UMD&trade; drive status is NOT_READY regardless of whether a medium was inserted. If a different disc is inserted when disc replacement is prohibited, SCE_UMD_ERROR_REPLACED is returned by this function.<br><br>To use this function, link mediaman_stub.a.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdWaitDriveStat"></a><a name="sceUmdWaitDriveStatWithTimer"></a><a name="sceUmdWaitDriveStatCB"></a>
<a name="sceUmdWaitDriveStat / sceUmdWaitDriveStatWithTimer / sceUmdWaitDriveStatCB"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdWaitDriveStat / sceUmdWaitDriveStatWithTimer / sceUmdWaitDriveStatCB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Wait for a UMD&trade; drive status event<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
int <b>sceUmdWaitDriveStat</b>(
	const unsigned int <i>state</i>
);
int <b>sceUmdWaitDriveStatWithTimer</b>(
	const unsigned int <i>state,</i>
<i>	const int timer</i>
);
int <b>sceUmdWaitDriveStatCB</b>(
	const unsigned int <i>state,</i>
<i>	const int timer</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>state</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Status event&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>timer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timer (<i>&micro;</i>s)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/UMD-Reference-English.htm#SCE_KERNEL_ERROR_OK"><a href="../peripheral/UMD_Block-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a></a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function causes the thread that called this function to wait until the UMD&trade; drive status event that is set for <i>state</i> occurs. <br><br>The status event matches the driver status.<br>sceUmdWaitDriveStat() waits until the specified status occurs.<br>sceUmdWaitDriveStatWithTimer() waits until the specified status occurs or until the specified timeout occurs.<br>sceUmdWaitDriveStatCB() checks for the existence of a callback notification in addition to the operation of sceUmdWaitDriveStatWithTimer().<br><br>If the number of microseconds that were set for the <i>timer</i> argument value have elapsed, processing is exited due to a timeout.<br>The following macros can be specified for the <i>state</i> argument.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_MEDIA_OUT">SCE_UMD_MEDIA_OUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The medium was ejected&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_MEDIA_IN">SCE_UMD_MEDIA_IN</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The medium was inserted&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_MEDIA_CHG">SCE_UMD_MEDIA_CHG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A different medium than the previous medium was inserted.&nbsp;&nbsp;<br>&nbsp;&nbsp;(No callback reported)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_READY">SCE_UMD_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The drive is ready&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_NOT_READY">SCE_UMD_NOT_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The drive is not ready&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD-Reference-English.htm#SCE_UMD_READABLE">SCE_UMD_READABLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The UMD&trade; is readable&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">If a status event other than the ones listed above is set, an error occurs immediately.<br>To use this function, link mediaman_stub.a.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdCancelWaitDriveStat"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdCancelWaitDriveStat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Cancel wait for a UMD&trade; drive status event<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
int <b>sceUmdCancelWaitDriveStat</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/UMD-Reference-English.htm#SCE_KERNEL_ERROR_OK"><a href="../peripheral/UMD_Block-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a></a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function cancels the UMD&trade; drive status wait state of the thread that called this function.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdReplacePermit"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdReplacePermit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Permit UMD&trade; replacement<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
int <b>sceUmdReplacePermit</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, <a href="../peripheral/UMD-Reference-English.htm#SCE_KERNEL_ERROR_OK"><a href="../peripheral/UMD_Block-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a></a> is returned.<br>If an error occurs, a negative value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function permits UMD&trade; disc replacement.<br><br>To use this function, link mediaman_stub.a.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUmdReplaceProhibit"></a>
<table width="100%"><td width="70%"><font size=6>sceUmdReplaceProhibit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Prohibit UMD&trade; replacement<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;mediaman.h&gt;
int <b>sceUmdReplaceProhibit</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If an error occurs, a negative value is returned.<br>If processing is successful, <a href="../peripheral/UMD-Reference-English.htm#SCE_KERNEL_ERROR_OK"><a href="../peripheral/UMD_Block-Reference-English.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a></a> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function prohibits UMD&trade; disc replacement.<br><br>If the UMD&trade; drive status is not READABLE, an SCE_UMD_NOT_DEVICE_READY error is returned.<br>To use this function, link mediaman_stub.a.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ISOFS Error Codes<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal termination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOENT">SCE_ERROR_ERRNO_ENOENT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File does not exist&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EIO">SCE_ERROR_ERRNO_EIO</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input/output error&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EBADF">SCE_ERROR_ERRNO_EBADF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010009&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOMEM">SCE_ERROR_ERRNO_ENOMEM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001000C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Required memory cannot be allocated&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFAULT">SCE_ERROR_ERRNO_EFAULT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001000E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENODEV">SCE_ERROR_ERRNO_ENODEV</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010013&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Device does not exist&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EINVAL">SCE_ERROR_ERRNO_EINVAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010016&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Argument is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EMFILE">SCE_ERROR_ERRNO_EMFILE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010018&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Too many opened files&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFBIG">SCE_ERROR_ERRNO_EFBIG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001001B&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File is too large&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOBUFS">SCE_ERROR_ERRNO_ENOBUFS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010069&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer does not exist&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ETIMEDOUT">SCE_ERROR_ERRNO_ETIMEDOUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001006E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timeout occurred&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOMEDIUM">SCE_ERROR_ERRNO_ENOMEDIUM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001007B&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No medium was found&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EMEDIUMTYPE">SCE_ERROR_ERRNO_EMEDIUMTYPE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001007C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Illegal medium&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOTSUP">SCE_ERROR_ERRNO_ENOTSUP</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B000&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unsupported function&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_NOMAIN_ADDR">SCE_ERROR_ERRNO_NOMAIN_ADDR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address not in main memory was specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EUNIT">SCE_ERROR_ERRNO_EUNIT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unit number is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFSIZE">SCE_ERROR_ERRNO_EFSIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File size is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFLAG">SCE_ERROR_ERRNO_EFLAG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified flag is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_NOT_DEVICE_READY">SCE_UMD_NOT_DEVICE_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Device is not ready&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_LBA_OUTOFRANGE">SCE_UMD_LBA_OUTOFRANGE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Access was beyond last LBA&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_HARDWARE_FAILURE">SCE_UMD_HARDWARE_FAILURE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0xC0210005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A problem occurred in the drive&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_NO_MEDIUM">SCE_UMD_NO_MEDIUM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No medium exists&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_UNKNOWN_MEDIUM">SCE_UMD_UNKNOWN_MEDIUM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0xC0210004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unknown medium&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2008 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
