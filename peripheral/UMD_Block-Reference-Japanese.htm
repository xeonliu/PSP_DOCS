<html lang="jp">
<head>
<title>UMD_Block-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
UMD&reg;ブロックデバイスドライバ
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUmdDiscInfo"></a>
<table width="100%"><td width="70%"><font size=6>SceUmdDiscInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ディスク情報<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;umddisc.h&gt;
typedef struct {
	unsigned int <i>uiSize</i>;
	unsigned int <i>uiMediaType</i>;
} <b>SceUmdDiscInfo</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sizeof(SceUmdDiscInfo)&nbsp;&nbsp;<br>&nbsp;&nbsp;（構造体サイズ）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiMediaType</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;UMD&reg;メディアタイプ情報&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">UMD&reg;メディアのディスク情報を格納する構造体です。<br><br><i>uiSize</i>メンバには、sizeof(SceUmdDiscInfo)の値を設定してください。<br><i>uiMediaType</i>メンバは、UMD&reg;メディアタイプ情報が設定されます。<br><br>UMD&reg;メディアタイプ情報は、下の表のようになります。なお、UMD&reg;には複数のUMD&reg;メディアタイプ情報が含まれていることがあり、その場合は論理和で返されます。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_GAME&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ゲームタイトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_AUDIO&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;音楽タイトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_VIDEO&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ムービータイトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_CLEANER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;クリーナー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_UNKNOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;不明&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/UMD-Reference-Japanese.htm#sceUmdGetDiscInfo">sceUmdGetDiscInfo</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUmdReadAheadParam"></a>
<table width="100%"><td width="70%"><font size=6>SceUmdReadAheadParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>先読み設定情報<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;umddevctl.h&gt;
typedef struct {
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>iReserved0</i>;
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>iLBA</i>;
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>iReserved1</i>;
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>iSectNum</i>;
}<b>SceUmdReadAheadParam</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iReserved0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;予約領域0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iLBA</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;論理ブロックアドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iReserved1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;予約領域1&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iSectNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;セクタ数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">先読み開始位置とその範囲を格納する構造体です。<br><a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoDevctl">sceIoDevctl</a>*()関数のSCE_UMD_READ_AHEAD、SCE_UMD_ACQ_READ_AHEADコマンドの設定パラメータとして使用します。<br><i>iLBA</i>から、<i>iSectNum</i>セクタをumdcacheに先読みするようにリクエストします。<br><i>iSectNum</i>が、64セクタ未満の場合、64セクタ分先読みされます。<br><i>iLBA</i> + <i>iSectNum</i>が、最終LBAを超える場合は、最終LBAまでが先読みされます。<br>umdcacheおよび先読みについての詳細は、「UMD&reg;キャッシュドライバ概要」を参照してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoDevctl">sceIoDevctl</a>(), <a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoIoctl">sceIoIoctl</a>(), <a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoIoctlAsync">sceIoIoctlAsync</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUmdSeekParam"></a>
<table width="100%"><td width="70%"><font size=6>SceUmdSeekParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>シーク設定情報<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;umddevctl.h&gt;
typedef struct {
	SceOff <i>sk_off</i>;
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <i>sk_reserved;</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <i>sk_whence;</i>
}<b>SceUmdSeekParam</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sk_off</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ファイルオフセット(sector)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sk_reserved</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パディング(未使用)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sk_whence</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;移動方法&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ファイルのシーク情報を格納する構造体です。<br><br><a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoIoctl">sceIoIoctl</a>*()関数のSCE_UMD_SEEK_FILEコマンドの設定パラメータとして使用します。<br>ブロックデバイスに対する<i>sk_off</i>メンバに設定される値は、セクタ単位とします。<br><i>sk_whence</i>メンバは、下の表のようになります。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SEEK_SET&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>sk_off</i>メンバはファイルの先頭からの距離。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SEEK_CUR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>sk_off</i>メンバは現在のオフセットからの相対距離。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SEEK_END&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>sk_off</i>メンバはファイルの末尾からの距離。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoIoctlAsync">sceIoIoctlAsync</a>(), <a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoIoctl">sceIoIoctl</a>(), <a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoLseek">sceIoLseek</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoOpen"></a>
<table width="100%"><td width="70%"><font size=6>sceIoOpen<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>デバイスオープン<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceUID <b>sceIoOpen</b> (
	const char <i>*blkdevname</i>,
	int <i>flag</i>,
	SceMode <i>mode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>blkdevname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;umdXXXX:&nbsp;&nbsp;<br>&nbsp;&nbsp;XXXXにはユニット番号&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込み専用のみ指定可能&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;未使用&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、デバイスディスクリプタ値を返します。<br>エラーの場合、負の値が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">UMD&reg;ブロックデバイスファイルをオープンする関数です。<br><br>ISO9660ファイルシステムとして使用する時のように、ファイル名は必要ありません。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoClose"></a>
<table width="100%"><td width="70%"><font size=6>sceIoClose<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>デバイスのクローズ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceUID <b>sceIoClose</b> (
	SceUID <i>fd</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスディスクリプタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>が返ります。<br>エラーの場合は、負の値が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">デバイスファイルのクローズ処理を行う関数です。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoRead"></a>
<table width="100%"><td width="70%"><font size=6>sceIoRead<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>セクタデータの読み込み<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceSSize <b>sceIoRead</b> (
	SceUID <i>fd</i>,
	void *<i>buf</i>,
	SceSize <i>nsect</i>
);
</font></pre></div>
<br>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br></div>
<br>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスディスクリプタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込みバッファ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nsect</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込みサイズ(セクタ単位)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、読み込んだセクタ数（nsect&gt;=0）を返します。<br>エラーの場合は、負の値が返ります。<br></div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">オープンしているデバイスからデータを読み出す関数です。<br><br><i>buf</i>で設定されるバッファアドレスは、ワード（4bytes）アラインメントである必要があります。<br>返り値が、引数<i>nsect</i>より小さい正の整数の場合、そのサイズ分だけデータを読み込んだことになります。<br>引数<i>nsect</i>より小さな値が返った場合は、デバイスデータの終端に達したことになります。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoLseek"></a>
<table width="100%"><td width="70%"><font size=6>sceIoLseek<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>デバイスファイルオフセットの移動<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceOff <b>sceIoLseek</b> (
	SceUID <i>fd</i>,
	SceOff <i>offset</i>,
	int <i>whence</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスディスクリプタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>offset</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;基準点からのセクタ数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>whence</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;基準点&nbsp;&nbsp;<br>&nbsp;&nbsp;＊詳細はIO/File Mgrドキュメント参照&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、新たなデバイスファイルオフセットの値が返ります。<br>エラーの場合は、負の値が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">デバイスファイルのオフセットを移動させる関数です。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoOpenAsync"></a>
<table width="100%"><td width="70%"><font size=6>sceIoOpenAsync<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>非同期デバイスファイルオープン<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceUID <b>sceIoOpenAsync</b> (
	const char *<i>devname</i>
	int <i>flag</i>,
	SceMode <i>mode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>devname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスファイル名&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込み専用などを指定可能&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;未使用&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、デバイスディスクリプタ値が返ります。<br>エラーの場合は、負の値が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">デバイスファイルを非同期オープン処理する関数です。<br><br>現在、同時オープン可能デバイスファイル数は、8ファイルとなっています。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoCloseAsync"></a>
<table width="100%"><td width="70%"><font size=6>sceIoCloseAsync<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>非同期デバイスファイルのクローズ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceUID <b>sceIoCloseAsync</b> (
	SceUID <i>fd</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスディスクリプタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>を返します。<br>エラーの場合は、負の値が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">デバイスファイルの非同期クローズ処理を行う関数です。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoReadAsync"></a>
<table width="100%"><td width="70%"><font size=6>sceIoReadAsync<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>非同期データの読み込み<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceSSize <b>sceIoReadAsync</b> (
	SceUID <i>fd</i>,
	void *<i>buf</i>,
	SceSize <i>nsect</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスディスクリプタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込みバッファ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nsect</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込むサイズ(セクタ単位)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>が戻ります。<br>エラーの場合は、負の値が戻ります。<br></div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">デバイスファイルからデータを非同期読み出しする関数です。<br><br><i>buf</i>で設定されるバッファアドレスは、ワード（4bytes）アラインメントである必要があります。<br>読み込んだセクタサイズは、sceIoWaitAsyncXX()および、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoPollAsync">sceIoPollAsync</a>()の引数<i>iores</i>で確認することができます。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoLseekAsync"></a>
<table width="100%"><td width="70%"><font size=6>sceIoLseekAsync<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>デバイスファイルのオフセットの非同期移動<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
SceOff <b>sceIoLseekAsync</b> (
	SceUID<i> fd</i>,
	SceOff <i>offset</i>,
	int <i>whence</i>
);
</font></pre></div>
<br>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br></div>
<br>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスディスクリプタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>offset</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;基準点からのセクタ数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>whence</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;基準点&nbsp;&nbsp;<br>&nbsp;&nbsp;＊詳細はIO/File Mgrドキュメント参照&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>が返ります。<br>エラーの場合は、負の値が返ります。<br></div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定デバイスファイルのオフセット移動を非同期に行う関数です。<br></div>
<br>
<div style="margin-left:50px;">移動単位は、セクタ単位で行われます。<br>シーク処理の結果は、sceIoWaitAsyncXX()および、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoPollAsync">sceIoPollAsync</a>()の引数<i>iores</i>で確認してください。<br></div>
<br>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoSetAsyncCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceIoSetAsyncCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>非同期処理通知用コールバックの設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
int <b>sceIoSetAsyncCallback</b>(
	SceUID <i>fd</i>,
	SceUID<i> cbid,</i>
	int <i>arg</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスディスクリプタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cbid</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバック関数に渡す引数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>が返ります。<br>エラーの場合は、負の値が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ファイルI/Oの非同期処理が完了した際に、通知を行うスレッドマネージャのコールバックIDを設定する関数です。<br><br>コールバックは、あらかじめ<a href="../kernel/Thread_Manager-Reference-Japanese.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>()関数によって生成しておく必要があります。非同期I/O処理が完了すると、指定したコールバックIDに対して<a href="../kernel/Thread_Manager-Reference-Japanese.htm#sceKernelNotifyCallback">sceKernelNotifyCallback</a>()関数による通知が行われます。この後、コールバックを設定したスレッドが<a href="../kernel/Thread_Manager-Reference-Japanese.htm#sceKernelCheckCallback">sceKernelCheckCallback</a>()関数により通知の有無をチェックするか、sceXXXXCB()関数などのようなコールバック呼び出し付きの待ちAPIを実行することで、コールバック生成時に設定したコールバック関数が呼び出されます。<br>非同期I/O処理を完結させるためには、呼び出されたコールバック関数の中で<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoPollAsync">sceIoPollAsync</a>()関数、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoWaitAsync">sceIoWaitAsync</a>()関数などを実行して、ファイルI/O処理の実行結果を引き取る必要があります。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoPollAsync"></a><a name="sceIoWaitAsync"></a><a name="sceIoWaitAsyncCB"></a>
<a name="sceIoPollAsync / sceIoWaitAsync / sceIoWaitAsyncCB"></a>
<table width="100%"><td width="70%"><font size=6>sceIoPollAsync / sceIoWaitAsync / sceIoWaitAsyncCB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>非同期処理のステータス取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
int <b>sceIoPollAsync</b>(
	SceUID <i>fd</i>,
	SceIores *<i>iores</i>
);
int <b>sceIoWaitAsync</b>(
	SceUID <i>fd</i>,
	SceIores *<i>iores</i>
);
int <b>sceIoWaitAsyncCB</b>(
	SceUID <i>fd</i>,
	SceIores *<i>iores</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスディスクリプタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iores</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ステータス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非同期処理の終了の場合は、0が返ります。<br>非同期処理中の場合は、1が返ります。<br>エラーの場合は、負の値が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非同期I/O処理のステータスを取得する関数です。<br><br>sceIoWaitAsync()関数は、非同期I/O処理が完了するまで待ち、その結果を引数<i>iores</i>に格納してから返り値に0を返します。<br><br>sceIoWaitAsyncCB()関数は、sceIoWaitAsync()関数の動作中にコールバック通知の有無をチェックを行います。<br><br>sceIoPollAsync()関数はsceIoWaitAsync()関数から、非同期I/O処理が完了していない場合に待ち状態に入らず、すぐに処理を戻します。非同期I/O処理が完了していなかった場合は返り値に1を返します。この場合は、引数<i>iores</i>の値は変化しません。<br><br>非同期I/O関数を実行した場合は、上記の関数で処理状態を確認してください。<br>各関数が0を戻したとき、引数<i>iores</i>には、非同期I/O関数に対応する同期I/O関数の戻り値が設定されています。<br><a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoOpenAsync">sceIoOpenAsync</a>()であれば、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoOpen">sceIoOpen</a>()の戻り値であるファイルディスクリプタ、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoReadAsync">sceIoReadAsync</a>()であれば、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoRead">sceIoRead</a>()の戻り値である読み込みサイズが設定されています。<br>詳細は、各非同期I/O関数に対応する同期関数の説明を参照してください。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoIoctl"></a>
<table width="100%"><td width="70%"><font size=6>sceIoIoctl<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>通常I/O処理以外でのデータ取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
#include &lt;umddevctl.h&gt;
#include &lt;umd_ioctl.h&gt;
int <b>sceIoIoctl</b>(
	SceUID <i>fd</i>,
	int <i>cmd</i>,
	const void *<i>argp</i>,
	SceSize <i>arglen</i>,
	void *<i>bufp</i>,
	SceSize <i>buflen</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスディスクリプタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cmd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コマンドコード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>argp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コマンドパラメータ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arglen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コマンドパラメータサイズ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bufp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;データバッファ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buflen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;データバッファサイズ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>が返ります。<br>エラーの場合は、負の値が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">通常、I/O処理から外れたデータの取得および設定を行う場合に使用するデバイスファイルコントロール関数です。<br>現在、以下のコマンドが利用可能です。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>コマンド</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_GET_FILEPOINTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;現在のデバイスオフセット位置の取得。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_SEEK_FILE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;シーク処理。詳細後述。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_UNCACHED_READ&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;強制ディスクアクセス読み込み。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">各コマンドのオプションは、以下の通りです。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>コマンド</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>パラメータ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>パラメータサイズ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>バッファ</b>&nbsp;&nbsp;<br>&nbsp;&nbsp;<b>　方向/サイズ</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_GET_FILEPOINTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;out&nbsp;&nbsp;<br>&nbsp;&nbsp;　4bytes&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_SEEK_FILE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SceUmdSeekParam">SceUmdSeekParam</a>*&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sizeof&nbsp;&nbsp;<br>&nbsp;&nbsp;(<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SceUmdSeekParam">SceUmdSeekParam</a> *)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Null&nbsp;&nbsp;<br>&nbsp;&nbsp;　0byte&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_UNCACHED_READ&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込みセクタ数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Int&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;out&nbsp;&nbsp;<br>&nbsp;&nbsp;　読み込み&nbsp;&nbsp;<br>&nbsp;&nbsp;　セクタ数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- sce_title -->
<a Name ="HeadingT_2_1">
<div style="margin-left:40px;"><h4><b>SCE_UMD_GET_FILEPOINTERについて</b><br><br></h4></div></a>

<div style="margin-left:50px;">現在のデバイスオフセット値を取得します。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_2">
<div style="margin-left:40px;"><h4><b>SCE_UMD_SEEK_FILEについて</b><br><br></h4></div></a>

<div style="margin-left:50px;"><a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoLseek">sceIoLseek</a>()関数のオフセット移動処理に加え、光ヘッドなどの物理的なシーク制御も行います。<br>コマンドパラメータには、必要なシークパラメータを設定してください。<br>デバイスオフセット値は、セクタ単位として処理されます。<br>光ヘッド制御をともなう物理的なシークは、以下のようなLBAへシークします。<br><br><b>シーク位置(LBA) = 現在のデバイスオフセットのLBA + オフセット値</b><br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_3">
<div style="margin-left:40px;"><h4><b>SCE_UMD_UNCACHED_READについて</b><br><br></h4></div></a>

<div style="margin-left:50px;">UMD&reg;/DVDのキャッシュ機能を利用せず、必ずディスクからデータを読み込むようにします。キャッシュ利用時に比べると、読み込み速度が低下しますので、使用する際は注意してください。<br>このコマンド成功時には、かならずディスクから読み込みが行われるため、ドライブの電源状態は、アクティブに遷移します。<br>返り値は、成功時、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoRead">sceIoRead</a>()同様、0以上の読み込みセクタ数が返ります。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoIoctlAsync"></a>
<table width="100%"><td width="70%"><font size=6>sceIoIoctlAsync<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>非同期処理の通常I/O処理以外でのデータ取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
#include &lt;umddevctl.h&gt;
#include &lt;umd_ioctl.h&gt;
int <b>sceIoIoctlAsync</b>(
	SceUID <i>fd</i>,
	int <i>cmd</i>,
	const void *<i>argp</i>,
	SceSize <i>arglen</i>,
	void *<i>bufp</i>,
	SceSize <i>buflen</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスディスクリプタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cmd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コマンドコード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>argp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コマンドパラメータ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arglen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コマンドパラメータサイズ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bufp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;データバッファ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buflen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;データバッファサイズ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功した場合は、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>が返ります。<br>エラーの場合は、負の値が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">通常、I/O処理から外れたデータの取得および設定を行う場合に使用するファイルシステムコントロール関数を非同期におこなう関数です。<br><br>処理結果は、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoWaitAsync">sceIoWaitAsync</a>()関数、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoWaitAsyncCB">sceIoWaitAsyncCB</a>()関数および、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#sceIoPollAsync">sceIoPollAsync</a>()関数で確認することができます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceIoDevctl"></a>
<table width="100%"><td width="70%"><font size=6>sceIoDevctl<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>デバイス特有のデータ取得および設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;iofilemgr.h&gt;
#include &lt;umddevctl.h&gt;
int <b>sceIoDevctl</b>(
	const char *<i>devname,</i>
	int <i>cmd</i>,
	const void <i>*argp</i>,
	SceSize <i>arglen</i>,
	void <i>*bufp</i>,
	SceSize <i>buflen</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラからの呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>devname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;umdXXXX:&nbsp;&nbsp;<br>&nbsp;&nbsp;XXXXにはユニット番号&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cmd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コマンドコード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>argp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コマンドパラメータ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arglen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コマンドパラメータサイズ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bufp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;データバッファ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buflen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;データバッファサイズ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">成功時には、<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>が返ります。<br>エラーの場合は、負の値が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">通常、I/O処理から外れたデータの取得および設定を行う場合に使用するデバイスコントロール関数です。<br>現在、以下のコマンドが利用可能です。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_GET_MEDIATYPE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;UMD&reg;メディアタイプの取得をする。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_GET_LASTLBA&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;最終LBAの取得をする。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_ACTIVATE_DRIVE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;UMD&reg;ドライブをアクティベートする。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_SEEK_DISC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;指定LBAにシークする。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;先読みをリクエストする。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_ACQ_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;状態が取得可能な先読みリクエストをする。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_WAIT_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;先読みがFINISH状態になるまで待つ。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_POLL_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;先読みの状態を取得する。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_CANCEL_STAT_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;FINISH状態待ちをキャンセルする。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>コマンド</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>パラメータ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>パラメータサイズ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>バッファ</b>&nbsp;&nbsp;<br>&nbsp;&nbsp;<b>　方向/サイズ</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_GET_MEDIATYPE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;out&nbsp;&nbsp;<br>&nbsp;&nbsp;　sizeof(<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SceUmdDiscInfo">SceUmdDiscInfo</a>)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_GET_LASTLBA&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;out&nbsp;&nbsp;<br>&nbsp;&nbsp;　4bytes&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_ACTIVATE_DRIVE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;<br>&nbsp;&nbsp;　0bytes&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_SEEK_DISC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;uigned int&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sizeof&nbsp;&nbsp;<br>&nbsp;&nbsp;(unsigned int *)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;<br>&nbsp;&nbsp;　0bytes&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SceUmdReadAheadParam">SceUmdReadAheadParam</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sizeof(<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SceUmdReadAheadParam">SceUmdReadAheadParam</a>)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;<br>&nbsp;&nbsp;　0bytes&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_ACQ_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SceUmdReadAheadParam">SceUmdReadAheadParam</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sizeof(<a href="../peripheral/UMD_Block-Reference-Japanese.htm#SceUmdReadAheadParam">SceUmdReadAheadParam</a>)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;out&nbsp;&nbsp;<br>&nbsp;&nbsp;　4bytes&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_WAIT_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sizeof(<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a>)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;<br>&nbsp;&nbsp;　0bytes&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_POLL_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sizeof(<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a>)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;<br>&nbsp;&nbsp;　0bytes&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_CANCEL_STAT_READ_AHEAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sizeof(<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a>)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;<br>&nbsp;&nbsp;　0bytes&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- sce_title -->
<a Name ="HeadingT_2_4">
<div style="margin-left:40px;"><h4><b>SCE_UMD_GET_MEDIATYPEについて</b><br><br></h4></div></a>

<div style="margin-left:50px;">このコマンドで取得できるメディアタイプは、以下の通りです。<br>UMD&reg;には複数のメディアタイプが含まれていることがあります。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>メディアタイプ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>内容</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_GAME&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ゲームタイトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_AUDIO&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;音楽タイトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_VIDEO&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ムービータイトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_CLEANER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;クリーナー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_UMD_FMT_UNKNOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;不明&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_title -->
<a Name ="HeadingT_2_5">
<div style="margin-left:40px;"><h4><b>SCE_UMD_GET_LASTLBAについて</b><br><br></h4></div></a>

<div style="margin-left:50px;">ディスクに割り当てられている最終LBAを取得します。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_6">
<div style="margin-left:40px;"><h4><b>SCE_UMD_ACTIVATE_DRIVEについて</b><br><br></h4></div></a>

<div style="margin-left:50px;">ドライブのアクティベートを行います。<br>本コマンドは、<a href="../peripheral/UMD-Reference-Japanese.htm#sceUmdActivate">sceUmdActivate</a>()で行われる処理とは異なります。<br>本コマンドは、ドライブステータスをREADY状態へ促しますが、ファイルシステムなどの初期化は行われません。<br>そのため、本コマンドを実行しても、READABLEへ移行しません。<br>また、ドライブの電源状態がアクティブになることもありません。<br>本コマンドは、仕様が確定していなかった時点で、ファイルシステムを利用しないタイトル向けに用意されたものです。<br>現在、UMD&reg;からの起動にファイルシステムを利用することが必須となっているため、本コマンドをタイトル中で利用する意味はありません。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_7">
<div style="margin-left:40px;"><h4><b>SCE_UMD_SEEK_DISCについて</b><br><br></h4></div></a>

<div style="margin-left:50px;">指定LBAに光ヘッドなどを移動させます。<br>コマンドパラメータには、指定LBAを設定してください。<br>※メモリ上のデバイスオフセットは変化しませんので注意してください。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_8">
<div style="margin-left:40px;"><h4><b>SCE_UMD_READ_AHEAD、SCE_UMD_ACQ_READ_AHEADについて</b><br><br></h4></div></a>

<div style="margin-left:50px;">指定LBAから、指定セクタ数をumdcacheに先読みするようにリクエストします。<br>64セクタ未満のセクタ数が指定された場合は、64セクタ分がキャッシュされます。<br>6.4MB超のサイズが指定された場合、キャッシュされません。<br><br>SCE_UMD_ACQ_READ_AHEADコマンドは、リクエストした先読みの状態の確認ができます。リクエストが成功すると、状態確認のためのインデックス値をバッファに設定します。<br><br>そのインデックス値を状態確認のためのコマンド、SCE_UMD_WAIT_READ_AHEAD, SCE_UMD_POLL_READ_AHEADコマンドに設定することで、先読みの状態が取得可能です。インデックス値には、1以上の正の値が設定されます。<br>先読みは、他のスレッドが、UMD&reg;/DVDに読み込みなどを行っていなかった場合、即座に開始されますが、ストリーミングなどが行われている最中に先読みが行われると、その間に割り込むことになります。<br>先読み中は、他の読み込みをブロックすることになりますので注意してください。<br>先読みについては、「UMD&reg;キャッシュ概要」を参照してください。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_9">
<div style="margin-left:40px;"><h4><b>SCE_UMD_WAIT_READ_AHEADについて</b><br><br></h4></div></a>

<div style="margin-left:50px;">コマンドパラメータで指定された先読みがFINISH状態になるまで、コマンドを実行したスレッドをWAIT状態にするコマンドです。<br>コマンドパラメータとしては、SCE_UMD_ACQ_READ_AHEADコマンドで返されたインデックス値を指定してください。それ以外の値を指定した場合、すでにFINISH状態になっているものとみなされてただちに処理が戻ります（スレッドはWAIT状態にならず、エラーにもなりません）。<br>このコマンドによるWAIT状態がSCE_UMD_CANCEL_STAT_READ_AHEADコマンドによってキャンセルされた場合、SCE_KERNEL_ERROR_WAIT_CANCELエラーが戻ります。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_10">
<div style="margin-left:40px;"><h4><b>SCE_UMD_POLL_READ_AHEADについて</b><br><br></h4></div></a>

<div style="margin-left:50px;">コマンドパラメータで指定された先読みの状態を取得するコマンドです。状態を表す次の値のいずれかが戻ります。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;先読み処理は終了済&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x20&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;先読み処理を実行中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x10&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;先読み処理を待機中&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">コマンドパラメータとしては、SCE_UMD_ACQ_READ_AHEADコマンドで返されたインデックス値を指定してください。それ以外の値を指定した場合は、FINISH状態になっているものとみなされ、値0が戻ります（エラーにはなりません）。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_11">
<div style="margin-left:40px;"><h4><b>SCE_UMD_CANCEL_STAT_READ_AHEADについて</b><br><br></h4></div></a>

<div style="margin-left:50px;">SCE_UMD_WAIT_READ_AHEADコマンドで、先読みがFINISH状態になるまでWAIT状態になっているスレッドを起床させます。<br>このコマンドは、先読み自体のキャンセルは行いません。<br><br>キャッシュの詳細は、「UMD&reg;キャッシュ概要」を確認してください。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="エラーコード一覧"></a>
<table width="100%"><td width="70%"><font size=6>エラーコード一覧<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[エラーコード]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>UMD&reg;のエラーコード<br></div><br>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_KERNEL_ERROR_OK">SCE_KERNEL_ERROR_OK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;正常終了&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOENT">SCE_ERROR_ERRNO_ENOENT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ファイルがない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EIO">SCE_ERROR_ERRNO_EIO</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入出力エラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EBADF">SCE_ERROR_ERRNO_EBADF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010009&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ディスクリプタが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOMEM">SCE_ERROR_ERRNO_ENOMEM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001000C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;必要なメモリが確保できない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFAULT">SCE_ERROR_ERRNO_EFAULT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001000E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;アドレスが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENODEV">SCE_ERROR_ERRNO_ENODEV</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010013&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスが存在しない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EINVAL">SCE_ERROR_ERRNO_EINVAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010016&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が無効&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EMFILE">SCE_ERROR_ERRNO_EMFILE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010018&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オープン済みのファイルが多すぎる&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFBIG">SCE_ERROR_ERRNO_EFBIG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001001B&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ファイルが大きすぎる&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOBUFS">SCE_ERROR_ERRNO_ENOBUFS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80010069&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;バッファがない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ETIMEDOUT">SCE_ERROR_ERRNO_ETIMEDOUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001006E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;タイムアウトした&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOMEDIUM">SCE_ERROR_ERRNO_ENOMEDIUM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001007B&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メディアが見つからない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EMEDIUMTYPE">SCE_ERROR_ERRNO_EMEDIUMTYPE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001007C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;不正なメディア&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_ENOTSUP">SCE_ERROR_ERRNO_ENOTSUP</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B000&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サポートされていない機能&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_NOMAIN_ADDR">SCE_ERROR_ERRNO_NOMAIN_ADDR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メインメモリ以外のアドレスが指定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EUNIT">SCE_ERROR_ERRNO_EUNIT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ユニット番号が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFSIZE">SCE_ERROR_ERRNO_EFSIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ファイルサイズが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_ERRNO_EFLAG">SCE_ERROR_ERRNO_EFLAG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8001B004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;指定フラグが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_NOT_DEVICE_READY">SCE_UMD_NOT_DEVICE_READY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;デバイスがレディ状態でない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_LBA_OUTOFRANGE">SCE_UMD_LBA_OUTOFRANGE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;最終LBA以上のアクセス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_HARDWARE_FAILURE">SCE_UMD_HARDWARE_FAILURE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0xC0210005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ドライブに問題が発生した&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_NO_MEDIUM">SCE_UMD_NO_MEDIUM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メディアがない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_UNKNOWN_MEDIUM">SCE_UMD_UNKNOWN_MEDIUM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0xC0210004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;不明なメディア&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_UMD_READAHEAD_BUSY">SCE_UMD_READAHEAD_BUSY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80210011&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;先読みリクエスト実行中&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
