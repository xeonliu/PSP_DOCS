<html lang="jp">
<head>
<title>Display-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
ディスプレイサービス
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_DISPLAY_MODE_LCD"></a>
<table width="100%"><td width="70%"><font size=6>SCE_DISPLAY_MODE_LCD<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>LCD出力モード定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
#define	SCE_DISPLAY_MODE_LCD		0

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">LCD出力モードを表す定数です。<br><br>PSP&reg;本体液晶に表示する場合に<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetMode">sceDisplaySetMode</a>()で指定します。<br>LCD出力時の最大表示領域は480(W) x 272(H)ピクセルです。垂直同期周波数は約59.94005995Hz(理論値)です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetMode">sceDisplaySetMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_DISPLAY_MODE_VESA1A"></a>
<table width="100%"><td width="70%"><font size=6>SCE_DISPLAY_MODE_VESA1A<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VESA1A(VGA)出力モード定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
#define	SCE_DISPLAY_MODE_VESA1A		0x1A

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VESA1A(VGA)出力モードを表す定数です。<br><br>PSP&reg;開発ツールからVESA 1A (VGA)に出力する場合に<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetMode">sceDisplaySetMode</a>()で指定します。PSP&reg;実機では使用できません。<br>VESA1A(VGA)出力時の最大表示領域は640(W) x 480(H)ピクセルです。垂直同期周波数は約59.94047618Hz(理論値)で、LCD出力モードとは異なります。<br><br>SCE_DISPLAY_MODE_VESA1Aと<a href="../peripheral/Display-Reference-Japanese.htm#SCE_DISPLAY_MODE_PSEUDO_VGA">SCE_DISPLAY_MODE_PSEUDO_VGA</a>との違いは、垂直同期周波数とピクセルのドットクロックにあります。SCE_DISPLAY_MODE_VESA1AではVESA1Aのドットクロックで出力が可能されるため、ピクセルの形状は一般的なVGAと同じですがLCD出力時と垂直同期周波数が変化します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetMode">sceDisplaySetMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_DISPLAY_MODE_PSEUDO_VGA"></a>
<table width="100%"><td width="70%"><font size=6>SCE_DISPLAY_MODE_PSEUDO_VGA<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>擬似VGA出力モード定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
#define	SCE_DISPLAY_MODE_PSEUDO_VGA		0x60

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">LCD出力モードを表す定数です。<br><br>PSP&reg;開発ツールから擬似VGAとして出力する場合に<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetMode">sceDisplaySetMode</a>()で指定します。PSP&reg;実機では使用できません。<br>擬似VGA出力時の最大表示領域は640(W) x 480(H)ピクセルです。垂直同期周波数は約59.94005995Hz(理論値)で、LCD出力モードと同じです。<br><br>SCE_DISPLAY_MODE_PSEUDO_VGAと<a href="../peripheral/Display-Reference-Japanese.htm#SCE_DISPLAY_MODE_VESA1A">SCE_DISPLAY_MODE_VESA1A</a>との違いは、垂直同期周波数とピクセルのドットクロックにあります。SCE_DISPLAY_MODE_PSEUDO_VGAを使用するとドットクロックがVESA1A準拠ではなくなってしまいますが、LCD出力時と同じ垂直同期周波数が得られます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetMode">sceDisplaySetMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_DISPLAY_PIXEL_RGB565"></a>
<table width="100%"><td width="70%"><font size=6>SCE_DISPLAY_PIXEL_RGB565<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>RGB565 16ビットカラー出力モード定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
#define	SCE_DISPLAY_PIXEL_RGB565		0

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ピクセルフォーマットR:G:B=5:6:5での出力を表す定数です。<br><br>ピクセルフォーマットR:G:B=5:6:5で描画されている画像を表示出力する場合に、<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()で指定します。<br>ピクセルデータ内のR,G,Bのアサインは以下の通りです。<br><br></div>

<div style="margin-left:50px;">
<p>
<img src="gif/Display-Reference-Japanese001.gif">
</div>
<div style="margin-left:50px;"><br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_DISPLAY_PIXEL_RGBA5551"></a>
<table width="100%"><td width="70%"><font size=6>SCE_DISPLAY_PIXEL_RGBA5551<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>RGBA5551 16ビットカラー出力モード定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
#define	SCE_DISPLAY_PIXEL_RGBA5551		1

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ピクセルフォーマットR:G:B:A=5:5:5:1での出力を表す定数です。<br><br>ピクセルフォーマットR:G:B:A=5:5:5:1で描画されている画像を表示出力する場合に、<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()で指定します。<br>ピクセルデータ内のR,G,B,Aのアサインは以下の通りです。<br><br></div>

<div style="margin-left:50px;">
<p>
<img src="gif/Display-Reference-Japanese002.gif">
</div>
<div style="margin-left:50px;"><br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_DISPLAY_PIXEL_RGBA4444"></a>
<table width="100%"><td width="70%"><font size=6>SCE_DISPLAY_PIXEL_RGBA4444<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>RGBA4444 16ビットカラー出力モード定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
#define	SCE_DISPLAY_PIXEL_RGBA4444		2

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ピクセルフォーマットR:G:B:A=4:4:4:4での出力を表す定数です。<br><br>ピクセルフォーマットR:G:B:A=4:4:4:4で描画されている画像を表示出力する場合に、<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()で指定します。<br>ピクセルデータ内のR,G,B,Aのアサインは以下の通りです。<br><br></div>

<div style="margin-left:50px;">
<p>
<img src="gif/Display-Reference-Japanese003.gif">
</div>
<div style="margin-left:50px;"><br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_DISPLAY_PIXEL_RGBA8888"></a>
<table width="100%"><td width="70%"><font size=6>SCE_DISPLAY_PIXEL_RGBA8888<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>RGBA8888 32ビットカラー出力モード定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
#define	SCE_DISPLAY_PIXEL_RGBA8888		3

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ピクセルフォーマットR:G:B:A=8:8:8:8での出力を表す定数です。<br><br>ピクセルフォーマットR:G:B:A=8:8:8:8で描画されている画像を表示出力する場合に、<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()で指定します。<br>ピクセルデータ内のR,G,B,Aのアサインは以下の通りです。<br><br></div>

<div style="margin-left:50px;">
<p>
<img src="gif/Display-Reference-Japanese004.gif">
</div>
<div style="margin-left:50px;"><br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplaySetMode"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplaySetMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>LCDコントローラのモード設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplaySetMode</b> (
	int <i>iMode</i>,
	int <i>iDisplayWidth</i>,
	int <i>iDisplayHeight</i>,
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフではない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iMode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;画面モード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iDisplayWidth</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;画面表示される横幅ピクセル数（ピクセル数は8の倍数）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iDisplayHeight</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;画面表示される縦ライン数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;"><i><b>iMode</i>に指定できる値</b><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>意味</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/Display-Reference-Japanese.htm#SCE_DISPLAY_MODE_LCD">SCE_DISPLAY_MODE_LCD</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LCD出力モード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/Display-Reference-Japanese.htm#SCE_DISPLAY_MODE_VESA1A">SCE_DISPLAY_MODE_VESA1A</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;VESA1A(VGA)出力モード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/Display-Reference-Japanese.htm#SCE_DISPLAY_MODE_PSEUDO_VGA">SCE_DISPLAY_MODE_PSEUDO_VGA</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;擬似VGA出力モード&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;成功&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_MODE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;画面モードを指定する引数<i>mode</i>が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレームバッファサイズを指定する引数&nbsp;&nbsp;<br>&nbsp;&nbsp;<i>iWidth</i>, <i>iHeight</i>が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_FORMAT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ピクセルフォーマットを指定する引数&nbsp;&nbsp;<br>&nbsp;&nbsp;<i>iPixelFormat</i>が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_CPUDI&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;CPUが割り込み禁止状態で呼び出し&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;その他のエラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">LCDコントローラに画面モードを設定する関数です。<br><br>画面モードの切り替えはVBLANK期間中の早いタイミングで行う必要があります。VBLANK期間外または、VBLANK期間終了間際に画面モードの切り替えを行おうとすると、次のVBLANK期間の開始まで実行が遅延します。このとき、sceDisplaySetMode()関数は約1Vの間、ブロックします。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayGetMode">sceDisplayGetMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayGetMode"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayGetMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>LCDコントローラモードの取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplayGetMode</b> (
	int *<i>piMode</i>,
	int *<i>piDisplayWidth</i>,
	int *<i>piDisplayHeight</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフではない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piMode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;画面モードを受け取るint型変数へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piDisplayWidth</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;表示横幅ピクセル数を受け取るint型変数へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piDisplayHeight</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;表示縦ライン数を受け取るint型変数へのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;成功&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">現在設定されている画面モードを取得する関数です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetMode">sceDisplaySetMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayGetFramePerSec"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayGetFramePerSec<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>秒間フレーム数の取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
float <b>sceDisplayGetFramePerSec</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">現在の画面モードでの秒間フレーム数を取得します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">現在の画面モードにおける秒間フレーム数の理論値を取得する関数です。<br><br>sceDisplayGetFramePerSec()関数の返す値は理論値であり、実時間に対しては誤差があることに注意してください。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplaySetFrameBuf"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplaySetFrameBuf<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレームバッファのベースアドレス更新<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplaySetFrameBuf</b> (
	const void *<i>pFrameBuf</i>,
	int <i>iFrameWidth</i>,
	int <i>iPixelFormat,</i>
	int <i>iMode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pFrameBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレームバッファの先頭アドレス（NULLのときブラックアウト出力）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iFrameWidth</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレームバッファの横幅ピクセル数&nbsp;&nbsp;<br>&nbsp;&nbsp;（64の倍数。<i>pFrameBuf</i>がNULLのときには0を指定）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iPixelFormat</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレームバッファのピクセルフォーマット&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iMode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレームバッファの先頭アドレス更新タイミングの指定&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;"><i><b>iPixelFormat</i>に指定できる値</b><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>意味</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/Display-Reference-Japanese.htm#SCE_DISPLAY_PIXEL_RGBA8888">SCE_DISPLAY_PIXEL_RGBA8888</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;32ビットカラー(R:G:B:A=8:8:8:8)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/Display-Reference-Japanese.htm#SCE_DISPLAY_PIXEL_RGB565">SCE_DISPLAY_PIXEL_RGB565</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;16ビットカラー(R:G:B=5:6:5)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/Display-Reference-Japanese.htm#SCE_DISPLAY_PIXEL_RGBA5551">SCE_DISPLAY_PIXEL_RGBA5551</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;16ビットカラー(R:G:B:A=5:5:5:1)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/Display-Reference-Japanese.htm#SCE_DISPLAY_PIXEL_RGBA4444">SCE_DISPLAY_PIXEL_RGBA4444</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;16ビットカラー(R:G:B:A=4:4:4:4)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><i><b>iMode</i>に指定できる値</b><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>意味</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_DISPLAY_UPDATETIMING_NEXTHSYNC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;次のHSYNCで更新&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_DISPLAY_UPDATETIMING_NEXTVSYNC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;次のVBLANK期間中に更新&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;成功&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_MODE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;更新タイミングを指定する引数<i>iMode</i>が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_POINTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレームバッファのベースアドレスを指定する&nbsp;&nbsp;<br>&nbsp;&nbsp;引数<i>pFrameBuf</i>が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数<i>iFrameWidth</i>に64の倍数が設定もしくは、&nbsp;&nbsp;<br>&nbsp;&nbsp;引数<i>pFrameBuf</i>にNULLが設定されているのに、&nbsp;&nbsp;<br>&nbsp;&nbsp;引数<i>iFrameWidth</i>には0以外を指定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;その他のエラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">LCDに表示するベースアドレス(左上の座標)、横幅ピクセル数、ピクセルフォーマットを設定する関数です。<br><br>フレームバッファの横幅ピクセル数またはピクセルフォーマットを変更する場合は、即時更新することができません。かならず、引数<i>iMode</i>にSCE_DISPLAY_UPDATETIMING_NEXTVSYNCを指定して、次のVBLANK期間での切り替えを指定してください。<br><br>引数<i>pFrameBuf</i>にNULLを設定したとき、ブラックアウト出力となります。このとき、引数<i>iFrameWidth</i>には0を指定してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayGetFrameBuf">sceDisplayGetFrameBuf</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayGetFrameBuf"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayGetFrameBuf<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレームバッファのベースアドレス取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplayGetFrameBuf</b> (
	const void **<i>ppFrameBuf</i>,
	int *<i>piFrameWidth</i>,
	int *<i>piPixelFormat,</i>
	int <i>iMode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ppFrameBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレームバッファアドレスを受け取るconst void *型変数へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piFrameWidth</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレームバッファの横幅ピクセル数を受け取るint型変数へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piPixelFormat</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレームバッファのピクセルフォーマットを受け取る&nbsp;&nbsp;<br>&nbsp;&nbsp;int型変数へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iMode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>ppFrameBuf</i>に取得するアドレスの指定&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;"><i><b>iMode</i>に指定できる値</b><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>意味</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;現在表示中のフレームバッファのアドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;次のVSYNCでフリップされる予定のフレームバッファのアドレス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;成功&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_MODE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;更新タイミングを指定する引数<i>mode</i>が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;その他のエラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">LCDに表示しているフレームバッファのベースアドレス(左上の座標)、横幅ピクセル数、ピクセルフォーマットを取得する関数です。<br><br>引数<i>iMode</i>に1を指定すると、<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()で次のVSYNCタイミングでの更新予約をしている場合のフレームバッファアドレスが取得できます。<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()関数の実行後にVSYNC割り込みで予約フリップが執行されると、再び新しいフレームバッファの更新が予約されない限り、現在表示中のフレームバッファと同じ値が返ります。<br>引数<i>iMode</i>に0を指定すると、常に現在表示中のフレームバッファアドレスが取得できます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayIsForeground"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayIsForeground<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレームバッファの表示状態取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplayIsForeground</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;表示されている&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;表示されていない&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()関数で指定したフレームバッファの表示状態を取得する関数です。<br><br>表示されている場合は1を返します。ただし、<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()関数でフレームバッファアドレスとしてNULLを指定した場合はブラックアウト出力されていますので、sceDisplayIsForeground()関数は0を返します。また、<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()関数で指定されたフレームバッファより優先した画面表示がシステムによって行われている場合にも0が返ります。<br>なお、sceDisplayIsForeground()関数でシステムによる優先表示を検出してゲームの動作を変えるような仕様を推奨しておりません。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetFrameBuf">sceDisplaySetFrameBuf</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplaySetHoldMode"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplaySetHoldMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>リブート時のフレームバッファ保持モード設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplaySetHoldMode</b> (
	int <i>iMode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフではない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iMode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リブート時のフレームバッファ保持モード&nbsp;&nbsp;<br>&nbsp;&nbsp;0= リブート時にブラックアウト(デフォルト)&nbsp;&nbsp;<br>&nbsp;&nbsp;1= リブート時に表示中のフレームバッファを保持&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;成功&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">次回の<a href="../kernel/Loadexec-Reference-Japanese.htm#sceKernelLoadExec">sceKernelLoadExec</a>()実行時、表示中のフレームバッファを保持したまま次のアプリケーションに遷移するかどうか設定します。フレームバッファを保持したままにすることでブラックアウト時間を短くすることができます。フレームバッファを保持したままリブートを行うためには、フレームバッファをGraphics Engine eDRAMの先頭に配置し、横幅を512ピクセルとして定義しておく必要があります。<br><br>フレームバッファを保持するモードを選択した場合、2MiBのGraphics Engine eDRAMのうち、先頭から1920KiBの内容は消去されずに次のアプリケーションに引き継がれます。2MiBのうちの最後の128KiBは必ず消去されます。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayGetVcount"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayGetVcount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VSYNCカウント数を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplayGetVcount</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;=0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vカウント数を返します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">フリーランでVSYNCごとにカウントされている値を返す関数です。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayIsVblank"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayIsVblank<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VBLANK期間判別<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplayIsVblank</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;VBLANK期間中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;VBLANK期間外&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VBLANK期間中であるか調べる関数です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankStart">sceDisplayWaitVblankStart</a>(), <a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankStartCB">sceDisplayWaitVblankStartCB</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayWaitVblank"></a><a name="sceDisplayWaitVblankCB"></a>
<a name="sceDisplayWaitVblank / sceDisplayWaitVblankCB"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayWaitVblank / sceDisplayWaitVblankCB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>スレッドのVBLANK期間外待機<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplayWaitVblank</b> (
	void
);
int <b>sceDisplayWaitVblankCB</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;正常終了&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VBLANK期間になるまでスレッドをWAIT状態にする関数です。<br><br>sceDisplayWaitVblank()/sceDisplayWaitVblankCB()関数を呼び出した時にVBLANK期間外の場合、スレッドはWAIT状態になります。VBLANK期間であった場合は何もせずに戻ります。<br>sceDisplayWaitVblank()関数ではWAIT中にスレッドマネージャのコールバックを実行しません。WAIT中にコールバックの処理を行わせたい場合にはsceDisplayWaitVblankCB()関数を使用してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankStart">sceDisplayWaitVblankStart</a>(), <a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankStartCB">sceDisplayWaitVblankStartCB</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayWaitVblankStart"></a><a name="sceDisplayWaitVblankStartCB"></a>
<a name="sceDisplayWaitVblankStart / sceDisplayWaitVblankStartCB"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayWaitVblankStart / sceDisplayWaitVblankStartCB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>スレッドのVBLANK期間開始待機<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplayWaitVblankStart</b> (
	void
);
int <b>sceDisplayWaitVblankStartCB</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;正常終了&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">次のVBLANK期間の開始までスレッドをWAIT状態にする関数です。<br><br>sceDisplayWaitVblankStart()/sceDisplayWaitVblankStartCB()関数を呼び出した時のVBLANK期間を問わず、スレッドは次のVBLANK期間の開始時までWAIT状態になります。<br>sceDisplayWaitVblankStart()関数ではWAIT中にスレッドマネージャのコールバックを実行しません。WAIT中にコールバックの処理も行わせたい場合にはsceDisplayWaitVblankStartCB()関数を使用してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblank">sceDisplayWaitVblank</a>(), <a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankCB">sceDisplayWaitVblankCB</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayWaitVblankStartMulti"></a><a name="sceDisplayWaitVblankStartMultiCB"></a>
<a name="sceDisplayWaitVblankStartMulti / sceDisplayWaitVblankStartMultiCB"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayWaitVblankStartMulti / sceDisplayWaitVblankStartMultiCB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>各スレッドごとの複数VBLANK期間開始待機<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplayWaitVblankStartMulti</b> (
	int <i>iVcount</i>
);
int <b>sceDisplayWaitVblankStartMultiCB</b> (
	int <i>iVcount</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVcount</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;待機するVSYNC周期の数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;正常終了&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">前回のVBLANK待ち関数の呼び出しより、指定VSYNC期間だけ経過した次のVBLANK期間の開始までスレッドをWAIT状態にする関数です。<br><br>VBLANK待ち関数<br><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblank">sceDisplayWaitVblank</a>() / <a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankCB">sceDisplayWaitVblankCB</a>(),<br><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankStart">sceDisplayWaitVblankStart</a>() / <a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankStartCB">sceDisplayWaitVblankStartCB</a>(),<br>sceDisplayWaitVblankStartMulti() / sceDisplayWaitVblankStartMultiCB()<br>では、スレッドを待ち状態から復帰させたときのVSYNCカウント値をスレッドごとに記録しています。<br>sceDisplayWaitVblankStartMulti() / sceDisplayWaitVblankStartMultiCB()関数では、スレッドごとに記録されていた、最後にVBLANK待ち状態から復帰したVSYNCカウント値より、指定VSYNCカウント数だけ経過した次のVBLANK期間までスレッドを待たせるという動作を行います。<br><br>例えば、sceDisplayWaitVblankStartMulti()関数を引数<i>iVcount</i>に2を指定して呼び出すと、前回の呼び出しより1VSYNC周期経過していなかった場合は次の次のVBLANK期間の開始まで待機、前回の呼び出しより1VSYNC周期経過後2VSYNC周期経過していなかった場合は次のVBLANK期間の開始まで待機、前回の呼び出しより2VSYNC周期以上経過していた場合は次のVBLANK期間の開始といった動作になり、処理落ちしない限りFPS固定の動作を行わせることができます。<br><br>sceDisplayWaitVblankStartMulti()関数ではWAIT中にスレッドマネージャのコールバックを実行しません。WAIT中にコールバックの処理も行わせたい場合にはsceDisplayWaitVblankStartMultiCB()関数を使用してください。<br><br>コールバック関数実行中にsceDisplayWaitVblankStartMulti() / sceDisplayWaitVblankStartMultiCB()関数を使用することは推奨されません。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblank">sceDisplayWaitVblank</a>(), <a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankCB">sceDisplayWaitVblankCB</a>(), <a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankStart">sceDisplayWaitVblankStart</a>(), <a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankStartCB">sceDisplayWaitVblankStartCB</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplaySetVblankCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplaySetVblankCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VBLANK割り込みコールバック関数登録<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplaySetVblankCallback</b> (
	int <i>idx</i>
	void (*<i>cbFunc</i>)(int, void *),
	void *<i>cookie</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り込み登録位置(0〜15)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cbFunc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバック関数の先頭アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cookie</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;クッキー値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;正常終了&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VBLANK期間の開始タイミングごとに呼び出される割り込みコールバック関数を設定する関数です。<br><br>割り込みコールバック関数は16本まで登録する事ができ、引数<i>idx</i>で指定された位置に登録されます。割り込みコールバック関数は登録された番号の若い順に呼び出されます。<br>割り込みコールバック関数を解除する場合には引数<i>cbFunc</i>にNULLを指定してください。<br>クッキー値はコールバック時の<a href="../peripheral/Display-Reference-Japanese.htm#vblankhandler">vblankhandler</a>()に渡され、主にコンテキスト判別に利用できます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#vblankhandler">vblankhandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="vblankhandler"></a>
<table width="100%"><td width="70%"><font size=6>vblankhandler<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VBLANK割り込みコールバック関数のプロトタイプ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>vblankhandler</b> (
	int <i>idx,</i>
	void *<i>cookie</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出されます。<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り込みコールバック登録位置(0〜15)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cookie</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバック登録時に設定されたクッキー値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VBLANK期間の開始タイミングで呼び出される割り込みコールバック関数のプロトタイプ宣言を行う関数です。<br><br>VBLANK割り込みコールバック関数は割り込みハンドラのコンテキストで呼び出されます。<br>16本の割り込みハンドラ関数は0, 1, 2, … 15という番号順で呼び出されます。<br>引数<i>cookie</i>は<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetVblankCallback">sceDisplaySetVblankCallback</a>()関数を呼び出した時に設定された値です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplaySetVblankCallback">sceDisplaySetVblankCallback</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayGetCurrentHcount"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayGetCurrentHcount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>HSYNCカウント値を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplayGetCurrentHcount</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;=0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;HSYNCカウント値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">LCDが表示中の1V単位でリセットされるHSYNCカウント値（Hライン数）を返す関数です。LCDの解像度は272ラインですが、VBLANK期間を含んだ1Vは286ラインで構成されます。ただし、サスペンド/レジューム等のタイミングではVSYNCに対する位相が変化して、一時的に1Vが286Hと異なる長さになる可能性があることに注意してください。<br><br>この関数は処理ごとの負荷を計測するなどの目的にのみ使用してください。ポーリングは使用方法を誤るとタイミング依存コードになってしまう可能性がありますので、ご注意ください。<br>なお、PSP&reg;ではラインバッファ経由で表示が行われるため、実際に表示されるより数Hライン早くフレームバッファのデータをあらかじめ先読みされます。このため、表示期間中にフレームバッファの内容を書き換えることは推奨しておりません。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayGetAccumulatedHcount">sceDisplayGetAccumulatedHcount</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDisplayGetAccumulatedHcount"></a>
<table width="100%"><td width="70%"><font size=6>sceDisplayGetAccumulatedHcount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>累積的なHSYNCカウント値を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;displaysvc.h&gt;
int <b>sceDisplayGetAccumulatedHcount</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;=0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;HSYNCカウント値(0x0000000〜0x7FFFFFFF)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">1V単位でリセットしない、累積的なHSYNCカウント数を返す関数です。<br><br>正常時の返り値は正の値となりますので、0x7FFFFFFFの次は0x00000000となります。<br>sceDisplayGetAccumulatedHcount()関数の戻り値の差分を使って経過時間を計測する場合は、下位31ビットのマスクを使うようにしてください。<br><br></div>
        <div style="margin-left:50px;"><pre><font size=3>	hstart = sceDisplayGetAccumulatedHcount();
		: (なんらかの処理)
	hend = sceDisplayGetAccumulatedHcount();
	hdiff = (hend - hstart) &amp; 0x7FFFFFFF;

</font></pre></div>
<div style="margin-left:50px;">この関数は処理ごとの負荷を計測するなどの目的にのみ使用してください。ポーリングは使用方法を誤るとタイミング依存コードになってしまう可能性がありますので、ご注意ください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayGetCurrentHcount">sceDisplayGetCurrentHcount</a>()<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2008 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
