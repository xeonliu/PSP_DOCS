<html lang="en">
<head>
<title>USB_Driver-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
USB Driver Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="USB Driver Activated and Deactivated States"></a>
<table width="100%"><td width="70%"><font size=6>USB Driver Activated and Deactivated States<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constants representing the USB driver activated and deactivated states<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_PLUGIN">SCE_USB_PLUGIN</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x01&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB driver is activated (plugged in)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_PLUGOUT">SCE_USB_PLUGOUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x02&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB driver is deactivated (plugged out)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the plugged in and plugged out states of the USB protocol driver. <br><br>They are used to retrieve the activated or deactivated (plugged in or plugged out) state of the USB driver from the return value of the <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetDrvState">sceUsbGetDrvState</a>(), specify the activated or deactivated (plugged in or plugged out) state to retrieve using the <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetDrvList">sceUsbGetDrvList</a>() function, etc.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#SceUsbDrvInfo">SceUsbDrvInfo</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetDrvList">sceUsbGetDrvList</a>(), <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetDrvState">sceUsbGetDrvState</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="USB Device Activated and Deactivated States"></a>
<table width="100%"><td width="70%"><font size=6>USB Device Activated and Deactivated States<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constants representing the USB device activated and deactivated states<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_DEACTIVATED">SCE_USB_DEACTIVATED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB device is deactivated&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ACTIVATED">SCE_USB_ACTIVATED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0200&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB device is activated&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ACT_MASK">SCE_USB_ACT_MASK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0F00&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mask for retrieving the activated or deactivated state of the USB device&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the bit positions representing the activated and deactivated states of USB devices. <br><br>They are used to retrieve the states from the USB device state retrieved by the <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetState">sceUsbGetState</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetState">sceUsbGetState</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="USB Cable Connection State"></a>
<table width="100%"><td width="70%"><font size=6>USB Cable Connection State<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constants representing the USB cable connection state<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_DISCONNECTED">SCE_USB_DISCONNECTED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB cable is disconnected&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_CONNECTED">SCE_USB_CONNECTED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0020&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB cable is connected&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_CONN_MASK">SCE_USB_CONN_MASK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x00F0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mask for retrieving the USB cable connection state&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants indicate the bits which represent the USB cable connection state. <br><br>They are used to retrieve the cable connection states from the USB device state retrieved by the <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetState">sceUsbGetState</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetState">sceUsbGetState</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="USB Specification State"></a>
<table width="100%"><td width="70%"><font size=6>USB Specification State<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constants representing the USB specification state<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_DEFAULT">SCE_USB_DEFAULT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Default and Address state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_CONFIGURED">SCE_USB_CONFIGURED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Configured state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_SUSPENDED">SCE_USB_SUSPENDED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Suspended state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_STATE_MASK">SCE_USB_STATE_MASK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x000F&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mask for retrieving the states in the USB specification&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants indicate the bits which represent the states in the USB specification. <br><br>They are used to retrieve the states from the USB device state retrieved by the <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetState">sceUsbGetState</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetState">sceUsbGetState</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USB_BUS_DRIVER_NAME"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USB_BUS_DRIVER_NAME<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB bus driver name constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_BUS_DRIVER_NAME">SCE_USB_BUS_DRIVER_NAME</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;&quot;USBBusDriver&quot;&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the name of the USB bus driver. <br><br>It is used when specifying the USB bus driver in the <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbStart">sceUsbStart</a>() and <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbStop">sceUsbStop</a>() functions.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbStart">sceUsbStart</a>(), <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbStop">sceUsbStop</a>()<br><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUsbDrvInfo"></a>
<table width="100%"><td width="70%"><font size=6>SceUsbDrvInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB protocol driver information<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
#define SCE_USB_MAX_DRV_NAME  32
typedef struct SceUsbDrvInfo {
	unsigned int <i>size</i>;
	char <i>name</i> [SCE_USB_MAX_DRV_NAME];
	int <i>state</i>;
	int <i>reserved</i>[2];
<b>} SceUsbDrvInfo;</b>

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Structure size (bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name </i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Driver name&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>state</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Plugged-in state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reserved</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reserved area&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros are placed in the <i>state</i> member.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGIN">SCE_USB_PLUGIN</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x01&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB protocol driver is plugged in&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGOUT">SCE_USB_PLUGOUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x02&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB protocol driver is plugged out&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents USB protocol driver information. <br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When using the <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetDrvList">sceUsbGetDrvList</a>() function, the <i>size</i> member must be set to sizeof(SceUsbDrvInfo).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGIN">SCE_USB_PLUGIN</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGOUT">SCE_USB_PLUGOUT</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbGetDrvList">sceUsbGetDrvList</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbStart"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbStart<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Activate USB driver<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbStart(</b>
	const char *<i>name</i>,
	unsigned int <i>args,</i>
	const void *<i>argp</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name </i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Name of USB driver to activate&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>args</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of data to pass to driver (bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>argp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to data to pass to driver&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 upon successful completion. <br>If an error occurs, one of the following error codes, or an error code defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_ALREADY">SCE_USB_ERROR_ALREADY</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOTAVAIL">SCE_USB_ERROR_NOTAVAIL</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOENT">SCE_USB_ERROR_NOENT</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_INPROGRESS">SCE_USB_ERROR_INPROGRESS</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_INVAL">SCE_USB_ERROR_INVAL</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function activates the USB bus driver or USB protocol driver which matches the name specified in the <i>name</i> argument. <br><br>To activate the USB bus driver, set the <i>name</i> argument to <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME">SCE_USB_BUS_DRIVER_NAME</a></a>. <br>In order to activate a USB protocol driver, first use the above method to activate the USB bus driver, and then call sceUsbStart() with the <i>name</i> argument set to the name of the USB protocol driver. <br>Depending on the USB protocol driver, it may be possible to use the <i>argp</i> argument to pass another piece of data besides the name. For details, refer to the USB protocol driver documentation.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">While a USB device is being activated by the <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbActivate">sceUsbActivate</a>() function, new USB drivers cannot be activated. <br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>// Activate the USB bus driver
if (sceUsbStart(<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME">SCE_USB_BUS_DRIVER_NAME</a></a>, 0, NULL) &lt; 0) {
	// Error handling
}
printf("USB Bus Driver start\n");

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbStop">sceUsbStop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbStop"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbStop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Deactivate the USB driver<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbStop(</b>
	const char *<i>name</i>,
	unsigned int <i>args,</i>
	const void *<i>argp</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Name of USB driver to deactivate&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>args</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of data to pass to driver (bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>argp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to data to pass to driver&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 upon successful completion. <br>If an error occurs, one of the following error codes, or an error code defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_ALREADY">SCE_USB_ERROR_ALREADY</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOTAVAIL">SCE_USB_ERROR_NOTAVAIL</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOENT">SCE_USB_ERROR_NOENT</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_INPROGRESS">SCE_USB_ERROR_INPROGRESS</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deactivates the USB driver that matches the name specified by the <i>name</i> argument. <br><br>To deactivate a USB driver, first deactivate the USB device using <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbDeactivate">sceUsbDeactivate</a>(). <br>Set the <i>name</i> argument to the name of the USB protocol driver which is to be deactivated, and call sceUsbStop(). <br>To deactivate the USB bus driver, first use the above method to deactivate all of the USB protocol drivers. Then set the name argument to <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME">SCE_USB_BUS_DRIVER_NAME</a></a>, and call sceUsbStop().<br>Depending on the USB protocol driver, it may be possible to use the <i>argp</i> argument to pass another piece of data besides the name. For details, refer to the USB protocol driver documentation.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">To unload a USB protocol driver, first use sceUsbStop() to deactivate the USB protocol driver to be unloaded.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>// Deactivate the USB bus driver
if (sceUsbStop(<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME">SCE_USB_BUS_DRIVER_NAME</a></a>, 0, NULL) &lt; 0) {
	// Error handling
}
printf("USB Bus Driver stop\n");

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbStart">sceUsbStart</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbActivate"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbActivate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Activate USB Device<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbActivate(</b>
	unsigned int <i>idProduct</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idProduct</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Product ID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 upon successful completion. <br>If an error occurs, one of the following error codes, or an error code defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_ALREADY">SCE_USB_ERROR_ALREADY</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOENT">SCE_USB_ERROR_NOENT</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOSPC">SCE_USB_ERROR_NOSPC</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOMEM">SCE_USB_ERROR_NOMEM</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_INPROGRESS">SCE_USB_ERROR_INPROGRESS</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_INVAL">SCE_USB_ERROR_INVAL</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOTAVAIL">SCE_USB_ERROR_NOTAVAIL</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function activates a USB device. <br><br>In order to activate a USB device, use <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbStart">sceUsbStart</a>() to activate the USB protocol driver which is to be used with the USB device. <br>Then call sceUsbActivate(), setting the <i>idProduct</i> argument to the product ID defined in each protocol's header file. The PSP&trade; will activate the USB device which has the specified product ID. For information regarding which product ID to specify, refer to the documentation for the respective protocol drivers. <br><br>If activation is successful, the <a href="../peripheral/USB_Driver-Reference-English.htm#USB Device Activated and Deactivated States">USB Device Activated and Deactivated States</a> will transition to <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ACTIVATED">SCE_USB_ACTIVATED</a>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Even if the USB cable is connected, the host will not recognize the USB device (PSP&trade;) unless the USB device is activated.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int idProduct = 0xFFFF;
if (sceUsbActivate(idProduct) &lt; 0) {
	// Error handling
} else {
	printf("success to activate\n");
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ACTIVATED">SCE_USB_ACTIVATED</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbDeactivate">sceUsbDeactivate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbDeactivate"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbDeactivate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Deactivate USB device<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbDeactivate(</b>
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 upon successful completion. <br>If an error occurs, one of the following error codes, or an error code defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_ALREADY">SCE_USB_ERROR_ALREADY</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_INPROGRESS">SCE_USB_ERROR_INPROGRESS</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOTAVAIL">SCE_USB_ERROR_NOTAVAIL</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deactivates a USB device. <br><br>If deactivation is successful, the USB Device Activated orDeactivated State will transition to <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DEACTIVATED">SCE_USB_DEACTIVATED</a>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the USB device is in the <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DEACTIVATED">SCE_USB_DEACTIVATED</a> state, it will appear to the host as though the USB cable is unplugged.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>if (sceUsbDeactivate() &lt; 0) {
	// Error handling
} else {
	printf("success to deactivate\n");
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DEACTIVATED">SCE_USB_DEACTIVATED</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbActivate">sceUsbActivate</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbGetState"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbGetState<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get USB device state<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
unsigned int <b>sceUsbGetState(</b>
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the logical sum of the three macros shown in the table below.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_ACTIVATED&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_USB_DEACTIVATED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#USB Device Activated and Deactivated States">USB Device Activated and Deactivated States</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_CONNECTED&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_USB_DISCONNECTED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#USB Cable Connection State">USB Cable Connection State</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_DEFAULT&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_USB_CONFIGURED&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_USB_SUSPENDED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#USB Specification State">USB Specification State</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function retrieves the USB device state. <br><br>This function can be used regardless of whether the USB bus driver is activated or deactivated.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>if ((sceUsbGetState() &amp; <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONN_MASK">SCE_USB_CONN_MASK</a>) == <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONNECTED">SCE_USB_CONNECTED</a>) {
	printf("USB cable is connected\n");
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ACTIVATED">SCE_USB_ACTIVATED</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DEACTIVATED">SCE_USB_DEACTIVATED</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ACT_MASK">SCE_USB_ACT_MASK</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONNECTED">SCE_USB_CONNECTED</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DISCONNECTED">SCE_USB_DISCONNECTED</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONN_MASK">SCE_USB_CONN_MASK</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DEFAULT">SCE_USB_DEFAULT</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONFIGURED">SCE_USB_CONFIGURED</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_SUSPENDED">SCE_USB_SUSPENDED</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_STATE_MASK">SCE_USB_STATE_MASK</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbGetDrvList"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbGetDrvList<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get list of loaded USB protocol drivers<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
unsigned int <b>sceUsbGetDrvList(</b>
	int <i>flag</i>;
	<a href="../peripheral/USB_Driver-Reference-English.htm#SceUsbDrvInfo">SceUsbDrvInfo</a> *<i>drvinfo_list</i>;
	int <i>max_num</i>;
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in aninterrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Plugged-in state flags&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>drvinfo_list</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to the <a href="../peripheral/USB_Driver-Reference-English.htm#SceUsbDrvInfo">SceUsbDrvInfo</a> array in which USB protocol driver information is to be returned&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max_num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of elements in the <a href="../peripheral/USB_Driver-Reference-English.htm#SceUsbDrvInfo">SceUsbDrvInfo</a> array indicated by the <i>drvinfo_list</i> argument&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">In the <i>flag</i> argument, specify the logical sum of the macros in the table shown below.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGIN">SCE_USB_PLUGIN</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x01&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Plugged-in USB protocol driver&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGOUT">SCE_USB_PLUGOUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x02&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Plugged-out USB protocol driver&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Upon successful completion, the number of USB protocol drivers corresponding to the flags specified in <i>flag</i> is returned.<br>If an error occurs, an error code defined in kerror.h, psperror.h, etc., is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function retrieves the information on the USB protocol drivers corresponding to the flags specified by the <i>flag</i> argument. <br><br>Before calling sceUsbGetDrvList(), be sure to set the <i>size</i> member of the <a href="../peripheral/USB_Driver-Reference-English.htm#SceUsbDrvInfo">SceUsbDrvInfo</a> structure to sizeof(<a href="../peripheral/USB_Driver-Reference-English.htm#SceUsbDrvInfo">SceUsbDrvInfo</a>). If the value of the <i>size</i> member is not sizeof(<a href="../peripheral/USB_Driver-Reference-English.htm#SceUsbDrvInfo">SceUsbDrvInfo</a>), an error (SCE_ERROR_INVALID_VALUE) will result. <br>To retrieve a list of the USB protocol drivers which are plugged in, specify <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGIN">SCE_USB_PLUGIN</a> in the <i>flag</i> argument. <br>To retrieve a list of the USB protocol drivers which are plugged out, specify <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGOUT">SCE_USB_PLUGOUT</a> in the <i>flag</i> argument. <br>To retrieve a list of all of the USB protocol drivers which are loaded, specify the logical sum of <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGIN">SCE_USB_PLUGIN</a> and <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGIN">SCE_USB_PLUGIN</a> in the <i>flag</i> argument. <br>Upon successful completion, this function returns the number of USB protocol drivers corresponding to the flags. Note that if the number of corresponding USB protocol drivers is greater than the value specified in the <i>max_num</i> argument, then the return value will be greater than <i>max_num</i>. <br>If 0 is specified in the <i>max_num</i> argument, then even if <i>drvinfo_list</i> is NULL, an error will not occur, and it will still be possible to retrieve from the return value the number of protocol drivers corresponding to the flags. <br>This function can be used regardless of whether the drivers are activated or deactivated.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
#define MAX_LIST_ITEM  10

<a href="../peripheral/USB_Driver-Reference-English.htm#SceUsbDrvInfo">SceUsbDrvInfo</a> drvinfo_list[MAX_LIST_ITEM];
int i, num;

// Initialize structure
for (i = 0; i &lt; MAX_LIST_ITEM; i++) {
	drvinfo_list[i].size = sizeof(<a href="../peripheral/USB_Driver-Reference-English.htm#SceUsbDrvInfo">SceUsbDrvInfo</a>);
}

// Retrieve list of plugged-in protocol drivers
num = sceUsbGetDrvList(<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGIN">SCE_USB_PLUGIN</a>, drvinfo_list, MAX_LIST_ITEM);
if (num &lt; 0) {
	// Error handling
} else if (num == 0) {
	printf("No Plug-In driver\n"); 
} else {
	printf("%d Plug-In drivers\n", num);
	num = num &gt; MAX_LIST_ITEM ? MAX_LIST_ITEM : num;
	for (i = 0; i &lt; num; i++) {
		printf("No.%d : %s\n", i, drvinfo_list[i].name);
	}
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGIN">SCE_USB_PLUGIN</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGOUT">SCE_USB_PLUGOUT</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SceUsbDrvInfo">SceUsbDrvInfo</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbGetDrvState"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbGetDrvState<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get USB driver activation state<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbGetDrvState(</b>
	const char <i>*name</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Name of USB driver whose activation state is to be retrieved&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_PLUGIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB driver is activated (plugged in)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_PLUGOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB driver is deactivated (plugged out)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_ERROR_NOENT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A USB driver with the name specified in the <i>name</i> argument is not registered.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Others&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Refer to the error codes defined in kerror.h or psperror.h.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function retrieves the <a href="../peripheral/USB_Driver-Reference-English.htm#USB Driver Activated and Deactivated States">USB Driver Activated and Deactivated States</a> that matches the name specified by the <i>name</i> argument. <br><br>To retrieve the activated or deactivated state of the USB bus driver, set the <i>name</i> argument to <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME">SCE_USB_BUS_DRIVER_NAME</a></a>. <br>To retrieve the activated or deactivated state of a USB protocol driver, set the <i>name</i> argument to the name of the USB protocol driver. <br>This function can be used regardless of whether the USB bus driver is activated or deactivated.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;

// Retrieve the activation state of the USB bus driver
if ((ret = sceUsbGetDrvState(<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_BUS_DRIVER_NAME">SCE_USB_BUS_DRIVER_NAME</a></a>)) &lt; 0) {
	// Error handling
} else if (ret == <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGIN">SCE_USB_PLUGIN</a>) {
	printf("USB Bus Driver is starting\n");
} else {
	printf("USB Bus Driver is stopping\n");
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGIN">SCE_USB_PLUGIN</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_PLUGOUT">SCE_USB_PLUGOUT</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbWaitState"></a><a name="sceUsbWaitStateCB"></a>
<a name="sceUsbWaitState / sceUsbWaitStateCB"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbWaitState / sceUsbWaitStateCB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Wait for any USB device state<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbWaitState(</b>
	unsigned int <i>state,</i>
	int <i>waitmode,</i>
	unsigned int <i>*timeout</i>
);
int <b>sceUsbWaitStateCB(</b>
	unsigned int <i>state,</i>
	int <i>waitmode,</i>
	unsigned int <i>*timeout</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>state</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Device state on which cancellation of the wait is to be conditioned&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>waitmode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Wait mode&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>timeout</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to an unsigned int variable storing the maximum wait time (usec)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">Set the <i>state</i> argument to the logical sum of the macros in the table shown below.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DEFAULT">SCE_USB_DEFAULT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Default and Address state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONFIGURED">SCE_USB_CONFIGURED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Configured state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_SUSPENDED">SCE_USB_SUSPENDED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Suspended state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DISCONNECTED">SCE_USB_DISCONNECTED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB cable is disconnected&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONNECTED">SCE_USB_CONNECTED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0020&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB cable is connected&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DEACTIVATED">SCE_USB_DEACTIVATED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB device is deactivated&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ACTIVATED">SCE_USB_ACTIVATED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0200&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB device is activated&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">Set the value of the <i>waitmode</i> argument to the macros in the table shown below.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>State</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_KERNEL_EW_AND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AND wait&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_KERNEL_EW_OR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;OR wait&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Upon successful completion, the USB device state is returned as the logical sum of the macros in the table shown below.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_DEFAULT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Default and Address state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_CONFIGURED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Configured state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_SUSPENDED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Suspended state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_DISCONNECTED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB cable is disconnected&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_CONNECTED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0020&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB cable is connected&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_DEACTIVATED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB device is deactivated&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USB_ACTIVATED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x0200&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The USB device is activated&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">If an error occurs, one of the following error codes, or an error code defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_INVAL">SCE_USB_ERROR_INVAL</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOTAVAIL">SCE_USB_ERROR_NOTAVAIL</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_TIMEOUT">SCE_USB_ERROR_TIMEOUT</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_CANCELED">SCE_USB_ERROR_CANCELED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These functions enter a wait state until the USB device transitions to a state which satisfies the specified conditions. sceUsbWaitState() enters a wait state in which a callback function cannot be executed, and sceUsbWaitState() enters a wait state in which a callback function can be executed.<br><br>Use these functions with the USB bus driver in the activated state.<br>For the <i>state</i> argument, the logical sum of the macros representing the USB device state can be specified.<br>If the <i>waitmode</i> argument is SCE_KERNEL_EW_OR, the function will wait until there is a transition to any one of the states specified by the <i>state</i> argument (OR wait).<br>If it is SCE_KERNEL_EW_AND, the function will wait until there is a transition to a state which satisifes all of the specified states (AND wait). In an AND wait, if the <i>state</i> argument represents an impossible state (for example, the logical sum of <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONNECTED">SCE_USB_CONNECTED</a> and <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DISCONNECTED">SCE_USB_DISCONNECTED</a>), <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_INVAL">SCE_USB_ERROR_INVAL</a> will be returned.<br>Either a timeout occurs or, if the conditions for cancellation of the wait are satisfied, the wait state is canceled and the remaining time is placed in the variable indicated by <i>timeout</i>. If a timeout occurs, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_TIMEOUT">SCE_USB_ERROR_TIMEOUT</a> will be returned. If the conditions for cancellation of the wait are satisfied, the device state at that time will be returned.<br>If set <i>timeout</i> argument is set to NULL, the function will wait indefinitely.<br>If the wait state is canceled using <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbWaitCancel">sceUsbWaitCancel</a>(), <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_CANCELED">SCE_USB_ERROR_CANCELED</a> will be returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define TIMEOUT 5000000  // 5sec
unsigned int timeout = TIMEOUT;
int ret;

while (1) {
	// To wait for the USB cable to be connected
	ret = sceUsbWaitState(<a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONNECTED">SCE_USB_CONNECTED</a>,
			    SCE_KERNEL_EW_AND, &amp;timeout);
	if (ret &lt; 0) {
		if (ret == <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_TIMEOUT">SCE_USB_ERROR_TIMEOUT</a>) {
			timeout = TIMEOUT;
		} else {
			// Error handling
			return -1;
		}
	} else {
		break;
	}
} 
printf("USB cable is connected\n");

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ACTIVATED">SCE_USB_ACTIVATED</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DEACTIVATED">SCE_USB_DEACTIVATED</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ACT_MASK">SCE_USB_ACT_MASK</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONNECTED">SCE_USB_CONNECTED</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DISCONNECTED">SCE_USB_DISCONNECTED</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONN_MASK">SCE_USB_CONN_MASK</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_DEFAULT">SCE_USB_DEFAULT</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_CONFIGURED">SCE_USB_CONFIGURED</a>, <a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_SUSPENDED">SCE_USB_SUSPENDED</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_STATE_MASK">SCE_USB_STATE_MASK</a><br><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbWaitCancel">sceUsbWaitCancel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbWaitCancel"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbWaitCancel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Cancel wait for any USB device state<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbWaitCancel(</b>
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 upon successful completion. <br>If an error occurs, one of the following error codes is returned.<br><br><a href="../peripheral/USB_Driver-Reference-English.htm#SCE_USB_ERROR_NOTAVAIL">SCE_USB_ERROR_NOTAVAIL</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function cancels the wait state of <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbWaitState">sceUsbWaitState</a>() and <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbWaitStateCB">sceUsbWaitStateCB</a>().<br><br>Use these functions with the USB bus driver in the activated state.<br>If multiple threads are in the wait state of <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbWaitState">sceUsbWaitState</a>(), all of the thread wait states will be canceled.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">To cancel only the wait state of one particular thread, employ a method such as using the timeout in <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbWaitState">sceUsbWaitState</a>() and then not entering the wait state after the timeout has occurred.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>if (sceUsbWaitCancel() &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbWaitState">sceUsbWaitState</a>(), <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbWaitStateCB">sceUsbWaitStateCB</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Error codes returned by USB bus driver<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ERROR_OK">SCE_USB_ERROR_OK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x00000000&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ERROR_ALREADY">SCE_USB_ERROR_ALREADY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Already processed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ERROR_INVAL">SCE_USB_ERROR_INVAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Argument is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ERROR_NOSPC">SCE_USB_ERROR_NOSPC</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No space in hardware resources&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ERROR_NOMEM">SCE_USB_ERROR_NOMEM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory is insufficient&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ERROR_NOENT">SCE_USB_ERROR_NOENT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Not even one USB protocol driver is plugged in&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ERROR_INPROGRESS">SCE_USB_ERROR_INPROGRESS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243006&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Processing already in progress&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ERROR_NOTAVAIL">SCE_USB_ERROR_NOTAVAIL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243007&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cannot currently be used&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ERROR_TIMEOUT">SCE_USB_ERROR_TIMEOUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243008&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timed out&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USB_ERROR_CANCELED">SCE_USB_ERROR_CANCELED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243009&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Canceled&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2005 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
