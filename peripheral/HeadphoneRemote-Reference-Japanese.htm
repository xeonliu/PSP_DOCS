<html lang="jp">
<head>
<title>HeadphoneRemote-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
ヘッドホンリモコンドライバ
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_HPRM_KEY_PLAY_PAUSE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_HPRM_KEY_PLAY_PAUSE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>PLAY/PAUSEキー<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
#define SCE_HPRM_KEY_PLAY_PAUSE		0x00000001

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">リモコンPLAY/PAUSEキーの押し下げに対応するビット<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_HPRM_KEY_FF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_HPRM_KEY_FF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>FFキー<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
#define SCE_HPRM_KEY_FF			0x00000004

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">リモコンFFキーの押し下げに対応するビット<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_HPRM_KEY_FR"></a>
<table width="100%"><td width="70%"><font size=6>SCE_HPRM_KEY_FR<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>FRキー<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
#define SCE_HPRM_KEY_FR			0x00000008

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">リモコンFRキーの押し下げに対応するビット<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_HPRM_KEY_HOLD"></a>
<table width="100%"><td width="70%"><font size=6>SCE_HPRM_KEY_HOLD<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>HOLDスイッチ<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
#define SCE_HPRM_KEY_HOLD	0x00000080

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">リモコンHOLDスイッチに対応するビット<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHprmLatch"></a>
<table width="100%"><td width="70%"><font size=6>SceHprmLatch<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヘッドホンリモコンラッチ情報<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
typedef struct SceHprmLatch {
	unsigned int <i>uiMake</i>;	/* リリース&rarr;プレス変化(押し下げ開始) */
	unsigned int <i>uiBreak</i>;	/* プレス&rarr;リリース変化(押し下げ終了) */
	unsigned int <i>uiPress</i>;	/* プレス状態変化　　　　　　　      */
	unsigned int <i>uiRelease</i>;	/* リリース状態変化　　　　　　　　　*/
} <b>SceHprmLatch</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiMake</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プレス開始(リリース終了)履歴&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBreak</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プレス終了(リリース開始)履歴&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiPress</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プレス状態になった履歴&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiRelease</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リリース状態になった履歴&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ヘッドホンリモコンのボタン状態のラッチ表現する構造体です。論理はすべて正論理です。<br><br>ヘッドホンリモコンドライバは、<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmPeekLatch">sceHprmPeekLatch</a>() / <a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmReadLatch">sceHprmReadLatch</a>()関数のためのラッチ情報をシステムでグローバルに保持しています。ラッチ情報は<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmReadLatch">sceHprmReadLatch</a>()関数の呼び出しのたびにクリアされます。つまり、ラッチ情報を表現するSceHprmLatch構造体は、前回の<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmReadLatch">sceHprmReadLatch</a>()関数呼び出し以降に変化したボタンの状態変化を記録している情報ととらえらることができます。<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmPeekLatch">sceHprmPeekLatch</a>()関数を用いると、ラッチ情報をクリアせずに読み出すことができます。<br><br>ボタンの押し下げイベントは、各ビットの組み合わせより以下のような意味が返されます。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>make</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>break</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>press</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>release</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>意味</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>詳細</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>取得時</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リリース状態が&nbsp;&nbsp;<br>&nbsp;&nbsp;継続&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボタンは前回から継続して&nbsp;&nbsp;<br>&nbsp;&nbsp;リリースされている。&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リリース&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;１&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プレス状態が&nbsp;&nbsp;<br>&nbsp;&nbsp;継続&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボタンは前回から継続して&nbsp;&nbsp;<br>&nbsp;&nbsp;プレスされている。&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;１&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;１&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リリース状態へ&nbsp;&nbsp;<br>&nbsp;&nbsp;移行&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボタンは前回のプレス状態&nbsp;&nbsp;<br>&nbsp;&nbsp;からリリースされ、その後&nbsp;&nbsp;<br>&nbsp;&nbsp;リリース状態が継続されて&nbsp;&nbsp;<br>&nbsp;&nbsp;いる。&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リリース&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;１&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;１&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リリース状態へ&nbsp;&nbsp;<br>&nbsp;&nbsp;移行&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボタンは継続していた&nbsp;&nbsp;<br>&nbsp;&nbsp;プレス状態からリリース&nbsp;&nbsp;<br>&nbsp;&nbsp;され、その後リリース状態&nbsp;&nbsp;<br>&nbsp;&nbsp;が継続されている。&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リリース&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;１&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プレス状態へ&nbsp;&nbsp;<br>&nbsp;&nbsp;移行&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボタンは前回のリリース&nbsp;&nbsp;<br>&nbsp;&nbsp;状態からプレスされ、&nbsp;&nbsp;<br>&nbsp;&nbsp;その後プレス状態が継続&nbsp;&nbsp;<br>&nbsp;&nbsp;されている。&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;１&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;１&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プレス状態へ&nbsp;&nbsp;<br>&nbsp;&nbsp;移行&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボタンは継続していた&nbsp;&nbsp;<br>&nbsp;&nbsp;リリース状態からプレス&nbsp;&nbsp;<br>&nbsp;&nbsp;され、その後はプレス状態&nbsp;&nbsp;<br>&nbsp;&nbsp;が継続されている。&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;１&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;１&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プレス・&nbsp;&nbsp;<br>&nbsp;&nbsp;リリース&nbsp;&nbsp;<br>&nbsp;&nbsp;相互移行&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボタンはプレスとリリース&nbsp;&nbsp;<br>&nbsp;&nbsp;の両方の状態になった。&nbsp;&nbsp;<br>&nbsp;&nbsp;(順序はわからない)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;不明&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmPeekLatch">sceHprmPeekLatch</a>(), <a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmReadLatch">sceHprmReadLatch</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_HPRM_CALLBACKSLOT_AUTO"></a>
<table width="100%"><td width="70%"><font size=6>SCE_HPRM_CALLBACKSLOT_AUTO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヘッドホンリモコンコールバックのスロット自動検索<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotesvc.h&gt;
#define SCE_HPRM_CALLBACKSLOT_AUTO	-1

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>()でコールバックを登録する時、スロット番号を空きスロットから自動的に検索することを指定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="hprmcallback"></a>
<table width="100%"><td width="70%"><font size=6>hprmcallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヘッドホンリモコン通知コールバックのプロトタイプ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>hprmcallback</b> (
	int <i>count</i>,
	int <i>arg</i>
	void <i>*common</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>count</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバック呼び出し回数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバック引数&nbsp;&nbsp;<br>&nbsp;&nbsp;bit 0: ヘッドホン(1=あり, 0=なし)&nbsp;&nbsp;<br>&nbsp;&nbsp;bit 1: ヘッドホンリモコン(1=あり, 0=なし)&nbsp;&nbsp;<br>&nbsp;&nbsp;bit 2: マイク(1=あり, 0=なし)&nbsp;&nbsp;<br>&nbsp;&nbsp;bit 3〜31: Reserved&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>common</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックのクッキー値&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../kernel/Thread_Manager-Reference-Japanese.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>()関数によって与えられた値が渡されます&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常に0を返してください。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ヘッドホンリモコンの接続状態/キー押し下げ状態などに変化が生じたときに通知されるコールバック関数のプロトタイプです。ヘッドホンリモコンドライバから通知コールバックを受け取りたい場合は、<a href="../kernel/Thread_Manager-Reference-Japanese.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>()によって生成したコールバックのSceUID値を<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>()関数によって登録してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>(), <a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmUnregisterCallback">sceHprmUnregisterCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmRegisterCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmRegisterCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヘッドホンリモコン通知コールバックの登録<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmRegisterCallback</b> (
	int <i>slot</i>,
	SceUID <i>uidCb</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>slot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバック登録スロット(0〜15または<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SCE_HPRM_CALLBACKSLOT_AUTO">SCE_HPRM_CALLBACKSLOT_AUTO</a>)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uidCb</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックUID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;０&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;成功(引数<i>slot</i>で0〜15のスロット番号を与えた時)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0〜15&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;成功。自動的に割り当てられたスロット番号&nbsp;&nbsp;<br>&nbsp;&nbsp;(引数<i>slot</i>で<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SCE_HPRM_CALLBACKSLOT_AUTO">SCE_HPRM_CALLBACKSLOT_AUTO</a>を与えた時)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ヘッドホンリモコンの接続状態/キー押し下げ状態などに変化が生じたときに通知されるコールバックの登録を行います。あらかじめ<a href="../kernel/Thread_Manager-Reference-Japanese.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>()でコールバックを生成し、コールバックUIDをsceHprmRegisterCallback()関数でヘッドホンリモコンドライバに登録することで、以降ヘッドホンリモコン関連の変化があったときにコールバックが発生します。コールバック関数は、それぞれ生成されたスレッドがコールバックつきの待ち状態に入ったとき、それぞれのスレッドのコンテキストで呼び出されます。<br>コールバックは16個まで登録する事ができ、引数<i>slot</i>で指定された位置に登録されます。ひとつのスロット位置にはひとつのコールバックUIDのみが登録可能です。<br>引数<i>slot</i>に<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SCE_HPRM_CALLBACKSLOT_AUTO">SCE_HPRM_CALLBACKSLOT_AUTO</a>を与えた場合、自動的に空きスロットが検索され、返り値で割り当てられたスロット番号が返されます。<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmUnregisterCallback">sceHprmUnregisterCallback</a>()でコールバックの登録を解除する場合はこのスロット番号を使用してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmUnregisterCallback">sceHprmUnregisterCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmUnregisterCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmUnregisterCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヘッドホンリモコン通知コールバックの登録削除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmUnregisterCallback</b> (
	int <i>slot</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>slot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバック登録スロット(0〜15)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーのとき負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;０&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;成功&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>()で登録したコールバックの登録解除を行います。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmRegisterCallback">sceHprmRegisterCallback</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmPeekLatch"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmPeekLatch<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ラッチされた変化点の取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmPeekLatch</b> (
	<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SceHprmLatch">SceHprmLatch</a> *<i>pLatch</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pLatch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ラッチ情報を受け取るバッファ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">最後に<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmReadLatch">sceHprmReadLatch</a>()関数を呼び出してから、サンプリングが行われた回数を返します。<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ヘッドホンリモコンドライバは、キー通知パケットが到着するごとにキー押し下げ状態を比較し、前回のキー押し下げ状態と比較し、キーのダウン(down)、キーのリリース(up)などのイベント発生を記憶します。各キーのイベントは押し下げ(プッシュ)を1とする正論理で記憶されます。<br>sceHprmPeekLatch()関数はヘッドホンリモコンドライバ内に保存されたキー押し下げのラッチ情報を読み出します。ラッチ情報のクリアは行いません。ラッチ情報のクリアは<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmReadLatch">sceHprmReadLatch</a>()関数で行われます。<br><br>ヘッドホンリモコンドライバは、sceHprmPeekLatch() / <a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmReadLatch">sceHprmReadLatch</a>()関数のためのラッチ情報をシステムでグローバルに保持しています。つまり<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmReadLatch">sceHprmReadLatch</a>()関数を使用するスレッドはただ1つでなくてはなりません。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmReadLatch">sceHprmReadLatch</a>(), <a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmReadLatch"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmReadLatch<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ラッチされた変化点の取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmReadLatch</b> (
	<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SceHprmLatch">SceHprmLatch</a> *<i>pLatch</i>
);
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pLatch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ラッチ情報を受け取るバッファ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">最後にsceHprmReadLatch()関数を呼び出してから、サンプリングが行われた回数を返します。<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ヘッドホンリモコンドライバは、キー通知パケットが到着するごとにキー押し下げ状態を比較し、前回のキー押し下げ状態と比較し、キーのダウン(down)、キーのリリース(up)などのイベント発生を記憶します。各キーのイベントは押し下げ(プッシュ)を1とする正論理で記憶されます。<br>sceHprmReadLatch()関数はヘッドホンリモコンドライバに保存されたキー押し下げのラッチ情報を読み出し、同時に次回の取得にそなえてラッチ情報をクリアします。<br><br>ヘッドホンリモコンドライバは、<a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmPeekLatch">sceHprmPeekLatch</a>() / sceHprmReadLatch()関数のためのラッチ情報をシステムでグローバルに保持しています。sceHprmReadLatch()関数を使用するスレッドはただ1つでなくてはなりません。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmPeekLatch">sceHprmPeekLatch</a>(), <a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#SceHprmLatch">SceHprmLatch</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmIsHeadphoneExist"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmIsHeadphoneExist<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヘッドホン接続の検出<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmIsHeadphoneExist</b> (
	void
);
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ヘッドホンの接続を検出したとき1、検出しなかったとき0を返します。<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ヘッドホンの接続を検出します。ヘッドホン端子にヘッドホンリモコンが接続されていても、ヘッドホンリモコンの先にヘッドホンが接続されていない場合にはsceHprmIsHeadphoneExist()関数は0を返すことがあります。また、ヘッドホン端子にヘッドホンまたはヘッドホンリモコン以外のものが接続されていた場合に、0を返すことがあります。<br>ヘッドホン端子にヘッドホンまたはヘッドホンリモコンが接続されると、インポーズドライバは自動的にオーディオ出力をスピーカーとヘッドホンで切り替えを行いますが、この切り替えはsceHprmIsHeadphoneExist()関数が返す状態とは同期しません。オーディオ出力先の判定等の目的でsceHprmIsHeadphoneExist()関数を使用してはいけません。たとえば、sceHprmIsHeadphoneExist()関数が0を返していたとしても、本体スピーカーから音声が出力されていることは意味しません。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmIsRemoteExist">sceHprmIsRemoteExist</a>(), <a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmIsMicrophoneExist">sceHprmIsMicrophoneExist</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmIsRemoteExist"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmIsRemoteExist<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>リモコンの検出<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmIsRemoteExist</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">リモコンを検出したとき1、検出しなかったとき0を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">リモコンを検出します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmIsHeadphoneExist">sceHprmIsHeadphoneExist</a>(), <a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmIsMicrophoneExist">sceHprmIsMicrophoneExist</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHprmIsMicrophoneExist"></a>
<table width="100%"><td width="70%"><font size=6>sceHprmIsMicrophoneExist<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>マイク接続の検出<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;hpremotedrv.h&gt;
int <b>sceHprmIsMicrophoneExist </b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マイクの接続を検出したとき1、検出しなかったとき0を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マイクの接続を検出します。<br>PSP-1000およびPSP-2000シリーズでは、ヘッドホン端子にヘッドホンリモコンが接続されていても、ヘッドホンリモコンの先にマイクが接続されていない場合にはsceHprmIsMicrophoneExist()関数は0を返します。<br>PSP-3000, PSP-N1000シリーズでは本体にマイクが内蔵されているため、sceHprmIsMicrophoneExist()関数は常に1を返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmIsHeadphoneExist">sceHprmIsHeadphoneExist</a>(), <a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmIsRemoteExist">sceHprmIsRemoteExist</a>()<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
