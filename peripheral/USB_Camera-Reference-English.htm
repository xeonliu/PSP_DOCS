<html lang="en">
<head>
<title>USB_Camera-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
USB Camera Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_NAME"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_NAME<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera driver name<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_NAME		"USBCamDriver"

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the name of the USB camera driver.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbStart">sceUsbStart</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbStop">sceUsbStop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAMMIC_NAME"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAMMIC_NAME<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera mic driver name<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAMMIC_NAME		"USBCamMicDriver"

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the name of the mic driver associated with the USB camera.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbStart">sceUsbStart</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbStop">sceUsbStop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USB_PID_CAM"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USB_PID_CAM<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera product ID<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USB_PID_CAM		0x0282

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the product ID of the USB camera.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbActivate">sceUsbActivate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_RESOLUTION_QQVGA"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_RESOLUTION_QQVGA<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera resolution ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_RESOLUTION_QQVGA     0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a resolution ID of the USB camera. It represents a resolution of 160x120.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_RESOLUTION_QCIF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_RESOLUTION_QCIF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera resolution ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_RESOLUTION_QCIF     1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a resolution ID of the USB camera. It represents a resolution of 176x144.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_RESOLUTION_QVGA"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_RESOLUTION_QVGA<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera resolution ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_RESOLUTION_QVGA     2

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a resolution ID of the USB camera. It represents a resolution of 320x240.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_RESOLUTION_CIF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_RESOLUTION_CIF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera resolution ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_RESOLUTION_CIF     3

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a resolution ID of the USB camera. It represents a resolution of 352x288.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_RESOLUTION_VGA"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_RESOLUTION_VGA<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera resolution ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_RESOLUTION_VGA     4

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a resolution ID of the USB camera. It represents a resolution of 640x480.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_RESOLUTION_XGA"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_RESOLUTION_XGA<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera resolution ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_RESOLUTION_XGA     5

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a resolution ID of the USB camera. It represents a resolution of 1024x768.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_RESOLUTION_SXGA"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_RESOLUTION_SXGA<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera resolution ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_RESOLUTION_SXGA     6

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a resolution ID of the USB camera. It represents a resolution of 1280x960.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_RESOLUTION_PSP1"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_RESOLUTION_PSP1<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera resolution ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_RESOLUTION_PSP1     7

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a resolution ID of the USB camera. It represents a resolution of 480x272.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_RESOLUTION_PSP2"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_RESOLUTION_PSP2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera resolution ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_RESOLUTION_PSP2     8
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a resolution ID of the USB camera. It represents a resolution of 360x272.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FRAME_RATE_3_75_FPS"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FRAME_RATE_3_75_FPS<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera frame rate ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FRAME_RATE_3_75_FPS     0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a frame rate ID of the USB camera. It represents a frame rate of 3.75 fps (frames per second).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FRAME_RATE_5_FPS"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FRAME_RATE_5_FPS<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera frame rate ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FRAME_RATE_5_FPS     1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a frame rate ID of the USB camera. It represents a frame rate of 5 fps (frames per second).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FRAME_RATE_7_5_FPS"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FRAME_RATE_7_5_FPS<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera frame rate ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FRAME_RATE_7_5_FPS     2

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a frame rate ID of the USB camera. It represents a frame rate of 7.5 fps (frames per second).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FRAME_RATE_10_FPS"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FRAME_RATE_10_FPS<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera frame rate ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FRAME_RATE_10_FPS     3

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a frame rate ID of the USB camera. It represents a frame rate of 10 fps (frames per second).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FRAME_RATE_15_FPS"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FRAME_RATE_15_FPS<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera frame rate ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FRAME_RATE_15_FPS     4

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a frame rate ID of the USB camera. It represents a frame rate of 15 fps (frames per second).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FRAME_RATE_20_FPS"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FRAME_RATE_20_FPS<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera frame rate ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FRAME_RATE_20_FPS     5

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a frame rate ID of the USB camera. It represents a frame rate of 20 fps (frames per second).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FRAME_RATE_30_FPS"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FRAME_RATE_30_FPS<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera frame rate ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FRAME_RATE_30_FPS     6

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a frame rate ID of the USB camera. It represents a frame rate of 30 fps (frames per second).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FRAME_RATE_60_FPS"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FRAME_RATE_60_FPS<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera frame rate ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FRAME_RATE_60_FPS     7

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a frame rate ID of the USB camera. It represents a frame rate of 60 fps (frames per second).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_WB_AUTO"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_WB_AUTO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera white balance setting ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_WB_AUTO       0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a white balance setting ID of the USB camera. When this constant is specified, the USB camera is automatically corrected.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_WB_DAYLIGHT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_WB_DAYLIGHT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera white balance setting ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_WB_DAYLIGHT       1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a white balance setting ID of the USB camera. When this constant is specified, the white balance matches color reproduction in sunlight under clear sky (daylight) conditions. The color temperature is 5500K (Kelvin).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_WB_FLUORESCENT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_WB_FLUORESCENT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera white balance setting ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_WB_FLUORESCENT       2
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a white balance setting ID of the USB camera. When this constant is specified, the white balance matches color reproduction in fluorescent light. The color temperature is 4300K (Kelvin).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_WB_TUNGSTEN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_WB_TUNGSTEN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera white balance setting ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_WB_TUNGSTEN       3
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents a white balance setting ID of the USB camera. When this constant is specified, the white balance matches color reproduction in incandescent light (tungsten light bulb). The color temperature is 3100K (Kelvin).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SATURATION_LV_DEFAULT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SATURATION_LV_DEFAULT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera saturation level default constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SATURATION_LV_DEFAULT	       129

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the default saturation level when the USB camera is taking pictures.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetSaturation">sceUsbCamSetSaturation</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SATURATION_LV_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SATURATION_LV_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera saturation level maximum value constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SATURATION_LV_MAX       255

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum value of the saturation level when the USB camera is taking pictures.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetSaturation">sceUsbCamSetSaturation</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SATURATION_LV_MIN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SATURATION_LV_MIN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera saturation level minimum value constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SATURATION_LV_MIN       0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the minimum value of the saturation level when the USB camera is taking pictures.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetSaturation">sceUsbCamSetSaturation</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_BRIGHTNESS_LV_DEFAULT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_BRIGHTNESS_LV_DEFAULT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera brightness level default constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_BRIGHTNESS_LV_DEFAULT    128

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the default brightness level when the USB camera is taking pictures.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetBrightness">sceUsbCamSetBrightness</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_BRIGHTNESS_LV_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_BRIGHTNESS_LV_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera brightness level maximum value constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_BRIGHTNESS_LV_MAX   	255

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum value of the brightness level when the USB camera is taking pictures.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetBrightness">sceUsbCamSetBrightness</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_BRIGHTNESS_LV_MIN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_BRIGHTNESS_LV_MIN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera brightness level minimum value constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_BRIGHTNESS_LV_MIN	0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the minimum value of the brightness level when the USB camera is taking pictures.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetBrightness">sceUsbCamSetBrightness</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_CONTRAST_LV_DEFAULT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_CONTRAST_LV_DEFAULT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera contrast level default constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_CONTRAST_LV_DEFAULT	64

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the default contrast level when the USB camera is taking pictures.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetContrast">sceUsbCamSetContrast</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_CONTRAST_LV_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_CONTRAST_LV_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera contrast level maximum value constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_CONTRAST_LV_MAX	255

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum value of the contrast level when the USB camera is taking pictures. The larger the contrast value, the darker will be the colors.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetContrast">sceUsbCamSetContrast</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_CONTRAST_LV_MIN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_CONTRAST_LV_MIN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera contrast level minimum value constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_CONTRAST_LV_MIN   	0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the minimum value of the contrast level when the USB camera is taking pictures. The smaller the contrast value, the lighter will be the colors.<br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetContrast">sceUsbCamSetContrast</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SHARPNESS_LV_DEFAULT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SHARPNESS_LV_DEFAULT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera sharpness level default constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SHARPNESS_LV_DEFAULT  		0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the default sharpness level when the USB camera is taking pictures.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetSharpness">sceUsbCamSetSharpness</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SHARPNESS_LV_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SHARPNESS_LV_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera sharpness level maximum value constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SHARPNESS_LV_MAX   	255

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum value of the sharpness level when the USB camera is taking pictures. The larger the sharpness value, the more the contours of objects in an image will be emphasized.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetSharpness">sceUsbCamSetSharpness</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SHARPNESS_LV_MIN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SHARPNESS_LV_MIN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera sharpness level minimum value constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SHARPNESS_LV_MIN	0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the minimum value of the sharpness level when the USB camera is taking pictures. <br>The smaller the sharpness value, the more the contours of objects in an image will be portrayed more naturally.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetSharpness">sceUsbCamSetSharpness</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EFFECT_MODE_NORMAL"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EFFECT_MODE_NORMAL<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera image effect mode ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EFFECT_MODE_NORMAL		0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is an effect applied by the USB camera when an image is obtained from the camera. This constant indicates that the USB camera is to output a normal image.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetImageEffectMode">sceUsbCamSetImageEffectMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EFFECT_MODE_NEGA"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EFFECT_MODE_NEGA<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera image effect mode ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EFFECT_MODE_NEGA	1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is an effect applied by the USB camera when an image is obtained from the camera. This constant indicates that the USB camera is to output a negative image.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetImageEffectMode">sceUsbCamSetImageEffectMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EFFECT_MODE_BW"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EFFECT_MODE_BW<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera image effect mode ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EFFECT_MODE_BW	2

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is an effect applied by the USB camera when an image is obtained from the camera. This constant indicates that the USB camera is to output a black-and-white image.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetImageEffectMode">sceUsbCamSetImageEffectMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EFFECT_MODE_SEPIA"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EFFECT_MODE_SEPIA<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera image effect mode ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EFFECT_MODE_SEPIA	3

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is an effect applied by the USB camera when an image is obtained from the camera. This constant indicates that the USB camera is to output a sepia-tone image.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetImageEffectMode">sceUsbCamSetImageEffectMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EFFECT_MODE_BLUISH"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EFFECT_MODE_BLUISH<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera image effect mode ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EFFECT_MODE_BLUISH		4

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is an effect applied by the USB camera when an image is obtained from the camera. This constant indicates that the USB camera is to output a bluish-tone image.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetImageEffectMode">sceUsbCamSetImageEffectMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EFFECT_MODE_REDISH"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EFFECT_MODE_REDISH<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera image effect mode ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EFFECT_MODE_REDISH		5

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is an effect applied by the USB camera when an image is obtained from the camera. This constant indicates that the USB camera is to output a reddish-tone image.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetImageEffectMode">sceUsbCamSetImageEffectMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EFFECT_MODE_GREENISH"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EFFECT_MODE_GREENISH<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera image effect mode ID constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EFFECT_MODE_GREENISH    		6

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is an effect applied by the USB camera when an image is obtained from the camera. This constant indicates that the USB camera is to output a greenish-tone image.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetImageEffectMode">sceUsbCamSetImageEffectMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SENSITIVITY_ISO100"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SENSITIVITY_ISO100<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera ISO sensitivity constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SENSITIVITY_ISO100    0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the sensitivity of the USB camera. It indicates a value equivalent to ISO 100 speed.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SENSITIVITY_ISO200"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SENSITIVITY_ISO200<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera ISO sensitivity constant <br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SENSITIVITY_ISO200    1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the sensitivity of the USB camera. It indicates a value equivalent to ISO 200 speed.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SENSITIVITY_ISO400"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SENSITIVITY_ISO400<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera ISO sensitivity constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SENSITIVITY_ISO400    2

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the sensitivity of the USB camera. It indicates a value equivalent to ISO 400 speed.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_PLUS_20"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_PLUS_20<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_PLUS_20    0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is increased by +2.0.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_PLUS_17"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_PLUS_17<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_PLUS_17    1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is increased by +1.7.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_PLUS_15"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_PLUS_15<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_PLUS_15    2

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is increased by +1.5.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_PLUS_13"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_PLUS_13<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_PLUS_13    3

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is increased by +1.3.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_PLUS_10"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_PLUS_10<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_PLUS_10    4

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is increased by +1.0.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_PLUS_07"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_PLUS_07<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_PLUS_07    5

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is increased by +0.7.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_PLUS_05"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_PLUS_05<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_PLUS_05    6

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is increased by +0.5.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_PLUS_03"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_PLUS_03<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_PLUS_03    7

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is increased by +0.3.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_00"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_00<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_00          8

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is increased by 0.0.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_MINUS_03"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_MINUS_03<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_MINUS_03      9

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is reduced by 0.3.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_MINUS_05"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_MINUS_05<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_MINUS_05      10

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is reduced by 0.5.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_MINUS_07"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_MINUS_07<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_MINUS_07      11

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is reduced by 0.7.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_MINUS_10"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_MINUS_10<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_MINUS_10      12

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is reduced by 1.0.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_MINUS_13"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_MINUS_13<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_MINUS_13      13

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is reduced by 1.3.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_MINUS_15"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_MINUS_15<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_MINUS_15      14

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is reduced by 1.5.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_MINUS_17"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_MINUS_17<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_MINUS_17      15

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is reduced by 1.7.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_EVLEVEL_MINUS_20"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_EVLEVEL_MINUS_20<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USB camera exposure compensation constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_EVLEVEL_MINUS_20      16

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the exposure is reduced by 2.0.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SELFTIMER_NO"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SELFTIMER_NO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant for delay timer interval specification set for the camera<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SELFTIMER_NO    	0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the delay timer interval that is specified for the USB camera when taking a still image. This constant indicates that the timer is not used.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SELFTIMER_10SEC"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SELFTIMER_10SEC<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant for delay timer interval specification set for the camera<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SELFTIMER_10SEC    		1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the delay timer interval that is specified for the USB camera when taking a still image. This constant indicates that the camera is delayed for 10 seconds.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SELFTIMER_20SEC"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SELFTIMER_20SEC<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant for delay timer interval specification set for the camera<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SELFTIMER_20SEC    		2

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the delay timer interval that is specified for the USB camera when taking a still image. This constant indicates that the camera is delayed for 20 seconds.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_SELFTIMER_30SEC"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_SELFTIMER_30SEC<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant for delay timer interval specification set for the camera<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_SELFTIMER_30SEC    		3

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the delay timer interval that is specified for the USB camera when taking a still image. This constant indicates that the camera is delayed for 30 seconds.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_COMPRESS_QS_MIN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_COMPRESS_QS_MIN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Minimum value of compression effect <br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_COMPRESS_QS_MIN    1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a specification of the compression rate for images obtained from the USB camera. A compression rate that is smaller than this cannot be set. A picture quality greater than this also cannot be set.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_COMPRESS_QS_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_COMPRESS_QS_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum value of compression effect<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_COMPRESS_QS_MAX    63

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a specification of the compression rate for images obtained from the USB camera. A compression rate that is greater than this cannot be set.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FLICKER_AUTO"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FLICKER_AUTO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Flicker cancellation setting <br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FLICKER_AUTO    0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant controls the flicker cancellation function of the USB camera. When specified it indicates that the USB camera will automatically determine the flicker frequency to be canceled.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetAntiFlicker">sceUsbCamSetAntiFlicker</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetAntiFlicker">sceUsbCamGetAntiFlicker</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FLICKER_60Hz"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FLICKER_60Hz<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Flicker cancellation setting<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FLICKER_60Hz    1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant controls the flicker cancellation function of the USB camera. When specified it indicates that the USB camera will cancel 60 Hz flicker.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetAntiFlicker">sceUsbCamSetAntiFlicker</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetAntiFlicker">sceUsbCamGetAntiFlicker</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FLICKER_50Hz"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FLICKER_50Hz<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Flicker cancellation setting<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FLICKER_50Hz    2

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant controls the flicker cancellation function of the USB camera. When specified it indicates that the USB camera will cancel 50 Hz flicker.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetAntiFlicker">sceUsbCamSetAntiFlicker</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetAntiFlicker">sceUsbCamGetAntiFlicker</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_FLIP_ON"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_FLIP_ON<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Flip specification constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_FLIP_ON       0x0001

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant specifies that the image that is obtained from the USB camera is to be flipped (reversed up and down).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetReverseMode">sceUsbCamSetReverseMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_MIRROR_ON"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_MIRROR_ON<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Mirror specification constant<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_MIRROR_ON	0x0100

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant specifies that the image that is obtained from the USB camera is to be mirrored (reversed left and right).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetReverseMode">sceUsbCamSetReverseMode</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_AUTO_IMAGEREVERSE_OFF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_AUTO_IMAGEREVERSE_OFF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Automatic image reversal OFF<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_AUTO_IMAGEREVERSE_OFF	0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the image is not to be reversed when the USB camera lens is rotated. It is used by <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamAutoImageReverseSW">sceUsbCamAutoImageReverseSW</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamAutoImageReverseSW">sceUsbCamAutoImageReverseSW</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_AUTO_IMAGEREVERSE_ON"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_AUTO_IMAGEREVERSE_ON<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Automatic image reversal ON<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_AUTO_IMAGEREVERSE_ON    		1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates that the image is to be reversed when the USB camera lens is rotated. It is used by <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamAutoImageReverseSW">sceUsbCamAutoImageReverseSW</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamAutoImageReverseSW">sceUsbCamAutoImageReverseSW</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_LENSDIRECTION_OUT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_LENSDIRECTION_OUT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant indicating lens direction<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_LENSDIRECTION_OUT	0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates which direction the USB camera lens is facing. Specifying this constant means that the lens is facing outward (UMD&trade; side).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetLensDirection">sceUsbCamGetLensDirection</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#lensrotationcallback">lensrotationcallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_LENSDIRECTION_IN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_LENSDIRECTION_IN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant indicating lens direction<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_LENSDIRECTION_IN	1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant indicates which direction the USB camera lens is facing. Specifying this constant means that the lens is facing inward (display-side).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetLensDirection">sceUsbCamGetLensDirection</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#lensrotationcallback">lensrotationcallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_VIDEO_FRAME_MAXSIZE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_VIDEO_FRAME_MAXSIZE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum size of video frame<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_VIDEO_FRAME_MAXSIZE    	32*1024

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the maximum size of JPEG frames when video is obtained from the camera. The USB camera hardware will not send a JPEG frame larger than this size.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_VIDEO_WORK_MAXSIZE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_VIDEO_WORK_MAXSIZE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum work area required by the USB Camera library<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_VIDEO_WORK _MAXSIZE    	68*1024

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the maximum size of the work area that is required by the USB Camera library. An area larger than this will not be required.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_STILL_MAXSIZE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_STILL_MAXSIZE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum size of still image<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_STILL _MAXSIZE    512*1024

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the maximum size of still images that are sent by the USB camera hardware. A size larger than this will not be sent.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_MIC_ALC_OFF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_MIC_ALC_OFF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ALC function of the USB camera's mic<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_MIC_ALC_OFF	0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant disables the ALC function of the USB camera's built-in mic. Since the USB camera's mic has no ALC function, this value should always be used.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_MIC_NOISE_GATE_OFF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_MIC_NOISE_GATE_OFF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Noise gate function of the USB camera's mic<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_MIC_NOISE_GATE_OFF	0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant disables the noise gate function of the USB camera's built-in mic. Since the USB camera's mic has no noise gate function, this value should always be used.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_MIC_GAIN_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_MIC_GAIN_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum gain of the USB camera's mic<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_MIC_GAIN_MAX    	30

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the maximum gain of the USB camera's built-in mic, in units of [dB]. If a value greater than this is set, it is rounded to this value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_MIC_GAIN_MIN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_MIC_GAIN_MIN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Minimum gain of the USB camera's mic<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_MIC_GAIN_MIN	-18

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the minimum gain of the USB camera's built-in mic, in units of [dB]. The value -17.25 [dB] is set by the hardware. If a value less than this is set, it is rounded to this value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_USBCAM_MIC_WORK_MINSIZE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_USBCAM_MIC_WORK_MINSIZE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Work area for the mic in the USB Camera library<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
#define SCE_USBCAM_MIC_WORK_MINSIZE	2*1024

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant represents the minimum required size of the work area for the USB camera mic.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUsbCamVideoParam"></a>
<table width="100%"><td width="70%"><font size=6>SceUsbCamVideoParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Video acquisition settings<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
typedef struct SceUsbCamVideoParam {
	int <i>size;</i>
	int <i>resolution</i>;
	int <i>frame_rate</i>;
	int <i>white_balance</i>;
	int <i>saturation</i>;
	int <i>brightness</i>;
	int <i>contrast</i>;
	int <i>sharpness;</i>
	int<i> effect_mode;</i>
	unsigned int <i>target_file_size;</i>
	int<i> sensitivity;</i>
	int <i>evlevel;</i>
<i>	</i>int <i>zoom;</i>
} <b>SceUsbCamVideoParam</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Structure size. Assign the size of the structure.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resolution</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Resolution. Select from the following definitions.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_QQVGA">SCE_USBCAM_RESOLUTION_QQVGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_QCIF">SCE_USBCAM_RESOLUTION_QCIF</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_QVGA">SCE_USBCAM_RESOLUTION_QVGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_CIF">SCE_USBCAM_RESOLUTION_CIF</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_VGA">SCE_USBCAM_RESOLUTION_VGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_PSP1">SCE_USBCAM_RESOLUTION_PSP1</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_PSP2">SCE_USBCAM_RESOLUTION_PSP2</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame_rate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame rate. Select from the following definitions.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FRAME_RATE_3_75_FPS">SCE_USBCAM_FRAME_RATE_3_75_FPS</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FRAME_RATE_5_FPS">SCE_USBCAM_FRAME_RATE_5_FPS</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FRAME_RATE_7_5_FPS">SCE_USBCAM_FRAME_RATE_7_5_FPS</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FRAME_RATE_10_FPS">SCE_USBCAM_FRAME_RATE_10_FPS</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FRAME_RATE_15_FPS">SCE_USBCAM_FRAME_RATE_15_FPS</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FRAME_RATE_20_FPS">SCE_USBCAM_FRAME_RATE_20_FPS</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FRAME_RATE_30_FPS">SCE_USBCAM_FRAME_RATE_30_FPS</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FRAME_RATE_60_FPS">SCE_USBCAM_FRAME_RATE_60_FPS</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>white_balance</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;White balance. Select from the following definitions.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_WB_AUTO">SCE_USBCAM_WB_AUTO</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_WB_DAYLIGHT">SCE_USBCAM_WB_DAYLIGHT</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_WB_FLUORESCENT">SCE_USBCAM_WB_FLUORESCENT</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_WB_TUNGSTEN">SCE_USBCAM_WB_TUNGSTEN</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>saturation</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Saturation &nbsp;&nbsp;<br>&nbsp;&nbsp;0 to 255:  The larger the value, the greater the saturation &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>brightness</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Brightness &nbsp;&nbsp;<br>&nbsp;&nbsp;0 to 255:  The larger the value, the greater the brightness &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>contrast</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Contrast &nbsp;&nbsp;<br>&nbsp;&nbsp;0 to 255:  The larger the value, the greater the contrast&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sharpness</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sharpness&nbsp;&nbsp;<br>&nbsp;&nbsp;0 to 255:  The larger the value, the greater the sharpness.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>effect_mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image effect. Select from the following definitions.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_NORMAL">SCE_USBCAM_EFFECT_MODE_NORMAL</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_NEGA">SCE_USBCAM_EFFECT_MODE_NEGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_BW">SCE_USBCAM_EFFECT_MODE_BW</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_SEPIA">SCE_USBCAM_EFFECT_MODE_SEPIA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_BLUISH">SCE_USBCAM_EFFECT_MODE_BLUISH</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_REDISH">SCE_USBCAM_EFFECT_MODE_REDISH</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_GREENISH">SCE_USBCAM_EFFECT_MODE_GREENISH</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>target_file_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Jpeg frame size&nbsp;&nbsp;<br>&nbsp;&nbsp;This is an approximate value. On average, the frame size will be this size.&nbsp;&nbsp;<br>&nbsp;&nbsp;This will be the frame size that is obtained from the frame rate when a size of (896/frame rate) kBytes is stable from the USB video bandwidth.&nbsp;&nbsp;<br>&nbsp;&nbsp;The maximum value is <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_VIDEO_FRAME_MAXSIZE">SCE_USBCAM_VIDEO_FRAME_MAXSIZE</a>.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sensitivity</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ISO sensitivity&nbsp;&nbsp;<br>&nbsp;&nbsp;Select from the following definitions:&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SENSITIVITY_ISO100">SCE_USBCAM_SENSITIVITY_ISO100</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SENSITIVITY_ISO200">SCE_USBCAM_SENSITIVITY_ISO200</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SENSITIVITY_ISO400">SCE_USBCAM_SENSITIVITY_ISO400</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>evlevel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Exposure compensation value&nbsp;&nbsp;<br>&nbsp;&nbsp;Select from the following definitions:&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_20">SCE_USBCAM_EVLEVEL_PLUS_20</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_17">SCE_USBCAM_EVLEVEL_PLUS_17</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_15">SCE_USBCAM_EVLEVEL_PLUS_15</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_13">SCE_USBCAM_EVLEVEL_PLUS_13</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_10">SCE_USBCAM_EVLEVEL_PLUS_10</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_07">SCE_USBCAM_EVLEVEL_PLUS_07</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_05">SCE_USBCAM_EVLEVEL_PLUS_05</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_03">SCE_USBCAM_EVLEVEL_PLUS_03</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_00">SCE_USBCAM_EVLEVEL_00</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_03">SCE_USBCAM_EVLEVEL_MINUS_03</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_05">SCE_USBCAM_EVLEVEL_MINUS_05</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_07">SCE_USBCAM_EVLEVEL_MINUS_07</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_10">SCE_USBCAM_EVLEVEL_MINUS_10</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_13">SCE_USBCAM_EVLEVEL_MINUS_13</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_15">SCE_USBCAM_EVLEVEL_MINUS_15</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_17">SCE_USBCAM_EVLEVEL_MINUS_17</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_20">SCE_USBCAM_EVLEVEL_MINUS_20</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>zoom</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Zoom magnification specification&nbsp;&nbsp;<br>&nbsp;&nbsp;10 to 80:  The zoom magnification that is set is the specified value multiplied by 0.1.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents video setting parameters.<br>It is used as an argument of <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>().<br>When the resolution used for still images is XGA or SXGA, set the movie frame rate to 15fps or less.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUsbCamStillParam"></a>
<table width="100%"><td width="70%"><font size=6>SceUsbCamStillParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Still image acquisition settings<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
typedef struct SceUsbCamStillParam {
	int <i>size;</i>
	int <i>resolution</i>;
	unsigned int <i>target_size;</i>
	int <i>flip_mirror</i>;
	int <i>self_timer;</i>
	int <i>comp_qs;</i>
} <b>SceUsbCamStillParam</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Structure size. Assign the size of the structure.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resolution</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Resolution. Select from the following definitions.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_QQVGA">SCE_USBCAM_RESOLUTION_QQVGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_QCIF">SCE_USBCAM_RESOLUTION_QCIF</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_QVGA">SCE_USBCAM_RESOLUTION_QVGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_CIF">SCE_USBCAM_RESOLUTION_CIF</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_VGA">SCE_USBCAM_RESOLUTION_VGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_XGA">SCE_USBCAM_RESOLUTION_XGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_SXGA">SCE_USBCAM_RESOLUTION_SXGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_PSP1">SCE_USBCAM_RESOLUTION_PSP1</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_RESOLUTION_PSP2">SCE_USBCAM_RESOLUTION_PSP2</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>target_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;JPEG image size.&nbsp;&nbsp;<br>&nbsp;&nbsp;The maximum value is 524288.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flip_mirror</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reversal specification for image that is obtained. Logical OR of the following definitions.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLIP_ON">SCE_USBCAM_FLIP_ON</a>: Reverse up and down (flip)&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_MIRROR_ON">SCE_USBCAM_MIRROR_ON</a>: Reverse left and right (mirror)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>self_timer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Camera self timer function. Select from the following definitions.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SELFTIMER_NO">SCE_USBCAM_SELFTIMER_NO</a>:     Timer is not used&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SELFTIMER_10SEC">SCE_USBCAM_SELFTIMER_10SEC</a>:  Take pictures after 10 seconds&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SELFTIMER_20SEC">SCE_USBCAM_SELFTIMER_20SEC</a>:  Take pictures after 20 seconds&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SELFTIMER_30SEC">SCE_USBCAM_SELFTIMER_30SEC</a>:  Take pictures after 30 seconds&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>comp_qs</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image compression effect&nbsp;&nbsp;<br>&nbsp;&nbsp;Values from 1 to 63 can be specified. Smaller values correspond to lower compression rates and larger values correspond to higher compression rates.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents still image setting parameters.<br>It is used as an argument of <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>().<br>When the resolution used for still images is XGA or SXGA, set the movie frame rate in advance to 15fps or less.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupStill">sceUsbCamSetupStill</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUsbCamMicParam"></a>
<table width="100%"><td width="70%"><font size=6>SceUsbCamMicParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Mic codec settings<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
typedef struct SceUsbCamMicParam {
	int <i>size;</i>
	int <i>alc</i>;
	int <i>gain</i>;
	int <i>noiz</i>;
	int <i>freq;</i>
} <b>SceUsbCamMicParam</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Structure size. Assign the size of the structure.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>alc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ALC ON/OFF and target level&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_MIC_ALC_OFF">SCE_USBCAM_MIC_ALC_OFF</a>: ALC = OFF&nbsp;&nbsp;<br>&nbsp;&nbsp;-6 to -29: ALC = ON; -6 to -29[dB]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>gain</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input gain setting&nbsp;&nbsp;<br>&nbsp;&nbsp;Maximum gain when ALC = ON&nbsp;&nbsp;<br>&nbsp;&nbsp;  Any of -12, -6, 0, +6, +12, +18, +24, or +30[dB]&nbsp;&nbsp;<br>&nbsp;&nbsp;Normal input gain when ALC = OFF&nbsp;&nbsp;<br>&nbsp;&nbsp;  -17.25 to 0 to +30[dB]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>noiz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Nose gate ON/OFF &nbsp;&nbsp;<br>&nbsp;&nbsp;Noise gate threshold level&nbsp;&nbsp;<br>&nbsp;&nbsp;(invalid when ALC = OFF)&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_MIC_NOISE_GATE_OFF">SCE_USBCAM_MIC_NOISE_GATE_OFF</a>: Noise gate = OFF &nbsp;&nbsp;<br>&nbsp;&nbsp;-76 to -30: Noise gate = ON; -76 to -30[dB].&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>freq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sampling frequency&nbsp;&nbsp;<br>&nbsp;&nbsp;Specify 44100 [Hz], 22050 [Hz], or 11025 [Hz]&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents codec setting parameters.<br>It is used as an argument of sceUsbCamMicSetup().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbStart"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbStart<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Start USB driver<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbStart</b>(
	const char <i>*name</i>,
	unsigned int <i>args,</i>
<i>	</i>const void <i>*argp</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Name of USB driver to start&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>args</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>argp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes, which are defined in usb.h, or an error code that is defined in kerror.h or psperror.h is returned.<br><br>SCE_USB_ERROR_ALREADY, SCE_USB_ERROR_NOTAVAIL,<br>SCE_USB_ERROR_NOENT, SCE_USB_ERROR_INPROGRESS,<br>SCE_USB_ERROR_INVAL<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This API is provided by the USB bus driver. It starts the USB driver having the name specified by <i>name</i>.<br>To use this API, you must link to usb_stub.a.<br><br>To use the USB camera, be sure to start the USB drivers in the following order.<br></div>
</ul>
<div style="margin-left:50px;"><ol>
<li VALUE=1> USB bus driver (SCE_USB_BUS_DRIVER_NAME)</li>
<li VALUE=2> USB accessory base driver (SCE_USBACC_NAME)</li>
<li VALUE=3> USB camera driver (<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_NAME">SCE_USBCAM_NAME</a>)</li>
<li VALUE=4> USB camera mic driver (<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAMMIC_NAME">SCE_USBCAMMIC_NAME</a>)</li>
</ol></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>// Start USB bus driver
if (sceUsbStart(SCE_USB_BUS_DRIVER_NAME, 0, NULL) &lt; 0) {
	// Error handling
}

// Start USB accessory base driver
if (sceUsbStart(SCE_USBACC_NAME, 0, NULL) &lt; 0) {
	// Error handling
}

// Start USB camera driver
if (sceUsbStart(<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_NAME">SCE_USBCAM_NAME</a>, 0, NULL) &lt; 0) {
	// Error handling
}

// Start USB camera mic driver
if (sceUsbStart(<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAMMIC_NAME">SCE_USBCAMMIC_NAME</a>, 0, NULL) &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbStop">sceUsbStop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbStop"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbStop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Stop USB driver<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbStop(</b>
	const char <i>*name</i>,
	unsigned int <i>args,</i>
	const void <i>*argp</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Name of USB driver to stop&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>args</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>argp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes, which are defined in usb.h, or an error code that is defined in kerror.h or psperror.h is returned.<br><br>SCE_USB_ERROR_ALREADY, SCE_USB_ERROR_NOTAVAIL,<br>SCE_USB_ERROR_NOENT, SCE_USB_ERROR_INPROGRESS<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This API is provided by the USB bus driver. It stops the USB driver having the name specified by <i>name</i>.<br>To use this API, you must link to usb_stub.a.<br>When using USB drivers, call <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbDeactivate">sceUsbDeactivate</a>() first to deactivate the USB device before calling this function.<br><br>To stop use of the USB camera, be sure to stop the USB drivers in the opposite order in which they were started with <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbStart">sceUsbStart</a>().<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>// Stop USB camera mic driver
if (sceUsbStop(<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAMMIC_NAME">SCE_USBCAMMIC_NAME</a>, 0, NULL) &lt; 0) {
	// Error handling
}

// Stop USB camera driver
if (sceUsbStop(<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_NAME">SCE_USBCAM_NAME</a>, 0, NULL) &lt; 0) {
	// Error handling
}

// Stop USB accessory base driver
if (sceUsbStop(SCE_USBACC_NAME, 0, NULL) &lt; 0) {
	// Error handling
}
// Stop USB bus driver
if (sceUsbStop(SCE_USB_BUS_DRIVER_NAME, 0, NULL) &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbStart">sceUsbStart</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbActivate"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbActivate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Activate USB device<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbActivate</b>(
	unsigned int <i>idProduct</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idProduct</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Product ID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes, which are defined in usb.h, or an error code that is defined in kerror.h or psperror.h is returned.<br><br>SCE_USB_ERROR_ALREADY, SCE_USB_ERROR_NOENT, SCE_USB_ERROR_NOSPC,<br>SCE_USB_ERROR_NOMEM, SCE_USB_ERROR_INPROGRESS,<br>SCE_USB_ERROR_INVAL, SCE_USB_ERROR_NOTAVAIL<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This API is provided by the USB bus driver. It collects together plugged-in USB drivers and activates them as one USB device. Until the drivers are activated as a USB device, they are not recognized by the host even if a USB cable is connected.<br>To use this API, be sure to link to usb_stub.a.<br>To activate USB drivers as a USB device, the required USB drivers must be started in advance.<br><br>To use the USB camera, be sure to specify <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USB_PID_CAM">SCE_USB_PID_CAM</a>, which is defined in usbcam.h, for the product ID argument.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>if (sceUsbActivate(<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USB_PID_CAM">SCE_USB_PID_CAM</a>) &lt; 0) {
	// Error handling
} else {
	printf("success to activate\n");
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbDeactivate">sceUsbDeactivate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbDeactivate"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbDeactivate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Deactivate USB device<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usb.h&gt;
int <b>sceUsbDeactivate</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes, which are defined in usb.h, or an error code that is defined in kerror.h or psperror.h is returned.<br><br>SCE_USB_ERROR_ALREADY, SCE_USB_ERROR_INPROGRESS,<br>SCE_USB_ERROR_NOTAVAIL<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This API is provided by the USB bus driver. It deactivates a USB device.<br>To use this API, be sure to link to usb_stub.a.<br>After a USB device is deactivated, from the host the device will appear to be in the same state as if the USB cable were unplugged.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>if (sceUsbDeactivate() &lt; 0) {
	// Error handling
} else {
	printf("success to deactivate\n");
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbActivate">sceUsbActivate</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbAccGetAuthStat"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbAccGetAuthStat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get USB accessory authentication state<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbacc.h&gt;
int <b>sceUsbAccGetAuthStat</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the PSP&trade; is connected to a USB accessory, 0 is returned.<br>When the PSP&trade; is connected to a USB host other than a USB accessory, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBACC_ERROR_NOT_ACCESSORY">SCE_USBACC_ERROR_NOT_ACCESSORY</a> error is returned, and when it is not recognized by the USB host (the USB specification state is not SCE_USB_CONFIGURED), an SCE_USB_ERROR_NOTAVAIL error is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the USB accessory authentication state.<br>As an example, when the PSP&trade; is connected to a USB host other than a USB accessory such as a PC, this function can be used to determine whether or not the PSP&trade; is connected to a USB accessory, and if not, then a dialog can be displayed prompting the user to connect a USB accessory.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int stat;
int ret;

ret = <a href="../peripheral/USB_Driver-Reference-English.htm#sceUsbWaitState">sceUsbWaitState</a>(SCE_USB_CONFIGURED, SCE_KERNEL_EW_AND, NULL);
if (ret &lt; 0) {
	// Error handling
}

stat = sceUsbAccGetAuthStat();
if (stat == SCE_OK) {
	// Connected to a USB accessory
} else if (stat == <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBACC_ERROR_NOT_ACCESSORY">SCE_USBACC_ERROR_NOT_ACCESSORY</a>) {
	// Connected to a USB host other than a USB accessory
} else {
	// State is not SCE_USB_CONFIGURED
}

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetupVideo"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetupVideo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize video input and set parameters<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamSetupVideo</b>(
	const <a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a> <i>*param,</i>
	void <i>*work,</i>
	SceSize <i>work_size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled/disabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>param</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Parameter set to be specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>work</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of work memory to be assigned&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>work_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of work memory to be assigned (multiple of 64)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_SIZE">SCE_USBCAM_ERROR_INVALID_SIZE</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_ID">SCE_USBCAM_ERROR_INVALID_ID</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_LV">SCE_USBCAM_ERROR_INVALID_LV</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function initializes video input and sets parameters.<br>It cannot be called while video input processing is being executed.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamVideoParam">SceUsbCamVideoParam</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetupStill"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetupStill<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize still image input and set parameters<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamSetupStill</b> (
	const <a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a> <i>*param</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled/disabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>param</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to <a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a> structure representing setting parameters for still image acquisition&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>, SCE_USBCAM_ ERROR_INVALID_ID<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamStillParam">SceUsbCamStillParam</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamStartVideo"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamStartVideo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Start video input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamStartVideo</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function starts video input from the USB camera. This enables JPEG images to be captured into the work area that was assigned by <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(). As long as data in the work area is not read out with a function such as <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamReadVideoFrame">sceUsbCamReadVideoFrame</a>(), the frame itself is always updated.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamStopVideo"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamStopVideo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Stop video input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamStopVideo</b> (
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function stops video input from the USB camera and clears the work area that was assigned by <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>(). After this function is issued, data in the work area cannot be read out using a function such as <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamReadVideoFrame">sceUsbCamReadVideoFrame</a>().<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamReadVideoFrameBlocking"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamReadVideoFrameBlocking<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Video input (blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamReadVideoFrameBlocking</b>(
	SceUChar <i>*buf,</i>
	SceSize <i>size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to storage destination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of input samples&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the size (( 0) of the acquired data is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_SIZE">SCE_USBCAM_ERROR_INVALID_SIZE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a video frame. The thread is placed in a wait state until input is completed or an error occurs.<br>Before executing this function, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>() must be called to initialize video input. If video input has not been initialized, an SCE_ERROR_NOT_INITIALIZED error is returned.<br>If a JPEG frame that is larger than the assigned storage destination size is obtained, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a> is returned. In that case, the frame is only stored up to the size of the assigned storage destination and the part of the frame that doesn't fit is discarded.<br><br>If the USB camera is not connected or if a suspend is performed during camera input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br>Note that if the function ended with an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error, it is not necessary to call the <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopVideo">sceUsbCamStopVideo</a>() function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUFSIZE  32*1024

unsigned char *Buf[BUFSIZE];  /* Input buffer */
int ret;

/* Start video input */
ret = <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStartVideo">sceUsbCamStartVideo</a>();
if(ret &lt; 0){
 // Error handling
}

/* Acquire JPEG image */
ret = sceUsbCamReadVideoFrameBlocking(Buf, sizeof(Buf));
if (ret &lt; 0) {
	// Error handling
}
else if(ret &gt; 0){
	// Image successfully acquired
}

/* Stop video input */
ret = <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopVideo">sceUsbCamStopVideo</a>();
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStartVideo">sceUsbCamStartVideo</a>(), SceUsbCamStopVideo()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamReadVideoFrame"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamReadVideoFrame<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Video input (non-blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamReadVideoFrame</b>(
	SceUChar <i>*buf,</i>
	SceSize <i>size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to storage destination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of input samples&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs video input. When video input begins, the function returns immediately without waiting. You can check if video input completed by calling the <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamPollReadVideoFrameEnd">sceUsbCamPollReadVideoFrameEnd</a>() or <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamPollReadVideoFrameEnd">sceUsbCamPollReadVideoFrameEnd</a>() functions.<br>Before using this function, you must call <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>() to initialize video input. If video input has not been initialized, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> error is returned.<br>If the USB camera is not connected or if a suspend is performed during camera input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br>Note that if the function ends with an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error, it is not necessary to call the sceUsbCamVideoStop() function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUFSIZE  32*1024

unsigned char JpegBuf[BUFSIZE];  /* Input buffer */
int ret;

ret = <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStartVideo">sceUsbCamStartVideo</a>();
if(ret &lt; 0){
	// Error handling
}

/* Perform video input */
ret = sceUsbCamReadVideoFrame (JpegBuf, sizeof(JpegBuf));
if (ret&lt; 0) {
	// Error handling
}

/* Wait for completion of video input */
ret = <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamWaitReadVideoFrameEnd">sceUsbCamWaitReadVideoFrameEnd</a>()
if (ret &lt; 0) {
	// Error handling
}

/* Stop video input */
ret = <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopVideo">sceUsbCamStopVideo</a>();
if(ret &lt; 0)
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupVideo">sceUsbCamSetupVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStartVideo">sceUsbCamStartVideo</a>(), SCEUsbCamStopVideo()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamWaitReadVideoFrameEnd">sceUsbCamWaitReadVideoFrameEnd</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamPollReadVideoFrameEnd">sceUsbCamPollReadVideoFrameEnd</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetReadVideoFrameSize"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetReadVideoFrameSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get acquired frame size<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamGetReadVideoFrameSize</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the size of the acquired JPEG frame is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the size of the acquired JPEG frame.<br>If video input has not been started, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> error will be returned.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamWaitReadVideoFrameEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamWaitReadVideoFrameEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Wait for completion of video input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamWaitReadVideoFrameEnd</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the size of the JPEG data that was copied to the buffer is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function waits for the completion of video input. The function waits until video input is completed or an error occurs.<br>If video input has not yet been started, even though video input was initialized, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> error will occur.<br>If <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamReadVideoFrame">sceUsbCamReadVideoFrame</a>() has not been issued, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a> error will occur.<br>If a JPEG frame that is larger than the assigned storage destination size is obtained, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a> is returned. In this case, the frame is stored up to the size of the assigned storage destination, and the part that doesn't fit is discarded.<br>If the USB camera is not connected or a suspend was performed during video input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStartVideo">sceUsbCamStartVideo</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamReadVideoFrame">sceUsbCamReadVideoFrame</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamPollReadVideoFrameEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamPollReadVideoFrameEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get video input completion status<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamPollReadVideoFrameEnd</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If video input has completed, the size of the acquired JPEG frame is returned; if it has not completed, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_READ_DONE">SCE_USBCAM_ERROR_NOT_READ_DONE</a> is returned.<br>If <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamReadVideoFrame">sceUsbCamReadVideoFrame</a>() has not been called, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a> is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_READ_DONE">SCE_USBCAM_ERROR_NOT_READ_DONE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a value indicating whether or not video input has completed.<br>If a JPEG frame that is larger than the size of the assigned storage destination is obtained, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a> is returned. In this case, the frame is stored up to the size of the assigned storage destination size, and the part of the frame that doesn't fit is discarded.<br>If the USB camera is not connected or if a suspend was performed during video input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamStillInputBlocking"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamStillInputBlocking<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get still image (blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamStillInputBlocking</b> (
	SceUChar *<i>buf</i>,
	SceSize <i>size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to storage destination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of input samples&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When a still image has been acquired, the size of the JPEG image is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_SIZE">SCE_USBCAM_ERROR_INVALID_SIZE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a still image. It can be used to get an image that is larger than the VGA size.<br><br>This function cannot be used at the same time as a video input function. If video input is being performed, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a> is returned.<br>If JPEG data that is larger than the size of the assigned storage destination is obtained, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a> is returned. In that case, the data is stored up to the size of the assigned storage destination size, and the part that doesn't fit is discarded.<br>If the USB camera is not connected or if a suspend was performed during still image acquisition, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopVideo">sceUsbCamStopVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamStillInput"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamStillInput<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get still image (non-blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamStillInput</b>(
	SceUChar *<i>buf</i>,
	SceSize <i>size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to storage destination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Storage destination size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_SIZE">SCE_USBCAM_ERROR_INVALID_SIZE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a still image. It can be used to get an image that is larger than the VGA size.<br><br>This function cannot be used at the same time as a video input function. If video input is being performed, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a> is returned.<br><br>Be sure to wait for the completion of input by using <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillWaitInputEnd">sceUsbCamStillWaitInputEnd</a>() or <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillPollInputEnd">sceUsbCamStillPollInputEnd</a>().<br><br>If the USB camera is not connected or if a suspend was performed during still image acquisition, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopVideo">sceUsbCamStopVideo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamStillGetInputLength"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamStillGetInputLength<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get size of acquired still image<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamStillGetInputLength</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the size of the acquired JPEG frame is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the size of the acquired still image.<br>If still image input has not been started, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> error is returned.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamStillWaitInputEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamStillWaitInputEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Wait for completion of still image input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamStillWaitInputEnd</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the size of the JPEG data that was copied to the buffer is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function waits for the completion of still image input. The function waits until still image input has completed or an error occurs.<br>If still image input has not yet been started even though still image input was initialized, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> error is returned.<br>If <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillInput">sceUsbCamStillInput</a>() has not yet been issued, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a> error is returned.<br>If a JPEG frame that is larger than the size of the assigned storage destination is obtained, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a> is returned. In this case, the frame is stored up to the size of the assigned storage destination and the part of the frame that doesn't fit is discarded.<br>If the USB camera is not connected or if a suspend was performed during still image input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillInput">sceUsbCamStillInput</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamStillPollInputEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamStillPollInputEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get still image input completion status<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamStillPollInputEnd</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If still image input has completed, the size of the JPEG that was obtained is returned. If still image input did not complete, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_READ_DONE">SCE_USBCAM_ERROR_NOT_READ_DONE</a> is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains state information indicating whether still image input has completed.<br>If still image input has not yet been started even though still image input was initialized, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> error is returned.<br>If <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillInput">sceUsbCamStillInput</a>() has not yet been issued, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a> error is returned.<br>If a JPEG frame that is larger than the size of the assigned storage destination is obtained, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a> is returned. In this case, the frame is stored up to the size of the assigned storage destination and the part of the frame that doesn't fit is discarded.<br>If the USB camera is not connected or if a suspend was performed during still image input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillInput">sceUsbCamStillInput</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamStillCancelInput"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamStillCancelInput<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Cancel still image input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamStillCancelInput</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function cancels the thread wait state set by <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillInputBlocking">sceUsbCamStillInputBlocking</a>() or <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillWaitInputEnd">sceUsbCamStillWaitInputEnd</a>() that waits for the completion of still image input.<br>If the function is successful, it returns zero as its return value.<br>If the initialization of still image input has completed, but still image input has not yet started, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> error is returned.<br>If neither <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillInput">sceUsbCamStillInput</a>() nor <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillInputBlocking">sceUsbCamStillInputBlocking</a>() have been called, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a> error is returned.<br>If the USB camera is not connected or a suspend was performed during still image input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, an action should be taken such as prompting the user to connect the USB camera, and requesting input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillInput">sceUsbCamStillInput</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillInputBlocking">sceUsbCamStillInputBlocking</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStillWaitInputEnd">sceUsbCamStillWaitInputEnd</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetSaturation"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetSaturation<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set saturation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamSetSaturation</b> (
	int <i>level</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Saturation level. 0 to 255. The larger the value, the greater the saturation.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the saturation level for JPEG images that are obtained from the USB camera. The larger the value that is specified by <i>level</i>, the greater the saturation. The default saturation level is defined by <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SATURATION_LV_DEFAULT">SCE_USBCAM_SATURATION_LV_DEFAULT</a>.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetSaturation">sceUsbCamGetSaturation</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SATURATION_LV_DEFAULT">SCE_USBCAM_SATURATION_LV_DEFAULT</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SATURATION_LV_MIN">SCE_USBCAM_SATURATION_LV_MIN</a>, <br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SATURATION_LV_MAX">SCE_USBCAM_SATURATION_LV_MAX</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetBrightness"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetBrightness<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set brightness<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamSetBrightness</b> (
	int <i>level</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Brightness level. 0 to 255. The larger the value, the greater the brightness.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the brightness for JPEG images that are obtained from the USB camera. The larger the value that is specified by <i>level</i>, the greater the brightness. The default brightness level is defined by <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_BRIGHTNESS_LV_DEFAULT">SCE_USBCAM_BRIGHTNESS_LV_DEFAULT</a>.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetBrightness">sceUsbCamGetBrightness</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_BRIGHTNESS_LV_DEFAULT">SCE_USBCAM_BRIGHTNESS_LV_DEFAULT</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_BRIGHTNESS_LV_MIN">SCE_USBCAM_BRIGHTNESS_LV_MIN</a>, <br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_BRIGHTNESS_LV_MAX">SCE_USBCAM_BRIGHTNESS_LV_MAX</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetContrast"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetContrast<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set contrast<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamSetContrast</b> (
	int <i>level</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Contrast level. 0 to 255. The larger the value, the greater the contrast.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the contrast for JPEG images that are obtained from the USB camera. The larger the value that is specified by <i>level</i>, the greater the contrast. The default contrast level is defined by <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_CONTRAST_LV_DEFAULT">SCE_USBCAM_CONTRAST_LV_DEFAULT</a>.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetContrast">sceUsbCamGetContrast</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_CONTRAST_LV_DEFAULT">SCE_USBCAM_CONTRAST_LV_DEFAULT</a><br>,<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_CONTRAST_LV_MIN">SCE_USBCAM_CONTRAST_LV_MIN</a>, <br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_CONTRAST_LV_MAX">SCE_USBCAM_CONTRAST_LV_MAX</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetSharpness"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetSharpness<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set sharpness<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamSetSharpness</b> (
	int <i>level</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sharpness level. 0 to 255. The larger the value, the greater the sharpness.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the sharpness for JPEG images that are obtained from the USB camera. The larger the value that is specified by <i>level</i>, the greater the sharpness. The default sharpness level is defined by <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SHARPNESS_LV_DEFAULT">SCE_USBCAM_SHARPNESS_LV_DEFAULT</a>.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetSharpness">sceUsbCamGetSharpness</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SHARPNESS_LV_DEFAULT">SCE_USBCAM_SHARPNESS_LV_DEFAULT</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SHARPNESS_LV_MIN">SCE_USBCAM_SHARPNESS_LV_MIN</a>, <br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_SHARPNESS_LV_MAX">SCE_USBCAM_SHARPNESS_LV_MAX</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetReverseMode"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetReverseMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reverse image<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamSetReverseMode</b>(
	int <i>mode</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image reversal specification. Set one or more of the following using a logical OR operation.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLIP_ON">SCE_USBCAM_FLIP_ON</a>      Reverse the image up and down (flip)&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_MIRROR_ON">SCE_USBCAM_MIRROR_ON</a>   Reverse the image left and right (mirror)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the up and down or right and left reversal for JPEG images that are obtained from the USB camera.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLIP_ON">SCE_USBCAM_FLIP_ON</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_MIRROR_ON">SCE_USBCAM_MIRROR_ON</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetImageEffectMode"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetImageEffectMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set image effect<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamSetImageEffectMode</b> (
	int <i>mode</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image effect specification. Available modes are as follows.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_NORMAL">SCE_USBCAM_EFFECT_MODE_NORMAL</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_NEGA">SCE_USBCAM_EFFECT_MODE_NEGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_BW">SCE_USBCAM_EFFECT_MODE_BW</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_SEPIA">SCE_USBCAM_EFFECT_MODE_SEPIA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_BLUISH">SCE_USBCAM_EFFECT_MODE_BLUISH</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_REDISH">SCE_USBCAM_EFFECT_MODE_REDISH</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_GREENISH">SCE_USBCAM_EFFECT_MODE_GREENISH</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function specifies the effect to be applied to JPEG images that are obtained from the USB camera.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetImageEffectMode">sceUsbCamGetImageEffectMode</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_NORMAL">SCE_USBCAM_EFFECT_MODE_NORMAL</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_NEGA">SCE_USBCAM_EFFECT_MODE_NEGA</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_BW">SCE_USBCAM_EFFECT_MODE_BW</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_SEPIA">SCE_USBCAM_EFFECT_MODE_SEPIA</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_BLUISH">SCE_USBCAM_EFFECT_MODE_BLUISH</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_REDISH">SCE_USBCAM_EFFECT_MODE_REDISH</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_GREENISH">SCE_USBCAM_EFFECT_MODE_GREENISH</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetEvLevel"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetEvLevel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set USB camera exposure compensation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;

int <b>sceUsbCamSetEvLevel</b> (
	int <i>level</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EV compensation value&nbsp;&nbsp;<br>&nbsp;&nbsp;Select from the following definitions:&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_20">SCE_USBCAM_EVLEVEL_PLUS_20</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_17">SCE_USBCAM_EVLEVEL_PLUS_17</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_15">SCE_USBCAM_EVLEVEL_PLUS_15</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_13">SCE_USBCAM_EVLEVEL_PLUS_13</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_10">SCE_USBCAM_EVLEVEL_PLUS_10</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_07">SCE_USBCAM_EVLEVEL_PLUS_07</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_05">SCE_USBCAM_EVLEVEL_PLUS_05</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_03">SCE_USBCAM_EVLEVEL_PLUS_03</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_00">SCE_USBCAM_EVLEVEL_00</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_03">SCE_USBCAM_EVLEVEL_MINUS_03</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_05">SCE_USBCAM_EVLEVEL_MINUS_05</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_07">SCE_USBCAM_EVLEVEL_MINUS_07</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_10">SCE_USBCAM_EVLEVEL_MINUS_10</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_13">SCE_USBCAM_EVLEVEL_MINUS_13</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_15">SCE_USBCAM_EVLEVEL_MINUS_15</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_17">SCE_USBCAM_EVLEVEL_MINUS_17</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_20">SCE_USBCAM_EVLEVEL_MINUS_20</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function is successful, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets a compensation value that is used for determining the exposure of the USB camera.<br>If the USB camera is not connected or a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetEvLevel">sceUsbCamGetEvLevel</a> ()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_20">SCE_USBCAM_EVLEVEL_PLUS_20</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_17">SCE_USBCAM_EVLEVEL_PLUS_17</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_15">SCE_USBCAM_EVLEVEL_PLUS_15</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_13">SCE_USBCAM_EVLEVEL_PLUS_13</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_10">SCE_USBCAM_EVLEVEL_PLUS_10</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_07">SCE_USBCAM_EVLEVEL_PLUS_07</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_05">SCE_USBCAM_EVLEVEL_PLUS_05</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_03">SCE_USBCAM_EVLEVEL_PLUS_03</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_00">SCE_USBCAM_EVLEVEL_00</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_03">SCE_USBCAM_EVLEVEL_MINUS_03</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_05">SCE_USBCAM_EVLEVEL_MINUS_05</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_07">SCE_USBCAM_EVLEVEL_MINUS_07</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_10">SCE_USBCAM_EVLEVEL_MINUS_10</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_13">SCE_USBCAM_EVLEVEL_MINUS_13</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_15">SCE_USBCAM_EVLEVEL_MINUS_15</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_17">SCE_USBCAM_EVLEVEL_MINUS_17</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_20">SCE_USBCAM_EVLEVEL_MINUS_20</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetZoom"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetZoom<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set USB camera zoom <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;

int <b>sceUsbCamSetZoom</b> (
	int <i>zoom</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>zoom</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Zoom magnification &nbsp;&nbsp;<br>&nbsp;&nbsp;10-80: The magnification that is set is the specified value multiplied by 0.1.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function is successful, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_ID">SCE_USBCAM_ERROR_INVALID_ID</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>, <br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the zoom function of the USB camera.<br>The maximum magnification that can be specified depends on the specified resolution and the frame rate as shown in the following table.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>QQVGA</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>QCIF</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>QVGA</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>CIF</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>VGA</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>XGA</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>SXGA</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>PSP1</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>PSP2</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Less than or equal to 15fps&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;8.0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;6.6&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4.0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;3.3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2.0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1.3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1.0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2.8&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;3.6&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Greater than 15fps&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4.0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;3.3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2.0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1.7&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1.0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1.0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1.0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1.4&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1.8&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">Although the zoom magnification is common for moving images and still images, when a still image is obtained by specifying a higher resolution than that for a moving image, the zoom magnification may be reduced in accordance with the limit of the (higher) still image resolution. In other words, the photographic range for the still image may be wider than that for the moving image.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetZoom">sceUsbCamGetZoom</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetAntiFlicker"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetAntiFlicker<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set USB camera flicker cancellation frequency<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;

int <b>sceUsbCamSetAntiFlicker</b> (
	int <i>freq</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>freq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flicker frequency to be canceled&nbsp;&nbsp;<br>&nbsp;&nbsp;Specify one of the following constant definitions.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLICKER_AUTO">SCE_USBCAM_FLICKER_AUTO</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLICKER_60Hz">SCE_USBCAM_FLICKER_60Hz</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLICKER_50Hz">SCE_USBCAM_FLICKER_50Hz</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function is successful, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_ID">SCE_USBCAM_ERROR_INVALID_ID</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>, <br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the flicker frequency to be canceled by the USB camera. The initial setting is to have the camera automatically determine the frequency.<br>If the USB camera is not connected or if a suspend was performed while the camera was operating, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. Be sure to take an action such as prompting the user to connect the USB camera or requesting input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamGetAntiFlicker">sceUsbCamGetAntiFlicker</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetSaturation"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetSaturation<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get saturation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamGetSaturation</b>(
	int *<i>level</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to storage destination&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the saturation level that is currently set. Values from 0 to 255 can be set. A larger value indicates greater saturation.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetSaturation">sceUsbCamSetSaturation</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetBrightness"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetBrightness<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get brightness<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamGetBrightness</b>(
	int *<i>level</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to storage destination&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the brightness level that is currently set. Values from 0 to 255 can be set. <br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetBrightness">sceUsbCamSetBrightness</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetContrast"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetContrast<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get contrast<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamGetContrast</b>(
	int *<i>level</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to destination where value will be stored&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the contrast that is currently set. Values that are obtained are from 0 to 255. Larger values indicate darker tones.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetContrast">sceUsbCamSetContrast</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetSharpness"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetSharpness<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get sharpness<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamGetSharpness(</b>
	int *<i>level</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to storage destination&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the sharpness level that is currently set. Values from 0 to 255 can be set. A larger value indicates greater sharpness.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetSharpness">sceUsbCamSetSharpness</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetImageEffectMode"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetImageEffectMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get image effect setting<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamGetImageEffectMode</b> (
	int *<i>mode</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to destination where image effect that is currently specified is stored&nbsp;&nbsp;<br>&nbsp;&nbsp;The following definitions are stored&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_NORMAL">SCE_USBCAM_EFFECT_MODE_NORMAL</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_NEGA">SCE_USBCAM_EFFECT_MODE_NEGA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_BW">SCE_USBCAM_EFFECT_MODE_BW</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_SEPIA">SCE_USBCAM_EFFECT_MODE_SEPIA</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_BLUISH">SCE_USBCAM_EFFECT_MODE_BLUISH</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_REDISH">SCE_USBCAM_EFFECT_MODE_REDISH</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_GREENISH">SCE_USBCAM_EFFECT_MODE_GREENISH</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the effect that is set for JPEG images that are obtained from the USB camera.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetImageEffectMode">sceUsbCamSetImageEffectMode</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_NORMAL">SCE_USBCAM_EFFECT_MODE_NORMAL</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_NEGA">SCE_USBCAM_EFFECT_MODE_NEGA</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_BW">SCE_USBCAM_EFFECT_MODE_BW</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_SEPIA">SCE_USBCAM_EFFECT_MODE_SEPIA</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_BLUISH">SCE_USBCAM_EFFECT_MODE_BLUISH</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_REDISH">SCE_USBCAM_EFFECT_MODE_REDISH</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EFFECT_MODE_GREENISH">SCE_USBCAM_EFFECT_MODE_GREENISH</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsdCamGetReverseMode"></a>
<table width="100%"><td width="70%"><font size=6>sceUsdCamGetReverseMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reverse image<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamGetReverseMode</b>(
	int *<i>mode</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to storage destination for storing image reversal state.&nbsp;&nbsp;<br>&nbsp;&nbsp;The value stored is the logical OR of the following definitions.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLIP_ON">SCE_USBCAM_FLIP_ON</a>      Up and down reversal (flip) is set.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_MIRROR_ON">SCE_USBCAM_MIRROR_ON</a>  Left and right reversal (mirror) is set.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the up and down or left and right reversal state for JPEG images that are obtained from the USB camera.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLIP_ON">SCE_USBCAM_FLIP_ON</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_MIRROR_ON">SCE_USBCAM_MIRROR_ON</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetEvLevel"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetEvLevel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get USB camera exposure compensation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;

int <b>sceUsbCamGetEvLevel</b> (
	int *<i>level</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to variable where EV compensation value will be stored.&nbsp;&nbsp;<br>&nbsp;&nbsp;One of the following definitions is stored.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_20">SCE_USBCAM_EVLEVEL_PLUS_20</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_17">SCE_USBCAM_EVLEVEL_PLUS_17</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_15">SCE_USBCAM_EVLEVEL_PLUS_15</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_13">SCE_USBCAM_EVLEVEL_PLUS_13</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_10">SCE_USBCAM_EVLEVEL_PLUS_10</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_07">SCE_USBCAM_EVLEVEL_PLUS_07</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_05">SCE_USBCAM_EVLEVEL_PLUS_05</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_03">SCE_USBCAM_EVLEVEL_PLUS_03</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_00">SCE_USBCAM_EVLEVEL_00</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_03">SCE_USBCAM_EVLEVEL_MINUS_03</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_05">SCE_USBCAM_EVLEVEL_MINUS_05</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_07">SCE_USBCAM_EVLEVEL_MINUS_07</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_10">SCE_USBCAM_EVLEVEL_MINUS_10</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_13">SCE_USBCAM_EVLEVEL_MINUS_13</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_15">SCE_USBCAM_EVLEVEL_MINUS_15</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_17">SCE_USBCAM_EVLEVEL_MINUS_17</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_20">SCE_USBCAM_EVLEVEL_MINUS_20</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function is successful, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the exposure compensation value that is currently set for the USB camera.<br>If the USB camera is not connected or a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetEvLevel">sceUsbCamSetEvLevel</a> ()<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_20">SCE_USBCAM_EVLEVEL_PLUS_20</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_17">SCE_USBCAM_EVLEVEL_PLUS_17</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_15">SCE_USBCAM_EVLEVEL_PLUS_15</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_13">SCE_USBCAM_EVLEVEL_PLUS_13</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_10">SCE_USBCAM_EVLEVEL_PLUS_10</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_07">SCE_USBCAM_EVLEVEL_PLUS_07</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_05">SCE_USBCAM_EVLEVEL_PLUS_05</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_PLUS_03">SCE_USBCAM_EVLEVEL_PLUS_03</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_00">SCE_USBCAM_EVLEVEL_00</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_03">SCE_USBCAM_EVLEVEL_MINUS_03</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_05">SCE_USBCAM_EVLEVEL_MINUS_05</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_07">SCE_USBCAM_EVLEVEL_MINUS_07</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_10">SCE_USBCAM_EVLEVEL_MINUS_10</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_13">SCE_USBCAM_EVLEVEL_MINUS_13</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_15">SCE_USBCAM_EVLEVEL_MINUS_15</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_17">SCE_USBCAM_EVLEVEL_MINUS_17</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_EVLEVEL_MINUS_20">SCE_USBCAM_EVLEVEL_MINUS_20</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetZoom"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetZoom<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get USB camera zoom setting<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;

int <b>sceUsbCamGetZoom</b> (
	int *<i>zoom</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>zoom</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to buffer where zoom value that is set will be stored&nbsp;&nbsp;<br>&nbsp;&nbsp;A value from 10 to 80 is stored. The magnification that is set is the specified value multiplied by 0.1.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function is successful, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>, <br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the zoom magnification value that is currently set.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetZoom">sceUsbCamSetZoom</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetAntiFlicker"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetAntiFlicker<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get USB camera flicker cancellation frequency<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;

int <b>sceUsbCamGetAntiFlicker</b> (
	int *<i>freq</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>freq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to buffer for storing the value that is currently set&nbsp;&nbsp;<br>&nbsp;&nbsp;One of the following values is set.&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLICKER_AUTO">SCE_USBCAM_FLICKER_AUTO</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLICKER_50Hz">SCE_USBCAM_FLICKER_50Hz</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_FLICKER_60Hz">SCE_USBCAM_FLICKER_60Hz</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function is successful, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>, <br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the currently specified frequency for which flicker is to be canceled.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetAntiFlicker">sceUsbCamSetAntiFlicker</a>()<br><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamAutoImageReverseSW"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamAutoImageReverseSW<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set automatic reversal of image<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamAutoImageReverseSW</b>(
	int sw
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sw</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Automatic image reversal specification&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_AUTO_IMAGEREVERSE_OFF">SCE_USBCAM_AUTO_IMAGEREVERSE_OFF</a> Do not automatically reverse image&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_AUTO_IMAGEREVERSE_ON">SCE_USBCAM_AUTO_IMAGEREVERSE_ON</a>  Automatically reverse image&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets whether the image that is obtained from the USB camera is to be up and down or left and right reversed by the library or explicitly reversed by the application when the USB camera direction is manually changed by the user.<br>If automatic reversal is set, then the library and USB camera perform mirror (left and right) reversal when your own side is being photographed or flip (up and down) and mirror (left and right) reversal when the other side is being photographed.<br>If the USB camera driver enters Deconfigured state, this setting is reset.<br>If the USB camera is not connected or if a suspend was performed during camera operation, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_AUTO_IMAGEREVERSE_ON">SCE_USBCAM_AUTO_IMAGEREVERSE_ON</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_AUTO_IMAGEREVERSE_OFF">SCE_USBCAM_AUTO_IMAGEREVERSE_OFF</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetAutoImageReverseState"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetAutoImageReverseState<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get automatic image reversal setting<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamGetAutoImageReverseState</b> (
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_AUTO_IMAGEREVERSE_ON">SCE_USBCAM_AUTO_IMAGEREVERSE_ON</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_AUTO_IMAGEREVERSE_OFF">SCE_USBCAM_AUTO_IMAGEREVERSE_OFF</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the automatic reversal setting state that is currently set. If automatic reversal has been set, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_AUTO_IMAGEREVERSE_ON">SCE_USBCAM_AUTO_IMAGEREVERSE_ON</a> is returned, and if it has not been set, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_AUTO_IMAGEREVERSE_OFF">SCE_USBCAM_AUTO_IMAGEREVERSE_OFF</a> is returned.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_AUTO_IMAGEREVERSE_ON">SCE_USBCAM_AUTO_IMAGEREVERSE_ON</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_AUTO_IMAGEREVERSE_OFF">SCE_USBCAM_AUTO_IMAGEREVERSE_OFF</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="lensrotationcallback"></a>
<table width="100%"><td width="70%"><font size=6>lensrotationcallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Camera lens rotation detection callback prototype<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>lensrotationcallback</b>(
	int <i>count,</i>
	int <i>arg,</i>
	void *<i>common</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Called in the context of the thread for which the callback was created using <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>().<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>count</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback call count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback argument&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>common</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback cookie&nbsp;&nbsp;<br>&nbsp;&nbsp;The value that was assigned by the <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>() function is passed.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The callback passes one of the following values in the argument <i>arg.</i><br>#include &lt;usbcam.h&gt;<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_LENSDIRECTION_OUT">SCE_USBCAM_LENSDIRECTION_OUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Lens is facing outward (UMD&trade; side)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_LENSDIRECTION_IN">SCE_USBCAM_LENSDIRECTION_IN</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Lens is facing inward (display side)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The callback must always return 0.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a prototype of the callback function that is reported when there is a change in the lens direction of the USB camera.<br><br>To receive a notification callback from the USB Camera library, call <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamRegisterLensRotationCallback">sceUsbCamRegisterLensRotationCallback</a>() to register the callback and pass it the SceUID of the callback. The SceUID of the callback was obtained from <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>() when the callback was created.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamRegisterLensRotationCallback">sceUsbCamRegisterLensRotationCallback</a>(), <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamRegisterLensRotationCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamRegisterLensRotationCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Register camera lens rotation detection callback<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamRegisterLensRotationCallback</b>(
	SceUID <i>cbid</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cbid</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback ID to be registered&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, SCE_KERNEL_ERROR_OK is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_ID">SCE_USBCAM_ERROR_INVALID_ID</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_ALREADY_REG_CB">SCE_USBCAM_ERROR_ALREADY_REG_CB</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function registers the callback for detecting rotation of the USB camera lens.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#lensrotationcallback">lensrotationcallback</a>(), <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamUnregisterLensRotationCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamUnregisterLensRotationCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Cancel registration of camera lens rotation detection callback<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamUnegisterLensRotationCallback</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function succeeds, the canceled callback ID (positive value) is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NO_REG_CB">SCE_USBCAM_ERROR_NO_REG_CB</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function cancels the callback that was registered for detecting rotation of the USB camera lens. Be sure to use <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelDeleteCallback">sceKernelDeleteCallback</a>() to delete the canceled callback.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelDeleteCallback">sceKernelDeleteCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetLensDirection"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetLensDirection<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get camera lens direction<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamGetLensDirection</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes successfully, one of the following definitions is returned.<br>#include &lt;usbcam.h&gt;<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBCAM_LENSDIRECTION_OUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The lens is facing outward (UMD&trade; side)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBCAM_LENSDIRECTION_IN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The lens is facing inward (display side)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">If an error occurs, one of the following error codes or an error code defined in kerror.h or psperror.h is returned.<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the current lens direction of the USB camera.<br>If this function is called immediately after the USB camera entered Configured state, and a status inquiry by the library to the USB camera has not completed, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> is returned. At this time, you should wait a while, then call this function again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_LENSDIRECTION_OUT">SCE_USBCAM_LENSDIRECTION_OUT</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_LENSDIRECTION_IN">SCE_USBCAM_LENSDIRECTION_IN</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetupMic"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetupMic<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize mic input and set parameters<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamSetupMic </b>(
	const <a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamMicParam">SceUsbCamMicParam</a> <i>*param,</i>
	void <i>*work,</i>
	SceSize <i>work_size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>param</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Parameter set to be specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>work</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of work memory to be assigned&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>work_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of work memory to be assigned (multiple of 64)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_FREQUENCY">SCE_USBCAM_ERROR_INVALID_FREQUENCY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function initializes mic input and sets parameters.<br>It cannot be called while mic input processing is being executed.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamMicParam">SceUsbCamMicParam</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamStartMic"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamStartMic<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Start mic input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamStartMic</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NO_WORKBUFFER">SCE_USBCAM_ERROR_NO_WORKBUFFER</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function starts mic input from the USB camera. This enables PCM data to be captured into the work area that was assigned by <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>().As long as data in the work area is not read out by using a function such as <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamReadMic">sceUsbCamReadMic</a>(), the frame itself is always updated.<br>If this function is being used together with video acquisition and it is called immediately after <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopMic">sceUsbCamStopMic</a>(), then if <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a> is returned by this function, it means that mic input termination processing of the USB camera device itself has not completed. In this case, wait a while and then call this function again. It takes approximately 0.2ms for mic input termination processing to finish.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#SceUsbCamMicParam">SceUsbCamMicParam</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamStopMic"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamStopMic<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Stop mic input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamStopMic</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>,<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function stops mic input from the USB camera and clears the work area that was assigned by <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>(). After this function is issued, data in the work area cannot be read out by using a function such as <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamReadMic">sceUsbCamReadMic</a>(). If this function is being used together with video acquisition, it may take approximately 0.2ms from the time this function is called until processing finishes on the device.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamReadMicBlocking"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamReadMicBlocking<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Mic input (blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamReadMicBlocking</b>(
	void <i>*buf,</i>
	SceSize <i>size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to storage destination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of input samples&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the size (( 0) of the acquired data is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_SIZE">SCE_USBCAM_ERROR_INVALID_SIZE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_RUNNING">SCE_USBCAM_ERROR_NOT_RUNNING</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets mic input. The thread is placed in a wait state until input has completed or an error occurs.<br>Before calling this function, <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>() must be used to initialize mic input. If mic input has not been initialized, an SCE_ERROR_NOT_INITIALIZED error is returned.<br><br>If the USB camera is not connected or if a suspend was performed during mic input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br>Note that if the function ended with an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error, you do not need to call the <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopMic">sceUsbCamStopMic</a>() function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUFSIZE  512

short PcmBuf[BUFSIZE];  /* Input buffer */
int ret;

/* Start mic input*/
ret = <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStartMic">sceUsbCamStartMic</a> ();
if(ret &lt; 0){
 // Error handling
}

/* Get PCM data */
ret = sceUsbCamReadMicBlocking(Buf, sizeof(Buf));
if (ret &lt; 0) {
	// Error handling
}
else if(ret &gt; 0){
	// Acquisition succeeded
}

/* Stop mic input */
ret = <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopMic">sceUsbCamStopMic</a> ();
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStartMic">sceUsbCamStartMic</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopMic">sceUsbCamStopMic</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamReadMic"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamReadMic<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Mic input (non-blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamReadMic</b>(
	void <i>*buf,</i>
	SceSize <i>size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to storage destination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of input samples&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_RUNNING">SCE_USBCAM_ERROR_NOT_RUNNING</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs mic input. When mic input begins, the function returns immediately without waiting. You can check for the completion of mic input by calling the <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamWaitReadMicEnd">sceUsbCamWaitReadMicEnd</a>() or <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamPollReadMicEnd">sceUsbCamPollReadMicEnd</a>() functions.<br>Before calling this function, you must call <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>() to initialize mic input. If mic input has not been initialized, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> error is returned.<br>If the USB camera is not connected or a suspend was performed during mic input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUFSIZE  512

short PcmBuf[BUFSIZE];  /* Input buffer */
int ret;

ret = <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStartMic">sceUsbCamStartMic</a> ();
if(ret &lt; 0){
	// Error handling
}

/* Perform mic input */
ret = sceUsbCamReadMic (PcmBuf, sizeof(PcmBuf));
if (ret&lt; 0) {
	// Error handling
}

/* Wait for completion of mic input */
ret = <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamWaitReadMicEnd">sceUsbCamWaitReadMicEnd</a>()
if (ret &lt; 0) {
	// Error handling
}

/* Stop mic input */
ret = <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopMic">sceUsbCamStopMic</a>();
if(ret &lt; 0)
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamSetupMic">sceUsbCamSetupMic</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStartMic">sceUsbCamStartMic</a>(), <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopMic">sceUsbCamStopMic</a>()<a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStopVideo">sceUsbCamStopVideo</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamWaitReadMicEnd">sceUsbCamWaitReadMicEnd</a>(),<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamPollReadMicEnd">sceUsbCamPollReadMicEnd</a>(),<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamGetMicDataLength"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamGetMicDataLength<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of acquired samples<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamGetMicDataLength</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the size of the PCM data that was acquired is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the size of the 16-bit PCM data that was acquired.<br>If mic input has not been started, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> error will be returned.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamWaitReadMicEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamWaitReadMicEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Wait for completion of mic input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamWaitReadMicEnd</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the size of the PCM data that was copied to the buffer is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_RUNNING">SCE_USBCAM_ERROR_NOT_RUNNING</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function waits for the completion of mic input. The function waits until mic input has completed or an error occurs.<br>If mic input has not yet been started even though mic input was initialized, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a> error will be returned.<br>If <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamReadMic">sceUsbCamReadMic</a>() has not been issued, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a> error will be returned.<br>If the USB camera is not connected or if a suspend was performed during mic input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamStartMic">sceUsbCamStartMic</a>()<br><a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamReadMic">sceUsbCamReadMic</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamPollReadMicEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamPollReadMicEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get mic input completion status<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;

int <b>sceUsbCamPollReadMicEnd</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If mic input has completed, the size of the 16-bit PCM data that was acquired is returned; if it has not completed, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_READ_DONE">SCE_USBCAM_ERROR_NOT_READ_DONE</a> is returned.<br>If <a href="../peripheral/USB_Camera-Reference-English.htm#sceUsbCamReadMic">sceUsbCamReadMic</a>() has not been called, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a> is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_READ_DONE">SCE_USBCAM_ERROR_NOT_READ_DONE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_RUNNING">SCE_USBCAM_ERROR_NOT_RUNNING</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a value indicating whether or not mic input has completed.<br><br>If the USB camera is not connected or if a suspend was performed during mic input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbCamSetMicGain"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbCamSetMicGain<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set mic input gain<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbcam.h&gt;
int <b>sceUsbCamSetMicGain</b>(
	int <i>gain</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>gain</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Gain value to be set [dB]&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function is successful, 0 is returned.<br>If an error occurs, one of the following error codes or an error code that is defined in kerror.h or psperror.h is returned.<br><br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>, <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>,<br><a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the gain for mic input. The gain can be set even when no mic input is being performed.<br><br>If the USB camera is not connected or if a suspend was performed during mic input, an <a href="../peripheral/USB_Camera-Reference-English.htm#SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a> error is returned. In this case, you should take an action such as prompting the user to connect the USB camera and request input again.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Error codes returned by the USB Camera library<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBACC_ERROR_NOT_ACCESSORY">SCE_USBACC_ERROR_NOT_ACCESSORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243701&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connected to a USB host other than a USB accessory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_NOT_INITIALIZED">SCE_USBCAM_ERROR_NOT_INITIALIZED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243901&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Initialization has not yet been performed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_NOT_AVAILABLE">SCE_USBCAM_ERROR_NOT_AVAILABLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243902&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Currently unavailable&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_INVALID_SIZE">SCE_USBCAM_ERROR_INVALID_SIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243903&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_PRIV_REQUIRED">SCE_USBCAM_ERROR_PRIV_REQUIRED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243904&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid privilege&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_INVALID_ID">SCE_USBCAM_ERROR_INVALID_ID</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243905&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_INVALID_LV">SCE_USBCAM_ERROR_INVALID_LV</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243906&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid level&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_INVALID_VALUE">SCE_USBCAM_ERROR_INVALID_VALUE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243907&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_NOT_STARTED">SCE_USBCAM_ERROR_NOT_STARTED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243908&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Driver has not been started&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_INPUT_BUSY">SCE_USBCAM_ERROR_INPUT_BUSY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243909&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data is being input&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_BUFFER_SIZE">SCE_USBCAM_ERROR_BUFFER_SIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8024390A&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient work buffer size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_INVALID_FREQUENCY">SCE_USBCAM_ERROR_INVALID_FREQUENCY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8024390B&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid frequency&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_NOT_START_READ">SCE_USBCAM_ERROR_NOT_START_READ</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8024380C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data read function has not been called&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_NOT_READ_DONE">SCE_USBCAM_ERROR_NOT_READ_DONE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8024380E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data reading has not finished&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_NO_REG_CB">SCE_USBCAM_ERROR_NO_REG_CB</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8024380F&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback has not been registered&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_ALREADY_REG_CB">SCE_USBCAM_ERROR_ALREADY_REG_CB</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243810&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Callback is already registered&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_NO_WORKBUFFER">SCE_USBCAM_ERROR_NO_WORKBUFFER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243811&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Work area has not been set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_NOT_RUNNING">SCE_USBCAM_ERROR_NOT_RUNNING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243812&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input processing has not been started&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBCAM_ERROR_GET_VALUE">SCE_USBCAM_ERROR_GET_VALUE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80243813&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Failed to get value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
