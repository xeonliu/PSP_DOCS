<html lang="jp">
<head>
<title>libfpu-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libfpu
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuGetFCR31"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuGetFCR31<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>FPU制御レジスタの取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;allegrex.h&gt;
#include &lt;libfpu.h&gt;
unsigned int <b>sceFpuGetFCR31</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPU制御レジスタFCR31の値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPUのcfc1命令を使ってFPU制御レジスタFCR31を取得します。<br>FCR31の各ビットについての定義マクロはallegrex.h内にあります。<br>詳しくは「ALLEGREX FPU User's Manual」を参照してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuSetFCR31">sceFpuSetFCR31</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuSetFCR31"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuSetFCR31<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>FPU制御レジスタの設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;allegrex.h&gt;
#include &lt;libfpu.h&gt;
unsigned int <b>sceFpuSetFCR31</b> (
	unsigned int <i>newfcr</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>newfcr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;新しく制御レジスタに設定する値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPU制御レジスタFCR31の現在の値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPUのcfc1命令、ctc1命令を使ってFPU制御レジスタFCR31を設定します。<br>FCR31の各ビットについての定義マクロはallegrex.h内にあります。<br>詳しくは「ALLEGREX FPU User's Manual」を参照してください。<br></div>
<br>

<!-- sce_title -->
<a Name ="HeadingT_1_1">
<div style="margin-left:40px;"><h4><b>注意事項</b><br><br></h4></div></a>

<div style="margin-left:50px;">設定する値のEnablesフィールドおよびCauseフィールドの組み合わせによってはsceFpuSetFCR31()関数内でFPU例外が発生する事があります。詳しくは「ALLEGREX FPU User's Manual」を参照してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuGetFCR31">sceFpuGetFCR31</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuAbs"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuAbs<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>絶対値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuAbs</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">値の絶対値|<i>s</i>|を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPUのabs.s命令を使って絶対値を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">fabsf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuCeil"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuCeil<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>切り上げ値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
int <b>sceFpuCeil</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>以上の最小の整数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPUのceil.w.s命令を使って小数点以下を切り上げた値を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ceilf(), __builtin_allegrex_ceil_w_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuFloor"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuFloor<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>切り捨て値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
int <b>sceFpuFloor</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>以下の最大の整数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPUのfloor.w.s命令を使って小数点以下を切り捨てた値を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">floorf(), __builtin_allegrex_floor_w_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuMax"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuMax<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>最大値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuMax</b> (
	float <i>a</i>,
	float <i>b</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>a</i>と<i>b</i>の大きい方の値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>a</i>と<i>b</i>の大きい方の値を返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuMin">sceFpuMin</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuMin"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuMin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>最小値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuMin</b> (
	float <i>a</i>,
	float <i>b</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>a</i>と<i>b</i>の小さい方の値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>a</i>と<i>b</i>の小さい方の値を返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuMax">sceFpuMax</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuNeg"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuNeg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>符号反転<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuNeg</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">符号を反転させた値-<i>s</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPUのneg.s命令を使って符号を反転した値を計算します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuRound"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuRound<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>近傍値丸め<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuRound</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>に最も近い整数値を表わす浮動小数点値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPUのround.w.s命令を使って近傍丸めを計算します。<br><br>roundはもっとも近い整数に丸める処理ですが、0.5, 1.5, 2.5など隣り合う整数への距離が等しい場合にどちらの整数に丸めるかはlibcのround(), roundf()関数とsceFpuRound()関数で動作が異なります。round(), roundf()関数では0より遠い方への丸めになりますが、sceFpuRound()関数はIEEE754準拠のALLEGREX FPUのround.w.s命令に直接対応しているため、偶数側の整数への丸めになります。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">roundf(), __builtin_allegrex_round_w_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuRsqrt"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuRsqrt<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>平方根の逆数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuRsqrt</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の平方根の逆数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPUのsqrt.s命令、div.s命令を使って平方根の逆数を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sqrtf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuSqrt"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuSqrt<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>平方根<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuSqrt</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の平方根を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPUのsqrt.s命令を使って平方根を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sqrtf(), __builtin_allegrex_sqrt_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuTrunc"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuTrunc<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>0方向丸め<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuTrunc</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>に最も近い0方向の整数値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">FPUのtrunc.w.s命令を使って小数点以下を0方向に切り捨てた値を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">truncf(), __builtin_allegrex_trunc_w_s()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuIsZero"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuIsZero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ゼロ値のチェック<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
int<b> sceFpuIsZero</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値により、3つの値のうちのどれかを返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>がプラスゼロだったとき&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>がゼロ値ではなかったとき&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>がマイナスゼロだったとき&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値がゼロ値であるかどうか判別します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuPositiveZero">sceFpuPositiveZero</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuNegativeZero">sceFpuNegativeZero</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuPositiveZero"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuPositiveZero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>プラスゼロ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuPositiveZero</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">符号ビットが正のゼロを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">32ビット浮動小数点数のゼロのバイナリ表現は、0x00000000と0x80000000がありまますが、この関数では符号ビットが正のゼロ、つまりバイナリ表現で0x00000000となる方のゼロを返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuNegativeZero">sceFpuNegativeZero</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsZero">sceFpuIsZero</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuNegativeZero"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuNegativeZero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>マイナスゼロ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuNegativeZero</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">符号ビットが負のゼロを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">32ビット浮動小数点数のゼロのバイナリ表現は、0x00000000と0x80000000がありまますが、この関数では符号ビットが負のゼロ、つまりバイナリ表現で0x80000000となる方のゼロを返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuPositiveZero">sceFpuPositiveZero</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsZero">sceFpuIsZero</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuIsDenormal"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuIsDenormal<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>非正規化数のチェック<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
int<b> sceFpuIsDenormal</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値により、3つの値のうちのどれかを返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が正の非正規化数だったとき&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が非正規化数ではなかったとき&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が負の非正規化数だったとき&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値が非正規化数であるかどうか判別します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsZeroOrDenormal">sceFpuIsZeroOrDenormal</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuIsZeroOrDenormal"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuIsZeroOrDenormal<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ゼロまたは非正規化数のチェック<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
int<b> sceFpuIsZeroOrDenormal</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値により、3つの値のうちのどれかを返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が正のゼロまたは正の非正規化数だったとき&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>がゼロまたは非正規化数ではなかったとき&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が負のゼロまたは負の非正規化数だったとき&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値がゼロまたは非正規化数であるかどうか判別します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsZero">sceFpuIsZero</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsDenormal">sceFpuIsDenormal</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuPositiveInf"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuPositiveInf<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>正の無限大<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuPositiveInf</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">+&infin;(正の無限大)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正の無限大(バイナリ表現で0x7F800000)を返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsInf">sceFpuIsInf</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuNegativeInf">sceFpuNegativeInf</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuNegativeInf"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuNegativeInf<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>負の無限大<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuNegativeInf</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">-&infin;(負の無限大)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">負の無限大(バイナリ表現で0xFF800000)を返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsInf">sceFpuIsInf</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuPositiveInf">sceFpuPositiveInf</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuIsInf"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuIsInf<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>無限大のチェック<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
int<b> sceFpuIsInf</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値により、3つの値のうちのどれかを返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が正の無限大だったとき&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が正または負の無限大ではなかったとき&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が負の無限大だったとき&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値が正の無限大または負の無限大であるかどうか判別します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuPositiveInf">sceFpuPositiveInf</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuNegativeInf">sceFpuNegativeInf</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuPositiveNaN"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuPositiveNaN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>NaN (正のSNaN)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuPositiveNaN</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを、バイナリ表現で0x7F800001となるシグナルNaNで返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを返します。IEEE754ではNaNの場合の符号ビットは意味を持ちませんが、sceFpuPositiveNaN()関数では符号ビットが0(正)のシグナルNaNを返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsNaN">sceFpuIsNaN</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuNegativeNaN">sceFpuNegativeNaN</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuNegativeNaN"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuNegativeNaN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>NaN (負のSNaN)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuNegativeNaN </b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを、バイナリ表現で0xFF800001となるシグナルNaNで返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを返します。IEEE754ではNaNの場合の符号ビットは意味を持ちませんが、sceFpuNegativeNaN()関数では符号ビットが1(負)のシグナルNaNを返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsNaN">sceFpuIsNaN</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuPositiveNaN">sceFpuPositiveNaN</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuPositiveSNaN"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuPositiveSNaN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>シグナルNaN (正のSNaN)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuPositiveSNaN</b> (
	unsigned int <i>uiSignal</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSignal</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;シグナル値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを、引数<i>uiSignal</i>で指定されたシグナル値をbit 21〜0に持つシグナルNaNで返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを返します。IEEE754ではNaNの場合の符号ビットや仮数部のbit 21〜0は意味を持ちませんが、sceFpuPositiveSNaN()関数では符号ビットが0(正)、仮数部の最上位ビットbit22が0(シグナルNaN)を返します。仮数部のbit 21〜0の値は引数<i>uiSignal</i>で指定する事ができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsNaN">sceFpuIsNaN</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuNegativeSNaN">sceFpuNegativeSNaN</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuNegativeSNaN"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuNegativeSNaN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>シグナルNaN (負のSNaN)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuNegativeSNaN </b>(
	unsigned int <i>uiSignal</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSignal</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;シグナル値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを、引数<i>uiSignal</i>で指定されたシグナル値をbit 21〜0に持つシグナルNaNで返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを返します。IEEE754ではNaNの場合の符号ビットや仮数部のbit 21〜0は意味を持ちませんが、sceFpuNegativeSNaN()関数では符号ビットが1(負)、仮数部の最上位ビットbit22が0(シグナルNaN)を返します。仮数部のbit 21〜0の値は引数<i>uiSignal</i>で指定する事ができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsNaN">sceFpuIsNaN</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuPositiveSNaN">sceFpuPositiveSNaN</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuPositiveQNaN"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuPositiveQNaN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クワイエットNaN (正のQNaN)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuPositiveQNaN</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを、バイナリ表現で0x7FC00001となるクワイエットNaNで返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを返します。IEEE754ではNaNの場合の符号ビットは意味を持ちませんが、sceFpuPositiveQNaN()関数では符号ビットが0(正)のクワイエットNaNを返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsNaN">sceFpuIsNaN</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuNegativeQNaN">sceFpuNegativeQNaN</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuNegativeQNaN"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuNegativeQNaN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クワイエットNaN (負のQNaN)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float <b>sceFpuNegativeQNaN </b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを、バイナリ表現で0xFFC00001となるクワイエットNaNで返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非数NaNを返します。IEEE754ではNaNの場合の符号ビットは意味を持ちませんが、sceFpuNegativeQNaN()関数では符号ビットが1(負)のクワイエットNaNを返します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsNaN">sceFpuIsNaN</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuPositiveQNaN">sceFpuPositiveQNaN</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuIsNaN"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuIsNaN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>NaNのチェック<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
int<b> sceFpuIsNaN</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>がNaNである場合、符号ビットおよびシグナル値が返ります。<br><i>s</i>がNaNではなかった場合、0が返ります。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;!=0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>がNaNだったとき&nbsp;&nbsp;<br>&nbsp;&nbsp;bit 31: <i>s</i>の符号ビット&nbsp;&nbsp;<br>&nbsp;&nbsp;bit 22: シグナル&nbsp;&nbsp;<br>&nbsp;&nbsp;　　　1= クワイエットNaN&nbsp;&nbsp;<br>&nbsp;&nbsp;　　　0= シグナルNaN&nbsp;&nbsp;<br>&nbsp;&nbsp;bit 21〜0: シグナル値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>がNaNではなかったとき&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値がNaNであるかどうか判別します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">isnanf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuIsInfOrNaN"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuIsInfOrNaN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>無限大または非数のチェック<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
int<b> sceFpuIsInfOrNaN </b>(
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値により、3つの値のうちのどれかを返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が正の無限大または正の非数だったとき&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が正または負の無限大または非数ではなかったとき&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>が負の無限大または負の非数だったとき&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の値が無限大またはまたは非数であるかどうか判別します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">isinf(), isnanf(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsInf">sceFpuIsInf</a>(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuIsNaN">sceFpuIsNaN</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuSin"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuSin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>正弦(サイン)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuSin</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sin(<i>s</i>)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>s</i>の正弦(サイン)を計算します。<br><i>s</i>の絶対値が<img src="gif/libfpu-Reference-Japanese001.gif">以下であれば、正確に求めたsinの値と比較して誤差は1LSB以下となります。</div>
<div style="margin-left:50px;"><i>s</i>の絶対値が約<img src="gif/libfpu-Reference-Japanese002.gif">を超える場合、正しい値は返りません。また、そのときFPU例外が発生する可能性があります。</div>
<div style="margin-left:50px;">FPUのみで計算するため、VFPUが使用できないスレッドからも呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sinf(), <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuScalarSin">sceVfpuScalarSin</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuCos"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuCos<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>余弦(コサイン)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuCos</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">cos(<i>s</i>)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>s</i>の余弦(コサイン)を計算します。<br><i>s</i>の絶対値が<img src="gif/libfpu-Reference-Japanese003.gif">以下であれば、正確に求めたcosの値と比較して誤差は1LSB以下となります。</div>
<div style="margin-left:50px;"><i>s</i>の絶対値が約<img src="gif/libfpu-Reference-Japanese004.gif">を超える場合、正しい値は返りません。また、そのときFPU例外が発生する可能性があります。</div>
<div style="margin-left:50px;">FPUのみで計算するため、VFPUが使用できないスレッドからも呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">cosf(), <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuScalarCos">sceVfpuScalarCos</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuTan"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuTan<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>正接(タンジェント)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuTan</b>(
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">tan(<i>s</i>)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>s</i>の正接(タンジェント)を計算します。<br><i>s</i>の絶対値が<img src="gif/libfpu-Reference-Japanese005.gif">以下であれば、正確に求めたtanの値と比較して誤差は1LSB以下となります。</div>
<div style="margin-left:50px;"><i>s</i>の絶対値が約<img src="gif/libfpu-Reference-Japanese006.gif">を超える場合、正しい値は返りません。また、そのときFPU例外が発生する可能性があります。</div>
<div style="margin-left:50px;">FPUのみで計算するため、VFPUが使用できないスレッドからも呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">tanf()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuAcos"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuAcos<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>逆余弦（アークコサイン）<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuAcos</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">acos(<i>s</i>)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>s</i>の逆余弦(アークコサイン)を計算します。<br><i>s</i>の値域によらず、正確に求めたacosの値と比較して誤差は1LSB以下となります。<br>FPUのみで計算するため、VFPUが使用できないスレッドからも呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">acosf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuAsin"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuAsin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>逆正弦（アークサイン)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuAsin</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">asin(<i>s</i>)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>s</i>の逆正弦(アークサイン)を計算します。<br><i>s</i>の値域によらず、正確に求めたasinの値と比較して誤差は1LSB以下となります。<br>FPUのみで計算するため、VFPUが使用できないスレッドからも呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">asinf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuAtan"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuAtan<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>逆正接（アークタンジェント)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuAtan</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">atan(<i>s</i>)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>s</i>の逆正接(アークタンジェント)を計算します。<br><i>s</i>の値域によらず、正確に求めたatanの値と比較して誤差は1LSB以下となります。<br>FPUのみで計算するため、VFPUが使用できないスレッドからも呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">atanf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuAtan2"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuAtan2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>逆正接（アークタンジェント)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuAtan2</b>(
	float <i>x</i>,
	float <i>y</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">atan(<i>x/y</i>)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>x</i>/<i>y</i>の逆正接(アークタンジェント)を計算します。<br><i>x</i>,<i>y</i>の値域によらず、正確に求めたatan2の値と比較して誤差は1LSB以下となります。<br>FPUのみで計算するため、VFPUが使用できないスレッドからも呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">atan2f()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuLog"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuLog<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>自然対数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuLog</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">log(<i>s</i>)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>s</i>の自然対数を計算します。<br>正確に求めたlogの値と比較して誤差は2LSB以下となります。<br>FPUのみで計算するため、VFPUが使用できないスレッドからも呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">logf(), <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuScalarLog">sceVfpuScalarLog</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuLog2"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuLog2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2を底とする対数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuLog2</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">log2(<i>s</i>)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>s</i>の2を底とする対数を計算します。<br>正確に求めたlog2の値と比較して誤差は2LSB以下となります。<br>FPUのみで計算するため、VFPUが使用できないスレッドからも呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">log2()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuLog10"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuLog10<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>常用対数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuLog10</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">log10(<i>s</i>)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>s</i>の常用対数を計算します。<br>正確に求めたlog10の値と比較して誤差は2LSB以下となります。<br>FPUのみで計算するため、VFPUが使用できないスレッドからも呼び出すことができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">log10()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuExp"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuExp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>底がeの指数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuExp</b> (
	float <i>x</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">e<sup><i>x</sup></i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いてeの<i>x</i>乗を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">expf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuExp2"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuExp2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>底が2の指数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuExp2</b> (
	float <i>x</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">2<sup><i>x</sup></i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて2の<i>x</i>乗を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">exp2f()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuExp10"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuExp10<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>底が10の指数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuExp10</b> (
	float <i>x</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">10<sup><i>x</sup></i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて10の<i>x</i>乗を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">exp10f()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFpuPow"></a>
<table width="100%"><td width="70%"><font size=6>sceFpuPow<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>累乗関数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libfpu.h&gt;
float<b> sceFpuPow</b> (
	float <i>x</i>,
	float <i>y</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可<br>スレッドから呼び出し可能（割り込み禁止、許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>x<sup>y</sup></i>を返します。<br><i>x</i>が負で<i>y</i>が整数値ではなかった場合に返り値はNaNになります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">多項式展開によりFPUを用いて<i>x</i>の<i>y</i>乗を計算します。<br><i>x</i>が負の値で<i>y</i>が整数値でない場合にNaNが発生します。<i>y</i>が整数値かどうかの判断には、floorおよびceilの演算結果が一致するかどうかを使っています。<i>y</i>の絶対値がfloatの精度を超える場合には注意してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">powf()<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
