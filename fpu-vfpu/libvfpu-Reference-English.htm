<html lang="en">
<head>
<title>libvfpu-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libvfpu Reference
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceVfpuRandContext"></a>
<table width="100%"><td width="70%"><font size=6>SceVfpuRandContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Pseudo random number seed register context<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
typedef struct SceVfpuRandContext {
   unsigned int <i>seed</i>[8];
} <b>SceVfpuRandContext </b>__attribute__((aligned(16)));

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used as a work area when the VFPU pseudo random number seed register values are saved as a context.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuRandSaveContext">sceVfpuRandSaveContext</a>(), <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuRandRestoreContext">sceVfpuRandRestoreContext</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceVfpuContext"></a>
<table width="100%"><td width="70%"><font size=6>SceVfpuContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Context of all VFPU registers<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
typedef struct SceVfpuContext {
	unsigned int <i>RegFile</i>[32][4];

	unsigned int <i>PFXS</i>;
	unsigned int <i>PFXT</i>;
	unsigned int <i>PFXD</i>;
	unsigned int <i>CC</i>;
	unsigned int <i>INF4</i>;
	unsigned int <i>reserved</i>[3];

	<a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuRandContext">SceVfpuRandContext</a> <i>prng</i>;
} <b>SceVfpuContext </b>__attribute__((aligned(16)));

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used as a work area when saving all the VFPU registers as a context.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuSaveContext">sceVfpuSaveContext</a>(), <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuRestoreContext">sceVfpuRestoreContext</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarAbs"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarAbs<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Absolute value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarAbs</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The absolute value |<i>s</i>| of the scalar value is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vabs.s instruction to calculate the absolute value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">fabsf(), <a href="../fpu-vfpu/libfpu-Reference-English.htm#sceFpuAbs">sceFpuAbs</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarAcos"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarAcos<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Arc cosine<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarAcos</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The arc cosine is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vasin.s instruction to calculate the arc cosine.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">acosf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarAsin"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarAsin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Arc sine<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarAsin</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The arc sine is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vasin.s instruction to calculate the arc sine.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">asinf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarAtan"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarAtan<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Arc tangent<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarAtan</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The arc tangent is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vasin.s instruction, etc. to calculate the arc tangent.<br><br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">atanf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarAtan2"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarAtan2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Arc tangent<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarAtan2</b> (
	float <i>y,</i>
	float <i>x</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The arc tangent of the two variables is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vasin.s instruction to calculate the arc tangent of the two variables. The quadrant is obtained from the signs of <i>y</i> and <i>x</i> for the arc tangent of <i>y/x</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">atanf2()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarCeil"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarCeil<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Round up<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarCeil</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The floating-point value representing the smallest integer greater than or equal to <i>s</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vf2iu.s and vi2f.s instructions to calculate the value obtained by rounding up the fraction.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ceilf(), <a href="../fpu-vfpu/libfpu-Reference-English.htm#sceFpuCeil">sceFpuCeil</a>(), __builtin_allegrex_ceil_w_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarCos"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarCos<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Cosine<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarCos</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The cosine is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vcos.s instruction to calculate the cosine.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">cosf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarExp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarExp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Base e exponential<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarExp</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The base e exponential is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vlog2.s and vexp2.s instructions to calculate the base e exponential.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">expf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarFloor"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarFloor<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Truncated value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarFloor</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The floating-point number representing the largest integer less than or equal to <i>s</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vf2id.s and vi2f.s instructions to calculate the value obtained by truncating the fraction.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">floorf(), <a href="../fpu-vfpu/libfpu-Reference-English.htm#sceFpuFloor">sceFpuFloor</a>(), __builtin_allegrex_floor_w_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarLog"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarLog<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Natural logarithm<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarLog</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The natural logarithm of <i>s</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vlog2.s and vexp2.s instructions to calculate the natural logarithm.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">logf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarLog2"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarLog2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Base 2 logarithm<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarLog2</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The base 2 logarithm is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vlog2.s instruction to calculate the base 2 logarithm.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarLog10"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarLog10<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Common logarithm<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarLog10</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The common logarithm is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vlog2.s and vexp2.s instructions to calculate the common logarithm.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">log10f()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarMax"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarMax<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Scalar maximum value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarMax</b> (
	float <i>a</i>,
	float <i>b</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The larger value of <i>a</i> and <i>b</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vmax.s instruction to select the larger value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-English.htm#sceFpuMax">sceFpuMax</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarMin"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarMin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Scalar minimum value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarMin</b> (
	float <i>a</i>,
	float <i>b</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The smaller value of <i>a</i> and <i>b</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vmin.s instruction to select the smaller value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-English.htm#sceFpuMin">sceFpuMin</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarPow"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarPow<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Exponential<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarPow</b> (
	float <i>x</i>,
	float <i>y</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>x<sup>y</sup></i> (<i>x</i> raised to the <i>y</i> power) is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vlog2.s and vexp2.s instructions to calculate <i>x<sup>y</sup></i> (<i>x</i> raised to the <i>y</i> power).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">powf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarPow2"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarPow2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Base 2 exponential<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarPow2</b> (
	float <i>x</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">2<sup><i>x</sup></i> (2 raised to the <i>x</i> power) is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vexp2.s instruction to calculate 2<sup><i>x</sup></i> (2 raised to the <i>x</i> power).<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarRound"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarRound<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Round to nearest value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarRound</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The floating-point value representing the nearest integer to <i>s</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vf2in.s and vi2f.s instructions to calculate the value obtained by rounding to the nearest integer.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">roundf(), <a href="../fpu-vfpu/libfpu-Reference-English.htm#sceFpuRound">sceFpuRound</a>(), __builtin_allegrex_round_w_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarRsqrt"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarRsqrt<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reciprocal of square root<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarRsqrt</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The reciprocal of the square root of <i>s</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vsqrt.s and vrcp.s instructions to calculate the reciprocal of the square root.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sqrtf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarSin"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarSin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Sine<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarSin</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The sine is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vsin.s instruction to calculate the sine.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sinf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarSqrt"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarSqrt<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Square root<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarSqrt</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The square root of <i>s</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vsqrt.s instruction to calculate the square root.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sqrtf(), <a href="../fpu-vfpu/libfpu-Reference-English.htm#sceFpuSqrt">sceFpuSqrt</a>(), __builtin_allegrex_sqrt_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarTan"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarTan<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Tangent<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarTan</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The tangent is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vcos.s and vsin.s instructions to calculate the tangent.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">tanf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarTrunc"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarTrunc<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Round towards zero<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarTrunc</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scalar floating-point value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The floating-point number representing the integer value closest to <i>s</i> in the direction towards zero is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vf2iz.s and vi2f.s instructions to calculate the value obtained by truncating the fraction in the direction towards zero.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">truncf(), <a href="../fpu-vfpu/libfpu-Reference-English.htm#sceFpuTrunc">sceFpuTrunc</a>(), __builtin_allegrex_trunc_w_s()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Abs"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Abs<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector absolute value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Abs</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the absolute value of vector <i>pv1</i> and returns the result in vector <i>pv0</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Add"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Add<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector addition<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Add</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually adds each element of vector <i>pv1</i> to the corresponding element of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Clamp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Clamp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector clamp<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Clamp</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Minimum value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Maximum value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function clamps each element of vector <i>pv1</i> by using minimum value <i>min</i> and maximum value <i>max</i> and returns the result in vector <i>pv0</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Copy 2D vector <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Copy</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function copies vector <i>pv1</i> to vector <i>pv0</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Div"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Div<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector division<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Div</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually divides each element of vector <i>pv1</i> by the corresponding element of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Hermite"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Hermite<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector Hermite spline interpolation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Hermite</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pt1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pt2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: position vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: connection vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: position vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: connection vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0 </i>is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the interpolation vector from vectors <i>pv1</i>, <i>pt1</i>, <i>pv2</i> and <i>pt2</i> and parameter <i>t</i>, and returns vector <i>pv0</i>.<br>This can be represented by the following formula.<br></div>
<div style="margin-left:70px;"><i>pv0 = pv1 * (2.0 * t<sup>3 </sup>- 3.0 * t<sup>2</sup>+ 1) + pt1 * (     t<sup>3 </sup>- 2.0 * t<sup>2 + </sup>t) + </i><br><i>     pt2* (     t<sup>3 </sup>-      t<sup>2</sup>) + pv2 * (-2.0 * t<sup>3 + </sup>3.0 * t<sup>2</sup>)</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2InnerProduct"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2InnerProduct<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector inner product<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuVector2InnerProduct</b> (
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The inner product of vectors <i>pv0 </i>and<i> pv1 </i>is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the inner product of vectors <i>pv0</i> and <i>pv1</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Lerp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Lerp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector interpolation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Lerp</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the interpolation vector from vectors <i>pv1</i> and <i>pv2</i> and parameter <i>t</i> and returns it in vector <i>pv0</i>.<br>This is represented by the following equation.<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pv1 </i>+ <i>t</i> * (<i>pv2 - pv1</i>)<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Max"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Max<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum value of 2D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Max</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually obtains the maximum value of each element of vectors <i>pv1</i> and <i>pv2</i> and sets it in vector <i>pv0</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuVector2Min">sceVfpuVector2Min</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Min"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Min<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Minimum value of 2D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Min</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually obtains the minimum value of each element of vectors <i>pv1</i> and <i>pv2</i> and sets it in vector <i>pv0</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuVector2Max">sceVfpuVector2Max</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector multiplication<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Mul</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually multiplies each element of vector <i>pv1</i> by the corresponding element of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Neg"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Neg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector sign reversal<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Neg</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function reverses the sign of vector <i>pv1</i> and copies it to vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Normalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Normalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector normalization<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Normalize</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function normalizes vector <i>pv1</i> and returns it in vector <i>pv0</i>.<br>However, if the vector which was passed in vector <i>pv1</i> was the zero vector, or was such a short vector that an underflow occurred when calculating the sum of squares, etc., then as an exception the zero vector is returned in vector <i>pv0</i>.<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Set"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Set<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set 2D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Set</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	float <i>x</i>,
	float <i>y</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for x element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for y element&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually sets the values of the x and y arguments of each element of vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiplication of 2D vector by scalar <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Scale</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Scalar&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies vector <i>pv1</i> by scalar <i>s</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Sub"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Sub<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D vector subtraction<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Sub</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually subtracts each element of vector <i>pv2</i> from the corresponding element of vector <i>pv1</i> and returns the result in vector <i>pv0</i>.<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate 2D zero vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Zero</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the zero vector in vector <i>pv0</i>.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Abs"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Abs<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector absolute value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Abs</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the absolute value of vector <i>pv1</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Add"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Add<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector addition<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Add</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually adds each element of vector <i>pv1</i> to the corresponding element of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Clamp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Clamp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector clamp<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Clamp</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Minimum value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Maximum value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function clamps each element of vector <i>pv1</i> by using minimum value <i>min</i> and maximum value <i>max</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Copy 3D vector <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Copy</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function copies vector <i>pv1</i> to vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Div"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Div<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector division<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Div</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually divides each element of vector <i>pv1</i> by the corresponding element of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Hermite"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Hermite<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector Hermite spline interpolation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a>*<b>sceVfpuVector3Hermite</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pt1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pt2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: position vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: connection vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: position vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: connection vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0 </i>is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the interpolation vector from vectors <i>pv1</i>, <i>pt1</i>, <i>pv2</i>, and <i>pt2</i>, and parameter <i>t</i>, and returns vector <i>pv0</i>.<br>This can be represented by the following formula.<br></div>
<div style="margin-left:70px;"><i>pv0 = pv1 * (2.0 * t<sup>3 </sup>- 3.0 * t<sup>2</sup>+ 1) + pt1 * (     t<sup>3 </sup>- 2.0 * t<sup>2 + </sup>t) + </i><br><i>     pt2* (     t<sup>3 </sup>-      t<sup>2</sup>) + pv2 * (-2.0 * t<sup>3 + </sup>3.0 * t<sup>2</sup>)</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3InnerProduct"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3InnerProduct<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector inner product<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuVector3InnerProduct</b> (
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The inner product is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the inner product of vectors <i>pv0</i> and <i>pv1</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Lerp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Lerp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector interpolation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Lerp</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the interpolation vector from vectors <i>pv1</i> and <i>pv2</i> and parameter <i>t</i> and returns it in vector <i>pv0</i>.<br>This is represented by the following equation.<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pv1</i> + <i>t</i> * (<i>pv2 - pv1</i>)<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Max"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Max<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum value of 3D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Max</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually obtains the maximum value of each element of vectors <i>pv1</i> and <i>pv2</i> and sets it in vector <i>pv0</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuVector3Min">sceVfpuVector3Min</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Min"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Min<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Minimum value of 3D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Min</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually obtains the minimum value of each element of vectors <i>pv1</i> and <i>pv2</i> and sets it in vector <i>pv0</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuVector3Max">sceVfpuVector3Max</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector multiplication<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Mul</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually multiplies each element of vector <i>pv1</i> by the corresponding element of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Neg"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Neg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector sign reversal<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Neg</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function reverses the sign of vector <i>pv1</i> and copies it to vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Normalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Normalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector normalization<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Normalize</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function normalizes vector <i>pv1</i> and returns it in vector <i>pv0</i>.<br>However, if the vector which was passed in vector <i>pv1</i> was the zero vector, or was such a short vector that an underflow occurred when calculating the sum of squares, etc., then as an exception the zero vector is returned in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3OuterProduct"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3OuterProduct<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector outer product<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3OuterProduct</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vcrsp.t instruction to calculate the outer product.<br>It obtains the outer product of vectors <i>pv1</i> and <i>pv2</i> and returns it in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiplication of 3D vector by scalar <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Scale</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Scalar&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies vector <i>pv1</i> by scalar <i>s</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Set"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Set<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set 3D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Set</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	float <i>x</i>,
	float <i>y,</i>
	float <i>z</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for x element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for y element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>z</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for z element&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually sets the values of the x, y, and z arguments of each element of vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Sub"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Sub<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D vector subtraction<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Sub</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually subtracts each element of vector <i>pv2</i> from the corresponding element of vector <i>pv1</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate 3D zero vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Zero</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the zero vector in vector <i>pv0</i>.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Abs"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Abs<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector absolute value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Abs</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the absolute value of vector <i>pv1</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Add"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Add<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector addition<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Add</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually adds each element of vector <i>pv1</i> to the corresponding element of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4AddXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4AddXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Add X, Y, and Z elements of 4D vectors<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4AddXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually adds the x, y, and z elements of vector <i>pv1</i> to the corresponding x, y, and z elements of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br>The w element of vector <i>pv1</i> is copied directly to the w element of vector <i>pv0</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Clamp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Clamp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector clamp<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Clamp</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Minimum value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Maximum value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function clamps each element of vector <i>pv1</i> by using minimum value <i>min</i> and maximum value <i>max</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4ClampXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4ClampXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Clamp X, Y, and Z elements of 4D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4ClampXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Minimum value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Maximum value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function clamps the X, Y, and Z elements of vector <i>pv1</i> by using minimum value <i>min</i> and maximum value <i>max</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Copy 4D vector <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Copy</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function copies vector <i>pv1</i> to vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector multiplication<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Mul</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually multiplies each element of vector <i>pv1</i> by the corresponding element of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4MulXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4MulXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply X, Y, and Z elements of 4D vectors<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4MulXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually multiplies the x, y, and z elements of vector <i>pv1</i> by the corresponding x, y, and z elements of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br>The w element of vector <i>pv1</i> is copied directly to the w element of vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Div"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Div<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector division<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Div</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually divides each element of vector <i>pv1</i> by the corresponding element of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4DivXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4DivXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Divide X, Y, and Z elements of 4D vectors<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4DivXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually divides the x, y, and z elements of vector <i>pv1</i> by the corresponding x, y, and z elements of vector <i>pv2</i> and returns the result in vector <i>pv0</i>.<br>The w element of vector <i>pv1</i> is copied directly to the w element of vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Hermite"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Hermite<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector Hermite spline interpolation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Hermite</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pt1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pt2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: position vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: connection vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: position vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: connection vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0 </i>is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the interpolation vector from vectors <i>pv1</i>, <i>pt1</i>, <i>pv2</i>, and <i>pt2</i>, and parameter <i>t</i>, and returns vector <i>pv0</i>.<br>This can be represented by the following formula.<br></div>
<div style="margin-left:70px;"><i>pv0 = pv1 * (2.0 * t<sup>3 </sup>- 3.0 * t<sup>2</sup>+ 1) + pt1 * (     t<sup>3 </sup>- 2.0 * t<sup>2 + </sup>t) + </i><br><i>     pt2* (     t<sup>3 </sup>-      t<sup>2</sup>) + pv2 * (-2.0 * t<sup>3 + </sup>3.0 * t<sup>2</sup>)</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4HermiteXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4HermiteXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Hermite spline interpolation of X, Y, and Z elements of 4D vectors<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4HermiteXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pt1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pt2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: position vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: connection vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: position vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: connection vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0 </i>is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the interpolation vector from vectors <i>pv1</i>, <i>pt1</i>, <i>pv2</i>, and <i>pt2</i>, and parameter <i>t</i>, and returns vector <i>pv0</i>.<br>This can be represented by the following formula.<br></div>
<div style="margin-left:70px;"><i>pv0 = pv1 * (2.0 * t<sup>3 </sup>- 3.0 * t<sup>2</sup>+ 1) + pt1 * (     t<sup>3 </sup>- 2.0 * t<sup>2 + </sup>t) + </i><br><i>     pt2* (     t<sup>3 </sup>-      t<sup>2</sup>) + pv2 * (-2.0 * t<sup>3 + </sup>3.0 * t<sup>2</sup>)</i><br></div>
<div style="margin-left:50px;"><br>The <i>w</i> element of vector <i>pv1</i> remains unchanged as the <i>w</i> element of <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4InnerProduct"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4InnerProduct<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector inner product<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuVector4InnerProduct</b> (
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The inner product is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the inner product of vectors <i>pv0</i> and <i>pv1</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4InnerProductXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4InnerProductXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Inner product of X, Y, and Z elements of 4D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuVector4InnerProductXYZ</b> (
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The inner product is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the inner product of the X, Y, and Z elements of vectors <i>pv0</i> and <i>pv1</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Lerp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Lerp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector interpolation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b> sceVfpuVector4Lerp</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the interpolation vector from vectors <i>pv1</i> and <i>pv2</i> and parameter <i>t</i> and returns it in vector <i>pv0</i>.<br>This is represented by the following equation.<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pv1</i> + <i>t</i> * (<i>pv2 - pv1</i>)<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4LerpXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4LerpXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Interpolate X, Y, and Z elements of 4D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b> sceVfpuVector4LerpXYZ</b> (	
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the interpolation vector from vectors <i>pv1</i> and <i>pv2</i> and parameter <i>t</i> and returns it in vector <i>pv0</i>.<br>This is represented by the following equation.<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pv1</i> + <i>t</i> * (<i>pv2 - pv1</i>)<br></div>
<div style="margin-left:50px;"><br>The w element of vector <i>pv1</i> is copied directly to the w element of vector <i>pv0</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Max"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Max<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum value of 4D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Max</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually obtains the maximum value of each element of vectors <i>pv1</i> and <i>pv2</i> and sets it in vector <i>pv0</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuVector4Min">sceVfpuVector4Min</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Min"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Min<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Minimum value of 4D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Min</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually obtains the minimum value of each element of vectors <i>pv1</i> and <i>pv2</i> and sets it in vector <i>pv0</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuVector4Max">sceVfpuVector4Max</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Neg"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Neg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector sign reversal<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Neg</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function reverses the sign of vector <i>pv1</i> and copies it to vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Normalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Normalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector normalization<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Normalize</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function normalizes vector <i>pv1</i> and returns it in vector <i>pv0</i>.<br>However, if the vector which was passed in vector <i>pv1</i> was the zero vector, or was such a short vector that an underflow occurred when calculating the sum of squares, etc., then as an exception the zero vector is returned in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4NormalizeXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4NormalizeXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Normalization of X, Y, and Z elements of 4D vectors <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4NormalizeXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function normalizes the x, y, and z elements of vector <i>pv1</i> to length 1 and returns the result in vector <i>pv0</i>.<br>The w element of vector <i>pv1</i> is copied directly to the w element of vector <i>pv0</i>.<br>However, if the vector which was supplied in vector <i>pv1</i> was the zero vector, or was such a short vector that an underflow occurred when calculating the sum of squares, etc., then as an exception the zero vector is returned in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4OuterProductXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4OuterProductXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Outer product of X, Y, and Z elements of 4D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4OuterProductXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the outer product of the x, y, and z elements of vectors <i>pv1</i> and <i>pv2</i> and returns the result in vector <i>pv0</i>. The w element of <i>pv0</i> is set to 0.<br>The VFPU vcrsp.t instruction is used to calculate the outer product.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiplication of 4D vector by scalar <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Scale</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Scalar&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies vector <i>pv1</i> by scalar <i>s</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4ScaleXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4ScaleXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply X, Y, and Z elements of 4D vector by scalar <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4ScaleXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Scalar&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies the x, y, and z elements of vector <i>pv1</i> by scalar <i>s </i>and returns the result in vector <i>pv0</i>.<br>The w element of vector <i>pv1</i> is copied directly to the w element of vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Set"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Set<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set 4D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Set</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	float <i>x</i>,
	float <i>y</i>,
	float <i>z</i>,
	float <i>w</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for x element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for y element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>z</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for z element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>w</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for w element&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually sets the values of the x, y, z, and w arguments of each element of vector <i>pv0</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4SetXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4SetXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set X, Y, and Z elements of 4D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4SetXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	float <i>x</i>,
	float <i>y</i>,
	float <i>z</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for x element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for y element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>z</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to be set for z element&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets values for the x, y, and z components of vector <i>pv0</i>. The w element of vector <i>pv0</i> remains unchanged.<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Sub"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Sub<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D vector subtraction<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Sub</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually subtracts each element of vector <i>pv2</i> from the corresponding element of vector <i>pv1</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4SubXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4SubXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Subtract X, Y, and Z elements of 4D vectors<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4SubXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually subtracts the x, y, and z elements of vector <i>pv2</i> from the corresponding x, y, and z elements of vector <i>pv1</i> and returns the result in vector <i>pv0</i>.<br>The w element of vector <i>pv1</i> is copied directly to the w element of vector <i>pv0</i>.<br><br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate 4D zero vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Zero</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the zero vector in vector <i>pv0</i>.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Adjoint"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Adjoint<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Cofactor 2D matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Adjoint</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the cofactor matrix of matrix <i>pm1</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D matrix copy<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Copy</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function copies matrix <i>pm1</i> to matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Determinant"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Determinant<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D matrix determinant<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix2Determinant</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the determinant of matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D matrix product<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Mul</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> by matrix <i>pm2</i> from the right and returns the result in matrix <i>pm0</i>. This is represented by the following equation.<br></div>
<div style="margin-left:70px;">pm0 = pm1 * pm2<br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2RotZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2RotZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D rotation matrix around Z-axis<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2RotZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>,
	float <i>rz</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation angle (valid range: - &pi; to &pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> from the left by the rotation matrix around the Z-axis obtained from the specified rotation angle <i>rz</i>, and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply 2D matrix by scalar <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Scale</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Scalar&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> by scalar <i>s</i> and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Trace"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Trace<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D matrix trace<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix2Trace</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the trace of matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Transform"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Transform<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply 2D vector by 2D matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuMatrix2Transform</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm0</i> by vector <i>pv1</i> from the right and returns the result in vector <i>pv0</i>. This is represented by the following equation.<br></div>
<div style="margin-left:70px;">pv0 = pm0 * pv1<br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Transpose"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Transpose<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Transpose 2D matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Transpose</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the transpose of matrix <i>pm1</i> and returns it in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Unit"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Unit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D unit matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Unit</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the 2x2 unit matrix in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate 2D zero matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Zero</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the zero matrix in matrix <i>pm0</i>.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Adjoint"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Adjoint<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Cofactor 3D matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Adjoint</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the cofactor matrix of matrix <i>pm1</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D matrix copy<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Copy</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function copies matrix <i>pm1</i> to matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Determinant"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Determinant<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D matrix determinant<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix3Determinant</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the determinant of matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D matrix product<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Mul</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> by matrix <i>pm2</i> from the right and returns the result in matrix <i>pm0</i>. This is represented by the following equation.<br></div>
<div style="margin-left:70px;">pm0 = pm1 * pm2<br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Normalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Normalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D matrix normalization<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Normalize</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix (regular matrix)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function normalizes matrix <i>pm1</i> and returns the result in matrix <i>pm0</i>.<br>Matrix <i>pm1</i> must be a rotation matrix.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Rot"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Rot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D matrix rotation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> * <b>sceVfpuMatrix3Rot</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> <i>rot</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation angles around the x, y, and z-axes (valid range: -&pi; to &pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sequentially multiplies matrix <i>pm1</i> from the left by the rotation matrices around the Z, Y and X-axes obtained from <i>rot.z</i>, <i>rot.y</i>, and <i>rot.x</i>, respectively, and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3RotX"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3RotX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D rotation matrix around X-axis<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3RotX</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	float <i>rx</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation angle (valid range: -&pi; to &pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> from the left by the rotation matrix around the X-axis obtained from the specified rotation angle <i>rx</i>, and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3RotY"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3RotY<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D rotation matrix around Y-axis<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3RotY</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	float <i>ry</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation angle (valid range: -&pi; to &pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> from the left by the rotation matrix around the Y-axis obtained from the specified rotation angle <i>ry</i>, and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3RotZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3RotZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D rotation matrix around Z-axis<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3RotZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	float <i>rz</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation angle (valid range: -&pi; to &pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> from the left by the rotation matrix around the Z-axis obtained from the specified rotation angle <i>rz</i>, and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply 3D matrix by scalar <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Scale</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Scalar&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> by scalar <i>s</i> and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Trace"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Trace<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D matrix trace<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix3Trace</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the trace of matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Transform"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Transform<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply 3D matrix by 3D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuMatrix3Transform</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm0</i> by vector <i>pv1</i> from the right and returns the result in vector <i>pv0</i>. This is represented by the following equation.<br></div>
<div style="margin-left:70px;">pv0 = pm0 * pv1<br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Transpose"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Transpose<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Transpose 3D matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Transpose</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the transpose matrix of matrix <i>pm1</i> and returns it in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Unit"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Unit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D unit matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Unit</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the 3x3 unit matrix in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate 3D zero matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Zero</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the zero matrix in matrix <i>pm0</i>.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Adjoint"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Adjoint<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D Cofactor matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Adjoint</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the cofactor matrix of the matrix <i>pm1</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D matrix copy<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Copy</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function copies matrix <i>pm1</i> to matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Determinant"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Determinant<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D matrix determinant<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix4Determinant</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the determinant of matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4HomogeneousTransform"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4HomogeneousTransform<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply 4D vector and homogeneous matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuMatrix4HomogeneousTransform</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies the vector <i>pv1</i> by the homogeneous matrix <i>pm0</i> from right to left, and returns the result in the vector <i>pv0</i>. This operation can be presented by the following formula.<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pm0</i> * <i>pv1</i><br></div>
<div style="margin-left:50px;"><br>The <i>w</i> component of the vector <i>pv1</i> is treated as 1.0.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Inverse"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Inverse<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate 4D inverse matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Inverse</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix (regular matrix)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the inverse matrix of the matrix <i>pm1</i>, and returns it in the matrix <i>pm0</i>. The matrix <i>pm1</i> must be a regular matrix (i.e., a rotation or translation matrix). <br>The generalized inverse matrix can be created using the <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuMatrix4Inverse2">sceVfpuMatrix4Inverse2</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuMatrix4Inverse2">sceVfpuMatrix4Inverse2</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Inverse2"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Inverse2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate 4D inverse matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Inverse2</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	float *<i>pfDeterminant</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pfDeterminant</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Determinant&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned. If the calculation cannot be performed, NULL is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the inverse matrix of the matrix <i>pm1</i> from a cofactor matrix and a determinant, and returns it in the matrix <i>pm0</i>. It returns NULL if it is unable to perform the calculation.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuMatrix4Inverse">sceVfpuMatrix4Inverse</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D matrix product<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Mul</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> by matrix <i>pm2</i> from the right and returns the result in matrix <i>pm0</i>. This is represented by the following equation.<br></div>
<div style="margin-left:70px;"><i>pm0</i> = <i>pm1</i> * <i>pm2</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4NormalizeXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4NormalizeXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Normalization of rotational part of 4D matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4NormalizeXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix (regular matrix)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function normalizes a 3x3 portion of the matrix <i>pm1</i>, and returns the result in matrix <i>pm0</i>. <br>The matrix <i>pm1</i> must be a rotation and translation matrix. The 3x3 submatrix representing rotation (m11, m12, m13, m21, m22, m23, m31, m32, and m33) is normalized, and the translation components (m14, m24, m34, and m44) are preserved.<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Transfer"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Transfer<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D matrix translation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Transfer</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>ptv</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ptv</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Translation vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function translates matrix <i>pm1</i> according to vector <i>ptv</i> and returns it in matrix <i>pm0</i>.<br>The w.w element of output matrix <i>pm0</i> is overwritten with the w element of input vector <i>ptv</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Rot"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Rot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D matrix rotation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> * <b>sceVfpuMatrix4Rot </b>(
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>rot</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation angles around x, y, and z-axes (valid range: -&pi; to &pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sequentially multiplies matrix <i>pm1</i> from the left by the rotation matrices around the Z, Y and X-axes obtained from <i>rot.z</i>, <i>rot.y</i>, and <i>rot.x</i>, respectively, and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4RotX"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4RotX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D rotation matrix around X-axis<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4RotX</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	float <i>rx</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation angle (valid range: -&pi; to &pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> from the left by the rotation matrix around the X-axis obtained from the specified rotation angle <i>rx</i>, and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4RotY"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4RotY<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D rotation matrix around Y-axis<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4RotY</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	float <i>ry</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation angle (valid range: -&pi; to &pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> from the left by the rotation matrix around the Y-axis obtained from the specified rotation angle <i>ry</i>, and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4RotZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4RotZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D rotation matrix around Z-axis<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4RotZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	float <i>rz</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation angle (valid range: -&pi; to &pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> from the left by the rotation matrix around the Z-axis obtained from the specified rotation angle <i>rz</i>, and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply 4D matrix by scalar <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Scale</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Scalar&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm1</i> by scalar <i>s</i> and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Trace"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Trace<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D matrix trace<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix4Trace</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the trace of matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Transform"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Transform<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply 4D matrix by 4D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuMatrix4Transform</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm0</i> by vector <i>pv1</i> from the right and returns the result in vector <i>pv0</i>. This is represented by the following equation.<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pm0</i> * <i>pv1</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4TransformXYZ"></a>
<table width="100%"><td width="70%"><font size=6> sceVfpuMatrix4TransformXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply 4D matrix by X, Y, and Z elements of 4D vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuMatrix4TransformXYZ</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies matrix <i>pm0</i> by the x, y, and z elements of vector <i>pv1</i> from the right and returns the result in vector <i>pv0</i>. The w element of <i>pv1</i> is copied directly to the w element of <i>pv0</i>. This is represented by the following equation.<br><br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pm0</i> * <i>pv1</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Transpose"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Transpose<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Transpose 4D matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Transpose</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the transpose of matrix <i>pm1</i> and returns the result in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Unit"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Unit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate 4D unit matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Unit</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the 4x4 unit matrix in matrix <i>pm0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate 4D zero matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Zero</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output matrix <i>pm0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the zero matrix in matrix <i>pm0</i>.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionAdd"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionAdd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion addition<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionAdd</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function adds quaternion <i>pq1</i> and quaternion <i>pq2</i> and returns the result in quaternion <i>pq0</i>. This is represented by the following equation.<br><br></div>
<div style="margin-left:70px;"><i>pq0</i> = <i>pq1</i> + <i>pq2</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionConj"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionConj<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion conjugate<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionConj</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function calculates the conjugate quaternion of <i>pq1</i>, and returns it in <i>pq0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionCopy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionCopy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion copy<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuarternionCopy</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function copies quaternion <i>pq1</i> to quaternion <i>pq0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionExp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionExp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion exponent<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionExp</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function calculates the exponent of quaternion <i>pq1</i>, and returns it in <i>pq0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionFromMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionFromMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert from matrix to quaternion<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionFromMatrix</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq,</i>
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output quaternion <i>pq</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts matrix <i>pm</i> to quaternion <i>pq</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionFromRotate"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionFromRotate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert from rotation axis vector to quaternion<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionFromRotate</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq</i>,
	float <i>angle</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pvAxis</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>angle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation amount (radians)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pvAxis</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Rotation axis vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output quaternion <i>pq</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function generates a quaternion from a rotation axis vector and rotation amount and returns it in <i>pq</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionInnerProduct"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionInnerProduct<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion inner product<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuQuaternionInnerProduct</b> (
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The inner product is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the inner product of quaternions <i>pq0</i> and <i>pq1</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionInverse"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionInverse<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion inverse calculation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionInverse</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function calculates the inverse quaternion of <i>pq1</i>, and returns it in <i>pq0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionLn"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionLn<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion natural logarithm<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionLn</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function calculates the natural logarithm of quaternion <i>pq1</i>, and returns it in <i>pq0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionMul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionMul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion multiplication<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionMul</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU vqmul.q instruction to calculate the product of quaternions.<br>Quaternion <i>pq2 </i>is multiplied from the right by quaternion <i>pq1</i> and the result is returned in quaternion <i>pq0</i>. This is represented by the following equation.<br></div>
<div style="margin-left:70px;"><i>pq0</i> = <i>pq1</i> * <i>pq2</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionNormalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionNormalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion normalization<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionNormalize</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function normalizes quaternion <i>pq1</i> and returns it in quaternion <i>pq0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionSlerp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionSlerp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion spherical linear interpolation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionSlerp</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq2,</i>
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the spherical linear interpolation of quaternions <i>pq1</i> and <i>pq2</i>, and returns the result in <i>pq0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionSquad"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionSquad<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion spherical 3D interpolation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionSquad</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq2,</i>
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq3</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq4,</i>
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq3</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq4</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the spherical 3D interpolation of quaternions <i>pq1</i>, <i>pq2</i>, <i>pq3</i>, and <i>pq4</i>, and returns the result in <i>pq0</i>.<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionSub"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionSub<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Quaternion subtraction<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionSub</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function subtracts quaternion <i>pq2</i> from quaternion <i>pq1</i> and returns the result in quaternion <i>pq0</i>. This is represented by the following equation.<br></div>
<div style="margin-left:70px;"><i>pq0</i> = <i>pq1</i> - <i>pq2</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionToMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionToMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert from quaternion to matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a>*<b>sceVfpuQuaternionToMatrix</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output matrix <i>pm</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts quaternion <i>pq</i> to matrix <i>pm</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionTransform"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionTransform<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Use quaternion to rotate vector<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuQuaternionTransform</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: quaternion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function rotates the vector <i>pv1</i> using the quaternion <i>pq</i> and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionUnit"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionUnit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate unit quaternion<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionUnit</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Quaternion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output quaternion <i>pq0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the unit quaternion in quaternion <i>pq0</i>.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuCameraMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuCameraMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate world view matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuCameraMatrix</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pp</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pzd</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pyd</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix (world view coordinates)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector (viewpoint)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pzd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector (line of sight)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pyd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector (vertical direction)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains a matrix that transforms the viewpoint <i>p</i> to (0,0,0), the line of sight <i>zd</i> to (0,0,1), and the vertical direction <i>yd</i> to (0,1,0) and returns it in <i>m</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuDropShadowMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuDropShadowMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate drop shadow projection matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuDropShadowMatrix</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>plp</i>,
	float <i>a</i>,
	float <i>b</i>,
	float <i>c</i>,
	int <i>mode</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>plp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector (light source position)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Shadow projection surface&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Shadow projection surface&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>c</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Shadow projection surface&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Light source type&nbsp;&nbsp;<br>&nbsp;&nbsp;0: Directional light source&nbsp;&nbsp;<br>&nbsp;&nbsp;1: Point light source&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the matrix that projects a shadow from the light source specified by <i>plp</i> and <i>mode</i> onto the surface represented by <i>a</i>x + <i>b</i>y + <i>c</i>z = 1 and returns it in <i>pm</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuFrustumMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuFrustumMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create perspective projection matrix <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuFrustumMatrix </b>(
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm,</i>
	float <i>left</i>,
	float <i>right</i>,
	float <i>bottom</i>,
	float <i>top</i>,
	float <i>near</i>,
	float <i>far</i>
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>left</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Left coordinate of view volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>right</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Right coordinate of view volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bottom</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bottom coordinate of view volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>top</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Top coordinate of view volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>near</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Near coordinate of view volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>far</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Far coordinate of view volume&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output matrix <i>pm</i>.is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates a view volume matrix based on a perspective projection transformation according to the respective arguments.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuOrthoMatrix">sceVfpuOrthoMatrix</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuLookAtMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuLookAtMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create viewpoint (LookAt) matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuLookAtMatrix </b>(
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pvEye</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pvCenter</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pvUp</i>
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pvEye</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Position vector of eye&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pvCenter</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Position vector of target&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pvUp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Upward-directed vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates a viewpoint (LookAt) matrix based on the <i>pvEye</i>, <i>pvCenter</i>, and <i>pvUp</i> arguments.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuOrthoMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuOrthoMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create orthogonal projection matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuOrthoMatrix </b>(
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>
	float <i>left</i>,
	float <i>right</i>,
	float <i>bottom</i>,
	float <i>top</i>,
	float <i>near</i>,
	float <i>far</i>
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>left</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Left coordinate of view volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>right</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Right coordinate of view volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bottom</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bottom coordinate of view volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>top</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Top coordinate of view volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>near</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Near coordinate of view volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>far</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Far coordinate of view volume&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates a parallel view volume matrix based on orthogonal projection according to the respective arguments.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuFrustumMatrix">sceVfpuFrustumMatrix</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuPerspectiveMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuPerspectiveMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create perspective transformation matrix <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuPerspectiveMatrix </b>(
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm,</i>
	float <i>fovy</i>,
	float <i>aspect</i>,
	float <i>r_near</i>,
	float <i>r_far</i>
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fovy</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Angle of camera (radians)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aspect</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Aspect ratio of screen (vertical-to-horizontal ratio: horizontal / vertical&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r_near</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Near clipping plane of screen (distance from viewpoint)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r_far</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Far clipping plane of screen (distance from viewpoint)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates a perspective transformation matrix according to the respective arguments.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRotTransPers"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRotTransPers<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Perspective transformation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuRotTransPers</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Vector representing screen coordinates&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Perspective transformation matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Vector representing vertex&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output vector <i>pv0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses matrix <i>pm0</i> to perform a perspective transformation of the vertex indicated by vector <i>pv1</i> into screen coordinates, and returns the result in vector <i>pv0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRotTransPersN"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRotTransPersN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Perspective transformation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuRotTransPersN</b> (
	short *<i>pXYZ,</i>
	int <i>pitch,</i>
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	int <i>n</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pXYZ</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Pointer to buffer for outputting screen coordinates X, Y, Z&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Number of bytes per vertex in buffer <i>pXYZ</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Perspective transformation matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Array of vectors representing vertices&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Number of vertices&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Zero is always returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs a perspective transformation of the <i>n</i> vertices specified by <i>pv1</i> and <i>n</i> into screen coordinates according to matrix <i>pm0</i> and returns the result in the area pointed to by <i>pXYZ</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuViewScreenMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuViewScreenMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate view screen matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuViewScreenMatrix</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	float <i>scrz</i>,
	float <i>ax</i>,
	float <i>ay</i>,
	float <i>cx</i>,
	float <i>cy</i>,
	float <i>zmin</i>,
	float <i>zmax</i>,
	float <i>nearz</i>,
	float <i>farz</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>scrz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: (Distance to screen)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ax</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: (X-direction aspect ratio)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ay</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: (Y-direction aspect ratio)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: (X-coordinate of screen center)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cy</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: (Y-coordinate of screen center)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>zmin</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: (Z-buffer minimum value)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>zmax</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: (Z-buffer maximum value)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nearz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: (Z of near clipping surface)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>farz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: (Z of far clipping surface)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output matrix <i>pm</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the view screen matrix according to the specified parameters and returns it in output matrix <i>pm</i>.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorAdd"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorAdd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color addition<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorAdd</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually adds each element of color <i>pc1</i> to the corresponding element of color <i>pc2</i> and returns the result in color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorAddRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorAddRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color (RGB component) addition<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorAddRGB</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually adds the r, g, and b elements of color <i>pc1</i> to the corresponding elements of color <i>pc2</i>, respectively, and returns the result in color <i>pc0</i>.<br>The a element of color <i>pc1</i> is copied to the a element of color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorClamp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorClamp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color clamp<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorClamp</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Minimum value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Maximum value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function clamps color <i>pc1</i> by using minimum value <i>min</i> and maximum value <i>max</i> and returns the result in color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorClampRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorClampRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color (RGB components) clamp<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorClampRGB</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Minimum value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Maximum value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function clamps the r, g, and b elements of color <i>pc1</i> by using minimum value <i>min</i> and maximum value <i>max</i> and returns the result in color <i>pc0</i>.<br>The a element of color <i>pc1</i> is copied to the a element of color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorCopy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorCopy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color copy<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorCopy</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function copies color <i>pc1</i> to color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorFromRGBA8888"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorFromRGBA8888<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert ScePspRGBA8888 color to ScePspFColor <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> * <b>sceVfpuColorFromRGBA8888</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0,</i>
	<a href="../kernel/Types-Reference-English.htm#ScePspRGBA8888">ScePspRGBA8888</a> <i>rgba,</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rgba</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The color value <i>pc0</i>, which was converted from <a href="../kernel/Types-Reference-English.htm#ScePspRGBA8888">ScePspRGBA8888</a>, is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a color in <a href="../kernel/Types-Reference-English.htm#ScePspRGBA8888">ScePspRGBA8888</a> format that is given by the <i>rgba </i>argument<i> </i>to type <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuColorToRGBA8888">sceVfpuColorToRGBA8888</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorFromRGBA4444"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorFromRGBA4444<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert ScePspRGBA4444 to ScePspFColor <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> * <b>sceVfpuColorFromRGBA4444</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0,</i>
	<a href="../kernel/Types-Reference-English.htm#ScePspRGBA4444">ScePspRGBA4444</a> <i>rgba,</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rgba</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The color value <i>pc0</i>, which was converted from <a href="../kernel/Types-Reference-English.htm#ScePspRGBA4444">ScePspRGBA4444</a>, is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a color in <a href="../kernel/Types-Reference-English.htm#ScePspRGBA4444">ScePspRGBA4444</a> format that is given by the <i>rgba </i>argument<i> </i>to type <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuColorToRGBA4444">sceVfpuColorToRGBA4444</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorFromRGBA5551"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorFromRGBA5551<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert ScePspRGBA5551 to ScePspFColor <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> * <b>sceVfpuColorFromRGBA5551</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0,</i>
	<a href="../kernel/Types-Reference-English.htm#ScePspRGBA5551">ScePspRGBA5551</a> <i>rgba,</i>
	float <i>q</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rgba</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>q</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: &alpha; value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Converts a color value in <a href="../kernel/Types-Reference-English.htm#ScePspRGBA5551">ScePspRGBA5551</a> format given by the <i>rgba</i> argument, to type <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a>. If the bit corresponding to &alpha; in the input color value was 1, the value specified by the argument <i>q</i> is copied into the &alpha; component of the output color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a color in <a href="../kernel/Types-Reference-English.htm#ScePspRGBA5551">ScePspRGBA5551</a> format to type <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuColorToRGBA5551">sceVfpuColorToRGBA5551</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorFromRGB565"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorFromRGB565<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert ScePspRGB565 to ScePspFColor <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> * <b>sceVfpuColorFromRGB565</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0,</i>
	<a href="../kernel/Types-Reference-English.htm#ScePspRGB565">ScePspRGB565</a> <i>rgba,</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rgba</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The color value <i>pc0</i>, which was converted from <a href="../kernel/Types-Reference-English.htm#ScePspRGB565">ScePspRGB565</a>, is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a color in <a href="../kernel/Types-Reference-English.htm#ScePspRGB565">ScePspRGB565</a> format to type <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuColorToRGB565">sceVfpuColorToRGB565</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorLerp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorLerp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate interpolation color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorLerp</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>, 
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the interpolation color from colors <i>pc1</i> and <i>pc2</i> and parameter <i>t</i> and returns it in color <i>pc0</i>.<br>This is represented by the following equation.<br></div>
<div style="margin-left:70px;"><i>pc0</i> = <i>pc1</i> + <i>t</i> * (<i>pc2 - pc1</i>)<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorLerpRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorLerpRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate interpolation color (RGB components)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b> sceVfpuColorLerpRGB</b> (	
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>, 
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Interpolation parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function obtains the interpolation color from colors <i>pc1</i> and <i>pc2</i> and parameter <i>t</i> and returns it in color <i>pc0</i>.<br>This is represented by the following equation.<br><i>pc0</i> = <i>pc1</i> + <i>t</i> * (<i>pc2 - pc1</i>)<br>The a element of color <i>pc1</i> is copied to the a element of output color <i>pc0</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorMax"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorMax<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorMax</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually obtains the maximum value of each element of colors <i>pc1</i> and <i>pc2</i> and sets it in color <i>pc0</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuColorMin">sceVfpuColorMin</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorMin"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorMin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Minimum value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorMin</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually obtains the minimum value of each element of colors <i>pc1</i> and <i>pc2</i> and sets it in color <i>pc0</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuColorMax">sceVfpuColorMax</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorMul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorMul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color multiplication<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorMul</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually multiplies each element of color <i>pc1</i> by the corresponding element of color <i>pc2</i> and returns the result in color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorMulRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorMulRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color (RGB component) multiplication<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorMulRGB</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually multiplies the r, g, and b elements of color <i>pc1</i> by the corresponding elements of color <i>pc2</i>, respectively, and returns the result in color <i>pc0</i>.<br>The a element of color <i>pc1</i> is copied to the a element of color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorNeg"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorNeg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color inversion<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorNeg</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function inverts color <i>pc1</i> and sets it for color <i>pc0</i>. Inversion is calculated by taking the one's complement.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorNegRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorNegRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color (RGB component) inversion<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorNegRGB</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function inverts the r, g, and b elements of color <i>pc1</i> and sets them in color <i>pc0</i>. Inversion is calculated by taking the one's complement.<br>The a element of color <i>pc1</i> is copied to the a element of color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorNormalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorNormalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color normalization<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorNormalize</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function normalizes color <i>pc1</i> and returns the result in color <i>pc0</i>. Normalization is performed by scaling the elements of color <i>pc1</i> so that the<i> </i>largest value among the four elements r, g, b, and a will have a value of 1.0.<br>However, if the elements of color <i>pc1</i> are less than or equal to 0, then as an exception the color returned in <i>pc0</i> will have all of its elements set to 0.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorScale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorScale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply color by scalar <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorScale</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Scalar&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies color <i>pc1</i> by scalar <i>t</i> and returns the result in color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorScaleRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorScaleRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multiply color (RGB components) by scalar <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorScaleRGB</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Scalar&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function multiplies color <i>pc1</i> by scalar <i>t</i> and returns the result in color <i>pc0</i>.<br>The a element of color <i>pc1</i> is copied to the a element of color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorSet"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorSet<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorSet</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	float <i>r</i>,
	float <i>g</i>,
	float <i>b</i>,
	float <i>a</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to set for r element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>g</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to set for g element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to set for b element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to set for a element&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually sets the values of r, g, b, and a arguments of each element of color <i>pc0</i>.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorSetRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorSetRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorSetRGB</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	float <i>r</i>,
	float <i>g</i>,
	float <i>b</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to set for r element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>g</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to set for g element&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Value to set for b element&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets values for the r, g, and b components of color <i>pc0</i>. The a element of color <i>pc0</i> is unchanged by this function.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorSub"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorSub<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color subtraction<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorSub</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually subtracts each element of color <i>pc2</i> from the corresponding element of color <i>pc1</i> and returns the result in color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorSubRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorSubRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Color (RGB component) subtraction<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorSubRGB</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function individually subtracts the r, g, and b elements of color <i>pc2</i> from the corresponding elements of color <i>pc1</i>, respectively, and returns the result in color <i>pc0</i>.<br>The a element of color <i>pc1</i> is copied to the a element of color <i>pc0</i>.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorToRGBA8888"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorToRGBA8888<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert ScePspFColor to ScePspRGBA8888<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspRGBA8888">ScePspRGBA8888</a> <b>sceVfpuColorToRGBA8888</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The color value converted to <a href="../kernel/Types-Reference-English.htm#ScePspRGBA8888">ScePspRGBA8888</a> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a color value of type <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> given by the <i>pc0</i> argument<i> </i>to <a href="../kernel/Types-Reference-English.htm#ScePspRGBA8888">ScePspRGBA8888</a> format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuColorFromRGBA8888">sceVfpuColorFromRGBA8888</a>()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorToRGBA4444"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorToRGBA4444<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert ScePspFColor to ScePspRGBA4444<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspRGBA4444">ScePspRGBA4444</a> <b>sceVfpuColorToRGBA4444</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The color value converted to <a href="../kernel/Types-Reference-English.htm#ScePspRGBA4444">ScePspRGBA4444</a> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a color value of type <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> given by the <i>pc0 </i>argument<i> </i>to <a href="../kernel/Types-Reference-English.htm#ScePspRGBA4444">ScePspRGBA4444</a> format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuColorFromRGBA4444">sceVfpuColorFromRGBA4444</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorToRGBA5551"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorToRGBA5551<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert ScePspFColor to ScePspRGBA5551<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspRGBA5551">ScePspRGBA5551</a> <b>sceVfpuColorToRGBA5551</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>
	float <i>q</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>q</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: &alpha; threshold value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the color value converted to <a href="../kernel/Types-Reference-English.htm#ScePspRGBA5551">ScePspRGBA5551</a>. Since there is only one bit for the &alpha; channel, the threshold value is specified by the <i>q</i> argument. <br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a color value of type <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> given by the <i>pc0 </i>argument to <a href="../kernel/Types-Reference-English.htm#ScePspRGBA5551">ScePspRGBA5551</a> format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuColorFromRGBA5551">sceVfpuColorFromRGBA5551</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorToRGB565"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorToRGB565<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert ScePspFColor to ScePspRGB565<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspRGB565">ScePspRGB565</a> <b>sceVfpuColorToRGB565</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The color value converted to <a href="../kernel/Types-Reference-English.htm#ScePspRGB565">ScePspRGB565</a> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a color value of type <a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> given by the <i>pc0</i> argument to <a href="../kernel/Types-Reference-English.htm#ScePspRGB565">ScePspRGB565</a> format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuColorFromRGB565">sceVfpuColorFromRGB565</a>()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorZero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorZero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate zero value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorZero</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFColor">ScePspFColor</a> *<i>pc</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Output color <i>pc0</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets a zero value in each element of color <i>pc0</i>. Although R=0, G=0, and B=0 denotes black level, since A is also set to 0, it has the meaning of transparent color.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandInitContext"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandInitContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize pseudo random number seed register<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuRandInitContext</b> (
	<a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuRandContext">SceVfpuRandContext</a> *<i>pContext</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pContext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input:  Pseudo random number seed register&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Zero is always returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the initial value of the VFPU pseudo random number series in the pseudo random number context that was specified by the <a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuRandContext">SceVfpuRandContext</a> structure <i>pContext</i>.<br>The initial seed value is only set in the work area specified by <i>pContext</i> and is not written to the actual VFPU random number register.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuRandContext">SceVfpuRandContext</a>, <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuRandRestoreContext">sceVfpuRandRestoreContext</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandSaveContext"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandSaveContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Save pseudo random number seed register<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuRandSaveContext</b> (
	<a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuRandContext">SceVfpuRandContext</a> *<i>pContext</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pContext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: Pseudo random number seed register&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Zero is always returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function saves the VFPU pseudo random number seed register as a context in the <a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuRandContext">SceVfpuRandContext</a> structure <i>pContext</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuRandContext">SceVfpuRandContext</a>, <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuRandRestoreContext">sceVfpuRandRestoreContext</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandRestoreContext"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandRestoreContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Restore pseudo random number seed register<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuRandRestoreContext</b> (
	const <a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuRandContext">SceVfpuRandContext</a> *<i>pContext</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pContext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: Pseudo random number seed register&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Zero is always returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function restores the VFPU seed register from the pseudo random number context specified by the <a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuRandContext">SceVfpuRandContext</a> structure <i>pContext</i>.<br>A random number sequence can be reconstructed by restoring the same values from the pseudo random number context.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuRandContext">SceVfpuRandContext</a>, <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuRandSaveContext">sceVfpuRandSaveContext</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandFloat"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandFloat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pseudo random number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuRandFloat</b> (
	float <i>n</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Boundary point of pseudo random number to be output&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pseudo random number is obtained as a float. The value returned is in the interval [0:<i>n</i>].<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a random number. The value represents the progression in a sequence of random numbers.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandPi"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandPi<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pseudo random number between 0 and&pi;<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuRandPi</b> (
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pseudo random number is obtained as a float. The value returned is in the interval <br>[0:<img src="gif/libvfpu-Reference-English001.gif">].</div>
<div style="margin-left:50px;"><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a random number in the range 0 to<img src="gif/libvfpu-Reference-English002.gif"> (including 0 but not including<img src="gif/libvfpu-Reference-English003.gif">). The value represents the progression in a sequence of random numbers.</div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandTwoPi"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandTwoPi<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pseudo random number between 0 and 2&pi;<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuRandTwoPi</b> (
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pseudo random number is obtained as a float. The value returned is in the interval [0:2<img src="gif/libvfpu-Reference-English004.gif">].</div>
<div style="margin-left:50px;"><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a random number in the range 0 to 2<img src="gif/libvfpu-Reference-English005.gif"> (including 0 but not including 2<img src="gif/libvfpu-Reference-English006.gif">). The value represents the progression in a sequence of random numbers.</div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandVector4"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandVector4<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pseudo random number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuRandVector4</b> (
	<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>pfv</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pfv</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to a vector of type <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> for receiving the pseudo random numbers that are output&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output vector <i>pfv</i> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Pseudo random numbers are obtained as a vector of type <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a>. The values that are output to the elements of this vector are in the interval [0:1].<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandPeekFloat"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandPeekFloat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pseudo random number (no update)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuRandPeekFloat</b> (
	float <i>n</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Boundary point of pseudo random number that is output&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The next pseudo random number to be returned by <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuRandFloat">sceVfpuRandFloat</a> is obtained. The value that is output is in the interval [0:<i>n</i>].<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Although this function obtains a random number, the random number sequence is not advanced. This function enables the random number that is to be generated next to be obtained in advance.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuRandFloat">sceVfpuRandFloat</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuSaveContext"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuSaveContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Save entire VFPU register context<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuSaveContext</b> (
	<a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuContext">SceVfpuContext</a> *<i>pContext</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pContext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output: register context&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Zero is always returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function saves the VFPU registers in the <a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuContext">SceVfpuContext</a> structure <i>pContext</i> as a context.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuContext">SceVfpuContext</a>, <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuRestoreContext">sceVfpuRestoreContext</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRestoreContext"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRestoreContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Restore entire VFPU register context<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuRestoreContext</b> (
	const <a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuContext">SceVfpuContext</a> *<i>pContext</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pContext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input: register context&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Zero is always returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function restores the VFPU register context that was specified by the <a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuContext">SceVfpuContext</a> structure <i>pContext</i> in the VFPU.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-English.htm#SceVfpuContext">SceVfpuContext</a>, <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuSaveContext">sceVfpuSaveContext</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMemcpy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMemcpy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Copy memory using VFPU<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
void *<b>sceVfpuMemcpy</b> (
	void *<i>dst</i>,
	const void *<i>src</i>,
	unsigned int <i>n</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Copy destination address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>src</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Copy source address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Copy size (number of bytes)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>dst</i> is always returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU uncached write buffer to copy memory. Although reading from memory is performed via the ALLEGREX CPU D-cache, the VFPU write buffer is used when writing to memory.<br>The copy source address and copy destination address must be specified so that the source and destination are not in overlapping areas. Processing is more efficient if the copy source address and copy destination address both are integer multiples of 16 bytes.<br>If the size is sufficiently large, this function can be used as a faster means of copying memory than functions such as memcpy() or <a href="../kernel/Cache-Reference-English.htm#sceKernelMemcpy">sceKernelMemcpy</a>(). The CPU load is higher for sceVfpuMemcpy() than for <a href="../peripheral/DMAC-Reference-English.htm#sceDmacMemcpy">sceDmacMemcpy</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">memcpy(), <a href="../kernel/Cache-Reference-English.htm#sceKernelMemcpy">sceKernelMemcpy</a>(), <a href="../peripheral/DMAC-Reference-English.htm#sceDmacMemcpy">sceDmacMemcpy</a>(), <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuMemmove">sceVfpuMemmove</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMemmove"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMemmove<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Copy memory using VFPU<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
void *<b>sceVfpuMemmove</b> (
	void *<i>dst</i>,
	const void *<i>src</i>,
	unsigned int <i>n</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Copy destination address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>src</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Copy source address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Copy size (number of bytes)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>dst</i> is always returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU's uncached write buffer to copy memory. Although reading from memory is performed via the ALLEGREX CPU D-cache, writing to memory is performed using the VFPU's write buffer.<br>sceVfpuMemmove() differs from <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuMemcpy">sceVfpuMemcpy</a>() in that with sceVfpuMemmove(), the copy source and copy destination addresses are allowed to be in overlapping areas. When conditions allow <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuMemcpy">sceVfpuMemcpy</a>() to be used, <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuMemcpy">sceVfpuMemcpy</a>() is automatically called.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">memcpy(), <a href="../kernel/Cache-Reference-English.htm#sceKernelMemcpy">sceKernelMemcpy</a>(), <a href="../peripheral/DMAC-Reference-English.htm#sceDmacMemcpy">sceDmacMemcpy</a>(), <a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuMemcpy">sceVfpuMemcpy</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMemset"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMemset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Fill memory using VFPU<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
void *<b>sceVfpuMemset</b> (
	void *<i>dst</i>,
	int <i>c</i>
	unsigned int <i>n</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Fill starting address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>c</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Fill data (byte value)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Fill size (number of bytes)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Zero is always returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the VFPU uncached write buffer to fill memory.<br>If the size is sufficiently large, this function can be used as a faster means of filling memory than functions such as memset() or <a href="../kernel/Cache-Reference-English.htm#sceKernelMemset">sceKernelMemset</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">memset(), <a href="../kernel/Cache-Reference-English.htm#sceKernelMemset">sceKernelMemset</a>()<br><br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
