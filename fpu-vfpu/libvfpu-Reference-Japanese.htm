<html lang="jp">
<head>
<title>libvfpu-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libvfpu
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceVfpuRandContext"></a>
<table width="100%"><td width="70%"><font size=6>SceVfpuRandContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>疑似乱数シードレジスタのコンテキスト<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
typedef struct SceVfpuRandContext {
	unsigned int <i>seed</i>[8];
} <b>SceVfpuRandContext </b>__attribute__((aligned(16)));

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUの疑似乱数のシードレジスタ値をコンテキストとして保持するときのワークです。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuRandSaveContext">sceVfpuRandSaveContext</a>(), <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuRandRestoreContext">sceVfpuRandRestoreContext</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceVfpuContext"></a>
<table width="100%"><td width="70%"><font size=6>SceVfpuContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VFPUレジスタ全体のコンテキスト<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
typedef struct SceVfpuContext {
	unsigned int <i>RegFile</i>[32][4];

	unsigned int <i>PFXS</i>;
	unsigned int <i>PFXT</i>;
	unsigned int <i>PFXD</i>;
	unsigned int <i>CC</i>;
	unsigned int <i>INF4</i>;
	unsigned int <i>reserved</i>[3];

	<a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuRandContext">SceVfpuRandContext</a> <i>prng</i>;
} <b>SceVfpuContext </b>__attribute__((aligned(16)));

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUレジスタ全体をコンテキストとして保持するときのワークです。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuSaveContext">sceVfpuSaveContext</a>(), <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuRestoreContext">sceVfpuRestoreContext</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarAbs"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarAbs<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>絶対値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarAbs</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">スカラー値の絶対値|<i>s</i>|を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvabs.s命令を使って絶対値を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">fabsf(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuAbs">sceFpuAbs</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarAcos"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarAcos<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>逆余弦(アークコサイン)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarAcos</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">逆余弦(アークコサイン)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvasin.s命令を使って逆余弦(アークコサイン)を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">acosf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarAsin"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarAsin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>逆正弦(アークサイン)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarAsin</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">逆正弦(アークサイン)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvasin.s命令を使って逆正弦(アークサイン)を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">asinf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarAtan"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarAtan<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>逆正接(アークタンジェント)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarAtan</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">逆正接（アークタンジェント）を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvasin.s命令などを使って逆正接（アークタンジェント）を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">atanf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarAtan2"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarAtan2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>逆正接(アークタンジェント)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarAtan2</b> (
	float <i>y</i>,
	float <i>x</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">2つの変数に対する逆正接（アークタンジェント）を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvasin.s命令などを使って2つの変数に対する逆正接（アークタンジェント）を計算します。<i>y</i> / <i>x</i>の逆正接に対して、<i>y</i>および<i>x</i>の符号から象限を求めます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">atanf2()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarCeil"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarCeil<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>切り上げ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarCeil</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>以上の最小の整数を表わす浮動小数点数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvf2iu.s, vi2f.s命令を使って小数点以下を切り上げた値を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ceilf(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuCeil">sceFpuCeil</a>(), __builtin_allegrex_ceil_w_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarCos"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarCos<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>余弦(コサイン)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarCos</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">余弦(コサイン)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvcos.s命令を使って余弦(コサイン)を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">cosf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarExp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarExp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>底をeとする指数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarExp</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">底をeとする指数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvlog2.s, vexp2.s命令を使って底をeとする指数を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">expf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarFloor"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarFloor<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>切り捨て値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarFloor</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>以下の最大の整数を表わす浮動小数点数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvf2id.s, vi2f.s命令を使って小数点以下を切り捨てた値を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">floorf(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuFloor">sceFpuFloor</a>(), __buitin_allegrex_floor_w_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarLog"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarLog<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>自然対数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarLog</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の自然対数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvlog2.s, vexp2.s命令を使って自然対数を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">logf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarLog2"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarLog2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>底を2とする対数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarLog2</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">底を2とする対数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvlog2.s命令を使って底を2とする対数を計算します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarLog10"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarLog10<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>常用対数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarLog10</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常用対数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvlog2.s, vexp2.s命令を使って常用対数を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">log10f()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarMax"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarMax<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>スカラー最大値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarMax</b> (
	float <i>a</i>,
	float <i>b</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>a</i>と<i>b</i>の大きい方の値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvmax.s命令を使って大きい方の値を選択します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuMax">sceFpuMax</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarMin"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarMin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>スカラー最小値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarMin</b> (
	float <i>a</i>,
	float <i>b</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>a</i>と<i>b</i>の小さい方の値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvmin.s命令を使って小さい方の値を選択します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuMin">sceFpuMin</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarPow"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarPow<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>指数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarPow</b> (
	float <i>x</i>,
	float <i>y</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>x</i>の<i>y</i>乗を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvlog2.s, vexp2.s命令を使って<i>x</i>の<i>y</i>乗を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">powf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarPow2"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarPow2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>底を2とする指数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarPow2</b> (
	float <i>x</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">2の<i>x</i>乗を計算します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvexp2.s命令を使って2の<i>x</i>乗を計算します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarRound"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarRound<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>近傍値丸め(四捨五入)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarRound</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>に最も近い整数値を表わす浮動小数点数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvf2in.s, vi2f.s命令を使って近傍丸めを計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">roundf(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuRound">sceFpuRound</a>(), __builtin_allegrex_round_w_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarRsqrt"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarRsqrt<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>平方根の逆数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarRsqrt</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の平方根の逆数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvsqrt.s命令およびvrcp.s使って平方根の逆数を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sqrtf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarSin"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarSin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>正弦(サイン)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarSin</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正弦(サイン)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvsin.s命令を使って正弦(サイン)を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sinf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarSqrt"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarSqrt<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>平方根<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarSqrt</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>の平方根を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvsqrt.s命令を使って平方根を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sqrtf(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuSqrt">sceFpuSqrt</a>(), __builtin_allegrex_sqrt_s()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarTan"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarTan<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>正接(タンジェント)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarTan</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正接(タンジェント)を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvcos.s, vsin.s命令を使って正接(タンジェント)を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">tanf()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuScalarTrunc"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuScalarTrunc<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>0方向丸め<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuScalarTrunc</b> (
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スカラー浮動小数点値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>s</i>に最も近い0方向の整数値を表わす浮動小数点数を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvf2iz.s, vi2f.s命令を使って小数点以下を0方向に切り捨てた値を計算します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">truncf(), <a href="../fpu-vfpu/libfpu-Reference-Japanese.htm#sceFpuTrunc">sceFpuTrunc</a>(), __builtin_allegrex_trunc_w_s()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Abs"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Abs<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの絶対値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Abs</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の絶対値を求め結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Add"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Add<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの加算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Add</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素とベクトル<i>pv2</i>の各要素を各々加算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Clamp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Clamp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルのクランプ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Clamp</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最小値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最大値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素を、最小値<i>min</i>、最大値<i>max</i>でクランプし、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの複写<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Copy</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>をベクトル<i>pv0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Div"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Div<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの除算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Div</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素をベクトル<i>pv2</i>の各要素で除算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Hermite"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Hermite<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルのエルミートスプライン補間<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Hermite</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pt1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pt2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:位置ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:接ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:位置ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:接ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>, <i>pt1</i>, <i>pv2</i>, <i>pt2</i>およびパラメータ<i>t</i>から内挿ベクトルを求め、ベクトル<i>pv0</i>に返します。<br>式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0 = pv1 * (2.0 * t<sup>3 </sup>- 3.0 * t<sup>2</sup>+ 1) + pt1 * (     t<sup>3 </sup>- 2.0 * t<sup>2 + </sup>t) + </i><br><i>     pt2* (     t<sup>3 </sup>-      t<sup>2</sup>) + pv2 * (-2.0 * t<sup>3 + </sup>3.0 * t<sup>2</sup>)</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2InnerProduct"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2InnerProduct<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの内積<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuVector2InnerProduct</b> (
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>, <i>pv1</i>の内積を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>, <i>pv1</i>の内積を求めます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Lerp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Lerp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの内挿<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Lerp</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>, <i>pv2</i>およびパラメータ<i>t</i>から内挿ベクトルを求め、ベクトル<i>pv0</i>に返します。<br>式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pv1</i> + <i>t</i> * (<i>pv2 - pv1</i>)<br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Max"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Max<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの最大値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Max</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>と<i>pv2</i>の各要素で最大値を求め、ベクトル<i>pv0</i>に設定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuVector2Min">sceVfpuVector2Min</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Min"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Min<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの最小値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Min</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>と<i>pv2</i>の各要素で最小値を求め、ベクトル<i>pv0</i>に設定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuVector2Max">sceVfpuVector2Max</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Mul</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素とベクトル<i>pv2</i>の各要素をそれぞれ乗算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Neg"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Neg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの符号反転<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Neg</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の符号を反転しベクトル<i>pv0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Normalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Normalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの正規化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Normalize</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>を正規化してベクトル<i>pv0</i>に返します。<br>ただし、ベクトル<i>pv1</i>に与えられたベクトルが0ベクトルだったり、2乗和の計算中にアンダーフローが発生してしまうほど短いベクトルだった場合、例外的にゼロベクトルをベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Set"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Set<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Set</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	float <i>x</i>,
	float <i>y</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:x要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:y要素に設定する値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>の各要素に引数x,yの値をそれぞれ設定します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルへスカラー値の乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Scale</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:スカラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>にスカラー<i>s</i>を乗算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Sub"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Sub<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルの減算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Sub</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素からベクトル<i>pv2</i>の各要素を各々減算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector2Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector2Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dゼロベクトルの生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuVector2Zero</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>にゼロベクトルを設定します。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Abs"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Abs<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの絶対値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Abs</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の絶対値を求め結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Add"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Add<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの加算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Add</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素とベクトル<i>pv2</i>の各要素を各々加算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Clamp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Clamp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルのクランプ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Clamp</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最小値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最大値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素を、最小値<i>min</i>、最大値<i>max</i>でクランプし、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの複写<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Copy</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>をベクトル<i>pv0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Div"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Div<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの除算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Div</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素をベクトル<i>pv2</i>の各要素で除算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Hermite"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Hermite<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルのエルミートスプライン補間<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a>*<b>sceVfpuVector3Hermite</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pt1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pt2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:位置ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:接ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:位置ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:接ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>, <i>pt1</i>, <i>pv2</i>, <i>pt2</i>およびパラメータ<i>t</i>から内挿ベクトルを求め、ベクトル<i>pv0</i>に返します。<br>式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0 = pv1 * (2.0 * t<sup>3 </sup>- 3.0 * t<sup>2</sup>+ 1) + pt1 * (     t<sup>3 </sup>- 2.0 * t<sup>2 + </sup>t) + </i><br><i>     pt2* (     t<sup>3 </sup>-      t<sup>2</sup>) + pv2 * (-2.0 * t<sup>3 + </sup>3.0 * t<sup>2</sup>)</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3InnerProduct"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3InnerProduct<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの内積<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuVector3InnerProduct</b> (
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">内積を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>, <i>pv1</i>の内積を求めます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Lerp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Lerp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの内挿<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Lerp</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>, <i>pv2</i>およびパラメータ<i>t</i>から内挿ベクトルを求め、ベクトル<i>pv0</i>に返します。<br>式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pv1</i> + <i>t</i> * (<i>pv2 - pv1</i>)<br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Max"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Max<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの最大値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Max</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>と<i>pv2</i>の各要素で最大値を求め、ベクトル<i>pv0</i>に設定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuVector3Min">sceVfpuVector3Min</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Min"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Min<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの最小値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Min</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>と<i>pv2</i>の各要素で最小値を求め、ベクトル<i>pv0</i>に設定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuVector3Max">sceVfpuVector3Max</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Mul</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>とベクトル<i>pv2</i>の各要素をそれぞれ乗算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Neg"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Neg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの符号反転<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Neg</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の符号を反転し、ベクトル<i>pv0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Normalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Normalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの正規化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Normalize</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>を正規化して、ベクトル<i>pv0</i>に返します。<br>ただし、ベクトル<i>pv1</i>に与えられたベクトルが0ベクトルだったり、2乗和の計算中にアンダーフローが発生してしまうほど短いベクトルだった場合、例外的にゼロベクトルをベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3OuterProduct"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3OuterProduct<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの外積<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3OuterProduct</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvcrsp.t命令を使用して外積を計算します。<br>ベクトル<i>pv1</i>, <i>pv2</i>の外積を求めてベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルにスカラー値の乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Scale</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:スカラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>にスカラー<i>s</i>を乗算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Set"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Set<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Set</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	float <i>x</i>,
	float <i>y</i>,
	float <i>z</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:x要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:y要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>z</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:z要素に設定する値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>の各要素に引数x,y,zの値をそれぞれ設定します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Sub"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Sub<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルの減算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Sub</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素からベクトル<i>pv2</i>の各要素を各々減算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector3Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector3Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dゼロベクトルの生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuVector3Zero</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>にゼロベクトルを設定します。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Abs"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Abs<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの絶対値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Abs</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の絶対値を求め結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Add"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Add<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの加算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Add</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素とベクトル<i>pv2</i>の各要素を各々加算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4AddXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4AddXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素を加算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4AddXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>のx,y,z要素とベクトル<i>pv2</i>のx,y,z要素を各々加算し、結果をベクトル<i>pv0</i>に返します。<br>ベクトル<i>pv</i>1のw要素は、そのままベクトル<i>pv0</i>のw要素として残ります。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Clamp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Clamp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルのクランプ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Clamp</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最小値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最大値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素を、最小値<i>min</i>、最大値<i>max</i>でクランプし、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4ClampXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4ClampXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素のクランプ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4ClampXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最小値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最大値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>のX,Y,Z要素を、最小値<i>min</i>、最大値<i>max</i>でクランプし、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの複写<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Copy</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>をベクトル<i>pv0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Mul</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素とベクトル<i>pv2</i>の各要素をそれぞれ乗算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4MulXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4MulXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素を乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4MulXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>のx,y,z要素とベクトル<i>pv2</i>のx,y,z要素をそれぞれ乗算し、結果をベクトル<i>pv0</i>に返します。<br>ベクトル<i>pv1</i>のw要素は、そのままベクトル<i>pv0</i>のw要素として残ります。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Div"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Div<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの除算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Div</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素をベクトル<i>pv2</i>の各要素で除算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4DivXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4DivXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素を除算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4DivXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>のx,y,z要素をベクトル<i>pv2</i>の各要素で除算し、結果をベクトル<i>pv0</i>に返します。<br>ベクトル<i>pv1</i>のw要素は、そのままベクトル<i>pv0</i>のw要素として残ります。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Hermite"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Hermite<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルのエルミートスプライン補間<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Hermite</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pt1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pt2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:位置ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:接ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:位置ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:接ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>, <i>pt1</i>, <i>pv2</i>, <i>pt2</i>およびパラメータ<i>t</i>から内挿ベクトルを求め、ベクトル<i>pv0</i>に返します。<br>式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0 = pv1 * (2.0 * t<sup>3 </sup>- 3.0 * t<sup>2</sup>+ 1) + pt1 * (     t<sup>3 </sup>- 2.0 * t<sup>2 + </sup>t) + </i><br><i>     pt2* (     t<sup>3 </sup>-      t<sup>2</sup>) + pv2 * (-2.0 * t<sup>3 + </sup>3.0 * t<sup>2</sup>)</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4HermiteXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4HermiteXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素のエルミートスプライン補間<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4HermiteXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pt1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pt2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:位置ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:接ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:位置ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pt2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:接ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>, <i>pt1</i>, <i>pv2</i>, <i>pt2</i>およびパラメータ<i>t</i>から内挿ベクトルを求め、ベクトル<i>pv0</i>に返します。<br>式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0 = pv1 * (2.0 * t<sup>3 </sup>- 3.0 * t<sup>2</sup>+ 1) + pt1 * (     t<sup>3 </sup>- 2.0 * t<sup>2 + </sup>t) + </i><br><i>     pt2* (     t<sup>3 </sup>-      t<sup>2</sup>) + pv2 * (-2.0 * t<sup>3 + </sup>3.0 * t<sup>2</sup>)</i><br></div>
<div style="margin-left:50px;"><br>ベクトル<i>pv1</i>のw要素は、そのままベクトル<i>pv0</i>のw要素として残ります。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4InnerProduct"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4InnerProduct<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの内積<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuVector4InnerProduct</b> (
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">内積を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>, <i>pv1</i>の内積を求めます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4InnerProductXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4InnerProductXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素の内積<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuVector4InnerProductXYZ</b> (
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">内積を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>, <i>pv1</i>のX,Y,Z成分の内積を求めます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Lerp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Lerp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの内挿<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Lerp</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>, <i>pv2</i>およびパラメータ<i>t</i>から内挿ベクトルを求め、ベクトル<i>pv0</i>に返します。<br>式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pv1</i> + <i>t</i> * (<i>pv2 - pv1</i>)<br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4LerpXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4LerpXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素の内挿<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4LerpXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br></div>
<br>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br></div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>, <i>pv2</i>およびパラメータtから内挿ベクトルを求め、ベクトル<i>pv0</i>に返します。<br>式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pv1</i> + <i>t</i> * (<i>pv2 - pv1</i>)<br></div>
<div style="margin-left:50px;"><br>ベクトル<i>pv1</i>のw要素は、そのままベクトル<i>pv0</i>のw要素として残ります。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Max"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Max<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの最大値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Max</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>と<i>pv2</i>の各要素で最大値を求め、ベクトル<i>pv0</i>に設定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuVector4Min">sceVfpuVector4Min</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Min"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Min<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの最小値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Min</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>と<i>pv2</i>の各要素で最小値を求め、ベクトル<i>pv0</i>に設定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuVector4Max">sceVfpuVector4Max</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Neg"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Neg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの符号反転<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Neg</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の符号を反転しベクトル<i>pv0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Normalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Normalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの正規化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Normalize</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>を正規化してベクトル<i>pv0</i>に返します。<br>ただし、ベクトル<i>pv1</i>に与えられたベクトルが0ベクトルだったり、2乗和の計算中にアンダーフローが発生してしまうほど短いベクトルだった場合、例外的にゼロベクトルをベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4NormalizeXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4NormalizeXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素の正規化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4NormalizeXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>のx,y,z成分が長さ1になるように正規化して、ベクトル<i>pv0</i>に返します。<br>ベクトル<i>pv</i>1のw要素は、そのままベクトル<i>pv0</i>のw要素として残ります。<br>ただし、ベクトル<i>pv1</i>に与えられたベクトルが0ベクトルだったり、2乗和の計算中にアンダーフローが発生してしまうほど短いベクトルだった場合、例外的にゼロベクトルをベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4OuterProductXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4OuterProductXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素の外積<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4OuterProductXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>, <i>pv2</i>のx,y,z成分より外積を求めてベクトル<i>pv0</i>に返します。<br>外積ベクトル<i>pv0</i>のw要素には0が出力されます。<br>VFPUのvcrsp.t命令を使用して外積を計算します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルにスカラー値の乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Scale</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:スカラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>にスカラー<i>s</i>を乗算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4ScaleXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4ScaleXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素にスカラーの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4ScaleXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:スカラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>のx,y,z要素にスカラー<i>s</i>を乗算し、結果をベクトル<i>pv0</i>に返します。<br>ベクトル<i>pv1</i>のw要素は、そのままベクトル<i>pv0</i>のw要素として残ります。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Set"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Set<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Set</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	float <i>x</i>,
	float <i>y</i>,
	float <i>z</i>,
	float <i>w</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:x要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:y要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>z</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:z要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>w</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:w要素に設定する値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>の各要素に引数x,y,z,wの値をそれぞれ設定します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4SetXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4SetXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素の設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4SetXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	float <i>x</i>,
	float <i>y</i>,
	float <i>z</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>x</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:x要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>y</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:y要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>z</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:z要素に設定する値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>のｘ,y,z成分に値を設定します。w要素にはベクトル<i>pv0</i>のw要素が残ります。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Sub"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Sub<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルの減算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Sub</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>の各要素からベクトル<i>pv2</i>の各要素を各々減算し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4SubXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4SubXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素を減算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4SubXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>のx,y,z要素からベクトル<i>pv2</i>のx,y,z要素を各々減算し、結果をベクトル<i>pv0</i>に返します。<br>ベクトル<i>pv</i>1のw要素は、そのままベクトル<i>pv0</i>のw要素として残ります。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuVector4Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuVector4Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dゼロベクトルの生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuVector4Zero</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv0</i>にゼロベクトルを設定します。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Adjoint"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Adjoint<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dマトリクスの余因子行列<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Adjoint</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>の余因子行列を返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dマトリクスの複写<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Copy</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>をマトリクス<i>pm0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Determinant"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Determinant<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dマトリクスの行列式<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix2Determinant</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>の行列式を返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dマトリクスの積<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Mul</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>にマトリクス<i>pm2</i>を右から乗算し、結果をマトリクス<i>pm0</i>に返します。式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pm0</i> = <i>pm1</i> * <i>pm2</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2RotZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2RotZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Z軸を中心とする2D回転マトリクス<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2RotZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>,
	float <i>rz</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:回転角(有効範囲:-&pi;〜&pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Z軸を中心とする回転マトリクスを指定された回転角<i>rz</i>から求め、マトリクス<i>pm1</i>に左側から乗算して、その結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dマトリクスにスカラー値の乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Scale</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:スカラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>にスカラーsを乗算し、結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Trace"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Trace<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dマトリクスののトレース<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix2Trace</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>のトレースを返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Transform"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Transform<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dベクトルと2Dマトリクスの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<b>sceVfpuMatrix2Transform</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector2">ScePspFVector2</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>にベクトル<i>pv1</i>を右から乗算し、結果をベクトル<i>pv0</i>に返します。式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pm0</i> * <i>pv1</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Transpose"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Transpose<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dマトリクスの転置<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Transpose</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>の転置行列を求め、マトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Unit"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Unit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2D単位マトリクス<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Unit</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>に2×2の単位行列を返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix2Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix2Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>2Dゼロマトリクスの生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<b>sceVfpuMatrix2Zero</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix2">ScePspFMatrix2</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力: マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>にゼロマトリクスを設定します。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Adjoint"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Adjoint<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dマトリクスの余因子行列<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Adjoint</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>の余因子行列を返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dマトリクスの複写<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Copy</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>をマトリクス<i>pm0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Determinant"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Determinant<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dマトリクスの行列式<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix3Determinant</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>の行列式を返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dマトリクスの積<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Mul</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>にマトリクス<i>pm2</i>を右から乗算し、結果をマトリクス<i>pm0</i>に返します。式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pm0</i> = <i>pm1</i> * <i>pm2</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Normalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Normalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dマトリクスの正規化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Normalize</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス(正則行列)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>を正規化し、マトリクス<i>pm0</i>に返します。<br>マトリクス<i>pm1</i>は回転のマトリクスでなければなりません。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Rot"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Rot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dマトリクスの回転<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> * <b>sceVfpuMatrix3Rot</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> <i>rot</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:x,y,z軸の回転角(有効範囲:-&pi;〜&pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Z軸を中心とする回転マトリクスを<i>rot.z</i>から、Y軸を中心とする回転マトリクスを<i>rot.y</i>から、X軸を中心とする回転マトリクスを<i>rot.x</i>からそれぞれ求め、順にマトリクス<i>pm1</i>に左側から乗算して、その結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3RotX"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3RotX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>X軸を中心とする3D回転マトリクス<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3RotX</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	float <i>rx</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:回転角(有効範囲:-&pi;〜&pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">X軸を中心とする回転マトリクスを指定された回転角<i>rx</i>から求め、マトリクス<i>pm1</i>に左側から乗算して、その結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3RotY"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3RotY<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Y軸を中心とする3D回転マトリクス<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3RotY</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	float <i>ry</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:回転角(有効範囲:-&pi;〜&pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Y軸を中心とする回転マトリクスを指定された回転角<i>ry</i>から求め、マトリクス<i>pm1</i>に左側から乗算して、その結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3RotZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3RotZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Z軸を中心とする3D回転マトリクス<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3RotZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	float <i>rz</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:回転角(有効範囲:-&pi;〜&pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Z軸を中心とする回転マトリクスを指定された回転角<i>rz</i>から求め、マトリクス<i>pm1</i>に左側から乗算して、その結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dマトリクスにスカラー値の乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Scale</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:スカラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>にスカラーsを乗算し、結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Trace"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Trace<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dマトリクスのトレース<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix3Trace</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>のトレースを返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Transform"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Transform<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dベクトルと3Dマトリクスの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceVfpuMatrix3Transform</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>にベクトル<i>pv1</i>を右から乗算し、結果をベクトル<i>pv0</i>に返します。式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pm0</i> * <i>pv1</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Transpose"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Transpose<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dマトリクスの転置<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Transpose</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>の転置行列を求め、マトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Unit"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Unit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3D単位マトリクス<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Unit</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>に3×3の単位行列を返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix3Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix3Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>3Dゼロマトリクスの生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<b>sceVfpuMatrix3Zero</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix3">ScePspFMatrix3</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力: マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>にゼロマトリクスを設定します。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Adjoint"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Adjoint<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスの余因子行列<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Adjoint</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>の余因子行列を返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Copy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Copy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスの複写<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Copy</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>をマトリクス<i>pm0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Determinant"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Determinant<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスの行列式<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix4Determinant</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>の行列式を返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4HomogeneousTransform"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4HomogeneousTransform<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルと同時座標系マトリクスの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuMatrix4HomogeneousTransform</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">同時座標系マトリクス<i>pm0</i>にベクトル<i>pv1</i>を右から乗算し、結果をベクトル<i>pv0</i>に返します。式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pm0</i> * <i>pv1</i><br></div>
<div style="margin-left:50px;"><br>ベクトル<i>pv1</i>の<i>w</i>成分は1.0として扱われます。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Inverse"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Inverse<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスの逆行列の生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Inverse</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス(正則行列)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>の逆行列を求めて、マトリクス<i>pm0</i>に返します。マトリクス<i>pm1</i>は正則行列(回転または平行移動のマトリクス)でなければなりません。<br>一般化された逆行列の生成は<a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuMatrix4Inverse2">sceVfpuMatrix4Inverse2</a>()関数を使用することができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuMatrix4Inverse2">sceVfpuMatrix4Inverse2</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Inverse2"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Inverse2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスの逆行列の生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Inverse2</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	float *<i>pfDeterminant</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pfDeterminant</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:行列式&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。不能であった場合はNULLを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">余因子行列と判別式より、マトリクス<i>pm1</i>の逆行列を求めて、マトリクス<i>pm0</i>に返します。不能であった場合は返り値としてNULLを返します。<br></div>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuMatrix4Inverse">sceVfpuMatrix4Inverse</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Mul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Mul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスの積<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Mul</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>にマトリクス<i>pm2</i>を右から乗算し、結果をマトリクス<i>pm0</i>に返します。式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pm0</i> = <i>pm1</i> * <i>pm2</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4NormalizeXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4NormalizeXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスの回転部の正規化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4NormalizeXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス(正則行列)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>の3×3行列部分を正規化し、マトリクス<i>pm0</i>に返します。<br>マトリクス<i>pm1</i>は回転および平行移動のマトリクスでなければなりません。回転を表現する3×3行列部分(m<sub>11</sub>, m<sub>12</sub>, m<sub>13</sub>, m<sub>21</sub>, m<sub>22</sub>, m<sub>23</sub>, m<sub>31</sub>, m<sub>32</sub>, m<sub>33</sub>)を正規化し、平行移動部分(m<sub>14</sub>, m<sub>24</sub> m<sub>34</sub> m<sub>44</sub>)は保存されます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Transfer"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Transfer<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスの平行移動<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Transfer</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>ptv</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ptv</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:移動ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>ptv</i>にしたがってマトリクス<i>pm1</i>を平行移動し、マトリクス<i>pm0</i>に返します。<br>出力マトリクス<i>pm0</i>のw.w成分は、入力ベクトル<i>ptv</i>のw成分で上書きされます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Rot"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Rot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスの回転<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> * <b>sceVfpuMatrix4Rot </b>(
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> <i>rot</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:x,y,z軸の回転角(有効範囲:-&pi;〜&pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Z軸を中心とする回転マトリクスを<i>rot.z</i>から、Y軸を中心とする回転マトリクスを<i>rot.y</i>から、X軸を中心とする回転マトリクスを<i>rot.x</i>からそれぞれ求め、順にマトリクス<i>pm1</i>に左側から乗算して、その結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4RotX"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4RotX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>X軸を中心とする4D回転マトリクス<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4RotX</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	float <i>rx</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:回転角(有効範囲:-&pi;〜&pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">X軸を中心とする回転マトリクスを指定された回転角<i>rx</i>から求め、マトリクス<i>pm1</i>に左側から乗算して、その結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4RotY"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4RotY<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>X軸を中心とする4D回転マトリクス<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4RotY</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	float <i>ry</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:回転角(有効範囲:-&pi;〜&pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Y軸を中心とする回転マトリクスを指定された回転角<i>ry</i>から求め、マトリクス<i>pm1</i>に左側から乗算して、その結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4RotZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4RotZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>X軸を中心とする4D回転マトリクス<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4RotZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	float <i>rz</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:回転角(有効範囲:-&pi;〜&pi;)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Z軸を中心とする回転マトリクスを指定された回転角<i>rz</i>から求め、マトリクス<i>pm1</i>に左側から乗算して、その結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Scale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Scale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスにスカラー値の乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Scale</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>,
	float <i>s</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:スカラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>にスカラーsを乗算し、結果をマトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Trace"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Trace<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスのトレース<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuMatrix4Trace</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>のトレースを返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Transform"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Transform<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dベクトルと4Dマトリクスの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuMatrix4Transform</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>にベクトル<i>pv1</i>を右から乗算し、結果をベクトル<i>pv0</i>に返します。式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pm0</i> * <i>pv1</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4TransformXYZ"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4TransformXYZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4DベクトルのX,Y,Z要素と4Dマトリクスの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuMatrix4TransformXYZ</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>にベクトル<i>pv1</i>のx,y,z成分を右から乗算し、結果をベクトル<i>pv0</i>に返します。<i>pv0</i>のw成分には、<i>pv1</i>のw成分がそのまま残ります。式で表現すると次のとおりです。<br><br></div>
<div style="margin-left:70px;"><i>pv0</i> = <i>pm0</i> * <i>pv1</i><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Transpose"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Transpose<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dマトリクスの転置<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Transpose</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm1</i>の転置行列を求め、マトリクス<i>pm0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Unit"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Unit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4D単位マトリクスの生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Unit</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>に4×4の単位行列を返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMatrix4Zero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMatrix4Zero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>4Dゼロマトリクスの生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuMatrix4Zero</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力: マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm0</i>にゼロマトリクスを設定します。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionAdd"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionAdd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの加算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionAdd</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力: クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: クォータニオン&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq1</i>とクォータニオン<i>pq2</i>を加算し、結果をクォータニオン<i>pq0</i>に返します。式で表現すると次のとおりです。<br><br></div>
<div style="margin-left:70px;"><i>pq0</i> = <i>pq1</i> + <i>pq2</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionConj"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionConj<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの共役<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionConj</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン &nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq1</i>の共役クォータニオンを<i>pq0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionCopy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionCopy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの複写<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionCopy</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力: クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: クォータニオン&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq1</i>をクォータニオン<i>pq0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionExp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionExp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの指数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionExp</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン &nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq1</i>の指数を<i>pq0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionFromMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionFromMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>マトリクスからクォータニオンへの変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionFromMatrix</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力: クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: マトリクス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">マトリクス<i>pm</i>をクォータニオン<i>pq</i>に変換します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionFromRotate"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionFromRotate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>回転軸ベクトルからクォータニオンへの変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionFromRotate</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq</i>,
	float <i>angle</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pvAxis</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力: クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>angle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: 回転量(ラジアン)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pvAxis</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: 回転軸ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">回転軸ベクトルと回転量から、クォータニオンを生成し<i>pq</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionInnerProduct"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionInnerProduct<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの内積<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuQuaternionInnerProduct</b> (
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">内積を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq0</i>,<i> pq1</i>の内積を求めます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionInverse"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionInverse<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>逆クォータニオンの計算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionInverse</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン &nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq1</i>の逆クォータニオンを<i>pq0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionLn"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionLn<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの自然対数<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionLn</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン &nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq1</i>の自然対数を<i>pq0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionMul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionMul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionMul</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力: クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: クォータニオン&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUのvqmul.q命令を使ってクォータニオンの乗算を計算します。<br>クォータニオン<i>pq1</i>にクォータニオン<i>pq2</i>を右側から乗算し、結果をクォータニオン<i>pq0</i>に返します。式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pq0</i> = <i>pq1</i> * <i>pq2</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionNormalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionNormalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの正規化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionNormalize</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン &nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq1</i>を正規化してクォータニオン<i>pq0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionSlerp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionSlerp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの球面線形補間<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionSlerp</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq1</i>, <i>pq2</i>の球面線形補間を求め、結果を<i>pq0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionSquad"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionSquad<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの球面3次補完<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionSquad</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq2</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq3</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq4</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq3</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq4</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br></div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq1</i>, <i>pq2</i>, <i>pq3</i>, <i>pq4</i>の球面3次補完を求め、結果を<i>pq0</i>に返します。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionSub"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionSub<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンの減算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionSub</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力: クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: クォータニオン&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq1</i>からクォータニオン<i>pq2</i>を減算し、結果をクォータニオン<i>pq0</i>に返します。式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pq0</i> = <i>pq1</i> - <i>pq2</i><br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionToMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionToMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンからマトリクスへの変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a>*<b>sceVfpuQuaternionToMatrix</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq</i>をマトリクス<i>pm</i>に変換します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionTransform"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionTransform<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>クォータニオンを使ってベクトルを回転<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuQuaternionTransform</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:クォータニオン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq</i>でベクトル<i>pv1</i>を回転し、結果をベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuQuaternionUnit"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuQuaternionUnit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>単位クォータニオンの生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceVfpuQuaternionUnit</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<i>pq0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pq0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力: クォータニオン&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力クォータニオン<i>pq0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">クォータニオン<i>pq0</i>に単位クォータニオンを返します。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuCameraMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuCameraMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ワールドビュー行列の生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuCameraMatrix</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pp</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pzd</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pyd</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス(ビューワールド座標)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル(視点)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pzd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル(視線)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pyd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル(垂直方向)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">視点<i>p</i>を(0,0,0)に、視線<i>zd</i>を(0,0,1)に、垂直方向<i>yd</i>を(0,1,0)にと変換するような行列を求め、<i>m</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuDropShadowMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuDropShadowMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ドロップシャドウ射影行列の生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuDropShadowMatrix</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>plp</i>,
	float <i>a</i>,
	float <i>b</i>,
	float <i>c</i>,
	int <i>mode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>plp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:ベクトル(光源の位置)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:影の投影面&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:影の投影面&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>c</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:影の投影面&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:光源の種類&nbsp;&nbsp;<br>&nbsp;&nbsp;0: 平行光源&nbsp;&nbsp;<br>&nbsp;&nbsp;1: 点光源&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>a</i>x + <i>b</i>y + <i>c</i>z = 1で表現される平面に<i>plpとmode</i>で指定される光源からの影を投影する行列を求め、マトリクス<i>pm</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuFrustumMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuFrustumMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>透視射影行列の生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuFrustumMatrix </b>(
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	float <i>left</i>,
	float <i>right</i>,
	float <i>bottom</i>,
	float <i>top</i>,
	float <i>near</i>,
	float <i>far</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止 / 許可状態に依存しない)<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>left</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の左座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>right</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の右座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bottom</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の下座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>top</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の上座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>near</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の手前座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>far</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の奥座標&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">各引数に従って透視射影変換による視体積の行列を作成する関数です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuOrthoMatrix">sceVfpuOrthoMatrix</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuLookAtMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuLookAtMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>視点マトリクスの生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuLookAtMatrix </b>(
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pvEye</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pvCenter</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pvUp</i>
);
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pvEye</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視点の位置ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pvCenter</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;注視点の位置ベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pvUp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;上向きベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>pvEye</i> / <i>pvCenter</i> / <i>pvUp</i>各引数に従って視点マトリクスを生成する関数です。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuOrthoMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuOrthoMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>正射影行列の生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuOrthoMatrix </b>(
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>
	float <i>left</i>,
	float <i>right</i>,
	float <i>bottom</i>,
	float <i>top</i>,
	float <i>near</i>,
	float <i>far</i>
);
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>left</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の左座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>right</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の右座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bottom</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の下座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>top</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の上座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>near</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の手前座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>far</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;視体積の奥座標&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">各引数に従って正射影による平行な視体積の行列を作成する関数です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuFrustumMatrix">sceVfpuFrustumMatrix</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuPerspectiveMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuPerspectiveMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>透視変換行列の生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuPerspectiveMatrix </b>(
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	float <i>fovy</i>,
	float <i>aspect</i>,
	float <i>r_near</i>,
	float <i>r_far</i>
);
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止 / 許可状態に依存しない)<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fovy</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;カメラの画角(ラジアン)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aspect</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;画面のアスペクト比 (縦横比:横/縦)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r_near</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;画面の前方クリップ平面 (視点からの距離)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r_far</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;画面の後方クリップ平面 (視点からの距離)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">各引数に従って透視変換行列を作成する関数です。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRotTransPers"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRotTransPers<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>透視変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuRotTransPers</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:スクリーン座標を表すベクトル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:透視変換マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:頂点を表すベクトル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pv0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ベクトル<i>pv1</i>で与えられた頂点を、マトリクス<i>pm0</i>によってスクリーン座標に透視変換し、ベクトル<i>pv0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRotTransPersN"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRotTransPersN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>透視変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuRotTransPersN</b> (
	short *<i>pXYZ</i>,
	int <i>pitch</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pv1</i>,
	int <i>n</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pXYZ</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:スクリーン座標X,Y,Zを出力するバッファのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:バッファ<i>pXYZ</i>で1頂点あたりのバイト数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:透視変換マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pv1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:頂点を表すベクトルの配列&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:頂点数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">つねに0を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>pv1</i>と<i>n</i>とで指定された<i>n</i>個の頂点を、マトリクス<i>pm0</i>によってスクリーン座標に透視変換し、結果を<i>pXYZ</i>が指す領域に返します。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuViewScreenMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuViewScreenMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ビュースクリーン行列の生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceVfpuViewScreenMatrix</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>pm</i>,
	float <i>scrz</i>,
	float <i>ax</i>,
	float <i>ay</i>,
	float <i>cx</i>,
	float <i>cy</i>,
	float <i>zmin</i>,
	float <i>zmax</i>,
	float <i>nearz</i>,
	float <i>farz</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:マトリクス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>scrz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:(スクリーンまでの距離)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ax</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:(Ｘ方向アスペクト比)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ay</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:(Ｙ方向アスペクト比)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:(スクリーンの中心X座標)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cy</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:(スクリーンの中心Y座標)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>zmin</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:(Ｚバッファ最小値)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>zmax</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:(Ｚバッファ最大値)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nearz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:(ニアクリップ面のZ)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>farz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:(ファークリップ面のZ)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力マトリクス<i>pm</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定された各パラメータに従ってビュースクリーン行列を求め、出力マトリクス<i>pm</i>に返します。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorAdd"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorAdd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラーの加算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorAdd</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>の各要素とカラー<i>pc2</i>の各要素を各々加算し、結果をカラー<i>pc0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorAddRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorAddRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラー(RGB成分)の加算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorAddRGB</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>とカラー<i>pc2</i>のr,g,b要素を各々加算し、結果をカラー<i>pc0</i>に返します。<br>a要素にはカラー<i>pc1</i>のa要素がコピーされます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorClamp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorClamp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラーのクランプ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorClamp</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最小値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最大値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>の各要素を、最小値<i>min</i>、最大値<i>max</i>でクランプし、結果をカラー<i>pc0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorClampRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorClampRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラー(RGB成分)のクランプ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorClampRGB</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	float <i>min</i>,
	float <i>max</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最小値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:最大値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>のr,g,b要素を、最小値<i>min</i>、最大値<i>max</i>でクランプし、結果をカラー<i>pc0</i>に返します。<br>a要素にはカラー<i>pc1</i>のa要素がコピーされます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorCopy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorCopy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラーの複写<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorCopy</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>をカラー<i>pc0</i>にコピーします。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorFromRGBA8888"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorFromRGBA8888<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ScePspRGBA8888をScePspFColor型に変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> * <b>sceVfpuColorFromRGBA8888</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA8888">ScePspRGBA8888</a> <i>rgba</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rgba</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA8888">ScePspRGBA8888</a>から変換されたカラー値<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>rgba</i>に与えられた<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA8888">ScePspRGBA8888</a>形式のカラー値を<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a>型に変換します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuColorToRGBA8888">sceVfpuColorToRGBA8888</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorFromRGBA4444"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorFromRGBA4444<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ScePspRGBA4444をScePspFColor型に変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> * <b>sceVfpuColorFromRGBA4444</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA4444">ScePspRGBA4444</a> <i>rgba</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rgba</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA4444">ScePspRGBA4444</a>から変換されたカラー値<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>rgba</i>に与えられた<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA4444">ScePspRGBA4444</a>形式のカラー値を<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a>型に変換します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuColorToRGBA4444">sceVfpuColorToRGBA4444</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorFromRGBA5551"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorFromRGBA5551<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ScePspRGBA5551をScePspFColor型に変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> * <b>sceVfpuColorFromRGBA5551</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA5551">ScePspRGBA5551</a> <i>rgba</i>,
	float <i>q</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rgba</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>q</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:&alpha;値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>rgba</i>に与えられた<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA5551">ScePspRGBA5551</a>形式のカラー値を<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a>型に変換します。入力カラー値の&alpha;に対応するビットが1だったとき、出力カラーの&alpha;コンポーネントには引数<i>q</i>で指定された値がコピーされます。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA5551">ScePspRGBA5551</a>形式のカラー値を<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a>型に変換します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuColorToRGBA5551">sceVfpuColorToRGBA5551</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorFromRGB565"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorFromRGB565<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ScePspRGB565をScePspFColor型に変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> * <b>sceVfpuColorFromRGB565</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGB565">ScePspRGB565</a> <i>rgba</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rgba</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-Japanese.htm#ScePspRGB565">ScePspRGB565</a>から変換されたカラー値<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-Japanese.htm#ScePspRGB565">ScePspRGB565</a>形式のカラー値を<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a>型に変換します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuColorToRGB565">sceVfpuColorToRGB565</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorLerp"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorLerp<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>内挿カラー生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorLerp </b>(
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>, <i>pc2</i>およびパラメータ<i>t</i>から内挿カラーを求め、カラー<i>pc0</i>に返します。<br>式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pc0</i> = <i>pc1</i> + <i>t</i> * (<i>pc2 - pc1</i>)<br></div>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorLerpRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorLerpRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>内挿カラー(RGB成分)生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorLerpRGB</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>,
	float <i>t</i>
);
</font></pre></div>
<br>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:内挿パラメータ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br></div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>, <i>pc2</i>およびパラメータ<i>t</i>から内挿カラーを求め、カラー<i>pc0</i>に返します。<br>式で表現すると次のとおりです。<br></div>
<div style="margin-left:70px;"><i>pc0</i> = <i>pc1</i> + <i>t</i> * (<i>pc2 - pc1</i>)<br></div>
<div style="margin-left:50px;"><br>出力カラー<i>pc0</i>のa要素にはカラー<i>pc1</i>のa要素がコピーされます。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorMax"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorMax<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>最大値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorMax</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>と<i>pc2</i>の各要素で最大値を求め、カラー<i>pc0</i>に設定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuColorMin">sceVfpuColorMin</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorMin"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorMin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>最小値<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorMin</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>と<i>pc2</i>の各要素で最小値を求め、カラー<i>pc0</i>に設定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuColorMax">sceVfpuColorMax</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorMul"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorMul<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラーの乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorMul</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>の各要素とカラー<i>pc2</i>の各要素をそれぞれ乗算し、結果をカラー<i>pc0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorMulRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorMulRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラー(RGB成分)の乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorMulRGB</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>とカラー<i>pc2</i>のr,g,b要素をそれぞれ乗算し、結果をカラー<i>pc0</i>に返します。<br>a要素にはカラー<i>pc1</i>のa要素がコピーされます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorNeg"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorNeg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラーの反転<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorNeg</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>を反転し、カラー<i>pc0</i>に設定します。反転は1.0の補数によって計算されます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorNegRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorNegRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラー(RGB成分)の反転<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorNegRGB</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>のr,g,b要素を反転し、カラー<i>pc0</i>に設定します。反転は1.0の補数によって計算されます。<br>a要素にはカラー<i>pc1</i>のa要素がコピーされます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorNormalize"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorNormalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラーの正規化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorNormalize</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>を正規化してカラー<i>pc0</i>に返します。r, g, b, aの4要素のうちもっとも大きな値をもつ要素を探し、その要素が1.0になるようにスケーリングします。<br><br>ただし、カラー<i>pc1</i>に与えられた要素が全て0以下だった場合、例外的にすべての要素が0のカラーを<i>pc0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorScale"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorScale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラーとスカラー値の乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorScale</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:スカラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>にスカラー<i>t</i>を乗算し、結果をカラー<i>pc0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorScaleRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorScaleRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラー(RGB成分)とスカラー値の乗算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorScaleRGB</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	float <i>t</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>t</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:スカラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>にスカラー<i>t</i>を乗算し、結果をカラー<i>pc0</i>に返します。<br>a要素にはカラー<i>pc1</i>のa要素がコピーされます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorSet"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorSet<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラーの設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorSet</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	float <i>r</i>,
	float <i>g</i>,
	float <i>b</i>,
	float <i>a</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:r要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>g</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:g要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:b要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:a要素に設定する値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc0</i>の各要素に引数r,g,b,aの値をそれぞれ設定します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorSetRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorSetRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラーの設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorSetRGB</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	float <i>r</i>,
	float <i>g</i>,
	float <i>b</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:r要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>g</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:g要素に設定する値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>b</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:b要素に設定する値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc0</i>のr,g,b成分に値を設定します。a要素にはカラー<i>pc0</i>のa要素が残ります。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorSub"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorSub<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラーの減算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorSub</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>の各要素からカラー<i>pc2</i>の各要素を各々減算し、結果をカラー<i>pc0</i>に返します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorSubRGB"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorSubRGB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>カラー(RGB成分)減算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorSubRGB</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc1</i>,
	const <a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc2</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc1</i>からカラー<i>pc2</i>のr,g,b要素を各々減算し、結果をカラー<i>pc0</i>に返します。<br>a要素にはカラー<i>pc1</i>のa要素がコピーされます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorToRGBA8888"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorToRGBA8888<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ScePspFColor型をScePspRGBA8888に変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA8888">ScePspRGBA8888</a> <b>sceVfpuColorToRGBA8888</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA8888">ScePspRGBA8888</a>に変換されたカラー値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>pc0</i>に与えられた<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a>型のカラー値を<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA8888">ScePspRGBA8888</a>形式の値に変換します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuColorFromRGBA8888">sceVfpuColorFromRGBA8888</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorToRGBA4444"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorToRGBA4444<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ScePspFColor型をScePspRGBA4444に変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA4444">ScePspRGBA4444</a> <b>sceVfpuColorToRGBA4444</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA4444">ScePspRGBA4444</a>に変換されたカラー値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>pc0</i>に与えられた<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a>型のカラー値を<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA4444">ScePspRGBA4444</a>形式の値に変換します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuColorFromRGBA4444">sceVfpuColorFromRGBA4444</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorToRGBA5551"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorToRGBA5551<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ScePspFColor型をScePspRGBA5551に変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA5551">ScePspRGBA5551</a> <b>sceVfpuColorToRGBA5551</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>,
	float <i>q</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: カラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>q</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力: &alpha;閾値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA5551">ScePspRGBA5551</a>に変換されたカラー値を返します。&alpha;チャネルに相当するビットは1ビットになってしまうため、引数<i>q</i>によって閾値を設定します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>pc0</i>に与えられた<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a>型のカラー値を<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGBA5551">ScePspRGBA5551</a>形式の値に変換します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuColorFromRGBA5551">sceVfpuColorFromRGBA5551</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorToRGB565"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorToRGB565<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ScePspFColor型をScePspRGB565に変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGB565">ScePspRGB565</a> <b>sceVfpuColorToRGB565</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc0</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc0</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-Japanese.htm#ScePspRGB565">ScePspRGB565</a>に変換されたカラー値を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>pc0</i>に与えられた<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a>型のカラー値を<a href="../kernel/Types-Reference-Japanese.htm#ScePspRGB565">ScePspRGB565</a>形式の値に変換します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuColorFromRGB565">sceVfpuColorFromRGB565</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuColorZero"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuColorZero<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ゼロ値の生成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<b>sceVfpuColorZero</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFColor">ScePspFColor</a> *<i>pc</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:カラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力カラー<i>pc0</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">カラー<i>pc0</i>の各要素にゼロ値を設定します。R=0, G=0, B=0は黒レベルですが、同時にA=0となるので透明色を意味します。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandInitContext"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandInitContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>疑似乱数シードレジスタの初期化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuRandInitContext</b> (
	<a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuRandContext">SceVfpuRandContext</a> *<i>pContext</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pContext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:疑似乱数シードレジスタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常に0を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuRandContext">SceVfpuRandContext</a>構造体<i>pContext</i>で指定された疑似乱数コンテキストにVFPU擬似乱数系列の初期値を設定します。<br>シード初期値は<i>pContext</i>で指定されたワークエリアに設定されるだけで実際のVFPU乱数レジスタへは書き込まれません。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuRandContext">SceVfpuRandContext</a>, <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuRandRestoreContext">sceVfpuRandRestoreContext</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandSaveContext"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandSaveContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>疑似乱数シードレジスタの保存<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuRandSaveContext</b> (
	<a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuRandContext">SceVfpuRandContext</a> *<i>pContext</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pContext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:疑似乱数シードレジスタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常に0を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUの疑似乱数のシードレジスタをコンテキストとして<a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuRandContext">SceVfpuRandContext</a>構造体<i>pContext</i>に保存します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuRandContext">SceVfpuRandContext</a>, <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuRandRestoreContext">sceVfpuRandRestoreContext</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandRestoreContext"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandRestoreContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>疑似乱数シードレジスタの復帰<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuRandRestoreContext</b> (
	const <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuRandContext">SceVfpuRandContext</a> *<i>pContext</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pContext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:疑似乱数シードレジスタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常に0を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuRandContext">SceVfpuRandContext</a>構造体<i>pContext</i>で指定された疑似乱数コンテキストをVFPUのシードレジスタを復帰します。<br>疑似乱数コンテキストに同じ値を復帰させることで、乱数系列を復元することが出来ます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuRandContext">SceVfpuRandContext</a>, <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuRandSaveContext">sceVfpuRandSaveContext</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandFloat"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandFloat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>疑似乱数取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuRandFloat</b> (
	float <i>n</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力される疑似乱数の境界点&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">疑似乱数値をfloat値として取得します。出力される値は[0:<i>n</i>]区間となります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">乱数値を得ます。乱数系列が進みます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandPi"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandPi<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>0〜&pi;の疑似乱数の取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuRandPi</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">疑似乱数値をfloat値として取得します。出力される値は[0:&pi;]区間となります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">0〜&pi;の範囲(0含む、&pi;含まず)で乱数値を得ます。乱数系列が進みます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandTwoPi"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandTwoPi<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>0〜2&pi;の疑似乱数の取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuRandTwoPi</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">疑似乱数値をfloat値として取得します。出力される値は[0:2&pi;]区間となります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">0〜2&pi;の範囲(0含む、2&pi;含まず)で乱数値を得ます。乱数系列が進みます。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandVector4"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandVector4<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>疑似乱数の取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceVfpuRandVector4</b> (
	<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a> *<i>pfv</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pfv</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力される疑似乱数を受け取る<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a>型へのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">出力ベクトル<i>pfv</i>を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">疑似乱数値を<a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector4">ScePspFVector4</a>型のベクトル値として取得します。各フィールドに出力される値は[0:1]区間となります。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRandPeekFloat"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRandPeekFloat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>疑似乱数の取得(更新なし)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
float <b>sceVfpuRandPeekFloat</b> (
	float <i>n</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力される疑似乱数の境界点&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">次に<a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuRandFloat">sceVfpuRandFloat</a>()関数が返す乱数値を取得します。出力される値は[0:<i>n</i>]区間となります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">乱数値を得ますが、乱数系列を進めません。この関数により、次に発生する乱数値をあらかじめ取得することができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuRandFloat">sceVfpuRandFloat</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuSaveContext"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuSaveContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VFPUレジスタコンテキスト全体の保存<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuSaveContext</b> (
	<a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuContext">SceVfpuContext</a> *<i>pContext</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pContext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;出力:レジスタコンテキスト&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常に0を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUレジスタをコンテキストとして<a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuContext">SceVfpuContext</a>構造体<i>pContext</i>に保存します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuContext">SceVfpuContext</a>, <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuRestoreContext">sceVfpuRestoreContext</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuRestoreContext"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuRestoreContext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VFPUレジスタコンテキスト全体の復帰<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
int <b>sceVfpuRestoreContext</b> (
	const <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuContext">SceVfpuContext</a> *<i>pContext</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pContext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力:レジスタコンテキスト&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常に0を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuContext">SceVfpuContext</a>構造体<i>pContext</i>で指定されたVFPUレジスタコンテキストをVFPUに復帰します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#SceVfpuContext">SceVfpuContext</a>, <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuSaveContext">sceVfpuSaveContext</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMemcpy"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMemcpy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VFPUを使用したメモリコピー<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
void *<b>sceVfpuMemcpy</b> (
	void *<i>dst</i>,
	const void *<i>src</i>,
	unsigned int <i>n</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コピー先アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>src</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コピー元アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コピーサイズ(バイト数)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常に<i>dst</i>を返します。<br></div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUアンキャッシュライトバッファを使用してメモリコピーを行います。メモリからの読み込みはALLEGREX CPUのDキャッシュ経由ですが、メモリへの書き込み時にはVFPUライトバッファを使用して書き込みを行います。<br>コピー元アドレスとコピー先アドレスは重なった領域にならないように指定する必要があります。コピー元アドレスとコピー先アドレスがどちらも16バイトアラインメントの整数倍になっていたとき、もっとも効率がよくなります。<br>サイズが十分大きければmemcpy(), <a href="../kernel/Cache-Reference-Japanese.htm#sceKernelMemcpy">sceKernelMemcpy</a>()等よりも高速なメモリコピーとして使用する事ができます。<a href="../peripheral/DMAC-Reference-Japanese.htm#sceDmacMemcpy">sceDmacMemcpy</a>()と比べるとsceVfpuMemcpy()の方がCPU負荷が高くなります。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">memcpy(), <a href="../kernel/Cache-Reference-Japanese.htm#sceKernelMemcpy">sceKernelMemcpy</a>(), <a href="../peripheral/DMAC-Reference-Japanese.htm#sceDmacMemcpy">sceDmacMemcpy</a>(), <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuMemmove">sceVfpuMemmove</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMemmove"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMemmove<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VFPUを使用したメモリコピー<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
void *<b>sceVfpuMemmove</b> (
	void *<i>dst</i>,
	const void *<i>src</i>,
	unsigned int <i>n</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コピー先アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>src</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コピー元アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コピーサイズ(バイト数)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常に<i>dst</i>を返します。<br></div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUアンキャッシュライトバッファを使用してメモリコピーを行います。メモリからの読み込みはALLEGREX CPUのDキャッシュ経由ですが、メモリへの書き込み時にはVFPUライトバッファを使用して書き込みを行います。<br><a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuMemcpy">sceVfpuMemcpy</a>()との違いは、sceVfpuMemmove()はコピー元アドレスとコピー先アドレスで重なった領域になる場合を許している点です。<a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuMemcpy">sceVfpuMemcpy</a>()が使用できる条件の場合は自動的に<a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuMemcpy">sceVfpuMemcpy</a>()を呼び出します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">memcpy(), <a href="../kernel/Cache-Reference-Japanese.htm#sceKernelMemcpy">sceKernelMemcpy</a>(), <a href="../peripheral/DMAC-Reference-Japanese.htm#sceDmacMemcpy">sceDmacMemcpy</a>(), <a href="../fpu-vfpu/libvfpu-Reference-Japanese.htm#sceVfpuMemcpy">sceVfpuMemcpy</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceVfpuMemset"></a>
<table width="100%"><td width="70%"><font size=6>sceVfpuMemset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>VFPUを使用したメモリフィル<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libvfpu.h&gt;
void *<b>sceVfpuMemset</b> (
	void *<i>dst</i>,
	int <i>c</i>,
	unsigned int <i>n</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フィル開始アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>c</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フィルされるデータ(バイト値)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フィルサイズ(バイト数)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">常に0を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">VFPUアンキャッシュライトバッファを使用してメモリフィルを行います。<br>サイズが十分大きければmemset(), <a href="../kernel/Cache-Reference-Japanese.htm#sceKernelMemset">sceKernelMemset</a>()等よりも高速なメモリコピーとして使用する事ができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">memset(), <a href="../kernel/Cache-Reference-Japanese.htm#sceKernelMemset">sceKernelMemset</a>()<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
