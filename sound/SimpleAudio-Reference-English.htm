<html lang="en">
<head>
<title>SimpleAudio-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
Simple Audio Output Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<div style="margin-left:50px;"><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_AUDIO_OUTPUT2_SMPL_MIN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_AUDIO_OUTPUT2_SMPL_MIN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Minimum number of samples during audio output<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audiooutput.h&gt;
#define  SCE_AUDIO_OUTPUT2_SMPL_MIN	(17u)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the minimum value that can be specified as the number of samples to be output as audio at one time.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/SimpleAudio-Reference-English.htm#sceAudioOutput2ChangeLength">sceAudioOutput2ChangeLength</a></b>()<br><a href="../sound/SimpleAudio-Reference-English.htm#SCE_AUDIO_OUTPUT2_SMPL_MAX">SCE_AUDIO_OUTPUT2_SMPL_MAX</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_AUDIO_OUTPUT2_SMPL_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_AUDIO_OUTPUT2_SMPL_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum number of samples during audio output<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audiooutput.h&gt;
#define  SCE_AUDIO_OUTPUT2_SMPL_MAX	(4111u)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum value that can be specified as the number of samples to be output as audio at one time.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/SimpleAudio-Reference-English.htm#sceAudioOutput2ChangeLength">sceAudioOutput2ChangeLength</a></b>()<br><a href="../sound/SimpleAudio-Reference-English.htm#SCE_AUDIO_OUTPUT2_SMPL_MIN">SCE_AUDIO_OUTPUT2_SMPL_MIN</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_AUDIO_VOLUME_0dB"></a>
<table width="100%"><td width="70%"><font size=6>SCE_AUDIO_VOLUME_0dB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Volume value when volume is not to be changed<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audiooutput.h&gt;
#define  SCE_AUDIO_VOLUME_0dB	(0x8000)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the volume value to be specified when a volume change is not to be added using the digital volume.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/SimpleAudio-Reference-English.htm#sceAudioOutput2OutputBlocking">sceAudioOutput2OutputBlocking</a></b>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioOutput2Reserve"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioOutput2Reserve<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize and reserve use of audio output function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceAudioOutput2Reserve</b>( 
	int <i>iSampleNum</i> 
)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iSampleNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Granularity (sample length to be output at one time; 17 to 4111)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned. If an error occurs, a non-zero value is returned. (For details, see the <a href="../sound/SimpleAudio-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function initializes the audio output function with the assigned granularity (number of samples to be output by one output function call) and reserves the use of that function.<br>An arbitrary value greater than or equal to <a href="../sound/SimpleAudio-Reference-English.htm#SCE_AUDIO_OUTPUT2_SMPL_MIN">SCE_AUDIO_OUTPUT2_SMPL_MIN</a> and less than or equal to <a href="../sound/SimpleAudio-Reference-English.htm#SCE_AUDIO_OUTPUT2_SMPL_MAX">SCE_AUDIO_OUTPUT2_SMPL_MAX</a> can be set for the granularity.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Initialize audio output function using a sample granularity of 512 */
sceAudioOutput2Reserve(512 );

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/SimpleAudio-Reference-English.htm#sceAudioOutput2Release">sceAudioOutput2Release</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioOutput2Release"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioOutput2Release<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Terminate and release audio output function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceAudioOutput2Release</b>( 
	void
)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned. If an error occurs, a non-zero value is returned. (For details, see the <a href="../sound/SimpleAudio-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function releases the audio output function and performs termination processing.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Release audio output function */
sceAudioOutput2Release();

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/SimpleAudio-Reference-English.htm#sceAudioOutput2Reserve">sceAudioOutput2Reserve</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioOutput2ChangeLength"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioOutput2ChangeLength<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set length of audio sample to be output<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceAudioOutput2ChangeLength</b> ( 
	int <i>iSampleNum</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iSampleNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Granularity (sample length to be output at one time; 17 to 4111)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned. If an error occurs, a non-zero value is returned. (For details, see the <a href="../sound/SimpleAudio-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function changes the granularity (number of samples that are output by one output function call). If audio output is in progress, the sample length is changed beginning with the next output after this function was called.<br>An arbitrary value greater than or equal to <a href="../sound/SimpleAudio-Reference-English.htm#SCE_AUDIO_OUTPUT2_SMPL_MIN">SCE_AUDIO_OUTPUT2_SMPL_MIN</a> and less than or equal to <a href="../sound/SimpleAudio-Reference-English.htm#SCE_AUDIO_OUTPUT2_SMPL_MAX">SCE_AUDIO_OUTPUT2_SMPL_MAX</a> can be set for the granularity<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/*Change the output length to 700 samples (700* sizeof(short) * 2(ch) */
sceAudioOutput2ChangeLength(700);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/SimpleAudio-Reference-English.htm#sceAudioOutput2OutputBlocking">sceAudioOutput2OutputBlocking</a></b>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioOutput2OutputBlocking"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioOutput2OutputBlocking<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Output audio data (blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceAudioOutput2OutputBlocking</b>( 
	int <i>iVol</i>,
	const void* <i>pBuf</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVol</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Volume value  (0 - <a href="../sound/SimpleAudio-Reference-English.htm#SCE_AUDIO_VOLUME_0dB">SCE_AUDIO_VOLUME_0dB</a>*32-1)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to output data buffer&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the return value is non-negative, the number of samples that could be registered in the audio driver is returned. Otherwise, an error value is returned. (For details, see the <a href="../sound/SimpleAudio-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs audio output. Specifically, it registers the output data buffer that was specified for <i>pBuf</i> in the audio driver. If the output data buffer could not be registered in the audio driver, the thread that called this API is placed in WAIT state until the buffer can be registered and processing waits until the buffer can be registered. When the output data buffer can be registered in the audio driver, the thread switches from READY to RUN state, and processing for registering the output buffer in the audio driver is performed. When registration in the audio driver is completed, control returns to the calling process. The length of the data that is registered is the value that was specified when audio output was initialized. However, if the setting had been changed by using <a href="../sound/SimpleAudio-Reference-English.htm#sceAudioOutput2ChangeLength">sceAudioOutput2ChangeLength</a>(), the value that was specified last is used by the registration function.<br>If NULL is specified for <i>pBuf</i>, processing can be implemented in which audio is not actually output and processing waits until all audio data that is currently registered in the audio driver but has not been output is output. However, processing only waits for output of the "currently" registered data. Since new audio may be output by another thread after the wait state was entered if another thread outputs audio data, this function cannot be used to wait until all audio that is being output by other threads ends. (For this purpose, use a thread synchronization function such as an event flag.)<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Do not change the contents of the output data buffer until audio driver output processing ends.<br>Although the volume can be set to an extremely large value, since sound is usually divided, you should try as much as possible not to set a value that is too large compared with <a href="../sound/SimpleAudio-Reference-English.htm#SCE_AUDIO_VOLUME_0dB">SCE_AUDIO_VOLUME_0dB</a>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Output 16-bit PCM STEREO data that is in pcmBuf without changing the volume */
sceAudioOutput2OutputBlocking(
	<a href="../sound/SimpleAudio-Reference-English.htm#SCE_AUDIO_VOLUME_0dB">SCE_AUDIO_VOLUME_0dB</a>,
	pcmBuf
);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/SimpleAudio-Reference-English.htm#SCE_AUDIO_VOLUME_0dB">SCE_AUDIO_VOLUME_0dB</a><br><br></div>

<!-- sce_hd2 -->
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioOutput2GetRestSample"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioOutput2GetRestSample<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of samples that have not been played<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceAudioOutput2GetRestSample</b>( 
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the return value is non-negative, the number of samples of unplayed sound data is returned. Otherwise, an error value is returned. (For details, see the <a href="../sound/SimpleAudio-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the number of sound data samples which are currently planned to be output by the driver, but have not yet been played.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/*Get number of unplayed samples */
int restSample;
restSample = sceAudioOutput2GetRestSample();

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Error codes returned by the Simple Audio Library<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_OK">SCE_OK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AUDIO_ERROR_OUTPUT_BUSY">SCE_AUDIO_ERROR_OUTPUT_BUSY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cannot be changed because it is currently being output&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AUDIO_ERROR_BUSY">SCE_AUDIO_ERROR_BUSY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cannot be changed because there is still buffered output remaining&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AUDIO_ERROR_PRIV_REQUIRED">SCE_AUDIO_ERROR_PRIV_REQUIRED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to output buffer is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AUDIO_ERROR_INVALID_SIZE">SCE_AUDIO_ERROR_INVALID_SIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260006&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sample length size is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AUDIO_ERROR_NOT_RESERVED">SCE_AUDIO_ERROR_NOT_RESERVED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260008&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Audio output has not been reserved&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AUDIO_ERROR_INVALID_VOLUME">SCE_AUDIO_ERROR_INVALID_VOLUME</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8026000B&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Volume value is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2008 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
