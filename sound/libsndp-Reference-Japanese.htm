<html lang="jp">
<head>
<title>libsndp-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libsndp
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceSsSndpCtx"></a>
<table width="100%"><td width="70%"><font size=6>SceSsSndpCtx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>sndp環境<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct{
	char <i>system</i>[SCE_SNDP_SNDP_CTX_SIZE];
} <b>SceSsSndpCtx</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>system</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libsndpが内部で使用します。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">サウンドデータ(phd,pbd）一組毎に、この構造体を用意してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#sceSsBindSoundData">sceSsBindSoundData</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceSsSmfCtx"></a>
<table width="100%"><td width="70%"><font size=6>SceSsSmfCtx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>smf環境<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct{
	char <i>system</i>[SCE_SNDP_SMF_CTX_SIZE];
} <b>SceSsSmfCtx</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>system</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libsndpが内部で使用します。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">使用するSMF毎に、この構造体を用意してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#sceSsSMFBind">sceSsSMFBind</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceSsKeyOnParam"></a>
<table width="100%"><td width="70%"><font size=6>SceSsKeyOnParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>キーオンパラメータ<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	unsigned char <i>vel</i>;
	unsigned char <i>pan</i>;
	unsigned char <i>sendVel</i>;
	unsigned char<i> sendPan</i>;
	int <i>addPitch</i>;
} <b>SceSsKeyOnParam</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>vel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ベロシティ（0〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pan</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パンポット（0〜64〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sendVel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エフェクトセンドベロシティ(0〜127)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sendPan</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エフェクトセンドパンポット(0〜64〜127)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>addPitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;加算ピッチ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">キーオン、ノートオン際に指定する発音開始時のベロシティ及び加算ピッチを設定する為の構造体です。<br>トーンパラメータの内容を元に、個々に設定した値が加味されます。<br>加味した結果、上限・下限を超えた場合、結果はそれぞれ上限と下限となります。<br>パンポット、エフェクトセンドパンポットは0が最も左、64が中央、127が最も右になります。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#sceSsNoteOnByTone">sceSsNoteOnByTone</a>()、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsKeyOnByTone">sceSsKeyOnByTone</a>()、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsVoiceNoteOnByTone">sceSsVoiceNoteOnByTone</a>()<br><a href="../sound/libsndp-Reference-Japanese.htm#sceSsVoiceKeyOnByTone">sceSsVoiceKeyOnByTone</a>()、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsNoteOn">sceSsNoteOn</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceSsEffectParam"></a>
<table width="100%"><td width="70%"><font size=6>SceSsEffectParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>エフェクトパラメータ<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct{
	unsigned int <i>setMask</i>;
	unsigned int <i>type</i>;
	unsigned int <i>delayTime;</i>
	unsigned int <i>feedBack</i>;
	unsigned int <i>effectVolume_l</i>;
	unsigned int <i>effectVolume_r</i>;
	unsigned int <i>drySwitch;</i>
	unsigned int <i>wetSwitch</i>;
} <b>SceSsEffectParam</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>setMask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するパラメータの種類をbit-orで指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>type</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エフェクトタイプ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>delayTime</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ディレイタイム（0〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>feedBack</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フィードバック（0〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>effectVolume_l</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Lchのエフェクトボリューム（0〜4096）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>effectVolume_r</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Rchのエフェクトボリューム（0〜4096）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>drySwitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Dry側のサウンドON/OFF&nbsp;&nbsp;<br>&nbsp;&nbsp;（SCE_SNDP_OFF=OFF,SCE_SNDP_ON=ON）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>wetSwitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Wet側（エフェクトのかかった音）のサウンドON/OFF&nbsp;&nbsp;<br>&nbsp;&nbsp;（SCE_SNDP_OFF=OFF,SCE_SNDP_ON=ON）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>setMask</i>に設定するパラメータの種類をbit-orで指定します。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SNDP_FX_PARAM_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;全てのパラメータを設定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SNDP_FX_PARAM_TYPE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エフェクトタイプを設定&nbsp;&nbsp;<br>&nbsp;&nbsp;（<i>type</i>に指定した値を設定）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SNDP_FX_PARAM_PARAM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エフェクトパラメータを設定&nbsp;&nbsp;<br>&nbsp;&nbsp;（<i>delayTime</i>、<i>feedBack</i>に指定した&nbsp;&nbsp;<br>&nbsp;&nbsp;値を設定）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SNDP_FX_PARAM_EFFECTVOLUME&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エフェクトボリュームを設定&nbsp;&nbsp;<br>&nbsp;&nbsp;（<i>effectVolume_l</i>、<i>effectVolume_r</i>に&nbsp;&nbsp;<br>&nbsp;&nbsp;指定した値を設定）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SNDP_FX_PARAM_SWITCH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;エフェクトスイッチを設定&nbsp;&nbsp;<br>&nbsp;&nbsp;（<i>drySwitch</i>、<i>wetSwitch</i>に指定した&nbsp;&nbsp;<br>&nbsp;&nbsp;値を設定）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;"><i>type</i>はエフェクトタイプを指定します。下記の定数が用意されています。<br>SCE_SNDP_FX_TYPE_OFF<br>SCE_SNDP_FX_TYPE_ROOM<br>SCE_SNDP_FX_TYPE_STUDIOA<br>SCE_SNDP_FX_TYPE_STUDIOB<br>SCE_SNDP_FX_TYPE_STUDIOC<br>SCE_SNDP_FX_TYPE_HALL<br>SCE_SNDP_FX_TYPE_SPACE<br>SCE_SNDP_FX_TYPE_ECHO<br>SCE_SNDP_FX_TYPE_DELAY<br>SCE_SNDP_FX_TYPE_PIPE<br><br><i>delayTime</i>はディレイ時間を指定します。<br><i>feedBack</i>はフィードバック量を指定します。<br><i>effectVolume_l</i>、<i>effectVolume_r</i>は左右のエフェクトボリュームを指定します。<br><i>drySwitch</i>はドライ側スイッチ、<i>wetSwitch</i>はウェット側のスイッチを指定します。<br>エフェクト設定の詳細はSASドキュメントを参照してください。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsInit"></a>
<table width="100%"><td width="70%"><font size=6>sceSsInit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>初期化処理<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsInit</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>maxVoice</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>maxVoice</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;使用ボイス数（1〜32）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細はlibsndpエラーコード一覧、及びlibsasエラーコード一覧を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">libsndp内のボイス管理システムの初期化、SMFシーケンサの初期化、及びSASの初期化を行います。<br>libsndpを使用する場合、必ずこの関数もしくは<a href="../sound/libsndp-Reference-Japanese.htm#sceSsInitWithGrain">sceSsInitWithGrain</a>()を呼ぶ必要があります。<br>libsndpを使用する場合、当関数内でSASの初期化を行いますので、SAS関数にてのSASの初期化は行わないようにしてください。<br>この関数を呼ぶことで1粒度時間は256サンプルに設定されます。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int   result;
	unsigned int   useVoice = 32; /* 使用ボイス数 */

	result = sceSsInit(useVoice);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsInitWithGrain"></a>
<table width="100%"><td width="70%"><font size=6>sceSsInitWithGrain<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>初期化処理（粒度指定あり）<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsInitWithGrain</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>maxVoice,</i>
<i>	</i><a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> grain</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>maxVoice</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;使用ボイス数（1〜32）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>grain</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;粒度数（64以上2048以下の32の倍数。64,96,128,…,2016,2048）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細はlibsndpエラーコード一覧、及びlibsasエラーコード一覧を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">libsndp内のボイス管理システムの初期化、SMFシーケンサの初期化、及びSASの初期化を行います。<br>libsndpを使用する場合、必ずこの関数もしくは<a href="../sound/libsndp-Reference-Japanese.htm#sceSsInit">sceSsInit</a>()を呼ぶ必要があります。<br>libsndpを使用する場合、当関数内でSASの初期化を行いますので、SAS関数にてのSASの初期化は行わないようにしてください。<br><i>grain</i>を小さくすると短い粒度時間での発音変化を表現できますがCPU処理負荷が重くなります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int   result;
	unsigned int   useVoice = 32; /* 使用ボイス数 */
	unsigned int   Grain = 1024; /* 粒度数 */

	result = sceSsInitWithGrain(useVoice, Grain);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsExit"></a>
<table width="100%"><td width="70%"><font size=6>sceSsExit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>終了処理<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsExit</b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細はlibsndpエラーコード一覧、及びlibsasエラーコード一覧を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">libsndpの終了処理、及びSASの終了処理を行います。<br>libsndpを利用したアプリケーションが終了する際には必ず当関数を実行します。<br>当関数内でSASの終了処理も行いますので、SASの終了関数は実行しないで下さい。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int   result;

	result = sceSsExit();

	return 0;
}

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSynthesis"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSynthesis<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>libsndp定期処理<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSynthesis</b>(
	short *<i>pOut</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>キーオン／オフ、ノートオン／オフ関数に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pOut</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;波形出力バッファへのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>
<div style="margin-left:50px;">（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">当関数をコールする事で、粒度時間分のSMFシーケンス処理及びボイス処理を行い、関数内部で<a href="../sound/libsas-Reference-Japanese.htm#sceSasCore">sceSasCore</a>()を呼び出します。その後、ボイス状態を更新し、次の当関数のコールまでのボイス処理に備えます。<br><br>当関数内で<a href="../sound/libsas-Reference-Japanese.htm#sceSasCore">sceSasCore</a>()を呼び出しますので、<a href="../sound/libsas-Reference-Japanese.htm#sceSasCoreWithMix">sceSasCoreWithMix</a>()や<a href="../sound/libsas-Reference-Japanese.htm#sceSasCore">sceSasCore</a>()は使用しないで下さい。<br>当関数の処理中でも別スレッドにてボイス状態の変化を伴う処理（ノートオン、ノートオフ、キーオン、キーオフ等）が可能です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int   result;
	short *pOut;

	result = sceSsSynthesis(pOut);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSynthesisWithMix"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSynthesisWithMix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>libsndp定期処理(外部PCMミキシング機能つき)<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSynthesisWithMix</b>(
	short *<i>pInOut,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a><i> lVol,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a><i> rVol</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>キーオン／オフ、ノートオン／オフ関数に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pInOut</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;波形出力バッファへのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>lVol</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;外部PCM入力の左チャネルに対するボリューム値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rVol</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;外部PCM入力の右チャネルに対するボリューム値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>
<div style="margin-left:50px;">（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">当関数をコールする事で、粒度時間分のSMFシーケンス処理及びボイス処理を行い、関数内部で<a href="../sound/libsas-Reference-Japanese.htm#sceSasCoreWithMix">sceSasCoreWithMix</a>()を呼び出します。<a href="../sound/libsas-Reference-Japanese.htm#sceSasCoreWithMix">sceSasCoreWithMix</a>()を呼び出すため、指定された領域にあるPCMデータとミキシングした結果が出力されます。その後、ボイス状態を更新し、次の当関数のコールまでのボイス処理に備えます。<br><i>pInOut</i>は64バイトアラインメントが要求されます。<br>ミキシング時に、入力PCMデータに対して音量変化をさせることが可能です。ボリューム値として設定可能な範囲は<br><br></div>
<div style="margin-left:70px;">0 &#8806; lVol, rVol &#8806; SCE_SNDP_VOLUME_MAX<br></div>
<div style="margin-left:50px;"><br>となります。<br><br>当関数内で<a href="../sound/libsas-Reference-Japanese.htm#sceSasCoreWithMix">sceSasCoreWithMix</a>()を呼び出しますので、<a href="../sound/libsas-Reference-Japanese.htm#sceSasCore">sceSasCore</a>()および<a href="../sound/libsas-Reference-Japanese.htm#sceSasCoreWithMix">sceSasCoreWithMix</a>()は使用しないで下さい。<br>当関数の処理中でも別スレッドにてボイス状態の変化を伴う処理（ノートオン、ノートオフ、キーオン、キーオフ等）が可能です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int   result;
	short *pInOut;
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> lVol = SCE_SNDP_VOLUME_MAX;
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> rVol = SCE_SNDP_VOLUME_MAX;

	/*J
		pInOutバッファの音(BGMなど)にlVol,rVolの処理を行った後、
		SASにて生成した音をミキシングします。
	*/
	result = sceSsSynthesisWithMix(pInOut,lVol,rVol);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceSetReserveMode"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceSetReserveMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスのlibsndpでの管理状態を設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceSetReserveMode</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>reserveMode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>voiceNum</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;設定するボイスナンバー&nbsp;</td>
</tr>
<tr>
<td rowspan= 3  valign="top">&nbsp;<i>reserveMode</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;設定する状態&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SCE_SNDP_ON&nbsp;</td>
<td valign="top">&nbsp;sndpの管理下に置く&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SCE_SNDP_OFF&nbsp;</td>
<td valign="top">&nbsp;sndpの管理下から外す&nbsp;</td>
</tr></table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>
<div style="margin-left:50px;">（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#sceSsInit">sceSsInit</a>()で確保したボイスに対してlibsndpでの管理状態をON/OFFします。<br><a href="../sound/libsndp-Reference-Japanese.htm#sceSsInit">sceSsInit</a>()で確保していないボイスを指定した場合はエラーを返します。<br>ボイスの管理状態のデフォルトはSCE_SNDP_ONです。<br>libsndpは管理下から外されたボイスを使うことはありません。<br>libsndpの管理下から外されたボイスはlibsasからであれば利用できます。<br>ボイスの管理状態を設定する場合、そのボイスの発音を停止させてから実行して下さい。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int   result;

	/* ボイス0をlibsndpの管理下から外す */
	result = sceSsVoiceSetReserveMode(0, SCE_SNDP_OFF);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsBindSoundData"></a>
<table width="100%"><td width="70%"><font size=6>sceSsBindSoundData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>サウンドデータを登録<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsBindSoundData</b>(
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsSndpCtx">SceSsSndpCtx</a> <i>*sndpCtx,</i>
	void <i>*phd</i>,
	void <i>*pbd</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sndpCtx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sndp環境構造体へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>phd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;phdデータへのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pbd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;pbdデータへのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り振られた<i>phdID</i><br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">サウンドデータ一組（phd、pbd）をlibsndpに登録します。<br>sndp環境構造体は、サウンドデータ一組毎に用意して下さい。<br>サウンドデータへのアクセスは、当関数の返り値の<i>phdID</i>で行います。<br>登録できるサウンドデータは128個までです。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int phdID;
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsSndpCtx">SceSsSndpCtx</a> sndpCtx;
	unsigned char *phd, *pbd;


	phdID = sceSsBindSoundData(&amp;sndpCtx, phd, pbd);

	return 0;
}

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>sndpCtx</i>構造体は初期化の必要はありません、ワークエリアとしてメモリを確保して渡してください。<br>サウンドデータ（phd、pbd）の詳細は、ドキュメント「サウンドデータフォーマット」を参照してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#SceSsSndpCtx">SceSsSndpCtx</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsUnbindSoundData"></a>
<table width="100%"><td width="70%"><font size=6>sceSsUnbindSoundData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>登録されているサウンドデータを解除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsUnbindSoundData</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>phdID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>phdID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;登録されているサウンドデータを解除する<i>phdID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">登録されているサウンドデータ（phd、pbd）を解除します。<br>当関数で解除した<i>phdID</i>は使用できません。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsUnbindSoundData(0);

	return 0;
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#sceSsBindSoundData">sceSsBindSoundData</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsNoteOnByTone"></a>
<table width="100%"><td width="70%"><font size=6>sceSsNoteOnByTone<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>トーンノートオン<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsNoteOnByTone</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> phdID,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>toneIndex</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>note</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>keyOnID</i>,
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a> <i>*keyOnParam</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>phdID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートオンするトーンが含まれる<i>phdID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>toneIndex</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートオンするトーンインデックス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>note</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートナンバー（0〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>keyOnID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオンID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>keyOnParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a>構造体へのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ノートオンしたボイスナンバー<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">トーンインデックス（トーンアトリビュートデータの構造体toneParamCtxのインデックス）で示される<i>phd</i>内のトーンパラメータを元に、<i>note</i>で指定された音程にて発音します。使用するボイスは自動的に割り振られますが、トーンパラメータで設定された優先度により、実際には発音しない事もあります。（トーンデータのフォーマットは別資料「サウンドデータフォーマット」を参照してください）<br>また、対応するボイスがポーズ中のボイスであった場合は<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>を返します。<br><br>実際に発音されるノートは引数で設定されるノートナンバーとトーンパラメータ中のセンターノートの値によって決定されます。例えばノートオンしたノートナンバーがトーンパラメータのセンターノートと同じだった場合にはその波形は原音ピッチで発音されます。<br>（実際のピッチはセンターデチューンおよびデチューンの値も加味されます）<br><br>実際に発音を開始するタイミングは、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()を呼び出した時点からですが、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()の呼び出し前に割り振られたボイスに対して、発音停止を行った場合や別の発音を行った場合は、実際には発音しません。<br><br>音量や加算ピッチの設定は<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a>構造体に対して行われます。<br><br>キーオンIDとは、発音に対しての識別です。<br>なお、キーオンIDは0x80000000〜0xFFFFFFFFはlibsndpで予約されていますので指定しないで下さい。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int voiceNum;
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a> keyOnParam;

	keyOnParam.vel = 127;
	keyOnParam.pan = 64;
	keyOnParam.sendVel = 127;
	keyOnParam.sendPan = 64;
	keyOnParam.addPitch = 0;

	/* phdID:0 トーンインデックス:0 ノート:64 keyOnID:0 で発音 */
	voiceNum = sceSsNoteOnByTone(0, 0, 64, 0, &amp;keyOnParam);

	return 0;
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsKeyOnByTone"></a>
<table width="100%"><td width="70%"><font size=6>sceSsKeyOnByTone<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>トーンキーオン<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsKeyOnByTone</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>phdID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>toneIndex</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>pitch,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>keyOnID,</i>
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a> *<i>keyOnParam</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>phdID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオンするトーンが含まれる<i>phdID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>toneIndex</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオンするトーンインデックス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ピッチ（0x0001〜0x4000)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>keyOnID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオンID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>keyOnParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a>構造体へのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ノートオンしたボイスナンバー<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">トーンインデックスで示される<i>phd</i>内のトーンパラメータを元に、<i>pitch</i>で指定された音程にて発音します。使用するボイスは自動的に割り振られますが、トーンパラメータで設定された優先度により、実際には発音しない事もあります。<br>また、対応するボイスがポーズ中のボイスであった場合は<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>を返します。<br><br>実際に発音されるノートは引数で設定されるノートナンバーとトーンパラメータ中のセンターノートの値によって決定されます。例えばノートオンしたノートナンバーがトーンパラメータのセンターノートと同じだった場合にはその波形は原音ピッチで発音されます。<br>（実際のピッチはセンターデチューンおよびデチューンの値も加味されます）<br><br>実際に発音を開始するのは、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()を呼び出した時点からですが、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()の呼び出し前に割り振られたボイスに対して、発音停止を行った場合や別の発音を行った場合は、実際には発音しません。<br><br>音量や加算ピッチの設定は<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a>構造体に対して行われます。<br><br>キーオンIDとは、発音に対しての識別です。<br>なお、キーオンIDは0x80000000〜0xFFFFFFFFはlibsndpでの予約されていますので指定しないで下さい。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int voiceNum;
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a> keyOnParam;

	keyOnParam.vel = 127;
	keyOnParam.pan = 64;
	keyOnParam.sendVel = 127;
	keyOnParam.sendPan = 64;
	keyOnParam.addPitch = 0;

	/* phdID:0 トーンインデックス:0 ピッチ:0x1000 keyOnID:0 で発音 */
	voiceNum = sceSsKeyOnByTone(0, 0, 0x1000, 0, &amp;keyOnParam);

	return 0;
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceNoteOnByTone"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceNoteOnByTone<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>トーンノートオン（ボイス指定）<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceNoteOnByTone</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>phdID</i>, 
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> toneIndex</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>note</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>keyOnID</i>, 
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a> <i>*keyOnParam</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>phdID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートオンするトーンが含まれる<i>phdID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートオンするボイスナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>toneIndex</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートオンするトーンインデックス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>note</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートナンバー（0〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>keyOnID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオンID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>keyOnParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a>構造体へのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ノートオンしたボイスナンバー<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">トーンインデックスで示される<i>phd</i>内のトーンパラメータを元に、<i>note</i>で指定された音程にて発音します。発音は指定したボイスで強制的に行います。<br><br>実際に発音されるノートは引数で設定されるノートナンバーとトーンパラメータ中のセンターノートの値によって決定されます。例えばノートオンしたノートナンバーがトーンパラメータのセンターノートと同じだった場合にはその波形は原音ピッチで発音されます。<br>（実際のピッチはセンターデチューンおよびデチューンの値も加味されます）<br><br>実際に発音を開始するのは、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()を呼び出した時点からですが、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()の呼び出し前に指定したボイスに対して、発音停止を行った場合や別の発音を行った場合は、実際には発音しません。<br>また、対応するボイスがポーズ中のボイスであった場合は<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>を返します。<br><br>音量や加算ピッチの設定は<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a>構造体に対して行われます。<br><br>引数<i>voiceNum</i>で指定できるボイスは<a href="../sound/libsndp-Reference-Japanese.htm#sceSsInit">sceSsInit</a>()で使用登録したボイスのみ対象になります。<br><br>キーオンIDとは、発音に対しての識別です。<br>なお、キーオンIDは0x80000000〜0xFFFFFFFFはlibsndpでの予約されていますので指定しないで下さい。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int voiceNum;
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a> keyOnParam;

	keyOnParam.vel = 127;
	keyOnParam.pan = 64;
	keyOnParam.sendVel = 127;
	keyOnParam.sendPan = 64;
	keyOnParam.addPitch = 0;

	/* phdID:0 ボイス:0 トーンインデックス:0 ノート:64 keyOnID:0 で発音 */
	voiceNum = sceSsVoiceNoteOnByTone(0, 0, 0, 64, 0, &amp;keyOnParam);

	return 0;
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceKeyOnByTone"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceKeyOnByTone<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>トーンキーオン（ボイス指定）<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceKeyOnByTone</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>phdID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>toneIndex</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> pitch</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>keyOnID</i>,
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a> *<i>keyOnParam</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>phdID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオンするトーンが含まれる<i>phdID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオンするボイスナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>toneIndex</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオンするトーンインデックス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ピッチ（0x0001〜0x4000)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>keyOnID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオンID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>keyOnParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a>構造体へのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">キーオンしたボイスナンバー<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">トーンインデックスで示される<i>phd</i>内のトーンパラメータを元に、<i>pitch</i>で指定された音程にて発音します。発音は指定したボイスで強制的に行います。<br><br>実際に発音されるノートは引数で設定されるノートナンバーとトーンパラメータ中のセンターノートの値によって決定されます。例えばノートオンしたノートナンバーがトーンパラメータのセンターノートと同じだった場合にはその波形は原音ピッチで発音されます。<br>（実際のピッチはセンターデチューンおよびデチューンの値も加味されます）<br><br>実際に発音を開始するのは、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()を呼び出した時点からですが、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()の呼び出し前に指定したボイスに対して、発音停止を行った場合や別の発音を行った場合は、実際には発音しません。<br>また、対応するボイスがポーズ中のボイスであった場合は<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>を返します。<br><br>音量や加算ピッチの設定は<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a>構造体に対して行われます。<br><br>キーオンIDとは、発音に対しての識別です。<br>なお、キーオンIDは0x80000000〜0xFFFFFFFFはlibsndpに予約されていますので指定しないで下さい。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int voiceNum;
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a> keyOnParam;

	keyOnParam.vel = 127;
	keyOnParam.pan = 64;
	keyOnParam.sendVel = 127;
	keyOnParam.sendPan = 64;
	keyOnParam.addPitch = 0;

	/* phdID:0 ボイス:0 トーンインデックス:0 ピッチ:0x1000 keyOnID:0 で発音 */
	voiceNum = sceSsVoiceKeyOnByTone(0, 0, 0, 0x1000, 0, &amp;keyOnParam);

	return 0;
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceSetSustainHold"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceSetSustainHold<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスのサスティンホールド状態を設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceSetSustainHold</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>sustainHold</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>voiceNum</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;設定するボイスナンバー&nbsp;</td>
</tr>
<tr>
<td rowspan= 3  valign="top">&nbsp;<i>sustainHold</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;設定するサスティンホールド状態&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SCE_SNDP_OFF&nbsp;</td>
<td valign="top">&nbsp;サスティンホールドオフ&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SCE_SNDP_ON&nbsp;</td>
<td valign="top">&nbsp;サスティンホールドオン&nbsp;</td>
</tr></table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイスにサスティン状態を設定します。サスティンホールドオンのボイスの発音を停止する操作を行った場合で、発音している波形がループ波形の場合、発音は停止せず、そのボイスはサスティン状態となります。サスティン状態のボイスはサスティンホールドオフを設定された時点で発音が停止します。<br>また、対応するボイスがポーズ中のボイスであった場合は<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>を返します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;


	result = sceSsVoiceSetSustainHold(0, SCE_SNDP_ON);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceKeyoff"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceKeyoff<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスキーオフ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceKeyoff</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオフするボイス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定されたボイスをキーオフします。サスティンホールド状態がオンの場合ボイスの状態はサスティン状態となり、実際にはサスティンホールド状態をオフにした時点でキーオフされます。<br>また、対応するボイスがポーズ中のボイスであった場合は<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>を返します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* ボイス0をキーオフ */
	result = sceSsVoiceKeyoff(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceSoundOff"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceSoundOff<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスサウンドオフ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceSoundOff</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サウンドオフするボイス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定されたボイスの発音をすばやく終了させます。サスティンホールドのオフとキーオフを行いさらにADSRのリリース時間を最短に設定しています。<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()を呼び続けたままボイスの発音を素早く終了させたい場合に有効です。また、対応するボイスがポーズ中のボイスであった場合は<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>を返します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>指定MIDIチャンネルのボイスをサウンドオフする例。

#include &lt;libsndp.h&gt;

/*
 引数
   midich : MIDIチャンネル
   id : キーオンID
 */
int main(int midich, int id)
{
	int result;
	int vnum;
	unsigned int vbit;

	/* 指定MIDIチャンネルで発音中のボイスのビットパターンを取得 */
	vbit = <a href="../sound/libsndp-Reference-Japanese.htm#sceSsGetVoice">sceSsGetVoice</a>(midich, id);

	for(vnum=0; (vnum&lt;SCE_SAS_VOICE_MAX) || (vbit!=0); vnum++){
		if(vbit &amp; 0x0001){ /* ONのボイスなら */
			/* ボイス vnum をサウンドオフ */
			result = sceSsVoiceSoundOff(vnum);
			if(result &lt; 0) return result; /* エラーなら終了する */
			}
		vbit &gt;&gt;= 1;
	}
	return result;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceSetPitch"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceSetPitch<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスの発音ピッチを加算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceSetPitch</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a><i> addPitch</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するボイスナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>addPitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定する加算ピッチ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定したボイスにピッチを加算します。加算ピッチに負の値を設定した場合、ピッチは減少します。加算ピッチにはマイナスの値も指定可能です。<br>加算したピッチが0x1を下回った場合、0x4000を上回った場合はそれぞれ0x1・0x4000となります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* ボイス0にピッチを0x200加算する */
	result = sceSsVoiceSetPitch(0, 0x200);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceSetVelocity"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceSetVelocity<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスのベロシティを設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceSetVelocity</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>velocity</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するボイスナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>velocity</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するベロシティ(0〜127)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイスのベロシティを設定します。ベロシティはPHD内のトーンパラメータに設定されたボリュームに対しての相対値です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* ボイス0にベロシティ127を設定する */
	result = sceSsVoiceSetVelocity(0, 127);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceSetPanpot"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceSetPanpot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスのパンポットを設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceSetPanpot</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>panpot</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するボイスナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>panpot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するパンポット（0〜64〜127）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイスのパンポットを設定します。値は0が最も左・127が最も右・64が中央です。<br>実際にはPHD内のトーンパラメータに設定されたパンポットに加算される形となり、結果0を下回った場合や127を上回った場合は、それぞれ0・127となります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* ボイス0にパンポット127を設定する */
	result = sceSsVoiceSetPanpot(0, 127);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceSetPitchBend"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceSetPitchBend<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスのピッチベンドを設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceSetPitchBend</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum,</i> 
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>bendValue</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するボイスナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bendValue</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するピッチベンド値&nbsp;&nbsp;<br>&nbsp;&nbsp;0〜8191(Bend Down)&nbsp;&nbsp;<br>&nbsp;&nbsp;8192(Center)&nbsp;&nbsp;<br>&nbsp;&nbsp;8193〜16383(Bend Up)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイスのピッチベンドを設定します。<br>ピッチはPHD内トーンパラメータのベンドレンジで設定した範囲内で変化します。<br><i>bendValue値は</i>MIDIのピッチベンド値に合わせた範囲になっています。<br><i>bendValue</i>値とピッチは音階（cent）に対しリニアに変化します。<br>ピッチベンド効果はノート指定で発音するボイスにのみ効きます。<br>(<a href="../sound/libsndp-Reference-Japanese.htm#sceSsNoteOnByTone">sceSsNoteOnByTone</a>, <a href="../sound/libsndp-Reference-Japanese.htm#sceSsVoiceNoteOnByTone">sceSsVoiceNoteOnByTone</a>, <a href="../sound/libsndp-Reference-Japanese.htm#sceSsNoteOn">sceSsNoteOn</a>)<br>ピッチを直接指定して発音するボイスではベンドレンジの幅が不明のためピッチベンドは効きません。<br>(<a href="../sound/libsndp-Reference-Japanese.htm#sceSsKeyOnByTone">sceSsKeyOnByTone</a>, <a href="../sound/libsndp-Reference-Japanese.htm#sceSsVoiceKeyOnByTone">sceSsVoiceKeyOnByTone</a>には効きません)<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* ボイス0にピッチベンド最大16383を設定する */
	result = sceSsVoiceSetPitchBend(0, 16383);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceSetSendVelocity"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceSetSendVelocity<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスのエフェクトセンドベロシティを設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceSetSendVelocity</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>sendVelocity</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するボイスナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sendVelocity</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するエフェクトセンドベロシティ(0〜127)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイスのベロシティを設定します。ベロシティはPHD内のトーンパラメータに設定されたボリュームに対しての相対値です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* ボイス0にエフェクトセンドベロシティ127を設定する */
	result = sceSsVoiceSetSendVelocity(0, 127);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceSetSendPanpot"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceSetSendPanpot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスのエフェクトセンドパンポットを設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceSetSendPanpot</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>sendPanpot</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するボイスナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sendPanpot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;設定するエフェクトセンドパンポット(0~64~127)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイスのエフェクトセンドパンポットを設定します。値は0が最も左・127が最も右・64が中央です。実際にはPHD内のトーンパラメータに設定されたエフェクトセンドパンポットに加算される形となり、結果0を下回った場合や127を上回った場合は、それぞれ0・127となります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* ボイス0にエフェクトセンドパンポット127を設定する */
	result = sceSsVoiceSetSendPanpot(0, 127);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceAllKeyOff"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceAllKeyOff<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>オールキーオフ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceAllKeyOff</b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br>エラーのボイスが含まれていた場合は最後にエラーになったボイスのエラーコードを返します。<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">libsndp管理下にある全てのボイスをキーオフします（キーOFFを行い、ADSRがリリース状態に移行します）。<br>サスティンホールドが設定されているボイスはサスティンホールド状態をオフにした上で発音を停止します。<br>また、対応するボイスにポーズ中のボイスを含む場合は<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>を返します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* 全ボイスの発音を停止 */
	result = sceSsVoiceAllKeyOff();

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceAllSoundOff"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceAllSoundOff<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>オールサウンドオフ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceAllSoundOff</b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br>エラーのボイスが含まれていた場合は最後にエラーになったボイスのエラーコードを返します。<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">libsndp管理下にある全ボイスの発音がすばやく終了します。サスティンホールドオフおよびキーオフを行いさらにADSRのリリース時間を最短に設定しています。<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()を呼び続けたままボイスの発音を素早く終了させたい場合に有効です。<br><a href="../sound/libsndp-Reference-Japanese.htm#sceSsVoiceAllKeyOff">sceSsVoiceAllKeyOff</a>()を利用した場合は、キーオフしたボイスのADSRのリリース時間が長いとボイスの終了まで時間がかかりますが、この関数では短い時間でボイスが終了します。ただし、エフェクトの残響は停止しませんので注意してください。また、対応するボイスにポーズ中のボイスを含む場合は<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>を返します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* 全ボイスの発音を停止 */
	result = sceSsVoiceAllSoundOff();

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceSetPause"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceSetPause<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイス再生の一時停止（ポーズ）<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceSetPause</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>mode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ポーズ/ポーズ解除をさせるボイス番号(0〜31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ポーズ状態(1でポーズ設定、0でポーズ解除)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">指定された番号のボイスに対して、ポーズ状態を設定または解除します。<br>ポーズ中のボイスに対する<a href="../sound/libsndp-Reference-Japanese.htm#sceSsVoiceGetStatus">sceSsVoiceGetStatus</a>()の結果はポーズ直前の値を返します。<br>リザーブされているボイスを指定すると、エラー（<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_RESERVEDVOICE">SCE_SNDP_ERROR_RESERVEDVOICE</a>）が返ります。<br>また、ポーズ中のボイスに対してノートON/OFF操作をした場合は対応するボイスに対する操作は無視されます。関数によってはエラー(<a href="../sound/libsndp-Reference-Japanese.htm#SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>)を返します。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceGetEndFlag"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceGetEndFlag<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスの発音終了フラグ状態を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceGetEndFlag</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得するボイスナンバー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">発音終了フラグ状態<br>0 : 発音終了に達していない<br>1 : 発音終了に達している<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイスの発音終了フラグを取得します。<br>エンベロープ処理が終了し、発音が終了していた場合は1です。発音中の場合は0になります。<br>初期化（<a href="../sound/libsndp-Reference-Japanese.htm#sceSsInit">sceSsInit</a>）直後は全て1になっています。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* ボイス0の発音終了フラグ状態を取得する */
	result = sceSsVoiceGetEndFlag(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceGetEnvelope"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceGetEnvelope<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスのエンベロープ値を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceGetEnvelope</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> voiceNum</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得するボイスナンバー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細はlibsndpエラーコード一覧、及びlibsasエラーコード一覧を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">取得したエンベロープ波高値を返します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	/* ボイス0のエンベロープ値を取得する */
	result = sceSsVoiceGetEnvelope(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceGetStatus"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceGetStatus<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイス状態を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceGetStatus</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>voiceNum</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボイス状態を取得するボイスナンバー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイス状態<br>SCE_SNDP_VOICESTATUS_RESERVED<br>SCE_SNDP_VOICESTATUS_IDLE<br>SCE_SNDP_VOICESTATUS_BUSY<br>SCE_SNDP_VOICESTATUS_RELEASE<br>SCE_SNDP_VOICESTATUS_SUSTAIN<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイス状態を取得します。<br>SCE_SNDP_VOICESTATUS_RESERVEDはlibsndpの管理下から外されたボイスです。<br>（管理下から外すには<a href="../sound/libsndp-Reference-Japanese.htm#sceSsVoiceSetReserveMode">sceSsVoiceSetReserveMode</a>()を使います）<br><br>SCE_SNDP_VOICESTATUS_IDLEはlibsndpの初期化直後、もしくは発音が終了しているボイスでノートオンイベントにより最初に利用されるボイスです。<br><br>SCE_SNDP_VOICESTATUS_RELEASEは発音停止（ノートオフ）イベントによりADSRがリリース中、もしくは次の<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()の呼び出しでADSRがリリースになるボイスです。<br><br>SCE_SNDP_VOICESTATUS_SUSTAINは、発音停止（ノートオフ）イベントは発行されているが、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsVoiceSetSustainHold">sceSsVoiceSetSustainHold</a>()によりホールドが継続中のボイスです。<br><br>SCE_SNDP_VOICESTATUS_BUSYは、発音開始（ノートオン）イベントにより発音が継続されている、もしくは次の<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()の呼び出しで発音されるボイスです。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsVoiceGetStatus(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceGetLevel"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceGetLevel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスレベルの設定値を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceGetLevel</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> voiceNum,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a><i> *lVol,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a><i> *rVol</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得するボイスナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>lVol</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;左ボリュームの値を返すポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rVol</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;右ボリュームの値を返すポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細はlibsndpエラーコード一覧、及びlibsasエラーコード一覧を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイスのボリュームを取得します。<br>具体的にはlibsndp内部で呼んでいる<a href="../sound/libsas-Reference-Japanese.htm#sceSasSetVolume">sceSasSetVolume</a>()の設定を取得します。<br>ボリューム値の範囲は<br><br></div>
<div style="margin-left:70px;">-SCE_SNDP_VOLUME_MAX &#8806; <i>lVol</i>, <i>rVol</i> &#8806; SCE_SNDP_VOLUME_MAX<br></div>
<div style="margin-left:50px;"><br>となります。<br>マイナス値では位相が反転しています。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;
	int nvoice;
	int VolumeL, VolumeR;

	/* ボイスのエンベロープ値を取得する */
	nvoice = 0;  /*  ボイス0  */
	result = sceSsVoiceGetLevel(nvoice, &amp;VolumeL, &amp;VolumeR);
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsVoiceGetSendLevel"></a>
<table width="100%"><td width="70%"><font size=6>sceSsVoiceGetSendLevel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスのエフェクトセンドレベルの設定値を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsVoiceGetSendLevel</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> voiceNum,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a><i> *lVol,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a><i> *rVol</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>voiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得するボイスナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>lVol</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;左エフェクトセンドボリュームの値を返すポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rVol</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;右エフェクトセンドボリュームの値を返すポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細はlibsndpエラーコード一覧、及びlibsasエラーコード一覧を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ボイスのエフェクトセンドボリュームを取得します。<br>具体的にはlibsndp内部で呼んでいる<a href="../sound/libsas-Reference-Japanese.htm#sceSasSetVolume">sceSasSetVolume</a>()の設定を取得します。<br>ボリューム値の範囲は<br><br></div>
<div style="margin-left:70px;">-SCE_SNDP_VOLUME_MAX &#8806; <i>lVol</i>, <i>rVol</i> &#8806; SCE_SNDP_VOLUME_MAX<br></div>
<div style="margin-left:50px;"><br>となります。<br>マイナス値では位相が反転しています。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;
	int nvoice;
	int VolumeL, VolumeR;

	/* ボイスのエンベロープ値を取得する */
	nvoice = 0;  /*  ボイス0  */
	result = sceSsVoiceGetSendLevel(nvoice, &amp;VolumeL, &amp;VolumeR);
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsKeyOffByID"></a>
<table width="100%"><td width="70%"><font size=6>sceSsKeyOffByID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>キーオンIDに該当する発音中のボイスをキーオフ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <b>sceSsKeyOffByID</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> ID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キーオフするキーオンID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">キーオフしたボイスのビットパターン<br>返り値がゼロの場合、キーオフしたボイスはないということになります。<br><br>ビットNo.とボイスNo.の関係は以下です。<br></div>

<div style="margin-left:50px;">
<p>
<img src="gif/libsndp-Reference-Japanese001.gif">
</div>
<div style="margin-left:50px;"><br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">キーオンID該当する発音中のボイスをキーオフします。<br>ただし、サスティンホールド状態がオンに設定されてるボイスはサスティン状態となり、サスティンホールド状態をオフにじた時点でキーオフされます。<br>また、対応するボイスがポーズ中のボイスを含む場合は、ポーズ中のボイスに対する操作は無視されます。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	unsigned int result;

	/* キーオンID:0のボイスの発音を停止する */
	result = sceSsKeyOffByID(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsGetVoice"></a>
<table width="100%"><td width="70%"><font size=6>sceSsGetVoice<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>MIDIチャンネル・キーオンIDに該当する発音中のボイスを取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <b>sceSsGetVoice</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>midiChannel</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>ID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>midiChannel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得するMIDIチャンネル（0~15 = MIDI ch. 1~16）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得するキーオンID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">取得したボイスのビットパターン<br>返りゼロの場合、取得したボイスはないということです。<br>ビットNo.とボイスNo.の関係は以下です。<br></div>

<div style="margin-left:50px;">
<p>
<img src="gif/libsndp-Reference-Japanese002.gif">
</div>
<div style="margin-left:50px;"><br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">MIDIチャンネル、及びキーオンIDに該当する発音中のボイスを取得します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	unsigned int result;

	/* キーオンMIDIチャンネル:1・キーオンID:0のボイスを取得する */
	result = sceSsGetVoice(0, 0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsGetPause"></a>
<table width="100%"><td width="70%"><font size=6>sceSsGetPause<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ボイスの一時停止（ポーズ）状態を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <b>sceSsGetPause</b>(
<i>	void</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">取得したボイスの一時停止状態のビットパターン<br>1でポーズ中、0でポーズ解除中です。<br>ビットNo.とボイスNo.の関係は以下です。<br></div>

<div style="margin-left:50px;">
<p>
<img src="gif/libsndp-Reference-Japanese003.gif">
</div>
<div style="margin-left:50px;"><br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">各ボイスの一時停止状態を取得します。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsNoteOn"></a>
<table width="100%"><td width="70%"><font size=6>sceSsNoteOn<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ノートオン<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <b>sceSsNoteOn</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>phdID,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>midiChannel,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>midiProgram</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> midiNote</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>sustain,</i> 
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a> <i>*keyOnParam</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>keyOnID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>phdID</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;ノートオンするプログラムが含まれる<i>phdID</i>&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>midiChannel</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;ノートオンするMIDIチャンネル(0~15=&nbsp;MIDI&nbsp;ch.&nbsp;1~16)&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>midiProgram</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;ノートオンするMIDIプログラムナンバー（0~127）&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>midiNote</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;ノートオンするノートナンバー(0~127)&nbsp;</td>
</tr>
<tr>
<td rowspan= 3  valign="top">&nbsp;<i>sustain</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;ノートオン時のサスティンホールド状態&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SCE_SNDP_ON&nbsp;</td>
<td valign="top">&nbsp;サスティンホールドオン&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SCE_SNDP_OFF&nbsp;</td>
<td valign="top">&nbsp;サスティンホールドオフ&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>keyOnParam</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a>構造体へのポインタ&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>keyOnID</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;キーオンID&nbsp;</td>
</tr></table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ノートオンしたボイスのビットパターン<br>返り値がゼロの場合、発音したボイスはないことを示します。<br>ビットNo.とボイスNo.の関係は以下です。<br></div>

<div style="margin-left:50px;">
<p>
<img src="gif/libsndp-Reference-Japanese004.gif">
</div>
<div style="margin-left:50px;"><br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">MIDIプログラムナンバー、ノートナンバーに該当するトーンパラメータにて、<i>midiChannel</i>でノートオンします。複数個該当する場合は、該当個数分発音します。<br>該当するプログラムが存在しない場合や、ノートがトーンパラメータの範囲外の場合発音は行いません。また、対応するボイスがポーズ中のボイスを含む場合は、ポーズ中のボイスに対する操作は無視されます。<br><br>実際に発音されるノートは引数で設定されるノートナンバーとトーンパラメータ中のセンターノートの値によって決定されます。例えばノートオンしたノートナンバーがトーンパラメータのセンターノートと同じだった場合にはその波形は原音ピッチで発音されます。<br>（実際のピッチはセンターデチューンおよびデチューンの値も加味されます）<br><br>実際に発音を開始するのは、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()を呼び出した時点からですが、<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()の呼び出し前に発音したボイスに対して、発音停止を行った場合や別の発音を行った場合は、実際には発音しません。<br><br>音量や加算ピッチの設定は<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a>構造体に対して行なわれます。<br><br>キーオンIDとは、発音に対しての識別です。<br>なお、キーオンIDは0x80000000〜0xFFFFFFFFはlibsndpに予約されていますので指定しないで下さい。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	unsigned int result;
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a> keyOnParam;

	keyOnParam.vel = 127;
	keyOnParam.pan = 64;
	keyOnParam.sendVel = 127;
	keyOnParam.sendPan = 64;
	keyOnParam.addPitch = 0;

	/* phdID:0 MIDIチャンネル:1 プログラムナンバー:0 ノート:64 
	サスティン状態:オフ キーオンID:0で発音する              */
	result= sceSsNoteOn(0, 0, 0, 64, SCE_SNDP_OFF, &amp;keyOnParam, 0);

	return 0;
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#SceSsKeyOnParam">SceSsKeyOnParam</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsNoteOff"></a>
<table width="100%"><td width="70%"><font size=6>sceSsNoteOff<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ノートオフ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <b>sceSsNoteOff</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>midiChannel</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> midiNote</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>ID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>midiChannel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートオフするMIDIチャンネル（0~15 = MIDI ch. 1~16）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>midiNote</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートオフするノートナンバー（0〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートオフするキーオンID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ノートオフしたボイスのビットパターン<br>返り値がゼロの場合、ノートオフしたボイスはない<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>midiChannel</i>、<i>midiNote</i>、<i>ID</i>に該当する発音中のボイスをキーオフします。<br>ただし、サスティンホールド状態がオンに設定されてるボイスはサスティン状態となり、サスティンホールド状態をオフにじた時点でキーオフされます。<br>また、対応するボイスがポーズ中のボイスを含む場合は、ポーズ中のボイスに対する操作は無視されます。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	unsigned int result;

	/* MIDIチャンネル:1 ノート:64 キーオンID:0で発音中のボイスを停止*/
	result= sceSsNoteOff(0, 64, 0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSetSustainHold"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSetSustainHold<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>MIDIチャンネル・キーオンIDに該当するボイスのサスティンホールド状態を設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <b>sceSsSetSustainHold</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>midiChannel</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> sustainHold</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> ID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>関数<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesisWithMix">sceSsSynthesisWithMix</a>()や<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSynthesis">sceSsSynthesis</a>()に対してマルチスレッドセーフ<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>midiChannel</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;サスティンホールド状態を設定するMIDIチャンネル&nbsp;<br>&nbsp;(0~15=MIDI&nbsp;ch.1~16)&nbsp;</td>
</tr>
<tr>
<td rowspan= 3  valign="top">&nbsp;<i>sustainHold</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;サスティンホールド状態&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SCE_SNDP_ON&nbsp;</td>
<td valign="top">&nbsp;サスティンホールドオン&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SCE_SNDP_OFF&nbsp;</td>
<td valign="top">&nbsp;サスティンホールドオフ&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>ID</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;サスティンホールド状態を設定するキーオンID&nbsp;</td>
</tr></table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">サスティンホールドを設定したボイスのビットパターン<br>返り値がゼロの場合、サスティンホールド状態を設定したボイスはない<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">MIDIチャンネル・キーオンIDに該当するボイスにサスティン状態を設定します。<br>サスティンホールドオンのボイスの発音を停止する操作を行った場合で、発音している波形がループ波形の場合、発音は停止せず、そのボイスはサスティン状態となります。サスティン状態のボイスはサスティンホールドオフを設定された時点で発音が停止します。<br>また、対応するボイスがポーズ中のボイスを含む場合は、ポーズ中のボイスに対する操作は無視されます。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	unsigned int result;

	/* MIDIチャンネル:1 キーオンID:0のボイスのサスティン状態をオンに設定する　*/
	result= sceSsSetSustainHold(0, SCE_SNDP_ON, 0);

	return 0;
}

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSetEffectParam"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSetEffectParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>エフェクト内容設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSetEffectParam</b>(
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsEffectParam">SceSsEffectParam</a> <i>*effectParam</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>effectParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsndp-Reference-Japanese.htm#SceSsEffectParam">SceSsEffectParam</a>構造体へのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細はlibsndpエラーコード一覧、及びlibsasエラーコード一覧を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エフェクト設定したい内容を<a href="../sound/libsndp-Reference-Japanese.htm#SceSsEffectParam">SceSsEffectParam</a>構造体のメンバに設定します。<br><a href="../sound/libsndp-Reference-Japanese.htm#SceSsEffectParam">SceSsEffectParam</a>構造体のメンバである<i>setMask</i>に設定したいパラメータの種類をbit-orで指定します。例えば、<i>setMask</i>にSCE_SNDP_FX_PARAM_TYPEを指定した場合、<a href="../sound/libsndp-Reference-Japanese.htm#SceSsEffectParam">SceSsEffectParam</a>構造体のメンバである<i>type</i>のパラメータが設定されます。<br>また、<i>setMask</i>にSCE_SNDP_FX_PARAM_ALLを指定した場合、全てのパラメータが設定されます。<br><br>設定の詳細な内容はSASドキュメントを参照してください。<br><br>なお、<i>type</i>で指定できるパラメータは下記のとおりです。<br>SCE_SNDP_FX_TYPE_OFF<br>SCE_SNDP_FX_TYPE_ROOM<br>SCE_SNDP_FX_TYPE_STUDIOA<br>SCE_SNDP_FX_TYPE_STUDIOB<br>SCE_SNDP_FX_TYPE_STUDIOC<br>SCE_SNDP_FX_TYPE_HALL<br>SCE_SNDP_FX_TYPE_SPACE<br>SCE_SNDP_FX_TYPE_ECHO<br>SCE_SNDP_FX_TYPE_DELAY<br>SCE_SNDP_FX_TYPE_PIPE<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsEffectParam">SceSsEffectParam</a> effectParam;

	/* エフェクトタイプをSCE_SNDP_FX_TYPE_STUDIOC、
	エフェクトボリュームを左右4096、
	エフェクトスイッチをドライ、ウェット共にオン */

	effectParam.setMask = SCE_SNDP_FX_PARAM_TYPE |
			SCE_SNDP_FX_PARAM_EFFECTVOLUME |
			SCE_SNDP_FX_PARAM_SWITCH;
	effectParam.type = SCE_SNDP_FX_TYPE_STUDIOC;
	effectParam.effectVolume_l = 4096;
	effectParam.effectVolume_r = 4096;
	effectParam.drySwitch = SCE_SNDP_ON;
	effectParam.wetSwitch = SCE_SNDP_ON;

	result= sceSsSetEffectParam(&amp;effectParam);

	return 0;
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#SceSsEffectParam">SceSsEffectParam</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsNote2Pitch"></a>
<table width="100%"><td width="70%"><font size=6>sceSsNote2Pitch<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ノート値からピッチ値に変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceUShort16">SceUShort16</a> <b>sceSsNote2Pitch</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUShort16">SceUShort16</a> <i>center_note</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceShort16">SceShort16</a><i> center_fine</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUShort16">SceUShort16</a> <i>note</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceShort16">SceShort16</a> <i>fine</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>center_note</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サンプリング時のベースノート&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>center_fine</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サンプリング時のベースノートに対するファイン（半音は128）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>note</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートナンバー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fine</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノートに対するファイン（半音は128）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ピッチを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">センターノートと発音ノートから、ピッチを計算します。<br>返り値は0x4000を超える場合があるため、上限を超えていないかを確認して下さい。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	unsigned short pitch;

	pitch= sceSsNote2Pitch(64, 0, 64, 0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsPitch2Note"></a>
<table width="100%"><td width="70%"><font size=6>sceSsPitch2Note<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ピッチ値からノート値に変換<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceUShort16">SceUShort16</a> <b>sceSsPitch2Note</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUShort16">SceUShort16</a><i> center_note</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceShort16">SceShort16</a> <i>center_fine</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUShort16">SceUShort16</a> <i>pitch</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>center_note</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サンプリング時のベースノート&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>center_fine</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サンプリング時のベースノートに対するファイン&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ピッチ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ノート値（上8ビットがノート、下8ビットがファイン）を返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">センターノートと発音ピッチから、発音ノートを計算します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	unsigned short note;

	note = sceSsPitch2Note(64, 0, 64, 0x1000);

	return 0;
}

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFBind"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFBind<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFを登録<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFBind</b>(
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsSmfCtx">SceSsSmfCtx</a> <i>*smfCtx,</i>
	void <i>*smf</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>phdID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfCtx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>smf</i>環境構造体へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>smf</i>データへのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>phdID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;バインドする<i>phdID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り当てられた<i>smfID</i>を返します。<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#SceSsSmfCtx">SceSsSmfCtx</a>は一組のデータ毎に用意する必要があります。<br>また、同一のデータ内容でも再生環境が異なる場合は、それぞれ<a href="../sound/libsndp-Reference-Japanese.htm#SceSsSmfCtx">SceSsSmfCtx</a>を用意してください。<br>引数<i>smfCtx</i>構造体は初期化の必要はありません、ワークエリアとしてメモリを確保して渡してください。<br><br>SMF（スタンダードMIDIフォーマット）とPHDを関連付けし、<i>smfID</i>を返します。<br>最大で127個まで関連付けする事ができます。<br><br>登録に失敗した場合は、SMFのフォーマットに問題がある可能性があります。<br>使用できるSMFはタイプ0のみです。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;
	<a href="../sound/libsndp-Reference-Japanese.htm#SceSsSmfCtx">SceSsSmfCtx</a> smfCtx;
	char *smf;

	result = sceSsSMFBind(&amp;smfCtx, smf, 0);

	return 0;
}

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの処理分解能はテンポ60の場合、4分音符で172分の1です。それ以下で発生するMIDIイベントは結果として、分解能でクォンタイズされます。<br>同一粒度粒度時間内に起きるMIDIイベントが大量に含まれる場合、再生処理遅延の原因となりますのでイベントのタイミングを分散するか、必要最低限のイベント数に調整して下さい。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#SceSsSmfCtx">SceSsSmfCtx</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFUnbind"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFUnbind<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFを解除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFUnbind</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;解除する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り当てられた<i>smfID</i>を返します。<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">登録されている<i>smfID</i>のデータの関連付けを解除します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFUnbind(&amp;smfCtx, smf, 0);

	return 0;
}

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">解除された<i>smfID</i>に対しての操作は出来なくなりますので、再生中の<i>smfID</i>は再生を停止してから、当関数を使用してください。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFPlay"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFPlay<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFを演奏開始<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFPlay</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>playVelocity</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>playPan</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>playSendVelocity</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>playSendPan</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>playCount</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏開始する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playVelocity</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏ベロシティ（0〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playPan</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏パンポット（0〜64〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playSendVelocity</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏センドベロシティ（0〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playSendPan</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏センドパンポット（0〜64〜127）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playCount</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏回数（1以上、SCE_SNDP_INFINITYで無限ループ）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの演奏を開始します。<br><i>playVelocity</i>は演奏全体に対するボリュームの相対値です。<br><i>playPan</i>は演奏全体に対する定位です。<br><i>playSendVelocity</i>は演奏全体に対するエフェクトセンドボリュームの相対値です。<br><i>playSendPan</i>は演奏全体に対するエフェクトに対する定位です。<br><i>playCount</i>は全体の演奏回数で、SCE_SNDP_INFINITYを指定した場合無限ループとなります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;
	char *smf;

	result = sceSsSMFPlay(0, 127, 64, 127, 64, SCE_SNDP_INFINITY);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFPause"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFPause<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏を一時中断<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFPause</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏を一時中断する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏中のSMFの演奏を一時中断します。<br>SMFにて発音中のボイスはサスティンホールド状態を全てオフとし、強制的に発音を中止します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFPause(0);

	return 0;
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libsndp-Reference-Japanese.htm#sceSsSMFResume">sceSsSMFResume</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFResume"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFResume<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>一時中断中のSMFの演奏を再開<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFResume</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏を再開する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの演奏を<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSMFPause">sceSsSMFPause</a>()にて一時中断した時点から再開します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFResume(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFStop"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFStop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏を停止<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFStop</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏を停止する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの演奏を停止し再生位置をシーケンスデータの先頭に戻します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFStop(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFAddTempo"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFAddTempo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏テンポ加算<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFAddTempo</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <i>addTempo</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏テンポを加算する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>addTempo</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;加算する4分音符あたりのマイクロ秒&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの演奏テンポを加算します。<i>addTempo</i>は現在テンポに加算する4分音符あたりのマイクロ秒で正の場合は再生は遅く、負の場合は再生は早くなります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFAddTempo(0, 10000);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFGetTempo"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFGetTempo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏テンポの取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFGetTempo</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;テンポを取得する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">4分音符あたりのマイクロ秒<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏テンポを取得します。返り値は4分音符あたりのマイクロ秒です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFGetTempo(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFSetPlayVelocity"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFSetPlayVelocity<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏ベロシティを設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFSetPlayVelocity</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>playVelocity</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏ベロシティを設定する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playVelocity</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏ベロシティ（0〜127）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMF演奏全体に対してのベロシティを設定します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFSetPlayVelocity(0, 127);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFGetPlayVelocity"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFGetPlayVelocity<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏ベロシティを取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFGetPlayVelocity</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏ベロシティ<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏ベロシティを取得します。<br><a href="../sound/libsndp-Reference-Japanese.htm#sceSsSMFSetPlayVelocity">sceSsSMFSetPlayVelocity</a>()で設定した値を返します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int main(void)
{
	int result;

	result = sceSsSMFGetPlayVelocity(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFSetPlaySendVelocity"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFSetPlaySendVelocity<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏エフェクトセンドベロシティを設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFSetPlaySendVelocity</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>playSendVelocity</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏ベロシティを設定する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playSendVelocity</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏ベロシティ（0〜127）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMF演奏全体に対してのエフェクトセンドベロシティを設定します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFSetPlaySendVelocity(0, 127);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFGetPlaySendVelocity"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFGetPlaySendVelocity<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏エフェクトセンドベロシティを取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFGetPlaySendVelocity</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏エフェクトセンドベロシティ<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏ベロシティを取得します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFGetPlaySendVelocity(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFSetPlayPanpot"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFSetPlayPanpot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏パンポットを設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFSetPlayPanpot</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>playPanpot</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏パンポットを設定する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playPanpot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏パンポット（0〜64〜127）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの演奏全体に対する定位を設定します。<br>0が最も左、64が中央、127が最も右です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFSetPlayPanpot(0, 127);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFGetPlayPanpot"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFGetPlayPanpot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏パンポットを取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFGetPlayPanpot</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏パンポットを取得する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏パンポット<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏パンポットを取得します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFGetPlayPanpot(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFSetPlaySendPanpot"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFSetPlaySendPanpot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏エフェクトセンドパンポットを設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFSetPlaySendPanpot</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>playSendPanpot</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏エフェクトセンドパンポットを設定する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playSendPanpot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏エフェクトセンドパンポット（0〜64〜127）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの演奏全体に対するエフェクトセンドの定位を設定します。<br>0が最も左、64が中央、127が最も右です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFSetPlaySendPanpot(0, 127);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFGetPlaySendPanpot"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFGetPlaySendPanpot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏エフェクトセンドパンポットを取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFGetPlaySendPanpot</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏エフェクトセンドパンポットを取得する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏パンポット<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏エフェクトセンドパンポットを取得します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFGetPlaySendPanpot(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFGetPlayStatus"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFGetPlayStatus<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの演奏状況を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFGetPlayStatus</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏状況を取得する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">演奏状況を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SNDP_PLAYSTATUS_READY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏開始可能状態&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SNDP_PLAYSTATUS_PLAY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SNDP_PLAYSTATUS_STOP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏停止中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_SNDP_PLAYSTATUS_ERROR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏不可能&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの演奏状況を取得します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFGetPlayStatus(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFSetChannelMute"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFSetChannelMute<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFのチャンネルミュートを設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFSetChannelMute</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>midiChannel</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;チャンネルミュートを設定する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>midiChannel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ミュートするMIDIチャンネル(0~15 = MIDI ch.1~16)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの指定されたMIDIチャンネルの演奏をミュートします。<br>内部処理としては発音中ならばキーOFFし、以後のキーONを禁止にします。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFSetChannelMute(0, 0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFResetChannelMute"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFResetChannelMute<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFのチャンネルミュートを解除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFResetChannelMute</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a><i> smfID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;チャンネルミュートを解除する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">全てのチャンネルのミュートを解除します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFResetChannelMute(0);

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFSetPlayChannel"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFSetPlayChannel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの全チャンネルミュートを同時設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFSetPlayChannel</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>playChannelBit</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;チャンネルミュートを設定する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playChannelBit</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;全MIDIチャンネルのミュートON/OFF設定&nbsp;&nbsp;<br>&nbsp;&nbsp;bit0〜15= MIDI ch.1〜16, bit値 0=Mute_ON, 1=Mute_OFF&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの全MIDIチャンネルのミュート状態を設定します。<br>引数<i>playChannelBit</i>の各bitの値が各MIDI ch.のミュートON/OFFに対応します。<br>内部処理としては発音中ならばキーOFFし、以後のキーONを禁止にします。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

int main(void)
{
	int result;

	result = sceSsSMFSetPlayChannel(0, 0xFFFF); /* 全ミュート解除 */

	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFGetPlayChannel"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFGetPlayChannel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMFの全チャンネルのミュート状態を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFGetPlayChannel</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> *<i>playChannelBit</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;チャンネルミュートを設定する<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>playChannelBit</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;全MIDIチャンネルのミュート状態を格納するポインタ&nbsp;&nbsp;<br>&nbsp;&nbsp;bit0〜15= MIDI ch1〜16, bit値 0=Mute_ON, 1=Mute_OFF&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SMFの全MIDIチャンネルのミュート状態を取得します。<br>引数<i>playChannelBit</i>の各bitの値が各MIDIチャンネルのミュートON/OFFに対応します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

/* 各MIDIチャンネルのミュート状態を MuteBit に返します */
int func(unsigned int *MuteBit)
{
	int result;

	result = sceSsSMFGetPlayChannel(0, MuteBit);
	return result;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSsSMFGetKeyOnID"></a>
<table width="100%"><td width="70%"><font size=6>sceSsSMFGetKeyOnID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SMF演奏中のキーオンIDを取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> <b>sceSsSMFGetKeyOnID</b>(
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>smfID</i>,
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>midich,</i>
	<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a> <i>*keyonID</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smfID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsndp-Reference-Japanese.htm#sceSsSMFBind">sceSsSMFBind</a>()で得られた<i>smfID</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>midich</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;MIDIチャンネル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>*keyonID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID値の戻り値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、SCE_OK<br>返り値が負（＜0）の場合エラー<br><br>（詳細は<a href="../sound/libsndp-Reference-Japanese.htm#エラーコード一覧">エラーコード一覧</a>を参照して下さい）<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>smfID</i>でSMF演奏中の任意の<i>midich</i>でのキーオンIDの値を得ます。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsndp.h&gt;

/* smfIDで演奏中SMFのmidich チャンネルのキーオンIDを取得する */
int GetSMFKeyOnVoiceBit(unsigned int smfID, unsigned int midich)
{
    int result;
    unsigned int keyonID;

    result = sceSsSMFGetKeyOnID(smfID, midich, &amp;keyonID);
    return result;
}

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="エラーコード一覧"></a>
<table width="100%"><td width="70%"><font size=6>エラーコード一覧<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[エラーコード]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>libsndpの返すエラーコード<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_NOTINIT">SCE_SNDP_ERROR_NOTINIT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;未初期化である&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_PHDID">SCE_SNDP_ERROR_PHDID</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>phdID</i>が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_SMF">SCE_SNDP_ERROR_SMF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SMFデータのポインタが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_SMFCTX">SCE_SNDP_ERROR_SMFCTX</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SMF環境構造体のポインタが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_FORMAT">SCE_SNDP_ERROR_FORMAT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SMFのフォーマットが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_SMFFULL">SCE_SNDP_ERROR_SMFFULL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450006&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SMDの登録上限を超えている&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_SMFID">SCE_SNDP_ERROR_SMFID</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450007&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;smdIDが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_PLAYCOUNT">SCE_SNDP_ERROR_PLAYCOUNT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450008&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏回数の指定が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_NOTREADY">SCE_SNDP_ERROR_NOTREADY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450009&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏開始できる状態でない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_PARAM">SCE_SNDP_ERROR_PARAM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8045000a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パラメータが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_NOTPLAY">SCE_SNDP_ERROR_NOTPLAY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8045000b&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏していない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_NOTPAUSE">SCE_SNDP_ERROR_NOTPAUSE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8045000c&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;一時中断していない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_DONTSTOP">SCE_SNDP_ERROR_DONTSTOP</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8045000d&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;演奏を停止できる状態でない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_ALREADY">SCE_SNDP_ERROR_ALREADY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8045000e&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既に設定した状態である&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_SOUNDDATAFULL">SCE_SNDP_ERROR_SOUNDDATAFULL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8045000f&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サウンドデータの登録上限を&nbsp;&nbsp;<br>&nbsp;&nbsp;超えている&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_CANTALLOCATEVOICE">SCE_SNDP_ERROR_CANTALLOCATEVOICE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボイスが割り振られなかった&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_VOICENUM">SCE_SNDP_ERROR_VOICENUM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450011&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボイスナンバーが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_RESERVEDVOICE">SCE_SNDP_ERROR_RESERVEDVOICE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450012&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボイスはlibsndpの管理下にない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SNDP_ERROR_PAUSEVOICE">SCE_SNDP_ERROR_PAUSEVOICE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80450013&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ポーズ中のボイスを含む&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
