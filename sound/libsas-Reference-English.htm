<html lang="en">
<head>
<title>libsas-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libsas Reference
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_VOICE_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_VOICE_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum number of voices<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_VOICE_MAX		(32)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum number of voices.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetKeyOn">sceSasSetKeyOn</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_GRAIN_SAMPLES"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_GRAIN_SAMPLES<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Number of samples in one unit of granularity (default value)<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_GRAIN_SAMPLES		(256)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the number of samples that are generated whenever the periodic processing function is called. <br>This value is different from the number of samples per unit of granularity specified with the <b><a href="../sound/libsas-Reference-English.htm#sceSasInitWithGrain">sceSasInitWithGrain</a></b>() function when SAS is initialized.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a></b>()<br><b><a href="../sound/libsas-Reference-English.htm#sceSasInit">sceSasInit</a></b>()<br><b><a href="../sound/libsas-Reference-English.htm#sceSasInitWithGrain">sceSasInitWithGrain</a></b>()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_VOLUME_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_VOLUME_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum volume<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_VOLUME_MAX		(0x1000)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum volume that can be specified for each voice.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetVolume">sceSasSetVolume</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_LOOP_DISABLE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_LOOP_DISABLE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Disable loop flag<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_LOOP_DISABLE	(0)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is specified to disable the loop flag that is contained in the ADPCM (.vag) data.<br>If SCE_SAS_LOOP_DISABLE is specified, one-shot play is performed unconditionally.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetVoice">sceSasSetVoice</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_LOOP_ENABLE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_LOOP_ENABLE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Enable loop flag<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_LOOP_ENABLE	(1)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is specified to enable the loop flag that is contained in the ADPCM (.vag) data.<br>If SCE_SAS_LOOP_ENABLE is specified, infinite loop play is performed for ADPCM (.vag) data that includes loop information. If the ADPCM (.vag) data does not include loop information, one-shot play is performed.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetVoice">sceSasSetVoice</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_PITCH_MIN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_PITCH_MIN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Pitch lower bound<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_PITCH_MIN		(1)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the lower bound of the pitch that can be specified.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetPitch">sceSasSetPitch</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_PITCH_BASE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_PITCH_BASE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Pitch base value<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_PITCH_BASE		(0x1000)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the pitch value that is specified when you don't want to change the pitch.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetPitch">sceSasSetPitch</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_PITCH_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_PITCH_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Pitch upper bound<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_PITCH_MAX		(0x4000)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the upper bound of the pitch that can be specified.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetPitch">sceSasSetPitch</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_NOISE_CLOCK_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_NOISE_CLOCK_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Noise clock upper bound<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_NOISE_CLOCK_MAX	(0x3f)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the upper bound of the noise clock value that can be specified.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetNoise">sceSasSetNoise</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_ENVELOPE_HEIGHT_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_ENVELOPE_HEIGHT_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum envelope wave height<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_ENVELOPE_HEIGHT_MAX	(0x40000000)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum envelope wave height.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetSL">sceSasSetSL</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_ENVELOPE_RATE_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_ENVELOPE_RATE_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum envelope rate value<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_ENVELOPE_RATE_MAX		(0x7fffffff)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum envelope rate value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSR">sceSasSetADSR</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_ADSR_MODE_LINEAR_INC"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_ADSR_MODE_LINEAR_INC<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ADSR linear increase<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_ADSR_MODE_LINEAR_INC	(0)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a linear increase curve in the envelope ADSR curve specification.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSRmode">sceSasSetADSRmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_ADSR_MODE_LINEAR_DEC"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_ADSR_MODE_LINEAR_DEC<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ADSR linear decrease<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_ADSR_MODE_LINEAR_DEC	(1)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a linear decrease curve in the envelope ADSR curve specification.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSRmode">sceSasSetADSRmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_ADSR_MODE_BENT_LINEAR"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_ADSR_MODE_BENT_LINEAR<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ADSR bent linear increase<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_ADSR_MODE_BENT_LINEAR	(2)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a bent linear increase curve in the envelope ADSR curve specification.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSRmode">sceSasSetADSRmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_ADSR_MODE_REVEXPONENT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_ADSR_MODE_REVEXPONENT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ADSR exponential decrease<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_ADSR_MODE_REVEXPONENT	(3)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is an exponential decrease curve in the envelope ADSR curve specification.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSRmode">sceSasSetADSRmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_ADSR_MODE_EXPONENT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_ADSR_MODE_EXPONENT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ADSR exponential increase<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_ADSR_MODE_EXPONENT	(4)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is an exponential increase curve in the envelope ADSR curve specification.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSRmode">sceSasSetADSRmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_ADSR_MODE_DIRECT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_ADSR_MODE_DIRECT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ADSR immediate specification<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_ADSR_MODE_DIRECT	(5)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is an immediate specification mode in the envelope ADSR specification.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSRmode">sceSasSetADSRmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_ATTACK_VALID"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_ATTACK_VALID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Make ADSR parameter change Attack part valid <br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_ATTACK_VALID	(1)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a flag indicating that a parameter change in the attack state is valid in functions for collectively setting all 4 ADSR state parameters of the envelope.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSR">sceSasSetADSR</a></b>(), <b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSRmode">sceSasSetADSRmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_DECAY_VALID"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_DECAY_VALID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Make ADSR parameter change Decay part valid<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_DECAY_VALID	(2)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a flag indicating that a parameter change in the decay state is valid in functions for collectively setting all 4 ADSR state parameters of the envelope.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSR">sceSasSetADSR</a></b>(), <b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSRmode">sceSasSetADSRmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_SUSTAIN_VALID"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_SUSTAIN_VALID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Make ADSR parameter change Sustain part valid <br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_SUSTAIN_VALID	(4)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a flag indicating that a parameter change in the sustain state is valid in functions for collectively setting all 4 ADSR state parameters of the envelope.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSR">sceSasSetADSR</a></b>(), <b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSRmode">sceSasSetADSRmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_RELEASE_VALID"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_RELEASE_VALID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Make ADSR parameter change Release part valid <br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_RELEASE_VALID	(8)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a flag indicating that a parameter change in the release state is valid in functions for collectively setting all 4 ADSR state parameters of the envelope.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSR">sceSasSetADSR</a></b>(), <b><a href="../sound/libsas-Reference-English.htm#sceSasSetADSRmode">sceSasSetADSRmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_OUTPUTMODE_STEREO"></a><a name="SCE_SAS_OUTPUTMODE_MULTI"></a>
<a name="SCE_SAS_OUTPUTMODE_STEREO / SCE_SAS_OUTPUTMODE_MULTI"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_OUTPUTMODE_STEREO / SCE_SAS_OUTPUTMODE_MULTI<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Output mode<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_OUTPUTMODE_STEREO	(0)
#define  SCE_SAS_OUTPUTMODE_MULTI		(1)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the output mode identifier. SCE_SAS_OUTPUTMODE_STEREO corresponds to stereo mode (two-channel output), and SCE_SAS_OUTPUTMODE_MULTI corresponds to multichannel mode (four-channel output).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetOutputmode">sceSasSetOutputmode</a></b>()<br><b><a href="../sound/libsas-Reference-English.htm#sceSasGetOutputmode">sceSasGetOutputmode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_VOLUME_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_VOLUME_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum effect volume<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_VOLUME_MAX		(0x1000)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum effect output volume value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectVolume">sceSasSetEffectVolume</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_TYPE_OFF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_TYPE_OFF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>No effects<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_TYPE_OFF	(-1)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant that indicates "no effects (through)" when specifying the effect format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectType">sceSasSetEffectType</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_TYPE_ROOM"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_TYPE_ROOM<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect type Room<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_TYPE_ROOM	(0)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant that indicates "Room" when specifying the effect format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectType">sceSasSetEffectType</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_TYPE_STUDIOA"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_TYPE_STUDIOA<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect typeStudio-A<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_TYPE_STUDIOA	(1)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant that indicates "Studio-A" when specifying the effect format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectType">sceSasSetEffectType</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_TYPE_STUDIOB"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_TYPE_STUDIOB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect type Studio-B<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_TYPE_STUDIOB	(2)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant that indicates "Studio-B" when specifying the effect format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectType">sceSasSetEffectType</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_TYPE_STUDIOC"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_TYPE_STUDIOC<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect type Studio-C<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_TYPE_STUDIOC	(3)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant that indicates "Studio-C" when specifying the effect format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectType">sceSasSetEffectType</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_TYPE_HALL"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_TYPE_HALL<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect type Hall<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_TYPE_HALL	(4)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant that indicates "Hall" when specifying the effect format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectType">sceSasSetEffectType</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_TYPE_SPACE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_TYPE_SPACE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect type Space<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_TYPE_SPACE	(5)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant that indicates "Space" when specifying the effect format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectType">sceSasSetEffectType</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_TYPE_ECHO"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_TYPE_ECHO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect type Echo<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_TYPE_ECHO	(6)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant that indicates "Echo" when specifying the effect format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectType">sceSasSetEffectType</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_TYPE_DELAY"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_TYPE_DELAY<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect type Delay<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_TYPE_DELAY	(7)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant that indicates "Delay" when specifying the effect format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectType">sceSasSetEffectType</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_SAS_FX_TYPE_PIPE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_SAS_FX_TYPE_PIPE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect type Pipe<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;
#define  SCE_SAS_FX_TYPE_PIPE		(8)

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant that indicates "Pipe" when specifying the effect format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libsas-Reference-English.htm#sceSasSetEffectType">sceSasSetEffectType</a></b>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasInit"></a>
<table width="100%"><td width="70%"><font size=6>sceSasInit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialization processing<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasInit</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function initializes the SAS state.<br>To use SAS, this function or <b><a href="../sound/libsas-Reference-English.htm#sceSasInitWithGrain">sceSasInitWithGrain</a></b>() must be called.<br><br>When SAS is initialized by using this function, the number of PCM samples that are generated by a single call of the <b><a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a></b>() and <b><a href="../sound/libsas-Reference-English.htm#sceSasCoreWithMix">sceSasCoreWithMix</a></b>() functions (granularity) is <a href="../sound/libsas-Reference-English.htm#SCE_SAS_GRAIN_SAMPLES">SCE_SAS_GRAIN_SAMPLES</a> (=256). Also, the output mode is initialized as stereo mode.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   result;
	
	result = sceSasInit();
	
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasInitWithGrain"></a>
<table width="100%"><td width="70%"><font size=6>sceSasInitWithGrain<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialization processing with granularity specification<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasInitWithGrain</b>(
	unsigned int <i>grain</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>grain</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of samples per channel that are generated by one unit of granularity&nbsp;&nbsp;<br>&nbsp;&nbsp;(values can range from 64 to 2048 in multiples of 32)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, SCE_OK is returned.<br>When the return value is negative (&lt; 0), it means that an error occurred.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function initializes the SAS state.<br>To use SAS, this function or <b><a href="../sound/libsas-Reference-English.htm#sceSasInit">sceSasInit</a></b>() must be called.<br>Using this function to initialize SAS enables you to set the number of PCM samples that are generated by a single call of the <b><a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a></b>() and <b><a href="../sound/libsas-Reference-English.htm#sceSasCoreWithMix">sceSasCoreWithMix</a></b>() functions (granularity) to a value other than <a href="../sound/libsas-Reference-English.htm#SCE_SAS_GRAIN_SAMPLES">SCE_SAS_GRAIN_SAMPLES</a> (=256). Also, the output mode is initialized as stereo mode.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   result;
	
	result = sceSasInitWithGrain(1024);
	
	return 0;
}


</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasExit"></a>
<table width="100%"><td width="70%"><font size=6>sceSasExit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Termination processing<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasExit</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs termination processing. When an application that uses SAS ends, be sure to execute sceSasExit().<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int result;
	
	result = sceSasExit();
	
	return 0;
}

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasCore"></a>
<table width="100%"><td width="70%"><font size=6>sceSasCore<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SAS periodic processing<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasCore</b>( 
	short *<i>pOut</i>
 );

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pOut</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to waveform output buffer&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When this function is called, a waveform for one unit of granularity is output. The number of samples in one unit of granularity is <a href="../sound/libsas-Reference-English.htm#SCE_SAS_GRAIN_SAMPLES">SCE_SAS_GRAIN_SAMPLES</a> when SAS is initialized with the <b><a href="../sound/libsas-Reference-English.htm#sceSasInit">sceSasInit</a></b>() function. When SAS is initialized with the <b><a href="../sound/libsas-Reference-English.htm#sceSasInitWithGrain">sceSasInitWithGrain</a></b>() function, the number of samples in one unit of granularity is the value that was specified with the function.<br><i>pOut</i> must be 64-byte aligned<br>Since this function is multithread safe, another function such as <a href="../sound/libsas-Reference-English.htm#sceSasSetKeyOn">sceSasSetKeyOn</a>() can be called while this function is being called. However, <b>sceSasCore</b>() or <b><a href="../sound/libsas-Reference-English.htm#sceSasCoreWithMix">sceSasCoreWithMix</a></b>() itself cannot be called simultaneously from multiple threads (<a href="../sound/libsas-Reference-English.htm#SCE_SAS_ERROR_BUSY">SCE_SAS_ERROR_BUSY</a> is returned).<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include&lt;libsas.h&gt;

int main(void)
{
	int   result;
	int iSide = 0;
	/* Set up a double buffer */
	static short pcmBuf[2][256 * 2] __attribute__((aligned(64)));
	
	/* Output processing for waveform with granularity of 1 */
	result = sceSasCore(pcmBuf[iSide]);
	iSide ^= 1;
	
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasCoreWithMix"></a>
<table width="100%"><td width="70%"><font size=6>sceSasCoreWithMix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>SAS periodic processing with external PCM mixing function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasCoreWithMix</b> ( 
	short *<i>pInOut</i>,
	int <i>lvol</i>,
	int <i>rvol</i>
 );

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pInOut</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to waveform output buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>lvol</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;External PCM input left channel volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rvol</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;External PCM input right channel volume&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, SCE_OK is returned.<br>When the return value is negative (&lt; 0), it means an error occurred.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When this function is called, a waveform for one unit of granularity is synthesized, overwritten by the result obtained by mixing it with PCM data that is in a specified area, and output. The number of samples in one unit of granularity is <a href="../sound/libsas-Reference-English.htm#SCE_SAS_GRAIN_SAMPLES">SCE_SAS_GRAIN_SAMPLES</a> when SAS is initialized with the <b><a href="../sound/libsas-Reference-English.htm#sceSasInit">sceSasInit</a></b>() function. When SAS is initialized with the <b><a href="../sound/libsas-Reference-English.htm#sceSasInitWithGrain">sceSasInitWithGrain</a></b>() function, the number of samples in one unit of granularity is the value that was specified with the function.<br><i>pInOut</i> must have 64-byte alignment.<br>During mixing, the volume of the input PCM can be changed. The following is the allowable range for the volume.<br><br>	0 &lt;= <i>lvol</i>, <i>rvol</i> &lt;= <a href="../sound/libsas-Reference-English.htm#SCE_SAS_VOLUME_MAX">SCE_SAS_VOLUME_MAX</a> <br><br>Since this function is multithread safe, a function such as the <b><a href="../sound/libsas-Reference-English.htm#sceSasSetKeyOn">sceSasSetKeyOn</a></b>() function, for example, can be called while this function is being executed, but the <b><a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a></b>() and <b>sceSasCoreWithMix</b>() functions themselves cannot be called simultaneously from multiple threads (<a href="../sound/libsas-Reference-English.htm#SCE_SAS_ERROR_BUSY">SCE_SAS_ERROR_BUSY</a> will be returned).<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include&lt;libsas.h&gt;

int main(void)
{
	int   result;
	int iSide = 0;
	/* Set a double buffer */
	static short pcmBuf[2][256 * 2] __attribute__((aligned(64)));
	
	/* Waveform output processing in 1 unit of granularity */
	result = sceSasCoreWithMix(pcmBuf[iSide],
	<a href="../sound/libsas-Reference-English.htm#SCE_SAS_VOLUME_MAX">SCE_SAS_VOLUME_MAX</a>, <a href="../sound/libsas-Reference-English.htm#SCE_SAS_VOLUME_MAX">SCE_SAS_VOLUME_MAX</a>);
	iSide ^= 1;
	
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetKeyOn"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetKeyOn<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Key on<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetKeyOn</b>( 
	int <i>iVoiceNum</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs key on for a voice.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_3_1">
<div style="margin-left:40px;"><h4><b>Note</b><br><br></h4></div></a>

<div style="margin-left:50px;">If key-on is performed for a voice that is paused, an error occurs.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetKeyOff"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetKeyOff<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Key off<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetKeyOff</b>( 
	int <i>iVoiceNum</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs key off for a voice.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_3_2">
<div style="margin-left:40px;"><h4><b>Note</b><br><br></h4></div></a>

<div style="margin-left:50px;">If key-off is performed for a voice that is paused, an error occurs.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetPause"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetPause<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Change pause state<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetPause</b>( 
	int <i>iVoiceNum</i>,
	int <i>pauseFlag</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number for which pause state is to be changed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pauseFlag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pause state (1: Enable pause; 0: Disable pause)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets or cancels the pause state of a voice with the specified number.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetPauseMulti"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetPauseMulti<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Change pause state for multiple voices<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetPauseMulti</b>( 
	int <i>iVoiceMask</i>,
	int <i>pauseFlag</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceMask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mask value for specifying voices for which the pause state is to be changed. If the pause state of voice number n is to be changed, the n-th bit from the bottom of this argument is set to 1, and if the voice state is not to be changed, the n-th bit is set to 0.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pauseFlag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pause state (1: Enable pause; 0: Disable pause)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets or cancels the pause state for multiple voices.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasGetPauseFlag"></a>
<table width="100%"><td width="70%"><font size=6>sceSasGetPauseFlag<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pause state of each voice<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasGetPauseFlag</b>( 
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The pause states of the voices are returned in a bit pattern.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the pause states of all voices all at once.<br>A bit corresponding to a voice that is paused is 1, and a bit corresponding to a voice that is not paused is 0.<br>Bits 31 to 0 correspond to voices 31 to 0, respectively.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetVolume"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetVolume<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set volume<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetVolume</b>(
	int <i>iVoiceNum</i>, 
	int <i>l</i>, 
	int <i>r</i>, 
	int <i>wl</i>, 
	int <i>wr</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>l</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Left volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Right volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>wl</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Left effect volume&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>wr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Right effect volume&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the volume of a voice.<br>The range that can be set as a volume value is given by the following expression.<br><br></div>
<div style="margin-left:70px;">-<a href="../sound/libsas-Reference-English.htm#SCE_SAS_VOLUME_MAX">SCE_SAS_VOLUME_MAX</a> &lt;= <i>l</i>, <i>r</i>, <i>wl</i>, <i>wr</i> &lt;= <a href="../sound/libsas-Reference-English.htm#SCE_SAS_VOLUME_MAX">SCE_SAS_VOLUME_MAX</a><br></div>
<div style="margin-left:50px;"><br>The phase is inverted for a negative number.<br>In multichannel mode, the volume values set by this function determine the volume assignments for the four channels of output from each voice.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetPitch"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetPitch<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set pitch<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetPitch</b>(
	int <i>iVoiceNum</i>, 
	int <i>pitch</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pitch(<a href="../sound/libsas-Reference-English.htm#SCE_SAS_PITCH_MIN">SCE_SAS_PITCH_MIN</a> - <a href="../sound/libsas-Reference-English.htm#SCE_SAS_PITCH_MAX">SCE_SAS_PITCH_MAX</a>)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the pitch of a voice.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetVoice"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetVoice<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set voice (VAG format)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetVoice</b>(
	int <i>iVoiceNum</i>,
	const void *<i>vagBuf</i>,
	SceSize <i>size</i>,
	int <i>loopflag</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>vagBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to waveform data buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Waveform data size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>loopflag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Loop flag(<a href="../sound/libsas-Reference-English.htm#SCE_SAS_LOOP_ENABLE">SCE_SAS_LOOP_ENABLE</a> or <a href="../sound/libsas-Reference-English.htm#SCE_SAS_LOOP_DISABLE">SCE_SAS_LOOP_DISABLE</a>)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets information related to waveform data (VAG format) for which sound is to be produced by a voice.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetVoicePCM"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetVoicePCM<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set voice (PCM format)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetVoicePCM</b>(
	int <i>iVoiceNum</i>,
	const void *<i>pcmBuf</i>,
	SceSize <i>size</i>,
	int <i>loopsize</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pcmBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to waveform data buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Waveform data size (number of samples)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>loopsize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of samples from the beginning to the loop starting point.&nbsp;&nbsp;<br>&nbsp;&nbsp;To disable looping, specify a negative number.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets information related to PCM data for which sound is to be produced by a voice.<br>The function expects the PCM sound source data to be 16-bit, monaural, linear PCM.<i> size </i>(number of samples of waveform data) must not exceed 65535.<br>To loop part of the PCM sound source data, specify the number of samples from the beginning of the data to the loop starting point for <i>loopsize</i>. After the PCM sound source is played to the end, playback will return to the loop starting point and continue.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetVoiceATRAC3"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetVoiceATRAC3<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set voice (ATRAC3&trade; format)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetVoiceATRAC3</b>(
	int <i>iVoiceNum</i>,
	int <i>atracId</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC&trade; ID allocated by libatrac3plus&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets information related to ATRAC3&trade; data for which sound is to be produced by a voice.<br>libsas and libatrac3plus share a work area for managing ATRAC3&trade; data. As a result, to use ATRAC3&trade; data in libsas, you must first set the data via libatrac3plus and then register the handle (<i>atracID</i>) that was used to set that data in libsas.<br>This function expects the ATRAC3&trade; sound source data to be 52 kbps or 66 kbps monaural with no looping. For any other type of data, this function will return an error. No error will occur when the data is registered in libatrac3plus.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasReleaseATRAC3Id"></a>
<table width="100%"><td width="70%"><font size=6>sceSasReleaseATRAC3Id<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Release ATRAC&trade; ID<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasReleaseATRAC3Id</b>(
	int <i>atracId</i>
);
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC&trade; ID that was allocated by libatrac3plus and is being used by libsas&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function releases a handle (<i>atracId</i>) that was specified for use by a libsas voice. Until the handle is released, separate sound source data cannot be set for the relevant handle and the handle cannot be used by libatrac3plus.<br>Although this function is thread safe, an error will occur if it is called while another thread is performing voice synthesis processing (in other words, while processing has not yet returned after a function such as <a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a>() was called).<br>Also, if a handle is released that is in use by a voice which is continuing to produce sound (key off has not been performed), that sound source will be muted.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasCheckATRAC3BufferStatus"></a>
<table width="100%"><td width="70%"><font size=6>sceSasCheckATRAC3BufferStatus<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Check buffer status during ATRAC3&trade; streaming <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasCheckATRAC3BufferStatus</b>(
	int <i>iVoiceNum</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If it is safe to overwrite the buffer that will be used for the continuation data, a positive value is returned. Otherwise, 0 is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function supports streaming playback of ATRAC3&trade; data.<br>When the streaming playback of ATRAC3&trade; data is performed by storing the data in a buffer that has been split into two buffers, this function returns information indicating whether data in the buffer that was most recently filled has been used up.<br>If this function returns a positive value (i.e. the data has been used up), that buffer is released and new data can be read into it.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasConcatenateATRAC3"></a>
<table width="100%"><td width="70%"><font size=6>sceSasConcatenateATRAC3<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Add to buffer during ATRAC3&trade; streaming <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasConcatenateATRAC3</b> (
	int <i>iVoiceNum</i>,
	const void *<i>buffer</i>,
<i>	</i>unsigned int <i>size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buffer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to buffer to be added&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of buffer to be added&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is used to specify continuation data for the voice that is playing ATRAC3&trade; data.<br><br>To perform streaming playback of ATRAC3&trade; data, the data must be read faster than playback progresses and this function must be used to report the position and size of that data to SAS. If the data is not replenished in time, the relevant voice will become silent and then sound will be produced from the continuation after the data is replenished.<br><br>Only two buffers can be registered internally in SAS (the buffer that is currently playing and the buffer that will be used next). An error will occur if an attempt is made to register more than two buffers.<br><br>Also, if the data is replenished in short intervals (at a high frequency), execution efficiency may drop and the expected performance may not be achieved. To prevent this, an error is returned when the size of the data that is replenished at one time is less than 1024 bytes at any point other than at the end of data. Even if the data replenishment size is not small enough to result in an error, it is recommended that a buffer of at least a certain size (approximately 8 times the bit rate) be provided.<br><br>Note that after all data is completely read (the ATRAC3&trade; data file is read all the way to the end), some dummy data must be replenished to convey that the data has actually ended. If this is not done, the voice for which ATRAC3&trade; streaming playback is being performed will remain playing and the EndFlag will remain unassigned since SAS will not be able to recognize the endpoint internally.<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetNoise"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetNoise<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set noise<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetNoise</b>(
	int <i>iVoiceNum</i>, 
	unsigned int <i>clock</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>clock</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Noise clock (0x00 - 0x3f)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the noise clock and performs processing so that sound can be produced by noise.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetADSR"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetADSR<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set envelope (ADSR)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetADSR</b>(
	int <i>iVoiceNum</i>, 
	int <i>flag</i>, 
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>a</i>, 
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>d</i>, 
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>s</i>, 
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>r</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Setting flag&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Attack rate (0 - <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ENVELOPE_RATE_MAX">SCE_SAS_ENVELOPE_RATE_MAX</a>)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>d</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Decay rate (0 - <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ENVELOPE_RATE_MAX">SCE_SAS_ENVELOPE_RATE_MAX</a>)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sustain rate (0 - <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ENVELOPE_RATE_MAX">SCE_SAS_ENVELOPE_RATE_MAX</a>)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Release rate (0 - <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ENVELOPE_RATE_MAX">SCE_SAS_ENVELOPE_RATE_MAX</a>)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the time change of an envelope of a voice. Specify a logical OR of <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ATTACK_VALID">SCE_SAS_ATTACK_VALID</a>, <a href="../sound/libsas-Reference-English.htm#SCE_SAS_DECAY_VALID">SCE_SAS_DECAY_VALID</a>, <a href="../sound/libsas-Reference-English.htm#SCE_SAS_SUSTAIN_VALID">SCE_SAS_SUSTAIN_VALID</a>, and <a href="../sound/libsas-Reference-English.htm#SCE_SAS_RELEASE_VALID">SCE_SAS_RELEASE_VALID</a> for <i>flag</i>. Only an envelope of the states specified by <i>flag</i> are changed.<br>If an out-of-range value is set for a, d, s, or r, an error occurs.<br>For details about the values for the attack rate, decay rate, sustain rate, and release rate, refer to the "SAS Overview."<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetADSRmode"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetADSRmode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set envelope (ADSR) curve type<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetADSRmode</b>(
	int <i>iVoiceNum</i>, 
	int <i>flag</i>, 
	int <i>a</i>,
	int <i>d</i>, 
	int <i>s</i>, 
	int <i>r</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Setting flag&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>a</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Attack curve type&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>d</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Decay curve type&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sustain curve type&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>r</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Release curve type&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the envelope curve type of a voice. Specify a logical OR of <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ATTACK_VALID">SCE_SAS_ATTACK_VALID</a>, <a href="../sound/libsas-Reference-English.htm#SCE_SAS_DECAY_VALID">SCE_SAS_DECAY_VALID</a>, <a href="../sound/libsas-Reference-English.htm#SCE_SAS_SUSTAIN_VALID">SCE_SAS_SUSTAIN_VALID</a>, and <a href="../sound/libsas-Reference-English.htm#SCE_SAS_RELEASE_VALID">SCE_SAS_RELEASE_VALID</a> for <i>flag</i>. Only the curve types of the states specified by <i>flag</i> are changed.<br><br>The following values can be set for the various curve types.<br>For details about curves, refer to the "SAS Overview."<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Curve Type Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_ADSR_MODE_LINEAR_INC">SCE_SAS_ADSR_MODE_LINEAR_INC</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Linear increase (+lin)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_ADSR_MODE_LINEAR_DEC">SCE_SAS_ADSR_MODE_LINEAR_DEC</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Linear decrease (-lin)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_ADSR_MODE_BENT_LINEAR">SCE_SAS_ADSR_MODE_BENT_LINEAR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Broken line increase (+bent lin)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_ADSR_MODE_REVEXPONENT">SCE_SAS_ADSR_MODE_REVEXPONENT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Exponential function decrease (-exp)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_ADSR_MODE_EXPONENT">SCE_SAS_ADSR_MODE_EXPONENT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Exponential function increase (+exp)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_ADSR_MODE_DIRECT">SCE_SAS_ADSR_MODE_DIRECT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Direct value specification (direct)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetSL"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetSL<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set envelope sustain level<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetSL</b>(
	int <i>iVoiceNum</i>, 
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>sl</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sl</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sustain level (0 - <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ENVELOPE_HEIGHT_MAX">SCE_SAS_ENVELOPE_HEIGHT_MAX</a>)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the sustain level in the envelope of a voice.<br>If an out-of-range value is set, an error occurs.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetSimpleADSR"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetSimpleADSR<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Simple setting of envelope (ADSR) <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetSimpleADSR</b>(
	int <i>iVoiceNum</i>, 
	int <i>ADSR1</i>, 
	int <i>ADSR2</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ADSR1</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Envelope value 1&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ADSR2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Envelope value 2&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>When an error occurs, a negative value (&lt; 0) is returned.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the envelope of a voice.<br>The <i>ADSR2</i> value is as described in the &quot;SAS Overview.&quot; The high-order 16 bits of both arguments are ignored.<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasGetEndFlag"></a>
<table width="100%"><td width="70%"><font size=6>sceSasGetEndFlag<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get sound generation end flag<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include&lt;libsas.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <b>sceSasGetEndFlag</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The voice states are returned as a bit pattern.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function collectively gets the sound generation end flags of all voices.<br>When envelope processing ends, the bits corresponding to voices for which sound generation ended are set to 1. If sound is being generated, the bit is set to 0.<br>The voices corresponding to bit 31 through bit 0 are voice 31 through voice 0.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   result;
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> endFlag;
	
	/*Check sound generation state */
	endFlag = sceSasGetEndFlag();
	
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasGetEnvelope"></a>
<table width="100%"><td width="70%"><font size=6>sceSasGetEnvelope<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get envelope value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceSasGetEnvelope</b>( 
	int <i>iVoiceNum</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iVoiceNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number (0 - 31)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The envelope value is returned.<br>The envelope value is from 0 to <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ENVELOPE_HEIGHT_MAX">SCE_SAS_ENVELOPE_HEIGHT_MAX</a>.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the envelope value of a voice.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasGetAllEnvelope"></a>
<table width="100%"><td width="70%"><font size=6>sceSasGetAllEnvelope<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get envelope values<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceSasGetAllEnvelope</b>( 
	int <i>*pHeights</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pHeights</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination where envelope value is stored&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If an error occurs, a negative number is returned. Otherwise, zero is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the envelope values of all voices. Since SAS can handle a maximum of 32 (<a href="../sound/libsas-Reference-English.htm#SCE_SAS_VOICE_MAX">SCE_SAS_VOICE_MAX</a>) voices, <i>pHeights</i>, the destination where the data that is obtained is stored, must have at least 32 elements.<br>Since this function collectively obtains information all at once, performance is expected to be better compared to calling <a href="../sound/libsas-Reference-English.htm#sceSasGetEnvelope">sceSasGetEnvelope</a>() multiple times.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   result, i;
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> envs[<a href="../sound/libsas-Reference-English.htm#SCE_SAS_VOICE_MAX">SCE_SAS_VOICE_MAX</a>];
	
	/* Check envelope value of voice 3 */
	result = <a href="../sound/libsas-Reference-English.htm#sceSasGetEnvelope">sceSasGetEnvelope</a>( envs );
	if (result &lt; 0)
		return -1;
	for (i = 0; i &lt; <a href="../sound/libsas-Reference-English.htm#SCE_SAS_VOICE_MAX">SCE_SAS_VOICE_MAX</a>; i++) {
		printf("voice %d env = %d\n", i, envs[i]);
	}
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetGrain"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetGrain<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set granularity<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetGrain</b>( 
	unsigned int <i>grain</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>grain</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of samples per channel that are generated during one unit of granularity&nbsp;&nbsp;<br>&nbsp;&nbsp;(multiple of 32 from 64 to 2048)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, SCE_OK is returned.<br>If the return value is negative (&lt; 0), an error occurred.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function changes the number of PCM samples that are generated by a single call of the <b><a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a></b>() and <b><a href="../sound/libsas-Reference-English.htm#sceSasCoreWithMix">sceSasCoreWithMix</a></b>() functions (the granularity). Note that the output buffer size that is required by the <b><a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a></b>() and <b><a href="../sound/libsas-Reference-English.htm#sceSasCoreWithMix">sceSasCoreWithMix</a></b>() functions changes whenever the granularity is changed. If the buffer size is insufficient, there is a risk that output data will be written in an illegal area.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   result;
	
	result = sceSasSetGrain(1024);
	
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasGetGrain"></a>
<table width="100%"><td width="70%"><font size=6>sceSasGetGrain<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get granularity<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasGetGrain</b>( 
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The granularity is returned. This value is a multiple of 32 from 64 to 2048.<br>If the return value is negative (&lt; 0), an error occurred.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of PCM samples that are generated by a single call of the <b><a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a></b>() and <b><a href="../sound/libsas-Reference-English.htm#sceSasCoreWithMix">sceSasCoreWithMix</a></b>() functions (the granularity).<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   grain;
	
	grain = sceSasGetGrain();
	printf("grain = %d\n", grain);
	
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetOutputmode"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetOutputmode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set output mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetOutputmode</b>( 
	int <i>outputmode</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>outputmode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output mode&nbsp;&nbsp;<br>&nbsp;&nbsp;(<a href="../sound/libsas-Reference-English.htm#SCE_SAS_OUTPUTMODE_STEREO">SCE_SAS_OUTPUTMODE_STEREO</a> or <a href="../sound/libsas-Reference-English.htm#SCE_SAS_OUTPUTMODE_MULTI">SCE_SAS_OUTPUTMODE_MULTI</a>)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, SCE_OK is returned.<br>If the return value is negative (&lt; 0), an error occurred.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function changes the output mode. The argument can be either <a href="../sound/libsas-Reference-English.htm#SCE_SAS_OUTPUTMODE_STEREO">SCE_SAS_OUTPUTMODE_STEREO</a>, which corresponds to stereo mode (two-channel output with effects), or <a href="../sound/libsas-Reference-English.htm#SCE_SAS_OUTPUTMODE_MULTI">SCE_SAS_OUTPUTMODE_MULTI</a>, which corresponds to multichannel mode (four-channel output with no effects). For details about each output mode, refer to the "SAS Overview" document.<br>In multichannel mode, a four-channel monaural voice is output before adding effects. As a result, no effects processing is performed. If an effects setting function is called at this time, the effects setting function will return an error.<br>Since the number of output channels for multichannel mode is double the number for stereo mode, the output buffer size that is required for <b><a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a></b>() and <b><a href="../sound/libsas-Reference-English.htm#sceSasCoreWithMix">sceSasCoreWithMix</a></b>() is also doubled. Note that if the buffer size is insufficient, there is a risk that output data will be written in an illegal area.<br>Use <b><a href="../sound/libsas-Reference-English.htm#sceSasSetVolume">sceSasSetVolume</a></b>() to assign volume to each voice for the four channels in multichannel mode.<br>In multichannel mode, the ordering of output PCM data is different from that of stereo mode, and the output PCM data that is obtained by <b><a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a></b>() and <b><a href="../sound/libsas-Reference-English.htm#sceSasCoreWithMix">sceSasCoreWithMix</a></b>() cannot be passed directly to a sound output library such as libwave. Be sure to perform independent effects, mixing, and interleave processing on multichannel mode output PCM data before passing it to a library such as libwave.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   result;
	
	result = sceSasSetOutputmode(<a href="../sound/libsas-Reference-English.htm#SCE_SAS_OUTPUTMODE_MULTI">SCE_SAS_OUTPUTMODE_MULTI</a>);
	
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasGetOutputmode"></a>
<table width="100%"><td width="70%"><font size=6>sceSasGetOutputmode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get output mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasGetOutputmode</b>( 
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The output mode identifier is returned.<br>If the return value is negative (&lt; 0), an error occurred.<br>(For details, see the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the identifier of the output mode that is currently set.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   outputmode;
	
	outputmode = sceSasGetOutputmode();
	switch (outputmode) {
	case <a href="../sound/libsas-Reference-English.htm#SCE_SAS_OUTPUTMODE_STEREO">SCE_SAS_OUTPUTMODE_STEREO</a>:
		printf("stereo mode\n");
		break;
	case <a href="../sound/libsas-Reference-English.htm#SCE_SAS_OUTPUTMODE_MULTI">SCE_SAS_OUTPUTMODE_MULTI</a>:
		printf("multi-channel mode\n");
		break;
	case default:
		printf("not supported mode\n");
	}
	
	return 0;
}
</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetEffectType"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetEffectType<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set effect type<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetEffectType</b>( 
	int <i>type</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>type</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Effect type&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>If the <i>type</i> value is invalid, <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ERROR_FX_TYPE">SCE_SAS_ERROR_FX_TYPE</a> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the effect type. The type is specified using the constant SCE_SAS_FX_XXX.If the effect type is changed, the effect is reset (previous effects such as reverb are eliminated).<br>In multichannel mode, this function returns an error without setting the parameter.<br><br>One of the following values is set for the effect type.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Effect&nbsp;Type&nbsp;Value</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Description</b>&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_OFF">SCE_SAS_FX_TYPE_OFF</a>&nbsp;</td>
<td>&nbsp;OFF&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_ROOM">SCE_SAS_FX_TYPE_ROOM</a>&nbsp;</td>
<td>&nbsp;Room&nbsp;Reverb&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_STUDIOA">SCE_SAS_FX_TYPE_STUDIOA</a>&nbsp;</td>
<td>&nbsp;Studio&nbsp;Reverb&nbsp;A&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_STUDIOB">SCE_SAS_FX_TYPE_STUDIOB</a>&nbsp;</td>
<td>&nbsp;Studio&nbsp;Reverb&nbsp;B&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_STUDIOC">SCE_SAS_FX_TYPE_STUDIOC</a>&nbsp;</td>
<td>&nbsp;Studio&nbsp;Reverb&nbsp;C&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_HALL">SCE_SAS_FX_TYPE_HALL</a>&nbsp;</td>
<td>&nbsp;Hall&nbsp;Reverb&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_SPACE">SCE_SAS_FX_TYPE_SPACE</a>&nbsp;</td>
<td>&nbsp;Space&nbsp;Echo&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_ECHO">SCE_SAS_FX_TYPE_ECHO</a>&nbsp;</td>
<td>&nbsp;Echo&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_DELAY">SCE_SAS_FX_TYPE_DELAY</a>&nbsp;</td>
<td>&nbsp;Delay&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_PIPE">SCE_SAS_FX_TYPE_PIPE</a>&nbsp;</td>
<td>&nbsp;Pipe&nbsp;Echo&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include&lt;libsas.h&gt;

int main(void)
{
	int   result;
	
	/* Set the effect type */
	result = sceSasSetEffectType(<a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_HALL">SCE_SAS_FX_TYPE_HALL</a>);
	
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetEffectParam"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetEffectParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect parameters<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include&lt;libsas.h&gt;

int <b>sceSasSetEffectParam</b>(
	unsigned int <i>dt</i>,
	unsigned int <i>fb</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Delay time (0 - 127)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fb</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Feedback level (0 - 127)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>If the delay value is invalid (out of range), then <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ERROR_FX_DELAY">SCE_SAS_ERROR_FX_DELAY</a> is returned.<br>If the feedback value is invalid (out of range), then <a href="../sound/libsas-Reference-English.htm#SCE_SAS_ERROR_FX_FEEDBACK">SCE_SAS_ERROR_FX_FEEDBACK</a> is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This setting is valid only when <a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_ECHO">SCE_SAS_FX_TYPE_ECHO</a> or <a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_TYPE_DELAY">SCE_SAS_FX_TYPE_DELAY</a> is set for the effect type.<br>If another type was specified, the value set here is ignored.<br>The value of argument <i>dt</i> is 0 to 127, where a larger value corresponds to a longer delay time.<br>The value of argument <i>fb</i> is 0 to 127, where a larger value corresponds to a greater amount of feedback.<br>In multichannel mode, this function returns an error without setting the parameter.<br><br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_3">
<div style="margin-left:40px;"><h4><b>Note</b><br><br></h4></div></a>

<div style="margin-left:50px;">If the delay time is changed while sound is being produced, noise may occur.<br><br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   result;
	
	/* Set the delay time and feedback of an effect */
	result = sceSasSetEffectParam(64, 64);
	
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetEffectVolume"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetEffectVolume<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect volume<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int <b>sceSasSetEffectVolume</b>(
	int <i>val_l</i>,
	int <i>val_r</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>val_l</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Left channel effect volume (0 to <a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_VOLUME_MAX">SCE_SAS_FX_VOLUME_MAX</a>)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>val_r</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Right channel effect volume (0 to <a href="../sound/libsas-Reference-English.htm#SCE_SAS_FX_VOLUME_MAX">SCE_SAS_FX_VOLUME_MAX</a>)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>If an error occurs, a negative value is returned.<br>(Refer to the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the volume of the effect sound after effects processing.<br>The values of the left and right channels can be set using <i>val_l</i> and <i>val_r</i> respectively.<br>In multichannel mode, this function returns an error without setting the parameter.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   result;
	
	result = sceSasSetEffectVolume(2867, 4096);
	
	return 0;
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceSasSetEffect"></a>
<table width="100%"><td width="70%"><font size=6>sceSasSetEffect<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Effect switch<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include&lt;libsas.h&gt;

int <b>sceSasSetEffect</b>( 
	int <i>dry_sw</i>, 
	int <i>wet_sw</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dry_sw</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Dry-side sound ON/OFF state 0=OFF, non-zero value=ON&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>wet_sw</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Wet-side sound (sound with effect applied) ON/OFF state&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, then SCE_OK is returned.<br>If an error occurs, a negative value is returned.<br>(Refer to the <a href="../sound/libsas-Reference-English.htm#List of Error Codes">List of Error Codes</a>.)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function turns on or off the sound to which effects are applied and the sound to which effects are not applied, respectively, after sound generation is performed for each voice.<br>The volumes set by <i>l</i> and <i>r</i> in <a href="../sound/libsas-Reference-English.htm#sceSasSetVolume">sceSasSetVolume</a>() are effective for <i>dry_sw</i> and the volumes set by <i>wl</i> and <i>wr</i> are effective for <i>wet_sw</i>.<br>If the value is set to 1 (non-zero), the input is turned on, and if the value is set to 0, the input is turned off.<br>If <i>wet_sw</i>=OFF, the effect will be muted.<br>In multichannel mode, this function returns an error without setting the parameter.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;libsas.h&gt;

int main(void)
{
	int   result;
	
	result = sceSasSetEffect(1, 1); /* Dry=ON, Wet=ON */
	
	return 0;
}

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>libsas Error Codes <br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_NSMPL">SCE_SAS_ERROR_NSMPL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Granularity specification is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_MFMT">SCE_SAS_ERROR_MFMT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output mode specification is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_ADDRESS">SCE_SAS_ERROR_ADDRESS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address alignment is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_VOICE_INDEX">SCE_SAS_ERROR_VOICE_INDEX</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Voice number is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_NOISE_CLOCK">SCE_SAS_ERROR_NOISE_CLOCK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420011&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Noise clock is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_PITCH_VAL">SCE_SAS_ERROR_PITCH_VAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420012&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pitch specification is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_ADSR_MODE">SCE_SAS_ERROR_ADSR_MODE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420013&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ADSR mode is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_ADPCM_SIZE">SCE_SAS_ERROR_ADPCM_SIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420014&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ADPCM waveform data size is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_LOOP_MODE">SCE_SAS_ERROR_LOOP_MODE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420015&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Loop mode or loop position specification is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_INVALID_STATE">SCE_SAS_ERROR_INVALID_STATE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420016&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cannot be executed in the current state (keyed-on, keyed-off, paused, etc.)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_VOLUME_VAL">SCE_SAS_ERROR_VOLUME_VAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420018&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Volume value for the voice is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_ADSR_VAL">SCE_SAS_ERROR_ADSR_VAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420019&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Either the ADSR value or the SustainLevel value is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_PCM_SIZE">SCE_SAS_ERROR_PCM_SIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8042001a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PCM size specification is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_FX_TYPE">SCE_SAS_ERROR_FX_TYPE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420020&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Effect type is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_FX_FEEDBACK">SCE_SAS_ERROR_FX_FEEDBACK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420021&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Effect feedback value is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_FX_DELAY">SCE_SAS_ERROR_FX_DELAY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Effect delay value is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_FX_VOLUME_VAL">SCE_SAS_ERROR_FX_VOLUME_VAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420023&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Effect volume value is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_FX_UNAVAILABLE">SCE_SAS_ERROR_FX_UNAVAILABLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420024&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Effects setting function is unavailable in multichannel mode&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_BUSY">SCE_SAS_ERROR_BUSY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420030&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../sound/libsas-Reference-English.htm#sceSasCore">sceSasCore</a>() was called multiple times&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_CHANGE_AT3_VOICE">SCE_SAS_ERROR_CHANGE_AT3_VOICE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420040&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An attempt was made to change the sound source of an ATRAC3&trade; voice&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_NOT_AT3_VOICE">SCE_SAS_ERROR_NOT_AT3_VOICE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420041&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Not an ATRAC3&trade; voice&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_NO_CONCATENATE_SPACE">SCE_SAS_ERROR_NO_CONCATENATE_SPACE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420042&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Not in a state in which data can be replenished&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_NOTINIT">SCE_SAS_ERROR_NOTINIT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Initialization has not been performed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_ALRDYINIT">SCE_SAS_ERROR_ALRDYINIT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420101&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Initialization has already been performed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_INVALID_ATRAC3">SCE_SAS_ERROR_INVALID_ATRAC3</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420102&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unsupported ATRAC3&trade; data or an invalid ATRAC&trade; ID was specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_SAS_ERROR_SMALL_ATRAC3_SIZE">SCE_SAS_ERROR_SMALL_ATRAC3_SIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80420103&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of data used to replenish the buffer is too small&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2010 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
