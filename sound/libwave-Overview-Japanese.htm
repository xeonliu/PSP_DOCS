<html lang="jp">
<head>
<title>libwave-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libwave
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>ライブラリ概要</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>機能の概要と特長</b><br>
</a>
</h3>
<div style="margin-left:50px;">libwaveはADPCM(.vag)形式の固定ピッチ再生及び44.1kHz 16ビットリニアPCM形式のオーディオ出力機能を提供するサウンドライブラリです。libwaveはメインCPU上で動作します。<br>44.1kHz 16ビットリニアPCM形式のオーディオデータ出力、ADPCM形式のサウンドデータ再生などが行えます。<br><br></div>

<!-- sce_hd6 -->
<a name="Heading6_1_1_1">
<div style="margin-left:63px;"><h4><b>特長 (ADPCM部)</b><br><br></h4></a></div>
</ul>
<div style="margin-left:70px;"><ul>
<li> 対応フォーマットは.vag形式
<li> サンプリング周波数は44.1kHz固定 (再生ピッチ固定)
<li> ピッチ変換及びエンベロープ処理などが省かれた、簡易ライブラリを用意
<li> 最大8ボイス
<li> ボイス単位にボリューム設定(L/R独立)が可能
<li> 効果音用one shot再生及び無限ループ再生が可能
</ul></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd6 -->
<a name="Heading6_1_1_2">
<div style="margin-left:63px;"><h4><b>特長 (PCM部)</b><br><br></h4></a></div>
<div style="margin-left:70px;"><ul>
<li> 対応フォーマットは16ビットリニアPCM (Little Endianのみ)
<li> サンプリング周波数は44.1kHz固定
<li> オーディオドライバ制御用APIを用意
<li> 最大3チャンネル
<li> チャンネル単位にボリューム設定(L/R独立)が可能
</ul></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>サウンド出力までの流れ</b><br>
</a>
</h3>
<div style="margin-left:50px;">libwaveを利用した場合、サウンド出力までの流れは以下のようになります。<br>ゲームタイトルからの音声出力要求はlibwaveからaudio driverに渡されます。audio driverは全ボイスをミキシングし、ミキシング結果をオーディオ出力用ハードウェアに受け渡します。<br><br></div>

<div align=center>
<p>
<img src="gif/libwave-Overview-Japanese001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 1 サウンド出力までの流れ</b><br>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_1_3">
<h3>
<a href="#Heading3_1"> 1. </a>3 
<!-- hp1 --><b>関連ファイル</b><br>
</a>
</h3>
<div style="margin-left:50px;">libwaveを使用するには次のファイルが必要です。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>カテゴリ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ライブラリ&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libwave.a&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ヘッダファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libwave.h&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_1_4">
<h3>
<a href="#Heading3_1"> 1. </a>4 
<!-- hp1 --><b>サンプルプログラム</b><br>
</a>
</h3>
<div style="margin-left:50px;">libwaveを利用したサンプルプログラムには以下のものがあります。<br><br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_4_1"><h4>
(1)&nbsp;<b>psp/devkit/sample/sound/starsound</b><br></h4>
</a></div>
<div style="margin-left:67px;">ADPCM形式の効果音を再生するサンプルです。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_4_2"><h4>
(2)&nbsp;<b>psp/devkit/sample/sound/stringsound</b><br></h4>
</a></div>
<div style="margin-left:67px;">ATRAC3plus&trade;ライブラリ(libatrac3plus)にてATRAC3plus&trade;のサウンドデータをPCMへデコードしたものをlibwaveにて出力するサンプルです。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_4_3"><h4>
(3)&nbsp;<b>psp/devkit/sample/sound/starmix</b><br></h4>
</a></div>
<div style="margin-left:67px;">ソフトウェアオーディオシンセサイザライブラリ(libsas)にて生成したPCMサウンドとATRAC3plus&trade;ライブラリ(libatrac3plus)にてATRAC3plus&trade;のサウンドデータをPCMへデコードしたものをlibwaveにて出力するサンプルです。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>使用手順の概略</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>libwaveの使用手順</b><br>
</a>
</h3>
<div style="margin-left:50px;">libwaveは以下のような手順にて利用します。<br><br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_1_1">
<div style="margin-left:40px;"><h4><b>ADPCM形式のサウンド及びPCM形式のサウンドを扱う場合</b><br><br></h4></div></a>

</ol>
<div style="margin-left:55px;"><ol>
<li VALUE=1> <a href="../sound/libwave-Reference-Japanese.htm#sceWaveInit">sceWaveInit</a>()にて初期化処理を行います。</li>
<li VALUE=2> <a href="../sound/libwave-Reference-Japanese.htm#sceWaveStart">sceWaveStart</a>()にてサウンドシステムを起動します。</li>
<li VALUE=3> <a href="../sound/libwave-Reference-Japanese.htm#sceWavePlay">sceWavePlay</a>()、<a href="../sound/libwave-Reference-Japanese.htm#sceWaveStop">sceWaveStop</a>(), <a href="../sound/libwave-Reference-Japanese.htm#sceWaveAudioWriteBlocking">sceWaveAudioWriteBlocking</a>()などで各種サウンド処理を行います。</li>
<li VALUE=4> <a href="../sound/libwave-Reference-Japanese.htm#sceWaveEnd">sceWaveEnd</a>()にてサウンドシステムを停止します。</li>
<li VALUE=5> <a href="../sound/libwave-Reference-Japanese.htm#sceWaveExit">sceWaveExit</a>()にて終了処理を行います。</li>
</ol></div>

<!-- sce_title -->
<a Name ="HeadingT_2_1_2">
<div style="margin-left:40px;"><h4><b>PCM形式のサウンドのみ扱う場合(BGMのストリーミング再生など)</b><br><br></h4></div></a>

<div style="margin-left:55px;"><ol>
<li VALUE=1> <a href="../sound/libwave-Reference-Japanese.htm#sceWaveInit">sceWaveInit</a>()にて初期化処理を行います。</li>
<li VALUE=2> <a href="../sound/libwave-Reference-Japanese.htm#sceWaveAudioWriteBlocking">sceWaveAudioWriteBlocking</a>()などで各種サウンド処理を行います。</li>
<li VALUE=3> <a href="../sound/libwave-Reference-Japanese.htm#sceWaveExit">sceWaveExit</a>()にて終了処理を行います。</li>
</ol></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>初期化及び終了処理</b><br>
</a>
</h3>
<div style="margin-left:50px;">libwaveを利用する場合には<a href="../sound/libwave-Reference-Japanese.htm#sceWaveInit">sceWaveInit</a>()にて初期化処理を行う必要があります。またlibwaveを利用後、アプリケーションを終了する際には<a href="../sound/libwave-Reference-Japanese.htm#sceWaveExit">sceWaveExit</a>()にて終了処理を行ってください。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
例)
int iRc;

/* 初期化処理 */
iRc = <a href="../sound/libwave-Reference-Japanese.htm#sceWaveInit">sceWaveInit</a>();
if (iRc != SCE_OK){
	/* 初期化に失敗 */
}

/* libwave の関数を利用する処理はここに記述してください */

/* 終了処理 */
iRc = <a href="../sound/libwave-Reference-Japanese.htm#sceWaveExit">sceWaveExit</a>();
if (iRc != SCE_OK){
	/* 終了処理に失敗 */
}
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_2_3">
<h3>
<a href="#Heading3_2"> 2. </a>3 
<!-- hp1 --><b>ADPCM処理用サウンドシステムの起動と停止</b><br>
</a>
</h3>
<div style="margin-left:50px;">libwaveにてADPCM形式のサウンドを再生するためには<a href="../sound/libwave-Reference-Japanese.htm#sceWaveStart">sceWaveStart</a>()にてlibwave内にあるサウンドシステムを起動させる必要があります。起動したサウンドシステムは<a href="../sound/libwave-Reference-Japanese.htm#sceWaveEnd">sceWaveEnd</a>()にて停止させることができます。<br><a href="../sound/libwave-Reference-Japanese.htm#sceWaveStart">sceWaveStart</a>()を実行するとlibwaveはサウンド処理のためにスレッドを作成・起動し、サウンド処理を開始します。このとき作成されるスレッドは<a href="../sound/libwave-Reference-Japanese.htm#sceWaveStart">sceWaveStart</a>()の引数に指定されたプライオリティにて動作します。指定されたプライオリティが低い場合、サウンド処理よりも他の処理が優先されるため、再生音が途切れるなどして正しく再生されない場合があります。<a href="../sound/libwave-Reference-Japanese.htm#sceWaveStart">sceWaveStart</a>()に指定するプライオリティはなるべく高くしてください。<br><a href="../sound/libwave-Reference-Japanese.htm#sceWaveEnd">sceWaveEnd</a>()を実行するとサウンドシステムを停止します。<a href="../sound/libwave-Reference-Japanese.htm#sceWaveStart">sceWaveStart</a>()にて作成・起動されたスレッドは、<a href="../sound/libwave-Reference-Japanese.htm#sceWaveEnd">sceWaveEnd</a>()にて停止・削除されます。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>例)
int iRc;

/*
	サウンドシステムのプライオリティをメインスレッドより高い
	SCE_KERNEL_USER_HIGHEST_PRIORITYで起動
*/
iRc = <a href="../sound/libwave-Reference-Japanese.htm#sceWaveStart">sceWaveStart</a>( SCE_KERNEL_USER_HIGHEST_PRIORITY );
if (iRc != SCE_OK){
	/* サウンドシステムが処理を開始できなかった */
}

/* サウンドシステムの停止 */
iRc = <a href="../sound/libwave-Reference-Japanese.htm#sceWaveEnd">sceWaveEnd</a>();
if (iRc != SCE_OK){
	/* 停止処理に失敗 */
}
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_2_4">
<h3>
<a href="#Heading3_2"> 2. </a>4 
<!-- hp1 --><b>PCMサウンドの出力方法</b><br>
</a>
</h3>
<div style="margin-left:50px;">libwaveではPCM形式のサウンドを出力することが出来ます。PCM形式のサウンドを出力する前に、まず出力するデータについてのステレオ・モノラルのフォーマット設定及び出力サンプル長の設定を行います。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
例)
int iRc;

/* 0chに出力するデータはステレオフォーマット(LRインタリーブ) */
iRc = <a href="../sound/libwave-Reference-Japanese.htm#sceWaveAudioSetFormat">sceWaveAudioSetFormat</a>(0, <a href="../sound/libwave-Reference-Japanese.htm#SCE_WAVE_AUDIO_FMT_S16_STEREO">SCE_WAVE_AUDIO_FMT_S16_STEREO</a>);
if (iRc != SCE_OK){
	/* 設定に失敗した */
}
/* 0chの出力サンプル長を256サンプルに設定 */
iRc = <a href="../sound/libwave-Reference-Japanese.htm#sceWaveAudioSetSample">sceWaveAudioSetSample</a>(0,256);
if (iRc != SCE_OK){
	/* 設定に失敗した */
}
</font></pre></div>
<div style="margin-left:50px;"><br>PCM形式のサウンドの出力には<a href="../sound/libwave-Reference-Japanese.htm#sceWaveAudioWriteBlocking">sceWaveAudioWriteBlocking</a>()などの関数を利用します。<a href="../sound/libwave-Reference-Japanese.htm#sceWaveAudioWriteBlocking">sceWaveAudioWriteBlocking</a>()は指定されたバッファに格納されているPCM形式のサウンドをオーディオドライバに登録します。登録されたサウンドデータは既にオーディオドライバに登録されていたサウンドデータが再生された後に再生が開始されます。<br>オーディオドライバに登録したからといって即座に再生が行われるとは限りません。またオーディオドライバはサウンドデータのコピーを作成しません。そのため実際に再生が開始される前及び再生中にバッファの内容を書き換えてしまうと正しく再生されません。サウンド出力用バッファはダブルバッファ以上にし、登録直後のバッファ内容を書き換えてしまわないようにしてください。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>例)
/* pcmBuf はダブルバッファとする */
int iSide = 0;

/* pcmBuf[iSide] にある 16 bit PCM STEREOデータを0chに出力する */
<a href="../sound/libwave-Reference-Japanese.htm#sceWaveAudioWriteBlocking">sceWaveAudioWriteBlocking</a>(
	0,
	<a href="../sound/libwave-Reference-Japanese.htm#SCE_WAVE_AUDIO_VOL_MAX">SCE_WAVE_AUDIO_VOL_MAX</a>,
	<a href="../sound/libwave-Reference-Japanese.htm#SCE_WAVE_AUDIO_VOL_MAX">SCE_WAVE_AUDIO_VOL_MAX</a>,
	pcmBuf[iSide]
);
iSide ^= 1;
</font></pre></div>
<div style="margin-left:50px;"><br>同様の注意が終了時にも必要となります。PCMデータを動的に確保したメモリ領域(malloc関数で確保した領域や、関数内部で確保される自動変数など)においていた場合、該当データの出力が終了する前にメモリ領域を開放してしまうと、実行するときの状況によって異なる雑音が出力される可能性があります。「最後のデータ」の出力が確実に終了していることを確認してから、メモリの開放などを行うようにしてください。また、PCM形式のサウンド出力には、専用のスレッドを用いることが多いですが、そのような場合、サウンド出力スレッドがまだデータを出力している最中にスレッドをとめるなどの処理を行わないよう、スレッド間の同期を取って処理を行うようにしてください(詳しくはサンプルプログラムをご覧ください)。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>注意事項</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>スレッド切り替え、優先度に関する重要な注意事項</b><br>
</a>
</h3>
<div style="margin-left:50px;">PSP&reg;において、ハードウェアへのサウンド出力はCPU上で動作するデバイスドライバ内部のスレッドにより行われます。このため、スレッド切り替えが発生しない状況になると、音声出力が停止してしまい、耳障りなノイズが発生する可能性があります。音声出力を行っている最中には、割り込み禁止期間、ディスパッチ禁止期間が長くなりすぎないように注意してください。目安として、長くても数百マイクロ秒程度となるようにしてください。<br><br>また、<a href="../sound/libwave-Reference-Japanese.htm#sceWaveStart">sceWaveStart</a>()にて指定するサウンドのプライオリティはなるべく高くしてください。特に問題がない限りSCE_KERNEL_USER_HIGHEST_PRIORITYに設定されることをお勧めします。サウンド処理スレッドのプライオリティが低い場合、ノイズ混じりで再生される・再生される音が途切れる・まったく再生されない、などの現象が発生します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>CPU負荷に関する注意事項</b><br>
</a>
</h3>
<div style="margin-left:50px;">libwaveの処理はすべてメインCPUで行われます。また、PSP&reg;はADPCM形式のデータをPCM形式にデコードするハードウェアや、複数音声を出力するための特別なハードウェアを具有しないため、ミキシング処理などはすべてCPUにて行われます。<br>このため、ボイス数などをむやみに増やすと、SC側CPUにかかる負荷が大幅に増加することになります。<br><br>libwaveおよびオーディオドライバ内部に実装されているミキシング機能は非常に汎用的に書かれているため、速度的には最適なものとなっていません。このことが問題になる場合、機能を削ったミキサーをユーザアプリ内で実装する、ミキシング機能を用いないオーディオ出力(simple audio機能を使用する)などの方法で、CPUパフォーマンスを改善することが可能です。具体的には、サンプルdevkit/sample/sound/at3mix/を参考にしてください。<br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2008 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
