<html lang="en">
<head>
<title>libatrac3plus-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libatrac3plus Reference
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceAtracBufferInfo"></a>
<table width="100%"><td width="70%"><font size=6>SceAtracBufferInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Structure for buffer control information when resetting playback position<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus&gt;

typedef struct {
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucWritePositionFirstBuf;</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiWritableByteFirstBuf;</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiMinWriteByteFirstBuf;</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiReadPositionFirstBuf;</i>
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucWritePositionSecondBuf;</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiWritableByteSecondBuf;</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiMinWriteByteSecondBuf;</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiReadPositionSecondBuf;</i>
} <b>SceAtracBufferInfo</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>*pucWritePositionFirstBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Start address for writing to first buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiWritableByteFirstBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum number of bytes which can be written to first buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiMinWriteByteFirstBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Minimum number of bytes which must be written to first buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiReadPositionFirstBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Read position of data file to write to first buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>*pucWritePositionSecondBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Start address for writing to second buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiWritableByteSecondBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum number of bytes which can be written to second buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiMinWriteByteSecondBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Minimum number of bytes which must be written to second buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiReadPositionSecondBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Read position of data file to write to second buffer&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used for obtaining buffer control data when resetting the playback position.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetBufferInfoForResetting">sceAtracGetBufferInfoForResetting</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracResetPlayPosition">sceAtracResetPlayPosition</a></b>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceAtracLowLevelParam"></a>
<table width="100%"><td width="70%"><font size=6>SceAtracLowLevelParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Low-level decoder parameter structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

typedef struct {
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>nchin;</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>nchout;</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>nFrameBytes;</i>
} <b>SceAtracLowLevelParam</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nchin</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of input channels&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nchout</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of output channels&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nFrameBytes</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of one frame of ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used by <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>() for initializing the ATRAC&trade; ID.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetAtracID"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetAtracID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get an ATRAC&trade; ID<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetAtracID</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiCodecType</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiCodecType</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Identifier indicating type of AudioCodec to be used&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function allocates an ATRAC&trade; ID. An ATRAC&trade; ID must be allocated before ATRAC3&trade;/ATRAC3plus&trade; data can be decoded. <br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Allocate an ATRAC&trade; ID for ATRAC3&trade; data*/
atracId = sceAtracGetAtracID(<a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_AT3">SCE_ATRAC_AT3</a>);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The user must call sceAtracGetAtracID() specifying the proper codec to be used to obtain the ATRAC&trade; ID.<br>The ATRAC&trade; ID that was allocated by specifying <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_AT3">SCE_ATRAC_AT3</a> for <i>uiCodecType</i> cannot be used for ATRAC3plus&trade; data, and the ATRAC&trade; ID that was allocated by specifying <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_AT3PLUS">SCE_ATRAC_AT3PLUS</a> for <i>uiCodecType</i> cannot be used for ATRAC3&trade; data<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libatrac3plus-Reference-English.htm#Codec Identifier">Codec Identifier</a><br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracReleaseAtracID">sceAtracReleaseAtracID</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracReleaseAtracID"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracReleaseAtracID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Release an ATRAC&trade; ID<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracReleaseAtracID</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>atracID</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function releases an ATRAC&trade; ID.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Release an ATRAC&trade; ID */
status = sceAtracReleaseAtracID(atracID);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The number of ATRAC&trade; IDs that can be used simultaneously is limited. Please release an ATRAC&trade; ID after it is through being used, otherwise it may not be possible for another thread that is running concurrently to allocate one.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libatrac3plus-Reference-English.htm#Codec Identifier">Codec Identifier</a><br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetAtracID">sceAtracGetAtracID</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracReinit"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracReinit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reinitialize ATRAC&trade; ID <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracReinit</b>(
	int	<i>at3_entry,</i>
<i>	</i>int	<i>at3plus_entry</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>at3_entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of ATRAC3&trade; ATRAC&trade; IDs to be used simultaneously&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>at3plus_entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of ATRAC3plus&trade; ATRAC&trade; IDs to be used simultaneously&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the list of error codes at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function reinitializes the library and changes the number of ATRAC&trade; IDs that can be used simultaneously.<br>By default, the number of ATRAC&trade; IDs that can be used simultaneously is 2 for ATAC3 and 2 for ATRAC3plus&trade;. This function can be used to change these limits in a range that satisfies the following relationship.<br>	(Number of ATRAC3&trade; IDs) + (Number of ATRAC3plus&trade; IDs) x 2  &lt;=  6<br>If the above condition is not satisfied, an error is returned.<br>All ATRAC&trade; IDs must be released before this function is called.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Reinitialize by setting four ATRAC3&trade; IDs and one ATRAC3plus&trade; ID */
res = sceAtracReinit(4,1);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetAtracID">sceAtracGetAtracID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracReleaseAtracID">sceAtracReleaseAtracID</a></b>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetData"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initial data setting function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetData</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucBufferAddr,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiBufferByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of input buffer &nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function associates an ATRAC&trade; ID with an input buffer and registers it in the library. The ATRAC&trade; ID must be allocated before this function is called. Also, data from the beginning of the file should be read into the input buffer.<br>This function accepts monaural and stereo data as input data. If the decoding function <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called after initialization is performed by this function, the data will always be output as two channels.<br>By this function, memory required by libatrac3plus is initialized, the buffer that was configured as <i>pucBufferAddr</i> is set, and the header of the ATRAC3&trade;/ATRAC3plus&trade; data that was read into <i>pucBufferAddr</i> is analyzed.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Associate ATRAC&trade; ID and input buffer.*/
status = sceAtracSetData(atracID, buf, databyte);
</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If data is not read correctly to the input buffer, up to <i>uiBufferByte</i> + 2 bytes from <i>pucBufferAddr</i> may be accessed.<br>Therefore, make sure that the 2 bytes after the final address of the read buffer are located in an accessible area.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetMOutData"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetMOutData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initial data setting function (monaural output)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetMOutData</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucBufferAddr,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiBufferByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function associates an ATRAC&trade; ID with an input buffer and registers it in the library. Data from the beginning of the file should be read into the input buffer. The ATRAC&trade; ID must be allocated before this function is called.<br>This function only accepts monaural data as input data. If the decoding function <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called after initialization is performed by this function, the output data will always be one channel.<br>Internally, memory required by libatrac3plus is initialized, the buffer that was configured as <i>pucBufferAddr</i> is set, and the header of the ATRAC3&trade;/ATRAC3plus&trade; data that was read into <i>pucBufferAddr</i> is analyzed.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Associate an ATRAC&trade; ID with an input buffer */
status = sceAtracSetMOutData(atracID, buf, databyte);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If data is not read correctly into the input buffer, up to <i>uiBufferByte</i> + 2 bytes from <i>pucBufferAddr</i> may be accessed.<br>Therefore, make sure that the 2 bytes after the final address of the read buffer are located in an accessible area.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetHalfwayBuffer"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetHalfwayBuffer<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initial data setting function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetHalfwayBuffer</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucBufferAddr,</i>
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiReadByte,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiBufferByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiReadByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of valid data from beginning of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function associates an ATRAC&trade; ID with an input buffer and registers it in the library. The ATRAC&trade; ID must be allocated before this function is called. Also, data from the beginning of the file should be read into the input buffer.<br>This function accepts monaural and stereo data as input data. If the decoding function <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called after initialization is performed by this function, the data will always be output as two channels.<br>Internally, memory required by libatrac3plus is initialized, the buffer that was configured as <i>pucBufferAddr</i> is set, and the header of the ATRAC3&trade;/ATRAC3plus&trade; data that was read into <i>pucBufferAddr</i> is analyzed.<br>This function differs from <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>() in that the amount of data that is read into the buffer can be less than the buffer size. Therefore, the time until sound is first produced can be shortened since the amount of data that must be read up front can be reduced.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Associate an ATRAC&trade; ID with an input buffer */
status = sceAtracSetHalfwayBuffer(atracID, buf, readbyte,bufsize);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If data is not read correctly to the input buffer, up to <i>uiBufferByte</i> + 2 bytes from <i>pucBufferAddr</i> may be accessed.<br>Therefore, make sure that the 2 bytes after the final address of the read buffer are located in an accessible area.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetMOutHalfwayBuffer"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetMOutHalfwayBuffer<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initial data setting function (monaural output)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetMOutHalfwayBuffer</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucBufferAddr,</i>
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiReadByte,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiBufferByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiReadByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of valid data from beginning of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function associates an ATRAC&trade; ID with an input buffer and registers it in the library. The ATRAC&trade; ID must be allocated before this function is called. Also, data from the beginning of the file should be read into the input buffer.<br>This function accepts only monaural data as input data. If the decoding function <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called after initialization is performed by this function, the data will always be output as one channel.<br>Internally, memory required by libatrac3plus is initialized, the buffer that was configured as <i>pucBufferAddr</i> is set, and the header of the ATRAC3&trade;/ATRAC3plus&trade; data that was read into <i>pucBufferAddr</i> is analyzed.<br>This function differs from <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetMOutData">sceAtracSetMOutData</a></b>() in that the amount of data that is read into the buffer can be less than the buffer size. Therefore, the time until sound is first produced can be shortened since the amount of data that must be read up front can be reduced.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Associate an ATRAC&trade; ID with an input buffer */
status = sceAtracSetMOutHalfwayBuffer(atracID, buf, readbyte,bufsize);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If data is not read correctly into the input buffer, up to <i>uiBufferByte</i> + 2 bytes from <i>pucBufferAddr</i> may be accessed.<br>Therefore, make sure that the 2 bytes after the final address of the read buffer are located in an accessible area.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetDataAndGetID"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetDataAndGetID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set initial data and allocate ATRAC&trade; ID<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetDataAndGetID</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucBufferAddr,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiBufferByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;= 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC&trade; ID (An ATRAC&trade; ID was successfully obtained)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets an ATRAC&trade; ID and associates an input buffer with the ATRAC&trade; ID. Data from the beginning of the file should be read into the input buffer.<br>Internally, memory required by libatrac3plus is initialized, the buffer that was configured as <i>pucBufferAddr</i> is set, the header of the ATRAC3&trade;/ATRAC3plus&trade; data that was read into <i>pucBufferAddr</i> is analyzed, and an ATRAC&trade; ID for the corresponding data type is obtained.<br>This function accepts stereo and monaural data as input data. If the decoding function <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called after initialization is performed by this function, the data will always be output as two channels.<br><br>Since part of this function that gets the ATRAC&trade; ID is multithread safe, duplicate ATRAC&trade; IDs will not be allocated even if this function is called from multiple threads. However, since other parts of the function are not multithread safe, operation is not guaranteed if decoding is performed from another thread with the same ATRAC&trade; ID as the argument.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get an ATRAC&trade; ID and associate it with an input buffer */
atracID = sceAtracSetDataAndGetID(buf, databyte);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If data is not read correctly into the input buffer, up to <i>uiBufferByte</i> + 2 bytes from <i>pucBufferAddr</i> may be accessed.<br>Therefore, make sure that the 2 bytes after the final address of the read buffer are located in an accessible area.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetAA3DataAndGetID"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetAA3DataAndGetID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set initial data and allocate ATRAC&trade; ID<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;
#include &lt;libatrac3plus_aa3.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetAA3DataAndGetID</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucBufferAddr,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiBufferByte,</i>
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiFileLength,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>*puiMetadataOffset</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input data starting address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiFileLength</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File length to be input&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>*puiMetadataOffset</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Metadata offset position&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;= 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC&trade; ID (An ATRAC&trade; ID was successfully obtained)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets an ATRAC&trade; ID and associates an input buffer with the ATRAC&trade; ID. Data from the beginning of the file should be read into the input buffer.<br>Internally, memory required by libatrac3plus is initialized, the buffer that was configured as <i>pucBufferAddr</i> is set, the header of the AA3 data that was read into <i>pucBufferAddr</i> is analyzed, and an ATRAC&trade; ID for the corresponding data type is obtained.<br>This function accepts stereo data as input data. If the decoding function <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called after initialization is performed by this function, the data will always be output as two channels.<br>If the data required for playback is not found within the specified input buffer <i>puiBufferAddr</i> (the metadata part is too large), this function returns an error and the size of the metadata (in bytes) is stored in <i>puiMetadataOffset</i>.<br>Since part of this function that gets the ATRAC&trade; ID is multithread safe, duplicate ATRAC&trade; IDs will not be allocated even if this function is called from multiple threads. However, since other parts of the function are not multithread safe, operation is not guaranteed if decoding is performed from another thread with the same ATRAC&trade; ID as the argument.<br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get an ATRAC&trade; ID and associate it with an input buffer */
atracID = sceAtracSetAA3DataAndGetID(buf, databyte, filelength, &amp;metasize);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If data is not read correctly into the input buffer, up to <i>uiBufferByte</i> + 2 bytes from <i>pucBufferAddr</i> may be accessed.<br>Therefore, make sure that the 2 bytes after the final address of the read buffer are located in an accessible area.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetMOutDataAndGetID"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetMOutDataAndGetID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set initial data and allocate ATRAC&trade; ID (monaural output)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetMOutDataAndGetID</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucBufferAddr,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiBufferByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;= 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC&trade; ID (An ATRAC&trade; ID was successfully obtained)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets an ATRAC&trade; ID and associates it with an input buffer Data from the beginning of the file should be read into the input buffer.<br>This function accepts only monaural data as input data. If the decoding function <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called after initialization is performed by this function, the data will always be output as one channel.<br>Internally, memory required by libatrac3plus is initialized, the buffer that was configured as <i>pucBufferAddr</i> is set, the header of the ATRAC3&trade;/ATRAC3plus&trade; data that was read into <i>pucBufferAddr</i> is analyzed, and an ATRAC&trade; ID for the corresponding data type is obtained.<br><br>Since part of this function that gets the ATRAC&trade; ID is multithread safe, duplicate ATRAC&trade; IDs will not be allocated even if this function is called from multiple threads. However, since other parts of the function are not multithread safe, operation is not guaranteed if decoding is performed from another thread with the same ATRAC&trade; ID as the argument.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get an ATRAC&trade; ID and associate it with an input buffer */
atracID = sceAtracSetMOutDataAndGetID(buf, databyte);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If data is not read correctly into the input buffer, up to <i>uiBufferByte</i> + 2 bytes from <i>pucBufferAddr</i> may be accessed.<br>Therefore, make sure that the 2 bytes after the final address of the read buffer are located in an accessible area.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetHalfwayBufferAndGetID"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetHalfwayBufferAndGetID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set initial data and allocate ATRAC&trade; ID<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetHalfwayBufferAndGetID</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucBufferAddr,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiReadByte</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiBufferByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiReadByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of valid data from beginning of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;= 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC&trade; ID (An ATRAC&trade; ID was successfully obtained)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets an ATRAC&trade; ID and associates it with an input buffer. Data from the beginning of the file should be read into the input buffer.<br>This function accepts stereo and monaural data as input data. If the decoding function <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called after initialization is performed by this function, the data will always be output as two channels.<br>Internally, memory required by libatrac3plus is initialized, the buffer that was configured as <i>pucBufferAddr</i> is set, the header of the ATRAC3&trade;/ATRAC3plus&trade; data that was read into <i>pucBufferAddr</i> is analyzed, and an ATRAC&trade; ID for the corresponding data type is obtained.<br>This function differs from <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b> () in that the amount of data that is read into the buffer can be less than the buffer size. Therefore, the time until sound is first produced can be shortened since the amount of data that must be read up front can be reduced.<br><br>Since part of this function that gets the ATRAC&trade; ID is multithread safe, duplicate ATRAC&trade; IDs will not be allocated even if this function is called from multiple threads. However, since other parts of the function are not multithread safe, operation is not guaranteed if decoding is performed from another thread with the same ATRAC&trade; ID as the argument.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get an ATRAC&trade; ID and associate it with an input buffer */
atracID = sceAtracSetHalfwayBufferAndGetID(buf, readbyte,bufsize);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If data is not read correctly into the input buffer, up to <i>uiBufferByte</i> + 2 bytes from <i>pucBufferAddr</i> may be accessed.<br>Therefore, make sure that the 2 bytes after the final address of the read buffer are located in an accessible area.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetAA3HalfwayBufferAndGetID"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetAA3HalfwayBufferAndGetID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set initial data and allocate ATRAC&trade; ID<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetAA3HalfwayBufferAndGetID</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucBufferAddr,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiReadByte</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiBufferByte,</i>
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiFileLength,</i>
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a><i> *puiMetadataOffset</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input data starting address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiReadByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Valid data size from beginning of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiFileLength</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File size to be input&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>*puiMetadataOffset</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Metadata offset position&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;= 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC&trade; ID (An ATRAC&trade; ID was successfully obtained)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets an ATRAC&trade; ID and associates an input buffer with the ATRAC&trade; ID. Data from the beginning of the file should be read into the input buffer.<br>This function accepts stereo data as input data. If the decoding function <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called after initialization is performed by this function, the data will always be output as two channels.<br>If the data required for playback is not found within the specified input buffer <i>puiBufferAddr</i> (the metadata part is too large), this function returns an error and the size of the metadata (in bytes) is stored in <i>puiMetadataOffset</i>.<br>This function differs from <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetAA3DataAndGetID">sceAtracSetAA3DataAndGetID</a></b>() in that the data size that is read into the buffer can be less than the buffer size. As a result, since the amount of data that must be read first can be reduced, the time until sound is first produced can be shortened.<br>Since part of this function that gets the ATRAC&trade; ID is multithread safe, duplicate ATRAC&trade; IDs will not be allocated even if this function is called from multiple threads. However, since other parts of the function are not multithread safe, operation is not guaranteed if decoding is performed from another thread with the same ATRAC&trade; ID as the argument.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get an ATRAC&trade; ID and associate it with an input buffer */
atracID = sceAtracSetAA3HalfwayBufferAndGetID(buf, readbyte,bufsize,filelength,&amp;metasize);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If data is not read correctly into the input buffer, up to <i>uiBufferByte</i> + 2 bytes from <i>pucBufferAddr</i> may be accessed.<br>Therefore, make sure that the 2 bytes after the final address of the read buffer are located in an accessible area.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetMOutHalfwayBufferAndGetID"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetMOutHalfwayBufferAndGetID<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set initial data and allocate ATRAC&trade; ID (monaural output)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetMOutHalfwayBufferAndGetID</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pucBufferAddr,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiReadByte</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiBufferByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiReadByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of valid data from beginning of input data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;= 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC&trade; ID (An ATRAC&trade; ID was successfully obtained)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets an ATRAC&trade; ID and associates it with an input buffer. Data from the beginning of the file should be read into the input buffer.<br>This function accepts only monaural data as input data. If the decoding function <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called after initialization is performed by this function, the data will always be output as one channel.<br>Internally, memory required by libatrac3plus is initialized, the buffer that was configured as <i>pucBufferAddr</i> is set, the header of the ATRAC3&trade;/ATRAC3plus&trade; data that was read into <i>pucBufferAddr</i> is analyzed, and an ATRAC&trade; ID for the corresponding data type is obtained.<br>This function differs from <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetMOutDataAndGetID">sceAtracSetMOutDataAndGetID</a></b> () in that the amount of data that is read into the buffer can be less than the buffer size. Therefore, the time until sound is first produced can be shortened since the amount of data that must be read up front can be reduced.<br><br>Since part of this function that gets the ATRAC&trade; ID is multithread safe, duplicate ATRAC&trade; IDs will not be allocated even if this function is called from multiple threads. However, since other parts of the function are not multithread safe, operation is not guaranteed if decoding is performed from another thread with the same ATRAC&trade; ID as the argument.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get an ATRAC&trade; ID and associate it with an input buffer */
atracID = sceAtracSetMOutHalfwayBufferAndGetID(buf, readbyte,bufsize);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If data is not read correctly into the input buffer, up to <i>uiBufferByte</i> + 2 bytes from <i>pucBufferAddr</i> may be accessed.<br>Therefore, make sure that the 2 bytes after the final address of the read buffer are located in an accessible area.<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracDecodeData"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracDecodeData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Decode data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracDecodeData</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceShort16">SceShort16</a> <i>*psOutAddr,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>*puiSamples,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>*puiFinishflag</i>,
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>*piRemainframe</i>
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>psOutAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to the memory area where the result of the decode is written&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiSamples</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to the variable into which the number of samples that were decoded is entered&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiFinishflag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to the variable into which the flag indicating whether all data was decoded is entered&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piRemainframe</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to the variable in which <a href="../sound/libatrac3plus-Reference-English.htm#Buffer State Identifier">Buffer State Identifier</a> or remaining number of times data can be decoded is set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs decoding and outputs audio data. The output data is written in a format having 16 bits per sample to the area indicated by <i>psOutAddr</i>. When 2 channels are output, the left channel is interleaved first when it is output (data for the left and right channel data are arranged alternately for each sample).<br>Users of the library must allocate, using <i>psOutAddr</i>, a memory area which is sufficient for the number of output channels and the number of samples. The size of the area required can be calculated by multiplying the value acquired from <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetMaxSample">sceAtracGetMaxSample</a></b>(), and <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetNextSample">sceAtracGetNextSample</a></b>() by 4 (for 2 channel output), or by 2 (for 1 channel output).<br>Whether the output data is stereo or monaural depends on which function was used for initialization, not on whether the sound source data is monaural. When monaural data is decoded and stereo output is performed, the same data is output by the left and right channels. The current number of output channels can be checked by using <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetOutputChannel">sceAtracGetOutputChannel</a></b>().<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>finishflag = 0;
while (finishflag == 0){
	status = sceAtracDecodeData(atracID, out_buf, 
	                        &amp;decodedsample, &amp;finishflag, &amp;remainframe);
	if (status != SCE_ATRAC_SUCCESS){
	    break;
	}
	/* Output data */
	/* Additional data */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The size of the <i>psOutAddr</i> area must be a multiple of 64 bytes and it must be allocated with 64-byte alignment. To perform decoding multiple times collectively, the buffer must be allocated on a 64-byte boundary and its size must be a multiple of 64 bytes even for a large output buffer. However, when the buffer is allocated in this manner, the decoding output start address (<i>psOutAddr</i>) only needs to be 2-byte aligned; 64-byte alignment is not required.<br><br>When using streaming playback and when playing special data, the second buffer must be set before playback. For details, see the description of <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetSecondBuffer">sceAtracSetSecondBuffer</a></b>().<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libatrac3plus-Reference-English.htm#Buffer State Identifier">Buffer State Identifier</a><br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetOutputChannel">sceAtracGetOutputChannel</a></b>()<br><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetStreamDataInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetStreamDataInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get streaming information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetStreamDataInfo</b> (
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a><i> </i>**<i>ppucWritePointer</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a><i> </i>*<i>puiWritableByte</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a><i> </i>*<i>puiReadPosition</i>
	);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ppucWritePointer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to the variable which stores the value indicating the starting write position in memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiWritableByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes that can be written from <i>*ppucWritePointer</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiReadPosition</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting read position in the file&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets information of the data to be read next (the read position in the input file, write position in the buffer, and number of writable bytes) during streaming playback. <br>Based on the values obtained by this function, additional data should be written to an area starting from <i>*ppucWritePosition </i>when performing streaming playback. <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracAddStreamData">sceAtracAddStreamData</a></b>() should be called to report the additional data to the library.<br>When all data is in the buffer or when the buffer is currently full, <i>*puiWritableByte</i> will be set to 0.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>finishflag = 0;
while (finishflag == 0){
	/* Get information */
	sceAtracGetStreamDataInfo(atracID,
				&amp;pucWritePointer,
				&amp;uiWritableByte,
				&amp;uiReadPosition);	
	/* Set file read position */
	sceIoLseek(fd, uiReadPosition, SCE_SEEK_SET);

	/* Read data from the file */
	uiAddByte = sceIoRead(fd, pucWritePosition, uiWritableByte);
	/* API for reporting the additional data */
	<a href="../sound/libatrac3plus-Reference-English.htm#sceAtracAddStreamData">sceAtracAddStreamData</a>(atracID, uiAddByte);
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">You can also use <b>sceAtracGetStreamDataInfo</b>() to get additional information about data for the second buffer.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracAddStreamData">sceAtracAddStreamData</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracAddStreamData"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracAddStreamData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Report additional data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracAddStreamData</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiAddByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiAddByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes added to the buffer&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function reports to the library of the number of bytes of data that were added to the buffer. When data is added, be sure to call this function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>finishflag = 0;
while (finishflag == 0){
	/* Get information */
	<a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetStreamDataInfo">sceAtracGetStreamDataInfo</a>(atracID,
				&amp;pucWritePointer,
				&amp;uiWritableByte,
				&amp;uiReadPosition);	
	/* Set file read position */
	sceIoLseek(fd, uiReadPosition, SCE_SEEK_SET);

	/* Read data from the file */
	uiAddByte = sceIoRead(fd, pucWritePosition, uiWritableByte);
	/* API for reporting the additional data */
	sceAtracAddStreamData(atracID, uiAddByte);
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">You can also use the <b>sceAtracAddStreamData</b>() function when adding more data to the second buffer.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetStreamDataInfo">sceAtracGetStreamDataInfo</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetSecondBufferInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetSecondBufferInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get second buffer information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetSecondBufferInfo</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>*puiPosition,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>*puiDataByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiPosition</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Position in the file for reading data into the second buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiDataByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes to the end of the file from <i>puiPosition</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is used during streaming playback of ATRAC3&trade;/ATRAC3plus&trade; data when there is data after the end of a loop. The data beyond the loop should be loaded into the second buffer in advance. For details, refer to the libatrac3plus Overview.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>ret = sceAtracGetSecondBufferInfo(atracID,
				&amp;position, 
				&amp;filesize);
sceIoLseek(fd, position, SCE_SEEK_SET);
	
if (!(filesize = sceIoRead(fd, secondBuf, filesize))) {
	printf("file size = %d\n", filesize);
	return -1;
}
ret = <a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetSecondBuffer">sceAtracSetSecondBuffer</a>(atracID,
			secondBuf,
			filesize);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The second buffer must be set when performing streaming playback of ATRAC3&trade;/ATRAC3plus&trade; data which outputs audio after the end of a loop. Note that if <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called without setting the second buffer in this situation, it will return <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_ERROR_NEED_SECOND_BUFFER">SCE_ATRAC_ERROR_NEED_SECOND_BUFFER</a>.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>(),  <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetSecondBuffer">sceAtracSetSecondBuffer</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetSecondBuffer"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetSecondBuffer<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set second buffer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracSetSecondBuffer</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> *<i>pucSeconddBufferAddr</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiSecondBufferByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucSecondBufferAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to the starting point of the Second buffer (a user-allocated area should be specified)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSecondBufferByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of second buffer &nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is used during streaming playback of ATRAC3&trade;/ATRAC3plus&trade; data when there is data after the end of a loop. The data beyond the loop should be loaded into the second buffer in advance. For details, refer to the libatrac3plus Overview.<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSecondBufferInfo">sceAtracGetSecondBufferInfo</a>()</b> can be used to get information about the position in the file where data is to be read into the second buffer, and the number of bytes to read from that position to the end of the file.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>ret = <a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSecondBufferInfo">sceAtracGetSecondBufferInfo</a>(atracID,
				&amp;position, 
				&amp;filesize);
sceIoLseek(fd, position, SCE_SEEK_SET);
	
if (!(filesize = sceIoRead(fd, secondBuf, filesize)))  {
	printf("file size = %d\n", filesize);
	return -1;
}
ret = sceAtracSetSecondBuffer(atracID,
			secondBuf,
			filesize);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The second buffer must be set when performing streaming playback of ATRAC3&trade;/ATRAC3plus&trade; data which outputs audio after the end of a loop. Note that if <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is called without setting the second buffer in this situation, it will return <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_ERROR_NEED_SECOND_BUFFER">SCE_ATRAC_ERROR_NEED_SECOND_BUFFER</a>.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSecondBufferInfo">sceAtracGetSecondBufferInfo</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracIsSecondBufferNeeded"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracIsSecondBufferNeeded<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Check second buffer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracIsSecondBufferNeeded</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Second buffer is not necessary&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Positive (&gt;0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Second buffer is necessary&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns a value indicating whether or not the second buffer is necessary to play the ATRAC3&trade;/ATRAC3plus&trade; data that has been set.<br>The second buffer is required to perform streaming playback of ATRAC3&trade;/ATRAC3plus&trade; data when audio is output after the end of a loop.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get data in the second buffer only when the second buffer is necessary */
if (sceAtracIsSecondBufferNeeded(atracID) &gt; 0) {
	ret = <a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSecondBufferInfo">sceAtracGetSecondBufferInfo</a>(atracID,
					&amp;position, 
					&amp;filesize);
	sceIoLseek(fd, position, SCE_SEEK_SET);
	
	if (!(filesize = sceIoRead(fd, secondBuf, filesize)))  {
		printf("file size = %d\n", filesize);
		return -1;
	}
	ret = <a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetSecondBuffer">sceAtracSetSecondBuffer</a>(atracID,
				secondBuf,
				filesize);
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The second buffer must be set to perform streaming playback of ATRAC3&trade;/ATRAC3plus &trade;data when audio is output after the end of a loop.<br>Since this function can be called to check whether or not the ATRAC3&trade;/ATRAC3plus&trade; data that is about to be played needs the second buffer, be sure to allocate the second buffer accordingly.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSecondBufferInfo">sceAtracGetSecondBufferInfo</a></b> ()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetSecondBuffer">sceAtracSetSecondBuffer</a></b> ()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetRemainFrame"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetRemainFrame<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get remaining number of decodes<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetRemainFrame</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>*piRemainframe</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piRemainframe</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to variable in which <a href="../sound/libatrac3plus-Reference-English.htm#Buffer State Identifier">Buffer State Identifier</a> or remaining number of times data can be decoded is set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Other than 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the state (<a href="../sound/libatrac3plus-Reference-English.htm#Buffer State Identifier">Buffer State Identifier</a> or remaining number of times data can be decoded) of the buffer that is currently being used.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get buffer state */
status = sceAtracGetRemainFrame(atracID, &amp;remainframe);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function can be used to obtain the state (<a href="../sound/libatrac3plus-Reference-English.htm#Buffer State Identifier">Buffer State Identifier</a> or remaining number of times data can be decoded) of the buffer that is currently being used. Using this funcion, you can check whether processing to add to the buffer is necessary for the buffer that is currently being used.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libatrac3plus-Reference-English.htm#Buffer State Identifier">Buffer State Identifier</a><br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetChannel"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetChannel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get the number of channels of the input data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetChannel</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> *<i>puiChannel</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiChannel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer for storing the number of channels&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Other than 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of recorded channels in the data that is currently set. Using this function, you can determine whether the input data is 1 channel or 2 channels.<br>However, the number of channels of the data that is output to <i>psOutAddr</i> also depends on the initialization method and not just on the input data. The number of output channels can be obtained by using the <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetOutputChannel">sceAtracGetOutputChannel</a></b>() function.<br>An initialization function must be called before calling this function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Check the number of channels of encoding data*/
status = sceAtracGetChannel(atracID, &amp;channels);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When operating on the same data, this function always returns the same value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetOutputChannel">sceAtracGetOutputChannel</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetOutputChannel"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetOutputChannel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get the number of output channels<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetOutputChannel</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> *<i>puiOutChannel</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiOutChannel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer for storing the number of channels&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Other than 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of channels of data that are currently specified.<br>Using this function, you can determine whether the output data is 1 channel or 2 channels.<br>An initialization function must be called before calling this function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/*Check the number of output channels */
status = sceAtracGetOutputChannel(atracID, &amp;channels);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the same data is handled, this function always returns the same value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetChannel">sceAtracGetChannel</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetMaxSample"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetMaxSample<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get maximum number of output samples<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetMaxSample</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> *<i>puMaxSample</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiMaxSample</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer for storing the maximum number of output samples&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the maximum number of samples per channel that are output when <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() is executed. By quadrupling (2 bytes (16 bits) x 2 channels) this value for 2-channel output or doubling it for 1-channel output, you can find the size in bytes of the output area that should be provided when calling <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>().<br>You<b> </b>must call an initialization function before calling this function.<br>Constant values are always returned in *<i>puiMaxSample</i> depending on the format; for ATRAC3&trade; it is 1024, and for ATRAC3plus&trade; it is 2048.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Check maximum number of samples */
status = sceAtracGetMaxSample (atracID,&amp;maxsample);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When operating on the same data, this function always returns the same value.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetNextSample"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetNextSample<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get the number of output samples in next decoding<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetNextSample</b> (
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> *<i>puiNextSample</i>
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiNextSample</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer for storing the number of output samples in next decoding&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of output samples per channel that are to be returned for the next decoding. By quadrupling (2 bytes (16 bits) x 2 channels) this value for 2-channel output or doubling it for 1-channel output, you can find the size in bytes of the output area that should be provided when calling <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>().<br>You must call an initialization function before calling this function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Check the number of output samples for the next decoding */
status = sceAtracGetNextSample (atracID,&amp;nextsample);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The value obtained from <b>sceAtracGetNextSample</b>() may be different each time.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetSoundSample"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetSoundSample<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>End sample and loop sample retrieval function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetSoundSample</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> *<i>piEndSample,</i>
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> *<i>piLoopStartSample,</i>
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> *<i>piLoopEndSample,</i>
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piEndSample</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to store the end sample of the music&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piLoopStartSample</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to store the loop start sample of the music&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piLoopEndSample</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to store the loop end sample of the music&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function retrieves the end sample, loop start sample, and loop end sample of the currently specified data.<br>Note that the initial sample number at which to start the music is counted from 0.<br>If the currently specified data does not have loop information, set *<i>piLoopStartSample</i> and *<i>piLoopEndSample</i> to -1.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Check number of channels of encoding data */
status = sceAtracGetSoundSample(atracID, 
				&amp;iEndSample,
				&amp;iLoopStartSample,
				&amp;iLoopEndSample);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For ATRAC3&trade;/ATRAC3plus&trade; data for which the number of samples for the music in its entirety is n, the start sample, end sample, loop start sample, and loop end sample are as shown in Figure 1. <br>The length of the music in its entirety can be found as the <b>end sample + 1</b>. <br>In addition, the number of samples in the loop portion is <b>loop end position + 1 - loop start position</b>.<br><br></div>

<div align=center>
<p>
<img src="gif/libatrac3plus-Reference-English001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 1 Relationship Between n-Sample Music and Sample Position</b><br>
</div>
<br>
<div style="margin-left:50px;">This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetNextDecodePosition"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetNextDecodePosition<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Decoding sample position retrieval function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetNextDecodePosition</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> *<i>puiSamplePosition</i>
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiSamplePosition</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to store playback position&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the decode sample position (the starting position of the sample to be output during the next decoding operation) of the currently specified data. <br>If all of the data has been decoded, <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_ERROR_ALLDATA_WAS_DECODED">SCE_ATRAC_ERROR_ALLDATA_WAS_DECODED</a> is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Check number of channels of encoded data */
status = sceAtracGetNextDecodePosition(atracID, &amp;uiSamplePosition);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The sample count starts from 0. <br>In other words, an n-sample ATRAC3&trade;/ATRAC3plus&trade; data will occupy sample positions 0 through n-1. <br>The value which is obtained with this function represents the position of the sample being decoded, and not the position of the sample being played back. To utilize the correct playback position, it is necessary to consider the size and number of buffers to use for output to the audio driver.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetBitrate"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetBitrate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Bit rate retrieval function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetBitrate</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> *<i>puiBitrate</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiBitrate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer for storing the bit rate&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the bit rate of the currently specified data.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Check number of channels of encoded data */
status = sceAtracGetBitrate(atracID, &amp;uiBitrate);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function will always return the same value when handling the same data.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetLoopStatus"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetLoopStatus<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Loop iteration count and loop status retrieval function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a><b> sceAtracGetLoopStatus</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a><i> atracID</i>,
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> *<i>piLoopNum</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> *<i>puiLoopStatus</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>piLoopNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer for storing the number of loops remaining in the specified ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiLoopStatus</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer for storing the loop status (playback position) of the specified ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds the number of loops remaining and the loop status (playback position) of the specified ATRAC3&trade;/ATRAC3plus&trade; data. <br>The following values can be set in *<i>piLoopNum</i>.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No loop playback&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform loop playback *<i>piLoopNum</i> times&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform continuous loop playback&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">The values set in *<i>piLoopStatus</i> are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Playing back data prior to the start of the loop, or&nbsp;&nbsp;<br>&nbsp;&nbsp;playing back data in the loop, for data with loop&nbsp;&nbsp;<br>&nbsp;&nbsp;information.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Playing back data without loop information or&nbsp;&nbsp;<br>&nbsp;&nbsp;playing the portion after the loop ends for data with&nbsp;&nbsp;<br>&nbsp;&nbsp;loop information.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get loop information */
status = sceAtracGetLoopStatus(atracID, &amp;num, &amp;stat);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b>sceAtracGetLoopStatus</b>() may return a different value each time. <br>Note that, when referencing this function in order to invoke <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetLoopNum">sceAtracSetLoopNum</a></b>(), the value returned may vary depending upon the timing with respect to <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>().<br>This function is not supported for the playback of AA3 files. <br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetLoopNum">sceAtracSetLoopNum</a>()<br></div>
<br>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracSetLoopNum"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracSetLoopNum<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Remaining loop count setting function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;
int <b>sceAtracSetLoopNum</b> (
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID,</i>
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a><i> iLoopNum</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iLoopNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Remaining loop count to reset in the specified ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function resets the remaining loop count.<br>The values which can be set for <i>iLoopNum</i> are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No loop playback&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform loop playback <i>iLoopNum</i> times&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform continuous loop playback&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">However, the number of loops can be changed only when the following two conditions are satisfied.<br></div>
<div style="margin-left:35px;"><ul>
<li> The specified ATRAC3&trade;/ATRAC3plus&trade; data has set the loop starting position and loop ending position. 
<li> The part to be decoded next is either before the start of the loop or is inside the loop. 
</ul></div>
<div style="margin-left:50px;"><br>You can find what part of the data will be decoded next by using <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetLoopStatus">sceAtracGetLoopStatus</a></b>().<br><br>The loop count<i> </i>is set to 0 (no loop playback) immediately after an initialization function (<b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetData">sceAtracSetData</a></b>(), <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>(), <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetDataAndGetID">sceAtracSetDataAndGetID</a></b>(), or <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>() and their monaural output versions) or the playback position modification function (<b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracResetPlayPosition">sceAtracResetPlayPosition</a></b>()) is called.<br><br>If you won't know the number of times the loop should be played until some later time, you can change the loop count without using <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetLoopStatus">sceAtracGetLoopStatus</a>()</b> by initially setting the loop to play indefinitely, then reducing the number of iterations later.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Set loop count to 10 */
status = sceAtracSetLoopNum(atracID, 10);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is not supported for AA3 file playback.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetLoopStatus">sceAtracGetLoopStatus</a></b>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetBufferInfoForResetting"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetBufferInfoForResetting<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Function to retrieve buffer control information when modifying playback position<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;
int <b>sceAtracGetBufferInfoForResetting</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID,</i>
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiSample,</i>
<i>	</i><a href="../sound/libatrac3plus-Reference-English.htm#SceAtracBufferInfo">SceAtracBufferInfo</a> <i>*pBufferInfo</i>
<i>);</i>

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSample</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Playback sample position to reset&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pBufferInfo</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to structure for storing buffer information when resetting playback position&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function retrieves the necessary information related to buffer control when resetting the playback position. <br>By calling this function, the following information necessary for resetting the playback position can be retrieved.<br></div>
<div style="margin-left:35px;"><ul>
<li> Start address for writing to buffer
<li> Maximum number of bytes which can be written to buffer
<li> Minimum number of bytes which must be written to buffer
<li> Location for reading data to be written to buffer
</ul></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>
/* Get the buffer control information necessary when changing playback position and 
store in uiResetSample*/

status = sceAtracGetBufferInfoForResetting(atracID, uiResetSample,&amp;bufferInfo);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The sample count specified in <i>uiSample</i> starts from 0. <br>In addition, the values which can be set can be obtained using the <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSoundSample">sceAtracGetSoundSample</a>()</b> function.<br>This function is not supported for AA3 file playback.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#SceAtracBufferInfo">SceAtracBufferInfo</a></b> structure<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSoundSample">sceAtracGetSoundSample</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracResetPlayPosition">sceAtracResetPlayPosition</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracResetPlayPosition"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracResetPlayPosition<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Playback position resetting function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;
int <b>sceAtracResetPlayPosition</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID,</i>
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiSample,</i>
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiWriteByteFirstBuf,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>uiWriteByteSecondBuf</i>
<i>);</i>

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSample</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Playback sample position to reset&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiWriteByteFirstBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes written to the first buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiWriteByteSecondBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes written to the second buffer&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function resets the playback position. <br>To use this function during streaming playback, first call <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetBufferInfoForResetting">sceAtracGetBufferInfoForResetting</a></b>() to obtain buffer control information. Then, assign that information to the <i>uiWriteByteFirstBuf</i> and <i>uiWriteByteSecondBuf</i> arguments so that it can be used to reset the buffer data<br>When performing on-memory playback, you do not need to reset the buffer data because all of the data is in the buffer. In this case, be sure to set 0 for both of the arguments mentioned above.<br>When this function is called, the loop count is reset to 0. To maintain the loop count, use the <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetLoopStatus">sceAtracGetLoopStatus</a></b>() and <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetLoopNum">sceAtracSetLoopNum</a></b>() functions to get and reset the loop count before and after calling this function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>
/* Change the playback position to uiResetSample */
status = sceAtracResetPlayPosition(atracID, 
				uiResetSample,
				uiWriteByteFirstBuf,
				uiWriteByteSecondBuf);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The sample count specified in <i>uiSample</i> starts from 0. <br>In addition, the values which can be set can be obtained using the <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSoundSample">sceAtracGetSoundSample</a></b>() function.<br>This function is not supported for AA3 file playback.<br>This function is not supported for ATRAC&trade; IDs initialized with <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#SceAtracBufferInfo">SceAtracBufferInfo</a></b> structure<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSoundSample">sceAtracGetSoundSample</a></b>()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetBufferInfoForResetting">sceAtracGetBufferInfoForResetting</a></b>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracLowLevelInitDecoder"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracLowLevelInitDecoder<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialization function for low-level API<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracLowLevelInitDecoder</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	<a href="../sound/libatrac3plus-Reference-English.htm#SceAtracLowLevelParam">SceAtracLowLevelParam</a> <i>*pLowLevelParam</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pLowLevelParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to initialization parameter structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function initializes the low-level API of the libatrac3plus library.<br>The low-level API feature decodes one frame and does not perform processing such as buffer management.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../sound/libatrac3plus-Reference-English.htm#SceAtracLowLevelParam">SceAtracLowLevelParam</a> lowLevelParam;

/* Set parameters for ATRAC3&trade; 132 kbps. */
lowLevelParam.nchin      	= 2;
lowLevelParam.nchout     	= 2;
lowLevelParam.nBytesFrame	= 384;

status = sceAtracLowLevelInitDecoder (atracID,
				   &amp;lowLevelParam);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ATRAC&trade; IDs that were initialized with <b>sceAtracLowLevelInitDecoder</b>() cannot be used when calling the following functions.<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetStreamDataInfo">sceAtracGetStreamDataInfo</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracAddStreamData">sceAtracAddStreamData</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSecondBufferInfo">sceAtracGetSecondBufferInfo</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetSecondBuffer">sceAtracSetSecondBuffer</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracIsSecondBufferNeeded">sceAtracIsSecondBufferNeeded</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetRemainFrame">sceAtracGetRemainFrame</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetNextSample">sceAtracGetNextSample</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetSoundSample">sceAtracGetSoundSample</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetNextDecodePosition">sceAtracGetNextDecodePosition</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetLoopStatus">sceAtracGetLoopStatus</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetLoopNum">sceAtracSetLoopNum</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetBufferInfoForResetting">sceAtracGetBufferInfoForResetting</a></b>(),<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracResetPlayPosition">sceAtracResetPlayPosition</a></b>()<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelDecode">sceAtracLowLevelDecode</a></b>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracLowLevelDecode"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracLowLevelDecode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Decode function for low-level API<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracLowLevelDecode</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID</i>,
	const <a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> *<i>pucESBuf,</i>
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> *<i>puiUsedSize</i>,
	<a href="../kernel/Types-Reference-English.htm#SceShort16">SceShort16</a> *<i>psOutAddr</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> *<i>puiOutSize</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pucESBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to input data buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiUsedSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to variable for storing size of input data that was used&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>psOutAddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of output buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiOutSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to variable for storing output size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs decoding and outputs audio data. The output data is written in a format having 16 bits per sample to the area indicated by <i>psOutAddr</i>. When 2 channels are output, the left channel data is interleaved first when it is output (data for the left and right channel data are arranged alternately for each sample).<br>Users of the library must allocate, using <i>psOutAddr</i>, a memory area that is sufficient for the number of output channels and the number of samples. The size of the area required can be calculated by multiplying the value obtained from <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetMaxSample">sceAtracGetMaxSample</a></b>() by 4 (for 2 channel output), or by 2 (for 1 channel output).<br>Whether the output data is stereo or monaural is determined by the value of the <i>nchout</i> member of the <b><a href="../sound/libatrac3plus-Reference-English.htm#SceAtracLowLevelParam">SceAtracLowLevelParam</a></b> structure during initialization, not on whether the sound source data is monaural. <br>When monaural data is decoded and stereo output is performed, the same data is output by the left and right channels. The current number of output channels can be checked by using <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetOutputChannel">sceAtracGetOutputChannel</a></b>().<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>
status = <a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a>(atracID,
			  pucEsBuf,
			  &amp;uiUsedSize,
			  psOutAddr,
			  &amp;uiOutSize);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The size of the <i>psOutAddr</i> area must be a multiple of 64 bytes and it must be allocated with 64-byte alignment. To perform decoding multiple times collectively, the output buffer must be allocated on a 64-byte boundary and its size must be a multiple of 64 bytes even for a large output buffer. However, when the buffer is allocated in this manner, the decoding output starting address (<i>psOutAddr</i>) only needs to be 2-byte aligned; 64-byte alignment is not required.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAtracGetInternalErrorInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceAtracGetInternalErrorInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get detailed error information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libatrac3plus.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAtracGetInternalErrorInfo</b>(
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>atracID,</i>
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> *<i>piResult</i>
)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>atracID</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID for managing the decoding of ATRAC3&trade;/ATRAC3plus&trade; data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>*piResult</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer for storing internal library error information &nbsp;&nbsp;<br>&nbsp;&nbsp;*<i>piResult</i> = 0 (no error)&nbsp;&nbsp;<br>&nbsp;&nbsp;*<i>piResult</i> ? 0 (error occurred)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&lt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For return values when an error occurs, see the <a href="../sound/libatrac3plus-Reference-English.htm#List of Error Codes">List of Error Codes</a> at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function checks detailed information when a libatrac3plus function returns a library internal error (<a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_ERROR_API_FAIL">SCE_ATRAC_ERROR_API_FAIL</a>). It is assumed that this function will mainly be used for debugging. Although you can execute this function on an actual PSP&trade;, it is not recommended.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Basically, the error code <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_ERROR_API_FAIL">SCE_ATRAC_ERROR_API_FAIL</a> is only returned when encoded data that was provided to libatrac3plus contained an error. The following two situations can be considered as reasons for this to occur. <br><br></div>
</ul>
<div style="margin-left:50px;"><ol>
<li VALUE=1> The error was inserted in the encoded data from the beginning.</li>
<li VALUE=2> The data was not read correctly by an application, or the data was corrupted by some program.</li>
</ol></div>
<div style="margin-left:50px;"><br>To verify (1), try to play the same data on the development host PC. Use at3tool to decode the relevant data and check whether the error occurs. If an error occurs here, the problem is in the data itself. If this phenomenon occurs despite the fact that the relevant data had been created with at3tool, notify SCE since it may be caused by an at3tool bug.<br><br>Once (1) has been confirmed not to be the cause, then (2) should be considered. Verify that the intended data was read by simply reading the data (there is no defect in the media, etc.), that another thread did not perform a write that exceeded the buffer size, that the data has not been overwritten because of a cache incoherency when the data was DMA transferred, etc.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="Codec Identifier"></a>
<table width="100%"><td width="70%"><font size=6>Codec Identifier<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Codec specification identifier<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Identifier</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Audio Codec Type</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_AT3PLUS">SCE_ATRAC_AT3PLUS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x00001000&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC3plus&trade;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_AT3">SCE_ATRAC_AT3</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x00001001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC3&trade;&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This identifier is used for specifying the codec when calling <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetAtracID">sceAtracGetAtracID</a></b>() and so on.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetAtracID">sceAtracGetAtracID</a></b> ()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="Buffer State Identifier"></a>
<table width="100%"><td width="70%"><font size=6>Buffer State Identifier<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Buffer state identifier<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Identifier</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>State</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ALLDATA_IS_ON_MEMORY">SCE_ATRAC_ALLDATA_IS_ON_MEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;On-memory playback is currently being performed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_NONLOOP_STREAM_DATA_IS_ON_MEMORY">SCE_ATRAC_NONLOOP_STREAM_DATA_IS_ON_MEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;-2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Streaming playback is now being performed for data&nbsp;&nbsp;<br>&nbsp;&nbsp;with no loop information or data after the loop, and all&nbsp;&nbsp;<br>&nbsp;&nbsp;data has been loaded in the buffer.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_LOOP_STREAM_DATA_IS_ON_MEMORY">SCE_ATRAC_LOOP_STREAM_DATA_IS_ON_MEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;-3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data that contains a loop is being played, and the data&nbsp;&nbsp;<br>&nbsp;&nbsp;required for the number of loops that is currently&nbsp;&nbsp;<br>&nbsp;&nbsp;specified has been loaded in the buffer that is currently&nbsp;&nbsp;<br>&nbsp;&nbsp;being used.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the buffer information identifier that is set in <i>*piRemainframe</i> when <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() or <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetRemainFrame">sceAtracGetRemainFrame</a></b>() is called. If the buffer information identifier state is not satisfied, these variables are set with the number of remaining decode operations for the buffer.<br><br>When <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_ALLDATA_IS_ON_MEMORY">SCE_ATRAC_ALLDATA_IS_ON_MEMORY</a> is set, since on-memory playback is being performed, it is not necessary to add data to the buffer.<br><br>When <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_NONLOOP_STREAM_DATA_IS_ON_MEMORY">SCE_ATRAC_NONLOOP_STREAM_DATA_IS_ON_MEMORY</a> is set, since all data beginning with and after the position that is currently being decoded during streaming playback has been loaded in the buffer, it is not necessary to add data to the buffer.<br><br>When <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_LOOP_STREAM_DATA_IS_ON_MEMORY">SCE_ATRAC_LOOP_STREAM_DATA_IS_ON_MEMORY</a> is set, the data for the specified number of loops has been loaded in the buffer while streaming playback is being performed for data that includes the loop. Unless the loop count is changed, it is not necesssary to add data to the buffer that is currently being used.<br>Note that you can still add data to the buffer even if <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_LOOP_STREAM_DATA_IS_ON_MEMORY">SCE_ATRAC_LOOP_STREAM_DATA_IS_ON_MEMORY</a> is set. <br><br>[Note]<br>When a second buffer is used, care is required when <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_LOOP_STREAM_DATA_IS_ON_MEMORY">SCE_ATRAC_LOOP_STREAM_DATA_IS_ON_MEMORY</a> is set. <a href="../sound/libatrac3plus-Reference-English.htm#SCE_ATRAC_LOOP_STREAM_DATA_IS_ON_MEMORY">SCE_ATRAC_LOOP_STREAM_DATA_IS_ON_MEMORY</a> is an identifier indicating that data does not need to be added to the loop data buffer that is currently being used (first buffer). When the loop count is changed, and playback of the first buffer ends and the buffer to be used is switched to the second buffer, it may be necessary at times to add data to the second buffer.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b> ()<br><b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetRemainFrame">sceAtracGetRemainFrame</a></b> ()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Error codes returned by libatrac3plus<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_SUCCESS">SCE_ATRAC_SUCCESS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x00000000&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Processing was successful&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_PARAM_FAIL">SCE_ATRAC_ERROR_PARAM_FAIL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid input parameter&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_API_FAIL">SCE_ATRAC_ERROR_API_FAIL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An internal error &nbsp;&nbsp;<br>&nbsp;&nbsp;occurred (error occurred &nbsp;&nbsp;<br>&nbsp;&nbsp;when codec library was &nbsp;&nbsp;<br>&nbsp;&nbsp;called) &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_NO_ATRACID">SCE_ATRAC_ERROR_NO_ATRACID</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No available ATRAC&trade; ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_BAD_CODECTYPE">SCE_ATRAC_ERROR_BAD_CODECTYPE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The value of argument <i>uiCodecType</i> was invalid&nbsp;&nbsp;<br>&nbsp;&nbsp;when <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetAtracID">sceAtracGetAtracID</a></b>() was&nbsp;&nbsp;<br>&nbsp;&nbsp;executed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_BAD_ATRACID">SCE_ATRAC_ERROR_BAD_ATRACID</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ATRAC&trade; ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_UNKNOWN_FORMAT">SCE_ATRAC_ERROR_UNKNOWN_FORMAT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630006&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified data is not &nbsp;&nbsp;<br>&nbsp;&nbsp;ATRAC3&trade;/ATRAC3plus&trade; &nbsp;&nbsp;<br>&nbsp;&nbsp;data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_UNMATCH_FORMAT">SCE_ATRAC_ERROR_UNMATCH_FORMAT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630007&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified data did not &nbsp;&nbsp;<br>&nbsp;&nbsp;match <i>uiCodecType</i> when&nbsp;&nbsp;<br>&nbsp;&nbsp;<b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracGetAtracID">sceAtracGetAtracID</a></b>() was &nbsp;&nbsp;<br>&nbsp;&nbsp;executed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_BAD_DATA">SCE_ATRAC_ERROR_BAD_DATA</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630008&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;There was a problem with &nbsp;&nbsp;<br>&nbsp;&nbsp;the specified data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_ALLDATA_IS_ONMEMORY">SCE_ATRAC_ERROR_ALLDATA_IS_ONMEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630009&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;When <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracAddStreamData">sceAtracAddStreamData</a></b>() &nbsp;&nbsp;<br>&nbsp;&nbsp;was executed, an&nbsp;&nbsp;<br>&nbsp;&nbsp;attempt was made to add &nbsp;&nbsp;<br>&nbsp;&nbsp;data, even though all the&nbsp;&nbsp;<br>&nbsp;&nbsp;data was already in the &nbsp;&nbsp;<br>&nbsp;&nbsp;buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_UNSET_DATA">SCE_ATRAC_ERROR_UNSET_DATA</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No input buffer has been &nbsp;&nbsp;<br>&nbsp;&nbsp;set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_READSIZE_IS_TOO_SMALL">SCE_ATRAC_ERROR_READSIZE_IS_TOO_SMALL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630011&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The data size that was &nbsp;&nbsp;<br>&nbsp;&nbsp;entered is too small to be &nbsp;&nbsp;<br>&nbsp;&nbsp;decoded&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_NEED_SECOND_BUFFER">SCE_ATRAC_ERROR_NEED_SECOND_BUFFER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630012&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The second buffer is &nbsp;&nbsp;<br>&nbsp;&nbsp;required for special data, &nbsp;&nbsp;<br>&nbsp;&nbsp;but it has not been set.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_READSIZE_OVER_BUFFER">SCE_ATRAC_ERROR_READSIZE_OVER_BUFFER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630013&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified read size is &nbsp;&nbsp;<br>&nbsp;&nbsp;larger than the size of the&nbsp;&nbsp;<br>&nbsp;&nbsp;buffer prepared when &nbsp;&nbsp;<br>&nbsp;&nbsp;<b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBuffer">sceAtracSetHalfwayBuffer</a></b>() or &nbsp;&nbsp;<br>&nbsp;&nbsp;<b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetHalfwayBufferAndGetID">sceAtracSetHalfwayBufferAndGetID</a></b>() are&nbsp;&nbsp;<br>&nbsp;&nbsp;executed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_NOT_ALIGNED_ADDRESS">SCE_ATRAC_ERROR_NOT_ALIGNED_ADDRESS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630014&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alignment of output buffer &nbsp;&nbsp;<br>&nbsp;&nbsp;pointer (<i>psOutAddr</i>) was &nbsp;&nbsp;<br>&nbsp;&nbsp;not correct when &nbsp;&nbsp;<br>&nbsp;&nbsp;<b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() was &nbsp;&nbsp;<br>&nbsp;&nbsp;executed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_BAD_SAMPLE">SCE_ATRAC_ERROR_BAD_SAMPLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630015&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The value of <i>uiSample </i>that &nbsp;&nbsp;<br>&nbsp;&nbsp;you attempted to reset&nbsp;&nbsp;<br>&nbsp;&nbsp;is invalid.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_WRITEBYTE_FIRST_BUFFER">SCE_ATRAC_ERROR_WRITEBYTE_FIRST_BUFFER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630016&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;When <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracResetPlayPosition">sceAtracResetPlayPosition</a></b>() was executed,&nbsp;&nbsp;<br>&nbsp;&nbsp;the value of &nbsp;&nbsp;<br>&nbsp;&nbsp;<i>uiWriteByteFirstBuf </i>was &nbsp;&nbsp;<br>&nbsp;&nbsp;invalid.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_WRITEBYTE_SECOND_BUFFER">SCE_ATRAC_ERROR_WRITEBYTE_SECOND_BUFFER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630017&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;When <a href="../sound/libatrac3plus-Reference-English.htm#sceAtracResetPlayPosition">sceAtracResetPlayPosition</a>() was executed,&nbsp;&nbsp;<br>&nbsp;&nbsp;the value of &nbsp;&nbsp;<br>&nbsp;&nbsp;<i>uiWriteByteSecondBuf </i>was invalid.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_ADD_DATA_IS_TOO_BIG">SCE_ATRAC_ERROR_ADD_DATA_IS_TOO_BIG</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630018&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;When <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracAddStreamData">sceAtracAddStreamData</a></b>() &nbsp;&nbsp;<br>&nbsp;&nbsp;was executed,&nbsp;&nbsp;<br>&nbsp;&nbsp;the added data size &nbsp;&nbsp;<br>&nbsp;&nbsp;(<i>uiAddByte) </i>was invalid.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_NOT_MONO_DATA">SCE_ATRAC_ERROR_NOT_MONO_DATA</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630019&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The data that was input is &nbsp;&nbsp;<br>&nbsp;&nbsp;not monaural data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_UNSET_PARAM">SCE_ATRAC_ERROR_UNSET_PARAM</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630021&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;When <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracSetLoopNum">sceAtracSetLoopNum</a></b>() &nbsp;&nbsp;<br>&nbsp;&nbsp;was executed, the&nbsp;&nbsp;<br>&nbsp;&nbsp;value could not be changed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_NONEED_SECOND_BUFFER">SCE_ATRAC_ERROR_NONEED_SECOND_BUFFER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The second buffer was not &nbsp;&nbsp;<br>&nbsp;&nbsp;needed to play the &nbsp;&nbsp;<br>&nbsp;&nbsp;ATRAC3&trade;/ATRAC3plus&trade; &nbsp;&nbsp;<br>&nbsp;&nbsp;data that has been set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_NODATA_IN_BUFFER">SCE_ATRAC_ERROR_NODATA_IN_BUFFER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630023&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;When <b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracDecodeData">sceAtracDecodeData</a></b>() was &nbsp;&nbsp;<br>&nbsp;&nbsp;executed, decoding could &nbsp;&nbsp;<br>&nbsp;&nbsp;not be performed because &nbsp;&nbsp;<br>&nbsp;&nbsp;there was no data in the &nbsp;&nbsp;<br>&nbsp;&nbsp;buffer data in the buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_ALLDATA_WAS_DECODED">SCE_ATRAC_ERROR_ALLDATA_WAS_DECODED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630024&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;All the data has been &nbsp;&nbsp;<br>&nbsp;&nbsp;decoded&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_LOWLEVEL_INIT_ID">SCE_ATRAC_ERROR_LOWLEVEL_INIT_ID</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630031&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC&trade; ID was &nbsp;&nbsp;<br>&nbsp;&nbsp;initialized with &nbsp;&nbsp;<br>&nbsp;&nbsp;<b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>()&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_NOT_LOWLEVEL_INIT_ID">SCE_ATRAC_ERROR_NOT_LOWLEVEL_INIT_ID</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630032&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATRAC&trade; ID was not &nbsp;&nbsp;<br>&nbsp;&nbsp;initialized with &nbsp;&nbsp;<br>&nbsp;&nbsp;<b><a href="../sound/libatrac3plus-Reference-English.htm#sceAtracLowLevelInitDecoder">sceAtracLowLevelInitDecoder</a></b>()&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_USED_BY_SAS">SCE_ATRAC_ERROR_USED_BY_SAS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80630040&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An ATRAC&trade; ID used &nbsp;&nbsp;<br>&nbsp;&nbsp;exclusively for SAS cannot &nbsp;&nbsp;<br>&nbsp;&nbsp;be used&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_AA3_UNKNOWN_FORMAT">SCE_ATRAC_ERROR_AA3_UNKNOWN_FORMAT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80631001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unknown data format&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_AA3_VERSION_MISMATCH">SCE_ATRAC_ERROR_AA3_VERSION_MISMATCH</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80631002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Incorrect file version&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_AA3_ILLEGAL_SYNTAX">SCE_ATRAC_ERROR_AA3_ILLEGAL_SYNTAX</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80631003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid syntax&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_AA3_BUFFER_SHORTAGE">SCE_ATRAC_ERROR_AA3_BUFFER_SHORTAGE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80631004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data required for playback &nbsp;&nbsp;<br>&nbsp;&nbsp;not found in input buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ATRAC_ERROR_AA3_UNSUPPORTED">SCE_ATRAC_ERROR_AA3_UNSUPPORTED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80631005&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unsupported data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
