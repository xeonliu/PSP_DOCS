<html lang="en">
<head>
<title>libaac-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libaac Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceAacInitArg"></a>
<table width="100%"><td width="70%"><font size=6>SceAacInitArg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Decoding resource initialization variables<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
typedef struct {
	SceOff <i>aacHeadPos</i>;
	SceOff <i>aacTailPos</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*aacBuf</i>;
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>aacBufByte</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>*pcmBuf</i>;
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>pcmBufByte</i>;
<i>	</i><a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>fs</i>;
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>reserved;</i>
} <b>SceAacInitArg</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aacHeadPos</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting position of first audio data of AAC file&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aacTailPos</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ending position of last audio data of AAC file&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aacBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer starting address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aacBufByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input buffer byte count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pcmBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output buffer starting address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pcmBufByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Output buffer byte count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fs</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sampling frequency (Hz)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reserved</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reserved area&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used for AAC handle initialization. It is used as an argument of <a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>(). It consists of the addresses and sizes of the input/output buffers, file information for loop playback, and the sampling frequency for decoder initialization.<br>For <i>aacHeadPos</i>, specify the starting position of the first audio data excluding the header. For <i>aacTailPos</i>, specify the ending position of the audio data, which is the end of the file. <br>The input and output buffers must be <b>64-byte aligned</b>. Also, the required input and output buffer sizes are as follows.<br><br></div>
</ul>
<div style="margin-left:60px;"><ul>
<li> Input (AAC) buffer size<br>At least 8192 bytes and a multiple of 64 bytes
<li> Output (PCM) buffer size<br>8192 bytes (1024 samples x 2 bytes x 2 channels x 2 buffers)
</ul></div>
<div style="margin-left:50px;"><br>For <i>fs</i>, specify the sampling frequency in Hz. Always set <i>reserved</i> to 0.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacGetMaxOutputSample">sceAacGetMaxOutputSample</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacInitResource"></a>
<table width="100%"><td width="70%"><font size=6>sceAacInitResource<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Allocate libaac computational resources<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacInitResource</b>(
	const <a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>num</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of decoding resources required simultaneously&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal termination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function allocates computational resources required for libaac. This function must be executed first before the functions of libaac can be used. <br>Multiple sets of AAC stream data can be decoded in parallel according to the computational resources allocated by this function. The computational resources required for an individual instance of decoding in libaac are referred to as <b>decoding resources</b>. Specify the number of decoding resources that can be used simultaneously for <i>num</i>. Since there is a one-to-one correspondence between a set of decoding resources and an AAC handle, the number of decoding resources must match the number of AAC handles.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Allocate two sets of computational resources required for libaac */
sceAacInitResource (2);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacTermResource">sceAacTermResource</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacTermResource"></a>
<table width="100%"><td width="70%"><font size=6>sceAacTermResource<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Release libaac computational resources<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacTermResource</b>(
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal termination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function releases all computational resources that were allocated for libaac. Before calling this function, you must return all handles that were obtained.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Release all computational resources that were allocated for libaac */
status = sceAacTermResource ();

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInitResource">sceAacInitResource</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacInit"></a>
<table width="100%"><td width="70%"><font size=6>sceAacInit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize decoding resources and get handle<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacInit</b> (
	const <a href="../sound/libaac-Reference-English.htm#SceAacInitArg">SceAacInitArg</a> <i>*aacInitArg</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aacInitArg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to decoding resource initialization variable&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal termination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs initialization based on the specified decoding resource initialization variable and returns a handle. AAC data must be read in advance into the input buffer that is specified by the member variables of <i>aacInitArg</i> and raw_data_frame() must be at the beginning according to the AAC standard.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Initialize decoding resources */
status = sceAacInit(&amp;initarg);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacExit">sceAacExit</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacExit"></a>
<table width="100%"><td width="70%"><font size=6>sceAacExit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Release decoding handle<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacExit</b> (
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>handle</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AAC handle for managing decoding resources&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal termination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns an existing handle to the system.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Release decoding resources */
status = sceAacExit(handle);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacDecode"></a>
<table width="100%"><td width="70%"><font size=6>sceAacDecode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Decode AAC data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacDecode</b>(
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>handle</i>,
	<a href="../kernel/Types-Reference-English.htm#SceShort16">SceShort16</a> <i>**pcmSrcPtr</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AAC handle for managing decoding resources&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pcmSrcPtr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to the output destination address where the decoding result will be written&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Nonnegative (&gt;= 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes that can be read from <i>*pcmSrcPtr</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function decodes one frame of the AAC data that was read into the input buffer, generates linear PCM data, and writes the data to the output buffer. The output PCM data format is stereo with a bit depth of 16 bits, regardless of the input AAC data format. The PCM data is alternately output to the left and right channels in an interleaved format of left, right, left, ... ... with the address pointed to by <i>pcmSrcPtr</i> as the starting address. The size of the PCM data that is output can be obtained according to the return value. The PCM data that is output is valid only until the next time sceAacDecode() is executed. <br>Performing decoding consumes the AAC data in the input buffer. Be sure to always execute <a href="../sound/libaac-Reference-English.htm#sceAacCheckStreamDataNeeded">sceAacCheckStreamDataNeeded</a>() before performing decoding and add AAC data as needed. AAC data can be read synchronously or asynchronously. If AAC data is added too slowly and less than one frame of AAC data remains in the input buffer, sceAacDecode() will output silent PCM data for the first decoding call.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>The following example sends decoded PCM data to audio output via vaudio.

/* Decode AAC data */
out_bytes = sceAacDecode(handle, &amp;pcmSrcPtr);
/* Deliver PCM data to vaudio */
<a href="../sound/Vaudio-Reference-English.htm#sceVaudioOutputBlocking">sceVaudioOutputBlocking</a>(vol, pcmSrcPtr);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Before executing this function, call <a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>() to initialize decoding resources and obtain a handle.<br>To output data with a sampling frequency other than 44100Hz, use <a href="../sound/Vaudio-Reference-English.htm#sceVaudioChReserve">sceVaudioChReserve</a>() to first specify the sampling frequency and number of PCM samples for vaudio.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacCheckStreamDataNeeded">sceAacCheckStreamDataNeeded</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacGetInfoToAddStreamData">sceAacGetInfoToAddStreamData</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacNotifyAddStreamData">sceAacNotifyAddStreamData</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacCheckStreamDataNeeded"></a>
<table width="100%"><td width="70%"><font size=6>sceAacCheckStreamDataNeeded<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Check if more AAC data needs to be added to the input buffer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacCheckStreamDataNeeded</b>(
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>handle</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AAC handle for managing decoding resources&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;More AAC data needs to be added to the input buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;More AAC data does not need to be added to the input buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function checks to see if more AAC data needs to be added to the input buffer. Specifically, if the size of undecoded AAC data is less than half of the input buffer size, it is considered necessary to add AAC data to the input buffer. Before performing decoding, always execute this function to check if more AAC data needs to be read from the AAC input file.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Check if more AAC data needs to be added to the input buffer */
if (sceAacCheckStreamDataNeeded(handle) &gt; 0) {
         /* Read AAC data into the input buffer */
         <a href="../sound/libaac-Reference-English.htm#sceAacGetInfoToAddStreamData">sceAacGetInfoToAddStreamData</a>(handle, &amp;aacDstPtr, &amp;writableByte, &amp;aacSrcPos);
         sceIoLseek(fd, aacSrcPos, SCE_SEEK_SET);
         addByte = sceIoRead(fd, aacDstPtr, writableByte);
         /* Report AAC data size that was read in to libaac */
         <a href="../sound/libaac-Reference-English.htm#sceAacNotifyAddStreamData">sceAacNotifyAddStreamData</a>(handle, addByte);
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For the argument of this function, specify the AAC handle that was previously obtained from <a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacDecode">sceAacDecode</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacGetInfoToAddStreamData">sceAacGetInfoToAddStreamData</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacNotifyAddStreamData">sceAacNotifyAddStreamData</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacGetInfoToAddStreamData"></a>
<table width="100%"><td width="70%"><font size=6>sceAacGetInfoToAddStreamData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get information for adding AAC data to input buffer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacGetInfoToAddStreamData </b>(
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>handle</i>,
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a><i> **aacDstPtr</i>,
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a><i> *writableByte</i>,
	<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a><i> *aacSrcPos</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AAC handle for managing decoding resources&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aacDstPtr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to destination address for writing additional AAC data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>writableByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to number of writable bytes from<i>*aacDstPtr</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aacSrcPos</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to read seek position in AAC file&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal termination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets information for adding AAC data to the input buffer. After this function is executed, the write destination address of the additional AAC data <i>**aacDestPtr</i>, the data size <i>*writableByte</i>, and the read seek position in the AAC file <i>*aacSrcPos</i> can be obtained through the arguments. After this information is obtained, add AAC data to the input buffer using the following procedure.<br>First, move the file descriptor by <i>*aacSrcPos</i> from the beginning of the AAC file. Then, use this file descriptor to read <i>*writableByte</i> bytes of AAC data to the add destination address <i>**aacDstPtr</i>. Reading can also be done asynchronously.<br>After the additional AAC data has been read from the AAC file and written to the input buffer, call <a href="../sound/libaac-Reference-English.htm#sceAacNotifyAddStreamData">sceAacNotifyAddStreamData</a>() to report the addition of AAC data to libaac. For details, see the section describing <a href="../sound/libaac-Reference-English.htm#sceAacNotifyAddStreamData">sceAacNotifyAddStreamData</a>(). <br>Note that when all AAC data has been read from the AAC file into the input buffer or if there is no need to read additional AAC data into the input buffer, NULL is returned in <i>**aacDstPtr</i> and 0 is returned in <i>*writableByte</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Check if more AAC data needs to be added to the input buffer */
if (<a href="../sound/libaac-Reference-English.htm#sceAacCheckStreamDataNeeded">sceAacCheckStreamDataNeeded</a>(handle) &gt; 0) {
         /* Read AAC data into the input buffer */
         sceAacGetInfoToAddStreamData(handle, &amp;aacDstPtr, &amp;writableByte, &amp;aacSrcPos);
         sceIoLseek(fd, aacSrcPos, SCE_SEEK_SET);
         addByte = sceIoRead(fd, aacDstPtr, writableByte);
         /* Report AAC data size that was read in to libaac */
         <a href="../sound/libaac-Reference-English.htm#sceAacNotifyAddStreamData">sceAacNotifyAddStreamData</a>(handle, addByte);
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For the argument of this function, specify the AAC handle that was previously obtained from <a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacDecode">sceAacDecode</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacCheckStreamDataNeeded">sceAacCheckStreamDataNeeded</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacNotifyAddStreamData">sceAacNotifyAddStreamData</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacNotifyAddStreamData"></a>
<table width="100%"><td width="70%"><font size=6>sceAacNotifyAddStreamData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Report added AAC data size to libaac<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacNotifyAddStreamData</b>(
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>handle</i>,
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>addByte</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AAC handle for managing decoding resources&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>addByte</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes of AAC data that were added to the input buffer&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal termination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function reports the size (<i>addByte</i>) of AAC data that was actually added to the input buffer to libaac. Always execute this function after AAC data is added to the input buffer.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Check if more AAC data needs to be added to the input buffer */
if (<a href="../sound/libaac-Reference-English.htm#sceAacCheckStreamDataNeeded">sceAacCheckStreamDataNeeded</a>(handle) &gt; 0) {
         /* Read AAC data into the input buffer */
         <a href="../sound/libaac-Reference-English.htm#sceAacGetInfoToAddStreamData">sceAacGetInfoToAddStreamData</a>(handle, &amp;aacDstPtr, &amp;writableByte, &amp;aacSrcPos);
         sceIoLseek(fd, aacSrcPos, SCE_SEEK_SET);
         addByte = sceIoRead(fd, aacDstPtr, writableByte);
         /* Report AAC data size that was read in to libaac */
         sceAacNotifyAddStreamData(handle, addByte);
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For the argument of this function, specify the AAC handle that was previously obtained from <a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacCheckStreamDataNeeded">sceAacCheckStreamDataNeeded</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacGetInfoToAddStreamData">sceAacGetInfoToAddStreamData</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacResetPlayPosition"></a>
<table width="100%"><td width="70%"><font size=6>sceAacResetPlayPosition<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reset playback position<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacResetPlayPosition</b>(
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>handle</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AAC handle for managing decoding resources&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal termination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function resets the playback position to the beginning of the AAC file. If playback is stopped because the loop playback count became exhausted, calling this function will restart playback. The value of the "loop playback count" that was previously set is not changed by executing this function. Also, the value of the "total number of decoded output samples," which can be obtained from <a href="../sound/libaac-Reference-English.htm#sceAacGetSumDecodedSample">sceAacGetSumDecodedSample</a>(), will be reset to 0.<br>You do not need to explicitly call this function when performing loop playback. <br>When <a href="../sound/libaac-Reference-English.htm#sceAacSetLoopNum">sceAacSetLoopNum</a>() is called with a nonzero number specified for the loop playback count, the output of <a href="../sound/libaac-Reference-English.htm#sceAacGetInfoToAddStreamData">sceAacGetInfoToAddStreamData</a>() will be changed after the last data has been decoded from the AAC file so that playback will start from the beginning of the file.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Reset playback position to the beginning of the AAC file */
status = sceAacResetPlayPosition(handle);
/* Check if more AAC data needs to be added to the input buffer */
if (<a href="../sound/libaac-Reference-English.htm#sceAacCheckStreamDataNeeded">sceAacCheckStreamDataNeeded</a>(handle) &gt; 0) {
         /* Read AAC data into the input buffer */
         <a href="../sound/libaac-Reference-English.htm#sceAacGetInfoToAddStreamData">sceAacGetInfoToAddStreamData</a>(handle, &amp;aacDstPtr, &amp;writableByte, &amp;aacSrcPos);
         sceIoLseek(fd, aacSrcPos, SCE_SEEK_SET);
         addByte = sceIoRead(fd, aacDstPtr, writableByte);
         /* Report AAC data size that was read in to libaac */
         <a href="../sound/libaac-Reference-English.htm#sceAacNotifyAddStreamData">sceAacNotifyAddStreamData</a>(handle, addByte);
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For the argument of this function, specify the AAC handle that was previously obtained from <a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacCheckStreamDataNeeded">sceAacCheckStreamDataNeeded</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacGetSumDecodedSample">sceAacGetSumDecodedSample</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacSetLoopNum"></a>
<table width="100%"><td width="70%"><font size=6>sceAacSetLoopNum<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set remaining loop playback count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacSetLoopNum</b> (
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>handle,</i>
<i>	</i>const<i> </i><a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a><i> loopNum</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AAC handle for managing decoding resources&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>loopNum</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Remaining loop playback count&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal termination&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the remaining loop playback count. The loop playback count is managed independently for each AAC handle. The default loop playback count is "infinite."<br>The following table shows the correspondence between the specified value of the <i>loopNum</i> argument and the actual meaning of the loop playback count.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Positive (&gt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Loop<i> loopNum</i> times&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Do not loop&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Loop an infinite number of times&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">When this function is called with a positive number specified for the loop playback count, the output of <a href="../sound/libaac-Reference-English.htm#sceAacGetInfoToAddStreamData">sceAacGetInfoToAddStreamData</a>() will be changed after the last data has been decoded from the AAC file so that playback will start from the beginning of the file.<br>Also, the loop starting position and ending positions are defined to be the boundaries between the AAC file start and end tags and the AAC data. Other positions cannot be set for the start and end of loop playback.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Set the loop playback count to 10 */
status = sceAacSetLoopNum(handle, 10);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For the argument of this function, specify the AAC handle that was previously obtained from <a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>().<br>Although an infinite loop can be implemented by setting an arbitrary negative number for <i>loopNum</i>, libaac provides the negative number macro <a href="../sound/libaac-Reference-English.htm#SCE_AAC_LOOP_INFINITY">SCE_AAC_LOOP_INFINITY</a>. Use this macro to set the loop playback count to infinity.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacGetLoopNum">sceAacGetLoopNum</a>()<br><a href="../sound/libaac-Reference-English.htm#Loop Playback Count Identifier">Loop Playback Count Identifier</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacGetMaxOutputSample"></a>
<table width="100%"><td width="70%"><font size=6>sceAacGetMaxOutputSample<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get maximum number of decoded output samples<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacGetMaxOutputSample</b>(
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>handle</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AAC handle for managing decoding resources&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Nonnegative (&gt;= 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum number of output samples in a single decoding&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the maximum number of samples per channel that are output when <a href="../sound/libaac-Reference-English.htm#sceAacDecode">sceAacDecode</a>() is executed once.<br>The number of output samples for MPEG4 AAC-LC data is defined to be 1024. Also, libaac handles the output buffer as a double buffer. Therefore, the output buffer size required for libaac can be calculated by multiplying the value obtained by this function by 8 (2 bytes x 2 channels x 2 buffers). See also the section describing <a href="../sound/libaac-Reference-English.htm#SceAacInitArg">SceAacInitArg</a>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get the maximum number of output samples required for libaac */
maxOutputSample = sceAacGetMaxOutputSample(handle);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Before executing this function, use <a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>() to initialize decoding resources and obtain a handle.<br>Note that the same value is always returned for the same AAC file format.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#SceAacInitArg">SceAacInitArg</a><br><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacGetSumDecodedSample"></a>
<table width="100%"><td width="70%"><font size=6>sceAacGetSumDecodedSample<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get total number of decoded output samples<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacGetSumDecodedSample</b>(
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>handle</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AAC handle for managing decoding resources&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Nonnegative (&gt;= 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Total number of decoded output samples&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Negative (&lt; 0)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the total number of decoded output samples at the time this function is executed. The count of the number of samples begins at 0. Also, the total number of decoded output samples is reset to 0 when the AAC data at the beginning of the file is played again because <a href="../sound/libaac-Reference-English.htm#sceAacResetPlayPosition">sceAacResetPlayPosition</a>() was executed or due to loop playback.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get the total number of decoded output samples */
sumDecodedSample = sceAacGetSumDecodedSample(handle);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For the argument of this function, specify the AAC handle that was previously obtained from <a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>().<br>The value obtained by this function is the total number of decoded output samples, not the sample position that is being played. If you want to determine the playback position precisely, you must take into consideration the number of output samples sent to the audio driver.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacResetPlayPosition">sceAacResetPlayPosition</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAacGetLoopNum"></a>
<table width="100%"><td width="70%"><font size=6>sceAacGetLoopNum<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get remaining loop count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libaac.h&gt;
<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <b>sceAacGetLoopNum</b> (
	const <a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a> <i>handle</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;AAC handle for managing decoding resources&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Greater than or equal to -1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Remaining loop playback count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Less than -1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">For a list of return values when errors occur, see the "<a href="../sound/libaac-Reference-English.htm#List of Error Codes">List of Error Codes</a>" at the end of this document.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the remaining loop playback count. For the correspondence between the value that is obtained and the meaning of the loop playback count, see the section describing <a href="../sound/libaac-Reference-English.htm#sceAacSetLoopNum">sceAacSetLoopNum</a>(). However, if the remaining loop playback count is set to infinity, the negative number macro <a href="../sound/libaac-Reference-English.htm#SCE_AAC_LOOP_INFINITY">SCE_AAC_LOOP_INFINITY</a> is always returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Get the remaining loop playback count */
loopNum = sceAacGetLoopNum(handle);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For the argument of this function, specify the AAC handle that was previously obtained from <a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacInit">sceAacInit</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacSetLoopNum">sceAacSetLoopNum</a>()<br><a href="../sound/libaac-Reference-English.htm#Loop Playback Count Identifier">Loop Playback Count Identifier</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="Loop Playback Count Identifier"></a>
<table width="100%"><td width="70%"><font size=6>Loop Playback Count Identifier<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Loop playback count identifier<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Identifier</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>State</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_LOOP_INFINITY">SCE_AAC_LOOP_INFINITY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Loop playback count is infinity&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a constant for representing the loop playback count as infinity. It can be used for the <i>loopNum</i> argument of <a href="../sound/libaac-Reference-English.htm#sceAacSetLoopNum">sceAacSetLoopNum</a>() and it is also returned by <a href="../sound/libaac-Reference-English.htm#sceAacGetLoopNum">sceAacGetLoopNum</a>(). Note that even if the loop playback count is set to infinity by passing an arbitrary negative number in the <i>loopNum</i> argument of <a href="../sound/libaac-Reference-English.htm#sceAacSetLoopNum">sceAacSetLoopNum</a>(), the value <a href="../sound/libaac-Reference-English.htm#SCE_AAC_LOOP_INFINITY">SCE_AAC_LOOP_INFINITY</a> is always returned by <a href="../sound/libaac-Reference-English.htm#sceAacGetLoopNum">sceAacGetLoopNum</a>(). It is not absolutely necessary to use this macro, however, it is recommended to increase program code legibility.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/libaac-Reference-English.htm#sceAacSetLoopNum">sceAacSetLoopNum</a>()<br><a href="../sound/libaac-Reference-English.htm#sceAacGetLoopNum">sceAacGetLoopNum</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Error codes returned by libaac<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_SUCCESS">SCE_AAC_SUCCESS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x00000000&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Processing was successful&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_ARG_AACHANDLE_INVALID">SCE_AAC_ERROR_ARG_AACHANDLE_INVALID</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified AAC handle is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_ARG_PTR_INVALID">SCE_AAC_ERROR_ARG_PTR_INVALID</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified address is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_ARG_OUTOFRANGE">SCE_AAC_ERROR_ARG_OUTOFRANGE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified value is out of range&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_RSRC_RESERVED">SCE_AAC_ERROR_RSRC_RESERVED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691101&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The decoding resource has already been obtained&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_RSRC_NOT_RESERVED">SCE_AAC_ERROR_RSRC_NOT_RESERVED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691102&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The decoding resource was not obtained&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_RSRC_NOT_INITIALIZED">SCE_AAC_ERROR_RSRC_NOT_INITIALIZED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691103&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The decoding resource has not been initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_NO_MORE_AACHANDLE">SCE_AAC_ERROR_NO_MORE_AACHANDLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691201&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No more AAC handles can be obtained&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_DECODE">SCE_AAC_ERROR_DECODE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Decoding cannot be performed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_OUT_OF_MEMORY">SCE_AAC_ERROR_OUT_OF_MEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691501&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_MEMORY_IN_USE">SCE_AAC_ERROR_MEMORY_IN_USE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691502&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory in use&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_NOT_INITIALIZED">SCE_AAC_ERROR_NOT_INITIALIZED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691503&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library has not been initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_AAC_ERROR_ALREADY_INITIALIZED">SCE_AAC_ERROR_ALREADY_INITIALIZED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80691504&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library has already been initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2008 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
