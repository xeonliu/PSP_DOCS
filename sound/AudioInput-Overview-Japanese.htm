<html lang="jp">
<head>
<title>AudioInput-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
オーディオ入力概要
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>概要</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>サウンドハードウェア</b><br>
</a>
</h3>
<div style="margin-left:50px;">PSP&reg;は、標準でADCに接続されたモノラルオーディオ入力が搭載されています。このオーディオ入力機能により、ヘッドホンリモコン端子に接続されたヘッドセットのマイクもしくは内蔵マイクから音声を入力することができます。オーディオ入力機能は、オーディオドライバにより制御されています。<br>※内蔵マイクはPSP-300xシリーズより搭載されています。<br><br></div>

<div align=center>
<p>
<img src="gif/AudioInput-Overview-Japanese001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 1 サウンドハードウェア(入力部分)のブロック図</b><br>
</div>
<br>
<div style="margin-left:50px;"><br>ヘッドセットは、必ずリモコン端子に接続してください。<br>※本体のヘッドホン端子に接続した場合、音声入力はできません。<br></div>

<div align=center>
<p>
<img src="gif/AudioInput-Overview-Japanese002.jpg">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 2 ヘッドセットの接続</b><br>
</div>
<br>

<!-- sce_title -->
<a Name ="HeadingT_1_1_1">
<div style="margin-left:40px;"><h4><b>内蔵マイクについて</b><br><br></h4></div></a>

<div style="margin-left:67px;">内蔵マイクを搭載したPSP&reg;で内蔵マイクから音声入力するために特別な対応は必要ありません。内蔵マイクとヘッドセットの切り替えはオーディオドライバにより自動で切り替えられますので、音声入力はヘッドセットからの入力処理のみを行ってください。<br>音声入力デバイスが切り替わるときには一旦音が途切れますが、音声入力の設定パラメータはそのまま引き継がれ音声入力が継続されます。<br>リモコン端子にヘッドセットを挿すと内蔵マイクより優先してヘッドセットから音声入力を行います。内蔵マイクを利用するにはヘッドセットを抜きます。<br>また、ヘッドセットと内蔵マイクの両方から同時に音声入力することはできません。<br>内蔵マイクを搭載したPSP&reg;では、関数<b><a href="../peripheral/HeadphoneRemote-Reference-Japanese.htm#sceHprmIsMicrophoneExist">sceHprmIsMicrophoneExist</a></b>()は常に1を返します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>オーディオ入力までの流れ</b><br>
</a>
</h3>
<div style="margin-left:50px;">PSP&reg;におけるオーディオ入力までの流れは、以下の図のようになります。<br><br></div>

<div align=center>
<p>
<img src="gif/AudioInput-Overview-Japanese003.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 3 オーディオ入力までの流れ</b><br>
</div>
<br>
<div style="margin-left:50px;">PSP&reg;用ゲームタイトルは、オーディオドライバを利用してオーディオ入力を行います。<br>オーディオドライバは、サウンドハードウェアにアクセスを行いオーディオ入力を実現します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_3">
<h3>
<a href="#Heading3_1"> 1. </a>3 
<!-- hp1 --><b>関連ファイル</b><br>
</a>
</h3>
<div style="margin-left:50px;">オーディオ入力ライブラリを使用するために必要なファイルは、以下のとおりです。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>カテゴリ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ヘッダファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;audioinput.h&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;stubファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;audio_stub_02.a&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_1_4">
<h3>
<a href="#Heading3_1"> 1. </a>4 
<!-- hp1 --><b>実装方法</b><br>
</a>
</h3>
<div style="margin-left:50px;">基本的な処理の流れは単純で、以下の流れになります。<br></div>
<div style="margin-left:80px;">パラメータ設定と初期化&rarr; オーディオ入力&rarr; 終了<br></div>
<div style="margin-left:50px;">簡単なオーディオ入力サンプルを以下に示します。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>/*
処理の概要
５秒ぶんのバッファ recbuf[] にオーディオ入力結果を書き込むサンプルコードです。
入力データは 44100KHz, 16bit モノラル です。
*/
#include &lt;kernel.h&gt;
#include &lt;stdio.h&gt;		/*E for printf */
#include &lt;audioinput.h&gt;	/*E for <a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInput">sceAudioInput</a>… */

#define SEC 5		/*E 5sec */
#define INPUTFS 44100	/*E 1 sec SampleSize */
#define BUFLEN (((INPUTFS * SEC)/64)*64)	/*J 秒指定の sample size ただし64の倍数 */

int main(void)
{
	int ret=0;
	/*J オーディオ入力用バッファ */
	static short recbuf[BUFLEN] __attribute__((aligned(64)));

	/*J パラメータ値の準備 */
	<a href="../sound/AudioInput-Reference-Japanese.htm#SceAudioInputParam">SceAudioInputParam</a> param;
	param.alc = -12;	/*E ALC=ON TargetLevel=-12[dB]
	param.gain = 30;	/*J 最大ゲイン = +30[dB] */
	param.noiz = -60;	/*J ノイズゲートスレッショルド= -60[dB]
	param.hold = 0;		/*E   0[ms] */
	param.decay = 3;	/*E 192[ms] */
	param.attack = 2;	/*E  24[ms] */

	/*J パラメータ設定と初期化 */
	<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInitEx">sceAudioInputInitEx</a>(&amp;param);

	/*J オーディオ入力開始
	指定する入力サイズ（サンプル数）は64の倍数である必要があります */
	ret = <a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputBlocking">sceAudioInputBlocking</a>(BUFLEN, INPUTFS, recbuf);
	if(ret &lt; 0){
		printf("Error: <a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputBlocking">sceAudioInputBlocking</a> [%08xh]\n",ret);
		return ret;
	}

	/*J オーディオ入力終了
	第３引数に NULL を指定することで終了の指示とします */
	<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputBlocking">sceAudioInputBlocking</a>(BUFLEN, INPUTFS, NULL);

	return 0;
}
</font></pre></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>オーディオ入力</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>オーディオドライバの概要</b><br>
</a>
</h3>
<div style="margin-left:50px;">外部のオーディオ（モノラル）をPCM波形データとして取り込むためのライブラリです。<br>マイクなどを接続して音声入力を行います。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>オーディオドライバの主な機能</b><br>
</a>
</h3>
<div style="margin-left:40px;"><ul>
<li> 取得できるデータ形式は、16bit PCM モノラル サンプリング周波数は44.1[KHz], 22.05[KHz], 11.025[KHz]のいずれかです。
<li> 入力ゲインのマニュアル調整可能。
<li> 入力ゲインのオートレベルコントロール（ALC）可能。
<li> ALC時のノイズゲート機能搭載。
<li> ALC動作時のゲイン変化時間の設定が可能。
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_2_3">
<h3>
<a href="#Heading3_2"> 2. </a>3 
<!-- hp1 --><b>ALCの概要</b><br>
</a>
</h3>
<div style="margin-left:50px;">ALCとは、Auto Level Controlの略で音量が小さ過ぎたり大きすぎる場合に入力レベルを一定に保つよう自動調整するための機能です。指定したレベル（目標レベル）より入力レベルが大きかった場合や小さかった場合にレベルを自動調整します。<br></div>

<div align=center>
<p>
<img src="gif/AudioInput-Overview-Japanese004.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 4 目標レベルに対するALCの動作</b><br>
</div>
<br>
<div style="margin-left:50px;">APIで設定できる値は、目標レベル、最大ゲインです。<br>最大ゲインの値によっては、目標レベルまで調整できない場合があります。<br>ALC機能は、OFFすることも可能です。ALC=OFFの場合は、入力ゲインの設定のみ可能です。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_3_2">
<div style="margin-left:40px;"><h4><b>ゲイン変化時間の設定</b><br><br></h4></div></a>

<div style="margin-left:67px;">ALCによりゲインの変化の他にも、変化時間の設定が出来ます。<br>Hold Timeでは、入力レベルがTargetLevelより低く検出された時からゲイン調整が始まるまでの時間を設定することができます。ホールド時間は、0〜約43.7[sec]まで設定できます。<br>Decay Timeは、ゲインを<b>上げる</b>場合、変化終了レベルの90％まで変化するまでの時間を設定できます。Decay Timeは、24[ms]〜約24.58[sec]まで設定できます。<br>Attack Timeは、ゲインを<b>下げる</b>場合、変化終了レベルの90％まで変化するまでの時間を設定できます。Attack Timeは、6[ms]〜約6.14[sec]まで設定できます。<br><br></div>
<div style="margin-left:50px;"></div>

<div align=center>
<p>
<img src="gif/AudioInput-Overview-Japanese005.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 5 ALCの時間変化</b><br>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_2_4">
<h3>
<a href="#Heading3_2"> 2. </a>4 
<!-- hp1 --><b>ノイズゲート</b><br>
</a>
</h3>
<div style="margin-left:50px;">ALC機能を利用しているときにノイズゲート機能を利用することができます。<br>ノイズゲートとはある一定レベル以下の入力に対しては、ALCによるゲイン調整を行わないようにする機能です。これにより無音中のヒスノイズがALCによりゲインアップされないようにします。<br>※ALC=ON中でも、ノイズゲートをOFFできます。<br>※ALC=OFFでは、ノイズゲート機能は利用できません。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>注意事項</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>リモコンおよびマイク端子の抜き挿しについて</b><br>
</a>
</h3>
<div style="margin-left:50px;">音声入力の最中にリモコンやマイクの端子を抜いた場合、ライブラリからエラーは返りません。リモコンやマイクの端子が抜かれた場合は、無音の入力が継続されます。<br>内蔵マイクに切り替わる場合は一旦音が途切れますが音声入力は継続されます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>入力レベルが安定するまでの時間について</b><br>
</a>
</h3>
<div style="margin-left:50px;">関数<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInput">sceAudioInput</a>()や<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputBlocking">sceAudioInputBlocking</a>()により、入力を開始した直後より約１秒間は、音声の入力レベルが安定しません。これはレベルコントローラ等の影響によるものです。この期間の音声を取得しないようにするためには、不安定期間を回避する方法しかありません。音声入力データを必要とする以前より、入力を開始しておくことで対応することが可能です。サンプルプログラムsample/sound/rec_play/sampleでは、プログラム開始時より入力処理を開始しておくことにより、この症状を回避しています。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_3">
<h3>
<a href="#Heading3_3"> 3. </a>3 
<!-- hp1 --><b>内蔵マイク利用時の再生音声について</b><br>
</a>
</h3>
<div style="margin-left:50px;">入力した音声をそのままもしくは音声処理などをした後、スピーカーより音声出力した場合、ハウリングの原因になります。ヘッドセットではハウリングが発生するような状況にはなりにくいですが、内蔵マイクで音声入力する場合はハウリングが発生しやすくなります。音声入力した結果をすぐ音声再生する状況にならないよう注意してください。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2008 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
