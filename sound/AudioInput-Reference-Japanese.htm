<html lang="jp">
<head>
<title>AudioInput-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
Audio Input
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceAudioInputParam"></a>
<table width="100%"><td width="70%"><font size=6>SceAudioInputParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>初期設定値<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	int <i>alc</i>;
	int <i>gain</i>;
	int <i>noiz</i>;
	int <i>hold</i>;
	int <i>decay</i>;
	int <i>attack</i>;
} <b>SceAudioInputParam</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>alc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ALC ON/OFFおよび目標レベル&nbsp;&nbsp;<br>&nbsp;&nbsp;0　　　　: ALC=OFF&nbsp;&nbsp;<br>&nbsp;&nbsp;-6 〜 -29 : ALC=ON -6 〜 -29[dB]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>gain</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力ゲイン設定&nbsp;&nbsp;<br>&nbsp;&nbsp;ALC=ON時では最大ゲイン。&nbsp;&nbsp;<br>&nbsp;&nbsp;　　-12, -6, 0, +6, +12, +18, +24, +30[dB]のいずれか&nbsp;&nbsp;<br>&nbsp;&nbsp;ALC=OFF時は通常の入力ゲイン。&nbsp;&nbsp;<br>&nbsp;&nbsp;　　-17.25〜0〜+30[dB]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>noiz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ノイズゲートON/OFFノイズゲートのスレッショルドレベル&nbsp;&nbsp;<br>&nbsp;&nbsp;0 　　　: ノイズゲート=OFF&nbsp;&nbsp;<br>&nbsp;&nbsp;-76〜-30 : ノイズゲート=ON -76〜-30[dB]&nbsp;&nbsp;<br>&nbsp;&nbsp;ALC=OFFの時は無効&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>hold</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ALCによるゲインアップが始まるまでの時間&nbsp;&nbsp;<br>&nbsp;&nbsp;　　　: 0[ms]&nbsp;&nbsp;<br>&nbsp;&nbsp;1〜15 : 2.667*(2^(hold-1))[ms] &rarr; 2.667〜43691[ms]&nbsp;&nbsp;<br>&nbsp;&nbsp;効果は設定値に対してべき乗に変化します&nbsp;&nbsp;<br>&nbsp;&nbsp;※　ALC=OFFの時は無効&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>decay</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ALCによるゲインアップの変化時間&nbsp;&nbsp;<br>&nbsp;&nbsp;0〜10 : 24.0*(2^(decay))[ms] &rarr; 24.0〜24580[ms]&nbsp;&nbsp;<br>&nbsp;&nbsp;効果は上式のように設定値に対してべき乗に変化します&nbsp;&nbsp;<br>&nbsp;&nbsp;※　ALC=OFFの時は無効&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>attack</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ALCによるゲインダウンの変化時間&nbsp;&nbsp;<br>&nbsp;&nbsp;0〜10 : 6.0*(2^(attack))[ms] &rarr; 6.0〜6144[ms]&nbsp;&nbsp;<br>&nbsp;&nbsp;効果は上式のように設定値に対してべき乗に変化します&nbsp;&nbsp;<br>&nbsp;&nbsp;※　ALC=OFFの時は無効&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">関数<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInitEx">sceAudioInputInitEx</a>()の引数として渡す構造体です。<br><i>alc</i>, <i>gain</i>, <i>noiz</i>の値は、<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>()に渡す引数と同じ値です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInitEx">sceAudioInputInitEx</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioInputInit"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioInputInit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>オーディオ入力の初期化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioInputInit</b> (
	int <i>alc</i>,
	int <i>gain</i>,
	int <i>noiz</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>alc</i>を負の値に設定することでALC(Auto Level Control)機能を有効にします。<br>ALCとは、音量が小さ過ぎたり大きすぎる場合に、入力レベルを一定に保つよう自動調整するための機能です。<br><i>alc</i>の値は、0[dB]を最大とした場合の目標レベルを、整数値[dB]で設定します。<br>ハードウェア仕様より-6〜-29[dB]の範囲が有効です。値は、約1[dB]ステップでの設定が可能です。<br>引数<i>alc</i>を0以上の値にすると、ALC機能はOFFになります。<br><br>引数<i>gain</i>は、ALC ONの時にALCによる最大ゲインの設定となります。<br>ハードウェア仕様より-12〜0〜+30[dB]の範囲で値は、6[dB]ステップになります。よって引数としては1ステップで設定できますが、実際の効果は-12,-6,0,+6,+12,+18,+24,+30のいずれかになります。<br><br>引数<i>gain</i>は、ALC OFFの場合はゲインの絶対値の設定になります。<br>ハードウェア仕様より-18〜+30[dB]の範囲が有効です。約1[dB]ステップでの変更が可能です。<br><br>引数<i>noiz</i>は、ノイズゲート機能の設定です。ある一定レベル以下の入力に対しては、ALCによるゲイン調整を行わないようにします。これにより無音中のヒスノイズがALCによりゲインアップされないようにします。ノイズゲート機能は、ALC ONの場合のみ有効です。<br><i>noiz</i>に0を設定した場合は、ノイズゲート機能はOFFされます。負の値では、入力レベルが設定した値をしきい値として、それ以下の入力レベルでは、ALCによるゲイン調整が効かなくなります。<br>ハードウェア仕様より-76〜-30[dB]の範囲が有効です。約1[dB]ステップで変更可能です。<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>
<div style="margin-left:50px;">例1：<br></div>
<div style="margin-left:70px;">設定値 <i>alc</i>= -6  <i>gain</i> = +30  <i>noiz</i>=-60の場合<br>入力レベルが<b>-60</b>[dB]以下では、ゲイン調整は行われません。<br>入力レベルが -60〜-6[dB]では、レベルが <b>-6</b>[dB]になるようゲインアップされます<br>ゲインアップは、最大<b>30</b>[dB]までです。<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>
<div style="margin-left:50px;">例2：<br></div>
<div style="margin-left:70px;">設定値 <i>alc</i>=0  <i>gain</i> = +12  <i>noiz</i>=0の場合<br>ALC=OFFのため入力信号レベルによらず+12[dB]されます。<br>ALC=OFFのためノイズゲート機能は、働きません。<br>(<i>noiz</i>の値は無視されます)<br></div>
<div style="margin-left:50px;"><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常に初期化できたときに0、そうでないとき負数が返ります。<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">オーディオ入力を有効にします。同時に入力レベルの設定を行います。<br>パラメータ変更等のためオーディオ入力中に呼び出した場合、波形が非連続になりノイズ音が発生します。ノイズを発生させないようにするには、一旦オーディオ入力を停止させてください。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_1">
<div style="margin-left:40px;"><h4><b>sceAudioInputInitEx()との違い</b><br><br></h4></div></a>

<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInitEx">sceAudioInputInitEx</a>()では、さらに3つの引数を設定できます。<br>それ以外は、同じ処理を行います。<br>この関数で設定できない3つの引数は、推奨値として以下の値に設定されます。<br></div>
<div style="margin-left:70px;">hold = 0 &rarr; 0[ms]<br>decay = 3 &rarr; 192[ms]<br>attack = 2 &rarr; 24[ms]<br></div>
<div style="margin-left:50px;"><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInitEx">sceAudioInputInitEx</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioInputInitEx"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioInputInitEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>オーディオ入力の初期化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioInputInitEx</b> (
	<a href="../sound/AudioInput-Reference-Japanese.htm#SceAudioInputParam">SceAudioInputParam</a> *<i>param</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">構造体<a href="../sound/AudioInput-Reference-Japanese.htm#SceAudioInputParam">SceAudioInputParam</a>のポインタ。<br>構造体に値を設定後、この関数を呼び出します。<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常に初期化できたときに0、そうでないとき負数が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">関数<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>()と同様に、オーディオ入力を有効にします。<br>同時に入力レベルの設定を行います。<br>パラメータ変更等のためオーディオ入力中に呼び出した場合、波形が非連続になりノイズ音が発生します。ノイズを発生させないようにするには、一旦オーディオ入力を停止させてください。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_2">
<div style="margin-left:40px;"><h4><b>sceAudioInputInit()との違い</b><br><br></h4></div></a>

<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>()に追加して<i>hold</i>, <i>decay</i>, <i>attack</i>の3つのパラメータの値を設定できます。<br>それ以外は、同じ処理を行います。<br>引数値の詳細は、構造体<a href="../sound/AudioInput-Reference-Japanese.htm#SceAudioInputParam">SceAudioInputParam</a>の説明を参照してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioInputBlocking"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioInputBlocking<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>オーディオ入力（ブロッキング）<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioInputBlocking</b> (
	int <i>len</i>,
	int <i>frequency</i>,
	void <i>*datapointer</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力サンプル数（64の倍数）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frequency</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得データのサンプリング周波数(44100, 22050, 11025のいずれか)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>datapointer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得データの格納先  オーディオ入力終了時には0を設定します&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>len</i>の値を返します。エラーの場合負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80000001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INVALID_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260006&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サイズが正しくない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INVALID_FREQUENCY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8026000a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;対応しない&nbsp;&nbsp;<br>&nbsp;&nbsp;サンプリング周波数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INPUT_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既にオーディオ入力中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_PRIV_REQUIRED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;指定バッファへの&nbsp;&nbsp;<br>&nbsp;&nbsp;ポインタが不正&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">オーディオ入力を行います。<br>オーディオドライバは、ADCの結果を<i>datapointer</i>で指定されたバッファに格納します。<br>入力が完了するかエラーになるまでは、スレッドはWAIT状態になります。<br>オーディオ入力を明示的に終了させる場合は、<i>dtapointer</i>に0を設定します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* オーディオ入力したデータをInputBuf[]に書き出します */

short InputBuf[4096];  /* 入力バッファ */

/* 初期化 ALC_Target=-12[dB] MaxGain=+30[dB] NoiseGateThreshold=-60[dB] */
<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>(-12, 30, -60);

/* オーディオ入力を行う */
sceAudioInputBlocking(sizeof(InputBuf)/sizeof(short), 44100, InputBuf);

/* オーディオ入力の明示的終了宣言 */
sceAudioInputBlocking(sizeof(InputBuf)/sizeof(short), 44100, 0);

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioInput"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioInput<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>オーディオ入力（非ブロッキング）<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioInput</b> (
	int <i>len</i>,
	int <i>frequency</i>,
	void <i>*datapointer</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力サンプル数（64の倍数）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frequency</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得データのサンプリング周波数(44100, 22050, 11025のいずれか)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>datapointer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得データの格納先  オーディオ入力終了時には0を設定します&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>len</i>の値を返します。エラーの場合負の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80000001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INVALID_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260006&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サイズが正しくない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INVALID_FREQUENCY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8026000a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;対応しない&nbsp;&nbsp;<br>&nbsp;&nbsp;サンプリング周波数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INPUT_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既にオーディオ入力中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_PRIV_REQUIRED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;指定バッファへの&nbsp;&nbsp;<br>&nbsp;&nbsp;ポインタが不正&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">オーディオ入力を行います。<br>オーディオドライバは、ADCの結果を<i>datapointer</i>で指定されたバッファに格納します。<br>引数の内容は、<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputBlocking">sceAudioInputBlocking</a>()と同じです。<br>非ブロッキング関数のため入力の完了、未完に関係なく関数から戻ってきます。<br>オーディオ入力の終了は関数<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioWaitInputEnd">sceAudioWaitInputEnd</a>()で知ることができます。<br>オーディオ入力を明示的に終了させる場合は、<i>dtapointer</i>に0を設定します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>short InputBuf[4096];  /* 入力バッファ */

/* 初期化 ALC_Target=-12[dB] MaxGain=+30[dB] NoiseGateThreshold=-60[dB] */
<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>(-12, 30, -60);

/* オーディオ入力を行う */
sceAudioInput(sizeof(InputBuf)/sizeof(short), 44100, InputBuf);

/* オーディオ入力終了待ち */
<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioWaitInputEnd">sceAudioWaitInputEnd</a>();

/* オーディオ入力の明示的終了宣言*/
sceAudioInput(sizeof(InputBuf)/sizeof(short), 44100, 0);

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>()<br><a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioWaitInputEnd">sceAudioWaitInputEnd</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioGetInputLength"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioGetInputLength<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>入力済みサンプル数を取得する（非ブロッキング時のみ）<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioGetInputLength</b> (
	void
);
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">取得済みサンプル数を返します。<br>よって取得終了時は、関数<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInput">sceAudioInput</a>()の引数<i>len</i>の値を返します。<br><br>関数<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>()後、<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInput">sceAudioInput</a>()を呼ぶ前にこの関数を呼んだ場合、SCE_AUDIO_ERROR_NOT_INITIALIZEDが返ります。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オーディオ入力開始前&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非ブロッキングオーディオ入力関数<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInput">sceAudioInput</a>()でオーディオ入力取得中に取得済みサンプル数を返します。<br>※値を取得した時は、既に続く入力処理が進んでいます。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioWaitInputEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioWaitInputEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>入力完了待ち（非ブロッキング時のみ）<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioWaitInputEnd</b>(
	void
);
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">入力が完了するまで待ち、SCE_OKを返します。<br>返り値が負（&lt;0）の場合エラー<br><br>関数<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>()後、<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInput">sceAudioInput</a>()を呼ぶ前にこの関数を呼んだ場合、SCE_AUDIO_ERROR_NOT_INITIALIZEDが返ります。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オーディオ入力開始前&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非ブロッキングオーディオ入力関数<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInput">sceAudioInput</a>()の入力完了を待ちます。<br>この関数では、入力完了まで処理が戻ってきません。<br>入力完了までスレッドは休止状態になります。<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioPollInputEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioPollInputEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>入力完了判断（非ブロッキング時のみ）<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioPollInputEnd</b> (
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInput">sceAudioInput</a>()による入力開始後<br>入力が完了したなら成功（0）を返します。<br>入力が完了していないなら（1）を返します。<br>初期化<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInputInit">sceAudioInputInit</a>()後でも成功（0）を返します。<br>その他エラーの場合負の値（＜0）が返ります。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">非ブロッキングオーディオ入力関数<a href="../sound/AudioInput-Reference-Japanese.htm#sceAudioInput">sceAudioInput</a>()の入力が完了したか否かの結果を取得します。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
