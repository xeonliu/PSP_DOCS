<html lang="en">
<head>
<title>Sound-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
Sound Overview
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>Overview</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>Sound Hardware</b><br>
</a>
</h3>
<div style="margin-left:50px;">The PSP&trade; has two stereo outputs and one monaural input. The volume of one of the two stereo outputs is first changed by a digital volume circuit, then it is mixed with the other output and sent to the DAC. Also, the monaural input is connected to the ADC. Individual FIFO buffers are provided for input and for output.<br>These audio input/output interfaces are controlled by the audio driver.<br><br>This document explains audio output. For information about audio input, refer to the separate document entitled Audio Input Overview.<br><br></div>

<div align=center>
<p>
<img src="gif/Sound-Overview-English001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 1 Block Diagram of Sound Hardware</b><br>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>Sound Output Flow</b><br>
</a>
</h3>
<div style="margin-left:50px;">The following diagram shows the flow of sound in the PSP&trade;.<br></div>

<div align=center>
<p>
<img src="gif/Sound-Overview-English002.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 2  Sound Output Flow</b><br>
</div>
<br>
<div style="margin-left:50px;">A PSP&trade; game title uses the sound library to output sound. The sound library accesses the audio driver and the audio driver uses the sound hardware to output sound.<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>Audio Driver</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">The audio driver is used to control the sound hardware of the PSP&trade;. It is implemented as a device driver and is accessed using the sound library.<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>Main Functions</b><br>
</a>
</h3>
</ol>
<div style="margin-left:40px;"><ul>
<li> Controls the DMAC and performs DMA transfers related to sound, etc.
<li> Controls the sound hardware 
</ul></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>Software Audio Synthesizer</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">The Software Audio Synthesizer (SAS) is a software sound source that generates sound from phoneme data and control parameters. It runs on the Media Engine.<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>Basic Specifications</b><br>
</a>
</h3>
<div style="margin-left:40px;"><ul>
<li> Runs on the Media Engine
<li> Supports monaural ADPCM (.vag), PCM and ATRAC3&trade; phoneme formats
<li> Up to 32 simultaneous voices(can be changed depending on the processing load)
<li> Digital reverb built in as an effect
<li> Pitch can be controlled from -12 octaves to +2 octaves
<li> Built-in ADSR envelope
<li> Controlled by libsas
</ul></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd3 -->
<a name="Heading3_4">
<h2>
 4 <!-- hp --><b>Sound Libraries</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_4_1">
<h3>
<a href="#Heading3_4"> 4. </a>1 
<!-- hp1 --><b>Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">The following figure shows the configuration of sound libraries on the PSP&trade;.<br></div>

<div align=center>
<p>
<img src="gif/Sound-Overview-English003.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 3  Configuration of Sound Libraries</b><br>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_4_2">
<h3>
<a href="#Heading3_4"> 4. </a>2 
<!-- hp1 --><b>libwave Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">libwave is used for transferring ADPCM (.vag) or PCM-formatted sound of multiple sources to the audio driver for playback after mixing them using software. libwave can generate sound effects from sound data in memory while simultaneously streaming audio as background music (BGM). <br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_2_1">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Supports ADPCM (.vag) and 16-bit linear PCM (only little endian)
<li> Provides a simple library exclusively for playing ADPCM audio (does not use SAS)
<li> Provides an API for directly outputting PCM data to an audio driver 
<li> ADPCM sound system handles at most eight voices
<li> Equipped with three channels exclusively for PCM output
<li> Volume can be set (L and R independently) for individual ADPCM voices or PCM channels 
<li> Sound effects can be played back as one-shot sounds or in continuous loops (ADPCM voices)
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_4_3">
<h3>
<a href="#Heading3_4"> 4. </a>3 
<!-- hp1 --><b>simple audio Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">Simple audio is a library for transferring individual 16-bit little endian, 2ch PCM format sound data directly to the audio driver and playing that data. A volume change can be added before output since the PSP&trade; has a hardware-based digital volume circuit. Although simple audio has fewer functions than libwave, it also imposes a correspondingly lighter load on the CPU than libwave.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_3_2">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Only supports 16-bit linear PCM (Little Endian), 2ch stereo
<li> Volume (both L/R) can be set by hardware
<li> Only one voice can be played at a time
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_4_4">
<h3>
<a href="#Heading3_4"> 4. </a>4 
<!-- hp1 --><b>vaudio Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">vaudio is a sound processing library that calls various sound effect libraries internally (these libraries mainly run on the Media Engine), processes sound, and outputs it using the simple audio library. Since vaudio uses simple audio internally, vaudio and simple audio cannot be used at the same time.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_4_3">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Only supports 16-bit linear PCM (Little Endian), 2ch stereo
<li> Volume (both L/R) can be set by hardware
<li> Only one voice can be played at a time
<li> Provides sampling frequency conversion, automatic volume adjustment, and equalizer functions
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_4_5">
<h3>
<a href="#Heading3_4"> 4. </a>5 
<!-- hp1 --><b>libatrac3plus Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">libatrac3plus is used for controlling the ATRAC3&trade;/ATRAC3plus&trade; decoder. The decoder produces linear PCM from sound that has been compressed in ATRAC3&trade; and ATRAC3plus&trade; formats. libatrac3plus only provides functions for decoding ATRAC3&trade;/ATRAC3plus&trade; data to PCM. To output the decoded sound through the audio output, libatrac3plus must be used together with libwave or simple audio, etc.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_5_4">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> ATRAC3&trade; and ATRAC3plus&trade; audio data can be decoded to PCM
<li> A wide range of bit rates and numbers of channels (monaural and two-channel stereo) are supported for ATRAC3&trade; and ATRAC3plus&trade; data so you can adjust the data size to best suit your application.
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_4_6">
<h3>
<a href="#Heading3_4"> 4. </a>6 
<!-- hp1 --><b>libsas Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">libsas is used for controlling the software audio synthesizer (SAS). All the functions of SAS are made available through the library, so libsas can also be used to develop proprietary sequencers or game title middleware.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_6_5">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> All functions provided by SAS are available
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_4_7">
<h3>
<a href="#Heading3_4"> 4. </a>7 
<!-- hp1 --><b>libsndp Overview</b><br>
</a>
</h3>
<div style="margin-left:67px;">libsndp is a high-level library that runs on top of libsas. The libsndp API makes it relatively easy to use the sound functions of the PSP&trade; and to use data created with the sound artist tools.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_7_6">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Enables a MIDI sequence (SMF format 0) created with generic MIDI sequence software to be played (restricted to RPN/NPRN, etc.)
<li> Enables sound effects to be played using phoneme data created with the sound artist tools. 
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_4_8">
<h3>
<a href="#Heading3_4"> 4. </a>8 
<!-- hp1 --><b>libmp3 Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">libmp3 is a library for decoding MP3-compressed audio data and converting it to linear PCM. To output the decoded audio, libmp3 should be used together with vaudio. Note that other sampling frequencies besides 44100Hz are supported.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_8_7">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Decodes MP3-compressed audio data and converts it to PCM
<li> Supported codec is MPEG1/2/2.5 Layer3 
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_4_9">
<h3>
<a href="#Heading3_4"> 4. </a>9 
<!-- hp1 --><b>libaac Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">libaac is a library for decoding AAC-compressed audio data and converting it to linear PCM. To output the decoded audio, libaac should be used together with vaudio. Note that other sampling frequencies besides 44100Hz are supported.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_9_8">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Decodes AAC-compressed audio data and converts it to PCM
<li> Supported sampling frequencies are 22050, 32000, 44100, and 48000Hz
<li> Supported codec is MPEG4 AAC-LC (no SBR)
<li> Supports headerless (raw_data_frame() only) AAC data
<li> Using libaac together with libmp4 enables an MPEG4 AAC file to be played. For information about libmp4, refer to the "libmp4 Overview."
<li> Supports only stereo or monaural
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_4_10">
<h3>
<a href="#Heading3_4"> 4. </a>10 
<!-- hp1 --><b>libp3da Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">By specifying 3D coordinate positions for a monaural PCM sound source, libp3da can output 2ch stereo data that reproduces a positional 3D stereo image. If the 3D coordinate positions are updated in realtime, a real stereo image space that is linked with 3D graphics can be reproduced. The audio data that is output can be played by using libwave or simple audio.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_10_9">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Up to four sounds can be independently positioned at the same time
<li> Input and output PCM data is 16-bit 44.1KHz
<li> Supports pitch changes caused by the Doppler effect
<li> A rolloff effect can be specified in which the perceived volume decreases as distance increases
<li> Sound directivity can be represented as a sound cone
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_4_11">
<h3>
<a href="#Heading3_4"> 4. </a>11 
<!-- hp1 --><b>libg729 Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">G729 is an audio codec standard used in voice applications such as IP telephony. libg729 is a companion library that provides a linear PCM encoder for G729 and can also decode encoded data to linear PCM. The decoded audio can be output by using libg729 together with a library such as vaudio, which can play audio data even at 8KHz.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_11_10">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Provides encoding and decoding of 16-bit 8KHz monaural PCM data
<li> Supported bit rates are 6.4kbps, 8kbps, and 11.8kbps
<li> Encoders and decoders can process up to four sounds simultaneously
<li> When the volume is low in the encoder, VAD frames can be generated enabling the communication frame size to be reduced
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_4_12">
<h3>
<a href="#Heading3_4"> 4. </a>12 
<!-- hp1 --><b>libsceulaw Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">u-law is a non-linear PCM standard used in voice applications such as IP telephony. libsceulaw is a companion library that provides a linear PCM encoder for u-law and can also decode encoded data to linear PCM. One sample is decoded as 8-bit non-linear PCM data according to this standard.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_12_11">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Provides encoding and decoding of 16-bit monaural PCM data 
<li> Any sampling rate can be used (normally, 8 to 16kHz is used)
<li> Data with a low compression ratio can be converted extremely fast
</ul></div>

<!-- sce_hd3 -->
<a name="Heading3_5">
<h2>
 5 <!-- hp --><b>Sound Artist Tools</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_5_1">
<h3>
<a href="#Heading3_5"> 5. </a>1 
<!-- hp1 --><b>Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">The sound artist tools are used to create sound data for the PSP&trade;.<br>The following sound artist tools are provided for the PSP&trade;.<br></div>
<div style="margin-left:40px;"><ul>
<li> SEdit
<li> at3tool
<li> AIFF2VAG
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_5_2">
<h3>
<a href="#Heading3_5"> 5. </a>2 
<!-- hp1 --><b>SEdit</b><br>
</a>
</h3>
<div style="margin-left:50px;">The PSP&trade; Sound Tool is a Windows-based sound authoring tool for the PSP&trade;. It has functions for generating PSP&trade; sound data from ADPCM phoneme files (.vag) that were created with AIFF2VAG. The following two types of sound data can be generated.<br><br></div>
<div style="margin-left:40px;"><ul>
<li> A header, which contains attributes for a musical instrument or a sound effect sequence (.phd extension)
<li> A body, which contains phoneme data (.pbd extension)
</ul></div>
<div style="margin-left:50px;"><br>Sound data that is generated by SEdit can be used by libsndp.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_5_2_12">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Runs on Windows
<li> Simple UI
</ul></div>
<div style="margin-left:50px;"><br>The following is the projected operating environment for SEdit.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_5_2_13">
<div style="margin-left:40px;"><h4><b>Windows Environment</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Intel Pentium, Celeron, or compatible PC
<li> System operation confirmed on Windows XP Service Pack 2 (Japanese and English versions)
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_5_3">
<h3>
<a href="#Heading3_5"> 5. </a>3 
<!-- hp1 --><b>at3tool</b><br>
</a>
</h3>
<div style="margin-left:50px;">The at3tool is a tool that performs encoding and decoding of ATRAC3&trade; and ATRAC3plus&trade; data. Sound files can be encoded into ATRAC3&trade; or ATRAC3plus&trade;. The encoded sound files can be played back on the PSP&trade; using libraries such as libatrac3plus and libwave. In addition, encoded sound files can also be decoded into PCM using at3tool.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_5_3_14">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Encodes sound files (in .wav, 16-bit Little Endian RIFF-wave format) as ATRAC3&trade; or ATRAC3plus&trade;
<li> Supports multiple bit rates
<li> Convenient console application for batch processing
<li> Loop position can be set in a smpl chunk within a .wav file and a command line switch. 
<li> Encoded files can be decoded to PCM
</ul></div>

<!-- sce_title -->
<a Name ="HeadingT_5_3_15">
<div style="margin-left:40px;"><h4><b>Environment</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Windows XP Service Pack 3 (Japanese and English versions)
<li> Windows XP Service Pack 1 (Japanese and English versions)
<li> Linux
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_5_4">
<h3>
<a href="#Heading3_5"> 5. </a>4 
<!-- hp1 --><b>AIFF2VAG</b><br>
</a>
</h3>
<div style="margin-left:50px;">AIFF2VAG is a tool for converting AIFF format (.aif or .aiff) and WAVE format (.wav) sound files to ADPCM phoneme files (.vag). The converted sound files can be used by the PSP&trade; Sound Tool, libwave and libsas. AIFF2VAG runs on Power Macintosh and Windows.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_5_4_16">
<div style="margin-left:40px;"><h4><b>Features</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Converts AIFF format (.aif or .aiff) and WAVE format (.wav) sound files
<li> Loops can be set
<li> Supports four different conversion modes
</ul></div>

<!-- sce_title -->
<a Name ="HeadingT_5_4_17">
<div style="margin-left:40px;"><h4><b>Power Macintosh Environment</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Power Macintosh G4 or G5
<li> Mac OS X Version 10.3 or higher
</ul></div>

<!-- sce_title -->
<a Name ="HeadingT_5_4_18">
<div style="margin-left:40px;"><h4><b>Windows Environment</b><br><br></h4></div></a>

<div style="margin-left:40px;"><ul>
<li> Intel Pentium, Celeron, or compatible PC with a 1 GHz min. clock speed
<li> Windows XP or Windows 2000
</ul></div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
