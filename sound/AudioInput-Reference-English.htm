<html lang="en">
<head>
<title>AudioInput-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
Audio Input Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceAudioInputParam"></a>
<table width="100%"><td width="70%"><font size=6>SceAudioInputParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initial settings<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct {
	int <i>alc</i>;
	int <i>gain</i>;
	int <i>noiz</i>;
	int <i>hold</i>;
	int <i>decay</i>;
	int <i>attack</i>;
} <b>SceAudioInputParam</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>alc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ALC ON/OFF state and target level&nbsp;&nbsp;<br>&nbsp;&nbsp;0:   ALC = OFF&nbsp;&nbsp;<br>&nbsp;&nbsp;-6 to -29: ALC = ON and target level is -6 to -29 [dB]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>gain</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input gain setting&nbsp;&nbsp;<br>&nbsp;&nbsp;Maximum gain when ALC = ON.&nbsp;&nbsp;<br>&nbsp;&nbsp;     Valid settings are -12, -6, 0, +6, +12, +18, +24, and +30[dB]&nbsp;&nbsp;<br>&nbsp;&nbsp;Normal input gain when ALC = OFF.&nbsp;&nbsp;<br>&nbsp;&nbsp;      -17.25 to 0 to +30 [dB]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>noiz</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Noise gate ON/OFF state and noise gate threshold level&nbsp;&nbsp;<br>&nbsp;&nbsp;0:        Noise gate = OFF&nbsp;&nbsp;<br>&nbsp;&nbsp;-76 to -30: Noise gate = ON and threshold level is -76 to -30 [dB]&nbsp;&nbsp;<br>&nbsp;&nbsp;When ALC = OFF, <i>noiz</i> has no effect&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>hold</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Time until ALC starts increasing the gain&nbsp;&nbsp;<br>&nbsp;&nbsp;        : 0 [ms]&nbsp;&nbsp;<br>&nbsp;&nbsp;1 to 15: 2.667*(2^(hold-1)) [ms] &rarr; 2.667 to 43691 [ms]&nbsp;&nbsp;<br>&nbsp;&nbsp;The effect varies by a power of the value set&nbsp;&nbsp;<br>&nbsp;&nbsp;(*) When ALC = OFF, <i>hold</i> has no effect&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>decay</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Time during which gain increases due to ALC&nbsp;&nbsp;<br>&nbsp;&nbsp;0 to 10: 24.0*(2^(decay)) [ms] &rarr; 24.0 to 24580 [ms]&nbsp;&nbsp;<br>&nbsp;&nbsp;The effect varies by a power of the value set as shown in the above relation&nbsp;&nbsp;<br>&nbsp;&nbsp;(*) When ALC=OFF, <i>decay</i> has no effect&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>attack</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Time during which gain decreases due to ALC&nbsp;&nbsp;<br>&nbsp;&nbsp;0 to 10: 6.0*(2^(attack)) [ms] &rarr; 6.0 to 6144 [ms]&nbsp;&nbsp;<br>&nbsp;&nbsp;The effect varies by a power of the value set as shown in the above relation&nbsp;&nbsp;<br>&nbsp;&nbsp;(*) When ALC = OFF, <i>attack</i> has no effect&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is passed as an argument of the <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInitEx">sceAudioInputInitEx</a>() function.<br>The <i>alc</i>,<i> gain</i>, and<i> noiz</i> values are the same values as the ones that are passed to <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInitEx">sceAudioInputInitEx</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioInputInit"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioInputInit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize audio input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioInputInit</b> (
	int <i>alc,</i>
	int <i>gain</i>,
	int<i> noiz</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">By setting <i>alc</i> to a negative value, this function will enable the Auto Level Control (ALC) .<br>ALC is a function that automatically adjusts the input level so that it is maintained at a pre-determined value when the volume is too low or too high. <br><i>alc</i> sets the target level using an integer value [dB], where 0 [dB] is the maximum.<br>The hardware specification supports values in the range -6 to -29 [dB]. The value can be set in steps of approximately 1 [dB].<br>If <i>alc</i> is set to a non-negative value, the ALC function is turned OFF.<br><br><i>gain</i> is used as the maximum gain setting for ALC when the ALC function is ON.<br>The hardware specification supports values in the range -12 to 0 to +30 [dB] in steps of 6 [dB]. Note that values in steps of 1 can be set, but the effective value will only be one of -12, -6, 0, +6, +12, +18, +24, and +30.<br><br>When ALC is OFF, <i>gain</i> should be set to the absolute value of the gain.<br>The hardware specification supports values in the range -18 to +30 [dB]. The value can be changed in steps of approximately 1 [dB].<br><br><i>noiz</i> is the setting for the noise gate function. This function prevents ALC from adjusting the gain for an input that is less than or equal to a pre-determined level. This prevents ALC from increasing the gain of hiss noise during periods of silence. The noise gate function is enabled only when ALC is ON.<br>When 0 is set for <i>noiz</i>, the noise gate function is turned OFF. When a negative value is set, the value set by the input level is taken as the threshold value, and gain adjustments by ALC will no longer be effective for input levels less than or equal to that threshold value.<br>The hardware specification supports values in the range -76 to -30 [dB]. The value can be changed in steps of approximately 1 [dB].<br><br>Example 1:  <br></div>
<div style="margin-left:70px;">For the following settings:  <i>alc</i> = -6, <i>gain</i> = +30, and <i>noiz</i> = -60,<br>no gain adjustment will be performed for an input level less than or equal to <b>-60</b> [dB].<br>When the input level is -60 to -6 [dB], the gain is increased so that the level becomes <b>-6</b> [dB], where the gain is increased by at most <b>30</b> [dB].<br></div>
<div style="margin-left:50px;"><br>Example 2:<br></div>
<div style="margin-left:70px;">For the following settings:  <i>alc</i> = 0, <i>gain</i> = +12, and <i>noiz</i> = 0,<br>the level will be +12 [dB] regardless of the input signal level because ALC = OFF.<br>Since ALC = OFF, the noise gate function does not operate.<br>(The <i>noiz</i> value is ignored.)<br></div>
<div style="margin-left:50px;"><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When initialization completes normally, 0 is returned; otherwise, a negative number is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function enables audio input. It also sets the input level at the same time.<br>If this function is called to change parameters during audio input, the waveform will become discontinuous and noise will be generated. To prevent noise from being generated, temporarily stop audio input.<br><br>Differences with <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInitEx">sceAudioInputInitEx</a>()<br>With <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInitEx">sceAudioInputInitEx</a>(), three more arguments can be set.<br>Otherwise, the same processing is performed.<br>The three arguments that cannot be set by using this function, are set to the following recommended values.<br></div>
<div style="margin-left:70px;">hold = 0 &rarr; 0 [ms]<br>decay = 3 &rarr; 192 [ms]<br>attack = 2 &rarr; 24 [ms]<br></div>
<div style="margin-left:50px;"><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInitEx">sceAudioInputInitEx</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioInputInitEx"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioInputInitEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize audio input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioInputInitEx</b> (
	<a href="../sound/AudioInput-Reference-English.htm#SceAudioInputParam">SceAudioInputParam</a> *<i>param</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Pointer to the <a href="../sound/AudioInput-Reference-English.htm#SceAudioInputParam">SceAudioInputParam</a> structure.<br>This function is called after values are set in the structure.<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When initialization completes normally, 0 is returned; otherwise, a negative number is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function enables audio input in a similar manner as the <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>() function. It also sets the input level at the same time.<br><br>If this function is called to change parameters during audio input, the waveform will become discontinuous and noise will be generated. To prevent noise from being generated, temporarily stop audio input.<br><br>Differences with <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>()<br>In addition to the parameters of <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>(), this function can set values for the hold, decay, and attack parameters.<br>Otherwise, the same processing is performed.<br>For details about the argument values, see the description of the <a href="../sound/AudioInput-Reference-English.htm#SceAudioInputParam">SceAudioInputParam</a> structure.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioInputBlocking"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioInputBlocking<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Audio input (blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioInputBlocking</b> (
	int <i>len</i>,
	int <i>frequency,</i>
	void <i>*datapointer</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of input samples (multiple of 64)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frequency</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sampling frequency of acquired data (one of 44100, 22050, and  11025)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>datapointer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Storage destination of acquired data. Set this to 0 to end audio input.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The <i>len</i> value is returned. If an error occurs, a negative value is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80000001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Initialization has not&nbsp;&nbsp;<br>&nbsp;&nbsp;been performed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INVALID_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260006&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INVALID_FREQUENCY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8026000a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unsupported &nbsp;&nbsp;<br>&nbsp;&nbsp;sampling frequency&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INPUT_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Audio input is &nbsp;&nbsp;<br>&nbsp;&nbsp;already being &nbsp;&nbsp;<br>&nbsp;&nbsp;performed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_PRIV_REQUIRED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to specified &nbsp;&nbsp;<br>&nbsp;&nbsp;buffer is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs audio input.<br>The audio driver stores the ADC output in the buffer specified by <i>datapointer</i>.<br>The thread will be in WAIT state until input is complete or an error occurs.<br>To explicitly end audio input, set <i>datapointer</i> to 0.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Write data obtained from audio input to InputBuf[]*/

short InputBuf[4096];  /* Input buffer */

/* Initialize ALC_Target=-12[dB] MaxGain=+30[dB] NoiseGateThreshold=-60[dB] */
<a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>(-12, 30, -60);

/* Perform audio input */
sceAudioInputBlocking(sizeof(InputBuf)/sizeof(short), 44100, InputBuf);

/* Explicitly declare end of audio input */
sceAudioInputBlocking(sizeof(InputBuf)/sizeof(short), 44100, 0);


</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioInput"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioInput<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Audio input (non-blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioInput</b> (
	int <i>len</i>,
	int <i>frequency,</i>
	void <i>*datapointer</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of input samples (multiple of 64)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frequency</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sampling frequency of acquired data (one of 44100, 22050, and 11025)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>datapointer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Storage destination of acquired data. Set to 0 to end audio input.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The <i>len</i> value is returned. If an error occurs, a negative value is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80000001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Initialization has not &nbsp;&nbsp;<br>&nbsp;&nbsp;been performed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INVALID_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260006&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INVALID_FREQUENCY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x8026000a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unsupported &nbsp;&nbsp;<br>&nbsp;&nbsp;sampling frequency&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_INPUT_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260010&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Audio input is &nbsp;&nbsp;<br>&nbsp;&nbsp;already being &nbsp;&nbsp;<br>&nbsp;&nbsp;performed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_PRIV_REQUIRED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260004&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to specified &nbsp;&nbsp;<br>&nbsp;&nbsp;buffer is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs audio input.<br>The audio driver stores the ADC output in the buffer specified by <i>datapointer</i>.<br>The arguments are the same as those of <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputBlocking">sceAudioInputBlocking</a>().<br>Since this is a non-blocking function, the function returns regardless of whether or not input was completed.<br>Use the <a href="../sound/AudioInput-Reference-English.htm#sceAudioWaitInputEnd">sceAudioWaitInputEnd</a>() function to determine if audio input has ended.<br>To explicitly end audio input, set <i>datapointer</i> to 0.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>short InputBuf[4096];  /* Input buffer */

/* Initialize ALC_Target=-12[dB] MaxGain=+30[dB] NoiseGateThreshold=-60[dB] */
<a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>(-12, 30, -60);

/* Perform audio input */
sceAudioInput(sizeof(InputBuf)/sizeof(short), 44100, InputBuf);

/* Wait for end of audio input */
<a href="../sound/AudioInput-Reference-English.htm#sceAudioWaitInputEnd">sceAudioWaitInputEnd</a>();

/* Explicitly declare end of audio input */
sceAudioInput(sizeof(InputBuf)/sizeof(short), 44100, 0);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>()<br><a href="../sound/AudioInput-Reference-English.htm#sceAudioWaitInputEnd">sceAudioWaitInputEnd</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioGetInputLength"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioGetInputLength<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of samples that were acquired (only when non-blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioGetInputLength</b> (void);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the number of samples that were acquired.<br>Consequently, when acquisition has ended, the <i>len</i> argument of the <a href="../sound/AudioInput-Reference-English.htm#sceAudioInput">sceAudioInput</a>() function is returned.<br><br>If this function is called after the <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>() function but before the <a href="../sound/AudioInput-Reference-English.htm#sceAudioInput">sceAudioInput</a>() function is called, SCE_AUDIO_ERROR_NOT_INITIALIZED is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Audio input not started yet&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the number of samples that were acquired during acquisition of audio input using the <a href="../sound/AudioInput-Reference-English.htm#sceAudioInput">sceAudioInput</a>() non-blocking audio input function.<br>(*) Input processing continues to advance when the value is acquired.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioWaitInputEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioWaitInputEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Wait for completion of input (only when non-blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioWaitInputEnd</b>(void);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function waits until input has completed, then SCE_OK is returned.<br>If the return value is negative (&lt; 0), an error occurred.<br><br>If this function is called after the <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>() function but before the <a href="../sound/AudioInput-Reference-English.htm#sceAudioInput">sceAudioInput</a>() function is called, SCE_AUDIO_ERROR_NOT_INITIALIZED is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_AUDIO_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80260001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Audio input not started yet&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function waits for the completion of input by the <a href="../sound/AudioInput-Reference-English.htm#sceAudioInput">sceAudioInput</a>() non-blocking audio input function.<br>This function does not return until input is completed.<br>The thread is in WAIT state until input is completed.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceAudioPollInputEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceAudioPollInputEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Determine completion of input (only when non-blocking)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;audioinput.h&gt;
int <b>sceAudioPollInputEnd</b> (void);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">After input is started by calling <a href="../sound/AudioInput-Reference-English.htm#sceAudioInput">sceAudioInput</a>(), 0 is returned by this function to indicate that input has been completed.<br>If input has not been completed, 1 is returned.<br>This function also returns 0 after <a href="../sound/AudioInput-Reference-English.htm#sceAudioInputInit">sceAudioInputInit</a>() is called to perform initialization.<br>For other errors, a negative value (&lt; 0) is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns a value indicating whether or not input by the <a href="../sound/AudioInput-Reference-English.htm#sceAudioInput">sceAudioInput</a>() non-blocking audio input function has completed.<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
