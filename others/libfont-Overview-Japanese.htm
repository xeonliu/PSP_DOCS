<html lang="jp">
<head>
<title>libfont-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libfont
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>ライブラリ概要</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>概要</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfontは、フォントグリフイメージをアプリケーションプログラムへ提供するライブラリです。<br><br>libfontを使用することにより、アプリケーションプログラムはPSP&reg;システムに搭載されているフォントの情報を取得する事ができます。アプリケーションプログラムは、この情報の中から使用するフォントを任意に選択する事ができます。アプリケーションプログラムは、抽象的な情報（「欧文」の「太字」の「斜体」等）から、それにマッチした、あるいはそれに近いフォントを検索する事ができます。<br><br>libfontを使用する事により、アプリケーションプログラムはPSP&reg;システムに搭載されたフォント群に含まれる特定のフォントに含まれる特定の文字のグリフイメージデータを取得する事が可能となります。<br>このグリフイメージは2値以上に量子化されたピクセルで構成されています。<br><br>libfontは、文字のレイアウトに必要な情報をアプリケーションプログラムへ提供します。アプリケーションプログラムはこのレイアウト情報を利用することにより、プロポーショナルフォントを美しく配置する事が可能となります。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>関連ファイル</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfontを使用するために必要なファイルは、次の通りです。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>カテゴリ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ヘッダファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libfont.h&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;スタブライブラリファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libfont_stub.a&nbsp;&nbsp;<br>&nbsp;&nbsp;libfont_stub_weak.a&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">libfontは次のライブラリを使用します。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>カテゴリ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;スタティックリンクライブラリファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libsha1.a&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- sce_hd4 -->
<a name="Heading4_1_3">
<h3>
<a href="#Heading3_1"> 1. </a>3 
<!-- hp1 --><b>サンプルプログラム</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfontのサンプルプログラムとして、以下のものがあります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_3_1"><h4>
(1)&nbsp;<b>devkit/sample/font/basho</b><br></h4>
</a></div>
<div style="margin-left:67px;">libfontの基本的な使い方を示したサンプルです。和文フォントとの複数のラテンフォントを順にオープンし、テクスチャイメージを作ります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_3_2"><h4>
(2)&nbsp;<b>devkit/sample/font/fontcache</b><br></h4>
</a></div>
<div style="margin-left:67px;">libfontへ外部からフォントキャッシュを与え、それを連動させる例を示したサンプルです。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_3_3"><h4>
(3)&nbsp;<b>devkit/sample/font/simple</b><br></h4>
</a></div>
<div style="margin-left:67px;">最小限のプログラムコードで示したサンプルです。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>使用手順の概略</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>ライブラリの初期化</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfontを使うためには、ライブラリインスタンスを<a href="../others/libfont-Reference-Japanese.htm#sceFontNewLib">sceFontNewLib</a>()関数で生成する必要があります。このインスタンスの生成によってライブラリが初期化されます。<a href="../others/libfont-Reference-Japanese.htm#sceFontNewLib">sceFontNewLib</a>()関数は、生成したライブラリインスタンスを指すライブラリIDを返します。<br>アプリケーションプログラムは、複数の<a href="../others/libfont-Reference-Japanese.htm#sceFontNewLib">sceFontNewLib</a>()関数をコールする事で、ライブラリインスタンスを複数個持つ事ができます。通常の使い方においては、複数のライブラリインスタンスを生成するそれを持つ意味はありません。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>フォントの検索</b><br>
</a>
</h3>
<div style="margin-left:50px;">PSP&reg;システムに搭載されているフォントの数は<a href="../others/libfont-Reference-Japanese.htm#sceFontGetNumFontList">sceFontGetNumFontList</a>()関数で取得できます。<br>フォントの詳しいデザイン情報は<a href="../others/libfont-Reference-Japanese.htm#sceFontGetFontList">sceFontGetFontList</a>()関数で取得する事ができ、また<a href="../others/libfont-Reference-Japanese.htm#sceFontFindOptimumFont">sceFontFindOptimumFont</a>()関数あるいは<a href="../others/libfont-Reference-Japanese.htm#sceFontFindFont">sceFontFindFont</a>()関数でフォントの検索を行う事ができます。<br>フォントの検索で得たフォントのインデックス番号を<a href="../others/libfont-Reference-Japanese.htm#sceFontGetFontInfoByIndexNumber">sceFontGetFontInfoByIndexNumber</a>()関数に与える事で、フォント情報を取得する事ができます。フォント情報は、フォントをオープンした後に得られるフォントIDを使って<a href="../others/libfont-Reference-Japanese.htm#sceFontGetFontInfo">sceFontGetFontInfo</a>()関数をコールする事によっても取得する事ができます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_3">
<h3>
<a href="#Heading3_2"> 2. </a>3 
<!-- hp1 --><b>フォントのオープン</b><br>
</a>
</h3>
<div style="margin-left:50px;"><a href="../others/libfont-Reference-Japanese.htm#sceFontOpen">sceFontOpen</a>()関数は、指定されたインデックス番号のフォントをオープンし、フォントIDを返します。ファイルストレージ上のデータを逐次読み込んで処理するSCE_FONT_FILEBASEDSTREAMと、フォントデータ全体をメモリに読み込んでから処理するSCE_FONT_MEMORYBASEDSTREAMの2つのモードを選択する事ができます。SCE_FONT_FILEBASEDSTREAMモードはSCE_FONT_MEMORYBASEDSTREAMよりもメモリの消費を低く抑えられますが、動作はSCE_FONT_MEMORYBASEDSTREAMよりも遅くなります。<br><br>また、アプリケーションプログラムは、<a href="../others/libfont-Reference-Japanese.htm#sceFontOpenUserFile">sceFontOpenUserFile</a>()、<a href="../others/libfont-Reference-Japanese.htm#sceFontOpenUserMemory">sceFontOpenUserMemory</a>()によってもフォントをオープンする事もできます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_4">
<h3>
<a href="#Heading3_2"> 2. </a>4 
<!-- hp1 --><b>文字メトリクス情報の取得</b><br>
</a>
</h3>
<div style="margin-left:50px;">フォントIDと文字コードを<a href="../others/libfont-Reference-Japanese.htm#sceFontGetCharInfo">sceFontGetCharInfo</a>()関数へ与えると、文字のメトリクス情報を取得する事ができます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_5">
<h3>
<a href="#Heading3_2"> 2. </a>5 
<!-- hp1 --><b>文字グリフイメージの取得</b><br>
</a>
</h3>
<div style="margin-left:50px;">フォントIDと文字コードを<a href="../others/libfont-Reference-Japanese.htm#sceFontGetCharGlyphImage">sceFontGetCharGlyphImage</a>()関数へ与えると、文字のグリフイメージを取得する事ができます。この関数は、グリフイメージを1/64ピクセルの精度でユーザのメモリ空間にストアします。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_6">
<h3>
<a href="#Heading3_2"> 2. </a>6 
<!-- hp1 --><b>フォントのクローズ</b><br>
</a>
</h3>
<div style="margin-left:50px;"><a href="../others/libfont-Reference-Japanese.htm#sceFontOpen">sceFontOpen</a>()関数によって得たフォントIDを<a href="../others/libfont-Reference-Japanese.htm#sceFontClose">sceFontClose</a>()関数へ与える事により、そのフォントをクローズします。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_7">
<h3>
<a href="#Heading3_2"> 2. </a>7 
<!-- hp1 --><b>ライブラリの終了処理</b><br>
</a>
</h3>
<div style="margin-left:50px;"><a href="../others/libfont-Reference-Japanese.htm#sceFontNewLib">sceFontNewLib</a>()関数によって得たライブラリIDを<a href="../others/libfont-Reference-Japanese.htm#sceFontDoneLib">sceFontDoneLib</a>()関数へ与える事により、そのライブラリインスタンスがオープンしていたフォントは全てクローズされ、また使用していたメモリが解放され、インスタンスが破棄されます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_8">
<h3>
<a href="#Heading3_2"> 2. </a>8 
<!-- hp1 --><b>ライブラリ使用の実例</b><br>
</a>
</h3>
<div style="margin-left:50px;">以下にプログラムの実例を示します。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;malloc.h&gt;
#include &lt;libfont.h&gt;

/*J メモリ確保関数 */
static <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_pointer">SceFont_t_pointer</a> cb_Alloc
(
 <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_pointer">SceFont_t_pointer</a> pMyData, /*J ユーザデータへのポインタ */
 <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_u32">SceFont_t_u32</a> size /*J 要求サイズ */
 )
{
    return ( malloc (size) );
}

/*J メモリ解放関数 */
static void cb_Free
(
 <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_pointer">SceFont_t_pointer</a> pMyData, /*J ユーザデータへのポインタ */
 <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_pointer">SceFont_t_pointer</a> p /*J 解放する領域のポインタ */
 )
{
    free (p);
}

/*J libfont テスト関数 */
void myTest_libfont ( void ) 
{
    <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_error">SceFont_t_error</a> errorCode;
    <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_libId">SceFont_t_libId</a> libID;
    <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_initRec">SceFont_t_initRec</a> initParams = {
       NULL, /*J ユーザデータへのポインタ */
       4, /*J 同時オープンするフォントの最大数 */
       NULL, /*J キャッシュインスタンスへのハンドル */
       cb_Alloc, /*J メモリ確保関数 */
       cb_Free,    /*J メモリ解放関数 */
       NULL, /*J オープン (<a href="../others/libfont-Reference-Japanese.htm#sceFontOpenUserFile">sceFontOpenUserFile</a> を使わないときは NULL で構いません */
       NULL, /*J クローズ (<a href="../others/libfont-Reference-Japanese.htm#sceFontOpenUserFile">sceFontOpenUserFile</a> を使わないときは NULL で構いません */
       NULL, /*J リード (<a href="../others/libfont-Reference-Japanese.htm#sceFontOpenUserFile">sceFontOpenUserFile</a> を使わないときは NULL で構いません */
       NULL, /*J シーク (<a href="../others/libfont-Reference-Japanese.htm#sceFontOpenUserFile">sceFontOpenUserFile</a> を使わないときは NULL で構いません */
       NULL, /*J 予約領域 */
       NULL, /*J 予約領域 */
    };
    <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_int">SceFont_t_int</a> numFontList;
    <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_fontStyleInfo">SceFont_t_fontStyleInfo</a> aFontStyleInfoList [30];
    <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_fontId">SceFont_t_fontId</a> fontID;
    <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_fontInfo">SceFont_t_fontInfo</a> fontInfo;
    <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_charCode">SceFont_t_charCode</a> charCode=(0x795d);
    <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_charInfo">SceFont_t_charInfo</a> charInfo;
    <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_userImageBufferRec">SceFont_t_userImageBufferRec</a> myImage;
#define MYIMAGE_WIDTH (128)
#define MYIMAGE_HEIGHT (128)
    unsigned char *myImageBuffer [(MYIMAGE_WIDTH / 2) * MYIMAGE_HEIGHT];


    /*J フォントライブラリインスタンスの生成 */
    libID = <a href="../others/libfont-Reference-Japanese.htm#sceFontNewLib">sceFontNewLib</a> (&amp;initParams, &amp;errorCode);
    if ( errorCode != <a href="../others/libfont-Reference-Japanese.htm#SCE_FONT_NOERROR">SCE_FONT_NOERROR</a> ) ; /*J エラー処理 */

    /*J 搭載されているフォントの数を取得*/
    numFontList = <a href="../others/libfont-Reference-Japanese.htm#sceFontGetNumFontList">sceFontGetNumFontList</a> (libID, &amp;errorCode);
    if ( errorCode != <a href="../others/libfont-Reference-Japanese.htm#SCE_FONT_NOERROR">SCE_FONT_NOERROR</a> ) ; /*J エラー処理 */
    fprintf (stderr, "numFontList=%d\n", (int)numFontList);

    /*J フォントリストの取得 */
    errorCode = <a href="../others/libfont-Reference-Japanese.htm#sceFontGetFontList">sceFontGetFontList</a> (libID, aFontStyleInfoList, numFontList);
    if ( errorCode != <a href="../others/libfont-Reference-Japanese.htm#SCE_FONT_NOERROR">SCE_FONT_NOERROR</a> ) ; /*J エラー処理 */

    /*J フォントのオープン */
    fontID = <a href="../others/libfont-Reference-Japanese.htm#sceFontOpen">sceFontOpen</a> (libID, 0, SCE_FONT_FILEBASEDSTREAM, &amp;errorCode);
    if ( errorCode != <a href="../others/libfont-Reference-Japanese.htm#SCE_FONT_NOERROR">SCE_FONT_NOERROR</a> ) ; /*J エラー処理 */

    /*J オープンしたフォントの情報の取得 */
    errorCode = <a href="../others/libfont-Reference-Japanese.htm#sceFontGetFontInfo">sceFontGetFontInfo</a> (fontID, &amp;fontInfo);
    if ( errorCode != <a href="../others/libfont-Reference-Japanese.htm#SCE_FONT_NOERROR">SCE_FONT_NOERROR</a> ) ; /*J エラー処理 */

    /*J オープンしたフォントに含まれる文字コードcharCodeの文字に関する情報の取得*/
    errorCode = <a href="../others/libfont-Reference-Japanese.htm#sceFontGetCharInfo">sceFontGetCharInfo</a> (fontID, charCode, &amp;charInfo);
    if ( errorCode != <a href="../others/libfont-Reference-Japanese.htm#SCE_FONT_NOERROR">SCE_FONT_NOERROR</a> ) ; /*J エラー処理 */
            
    myImage.pixelFormat = SCE_FONT_USERIMAGE_DIRECT4_L;
    myImage.rect.width = MYIMAGE_WIDTH;
    myImage.rect.height = MYIMAGE_HEIGHT;
    myImage.bytesPerLine = MYIMAGE_WIDTH / 2;
    myImage.reserved = 0;
    myImage.buffer = (<a href="../others/libfont-Reference-Japanese.htm#SceFont_t_u8">SceFont_t_u8</a> *)myImageBuffer;
    myImage.xPos64 = 20;
    myImage.yPos64 = 40;
    /*J 文字のグリフイメージの取得 */
    errorCode = <a href="../others/libfont-Reference-Japanese.htm#sceFontGetCharGlyphImage">sceFontGetCharGlyphImage</a> (fontID, charCode, &amp;myImage);
    if ( errorCode != <a href="../others/libfont-Reference-Japanese.htm#SCE_FONT_NOERROR">SCE_FONT_NOERROR</a> ) ; /*J エラー処理 */

    /*J フォントをクローズ */
    errorCode = <a href="../others/libfont-Reference-Japanese.htm#sceFontClose">sceFontClose</a> (fontID);
    if ( errorCode != <a href="../others/libfont-Reference-Japanese.htm#SCE_FONT_NOERROR">SCE_FONT_NOERROR</a> ) ; /*J エラー処理 */

    /*J フォントライブラリの破棄 */
    errorCode = <a href="../others/libfont-Reference-Japanese.htm#sceFontDoneLib">sceFontDoneLib</a> (libID);
    if ( errorCode != <a href="../others/libfont-Reference-Japanese.htm#SCE_FONT_NOERROR">SCE_FONT_NOERROR</a> ) ; /*J エラー処理 */

    return;
}

/*J メイン関数 */
int main ( void )
{
    myTest_libfont ();
    return ( 0 );
}
</font></pre></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>動作解説</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>libfont内部の処理</b><br>
</a>
</h3>

<!-- sce_title -->
<a Name ="HeadingT_3_1_1">
<div style="margin-left:40px;"><h4><b>sceFontNewLib()</b><br><br></h4></div></a>

<div style="margin-left:67px;">PSP&reg;システムのレジストリ情報にアクセスし、PSP&reg;の画面の解像度情報を取得します。<br>次に、PSP&reg;システムのレジストリ情報にアクセスし、搭載されているフォントに関する情報を取得し、ライブラリインスタンスの管理するメモリ領域へ情報をコピーします。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_3_1_2">
<div style="margin-left:40px;"><h4><b>sceFontFindFont()</b><br><br></h4></div></a>

<div style="margin-left:67px;">システムのレジストリから得た情報と照合し、与えられたフォントと同じフォントを探し、その番号を返します。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_3_1_3">
<div style="margin-left:40px;"><h4><b>sceFontFindOptimumFont()</b><br><br></h4></div></a>

<div style="margin-left:67px;">システムのレジストリから得た情報と照合し、与えられたフォント属性に近いフォントを探し、その番号を返します。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_3_1_4">
<div style="margin-left:40px;"><h4><b>sceFontOpen()</b><br><br></h4></div></a>

<div style="margin-left:67px;">与えられた番号のフォントをオープンし、フォントIDを返します。このフォントIDは、引数に指定されたライブラリインスタンスに属します。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_3_1_5">
<div style="margin-left:40px;"><h4><b>sceFontClose()</b><br><br></h4></div></a>

<div style="margin-left:67px;">与えられたフォントIDのフォントをクローズします。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_3_1_6">
<div style="margin-left:40px;"><h4><b>sceFontDoneLib()</b><br><br></h4></div></a>

<div style="margin-left:67px;">引数に与えられたライブラリインスタンスに属するクローズされていないフォントを全てクローズし、ライブラリインスタンスが確保したメモリを全て解放します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>アプリケーションプログラムがlibfontから取得できる情報</b><br>
</a>
</h3>
<div style="margin-left:50px;">アプリケーションプログラムは、次に示す情報をlibfontの関数を通じてPSP&reg;システムから取得できます。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>情報</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>概要</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;搭載されている&nbsp;&nbsp;<br>&nbsp;&nbsp;フォント群に関する情報&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP&reg;に搭載されているフォントの数、フォントに&nbsp;&nbsp;<br>&nbsp;&nbsp;関する情報&nbsp;&nbsp;<br>&nbsp;&nbsp;（<a href="../others/libfont-Reference-Japanese.htm#SceFont_t_fontStyleInfo">SceFont_t_fontStyleInfo</a>、<a href="../others/libfont-Reference-Japanese.htm#SceFont_t_fontInfo">SceFont_t_fontInfo</a>）を&nbsp;&nbsp;<br>&nbsp;&nbsp;取得できます。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;搭載されているフォント群の、&nbsp;&nbsp;<br>&nbsp;&nbsp;特定のフォントに関する情報&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP&reg;に搭載されている特定のフォントに含まれる&nbsp;&nbsp;<br>&nbsp;&nbsp;すべての文字に共通の情報&nbsp;&nbsp;<br>&nbsp;&nbsp;（<a href="../others/libfont-Reference-Japanese.htm#SceFont_t_iGlyphMetricsInfo">SceFont_t_iGlyphMetricsInfo</a>、&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../others/libfont-Reference-Japanese.htm#SceFont_t_fGlyphMetricsInfo">SceFont_t_fGlyphMetricsInfo</a>）を取得できます。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;搭載されているフォント群の、&nbsp;&nbsp;<br>&nbsp;&nbsp;特定のフォントの特定の文字に&nbsp;&nbsp;<br>&nbsp;&nbsp;関する情報&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP&reg;に搭載されている特定のフォントに含まれる&nbsp;&nbsp;<br>&nbsp;&nbsp;特定の文字が持つグリフ情報（<a href="../others/libfont-Reference-Japanese.htm#SceFont_t_charInfo">SceFont_t_charInfo</a>）を&nbsp;&nbsp;<br>&nbsp;&nbsp;取得する事ができます。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_3_3">
<h3>
<a href="#Heading3_3"> 3. </a>3 
<!-- hp1 --><b>グリフメトリクス情報</b><br>
</a>
</h3>
<div style="margin-left:50px;">グリフメトリクス情報（<a href="../others/libfont-Reference-Japanese.htm#SceFont_t_iGlyphMetricsInfo">SceFont_t_iGlyphMetricsInfo</a>, <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_fGlyphMetricsInfo">SceFont_t_fGlyphMetricsInfo</a>）は、下の図に示した要素で構成されています。<br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値の名称</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値の意味</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;width&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;グリフの幅です。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;height&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;グリフの高さです。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ascender&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ベースラインからデザイン上の文字の仮想上端までの距離です。&nbsp;&nbsp;<br>&nbsp;&nbsp;上向きに正の値をとります。&nbsp;&nbsp;<br>&nbsp;&nbsp;下の図の横組の例では正の値となります。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;descender&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ベースラインからデザイン上の文字の仮想下端までの距離です。&nbsp;&nbsp;<br>&nbsp;&nbsp;上向きに正の値をとります。&nbsp;&nbsp;<br>&nbsp;&nbsp;下の図の横組の例では負の値となります。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;horizontalBearingX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;文字を横方向にレイアウトする時に使用する数値です。&nbsp;&nbsp;<br>&nbsp;&nbsp;文字の基準点から、その文字の文字矩形左端までのX軸上の距離です。&nbsp;&nbsp;<br>&nbsp;&nbsp;右向きに正の値をとります。&nbsp;&nbsp;<br>&nbsp;&nbsp;下の図の横組の例では負の値となります。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;horizontalBearingY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;文字を横方向にレイアウトする時に使用する数値です。&nbsp;&nbsp;<br>&nbsp;&nbsp;文字の基準点から、その文字の文字矩形上端までのY軸上の距離です。&nbsp;&nbsp;<br>&nbsp;&nbsp;上向きに正の値をとります。&nbsp;&nbsp;<br>&nbsp;&nbsp;下の図の例では負の値となります。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;horizontalAdvance&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;文字を横方向にレイアウトする時に使用する数値です。&nbsp;&nbsp;<br>&nbsp;&nbsp;文字の基準点から次の文字の基準点までの横方向の距離です。&nbsp;&nbsp;<br>&nbsp;&nbsp;右向きに正の値をとります。&nbsp;&nbsp;<br>&nbsp;&nbsp;下の図の例では正の値となります。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;verticalBearingX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;文字を縦方向にレイアウトする時に使用する数値です。&nbsp;&nbsp;<br>&nbsp;&nbsp;文字の基準点から、その文字の文字矩形左端までのX軸上の距離です。&nbsp;&nbsp;<br>&nbsp;&nbsp;右向きに正の値をとります。&nbsp;&nbsp;<br>&nbsp;&nbsp;下の図の縦組の例では負の値となります。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;verticalBearingY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;文字を縦方向にレイアウトする時に使用する数値です。&nbsp;&nbsp;<br>&nbsp;&nbsp;文字の基準点から、その文字の文字矩形上端までのY軸上の距離です。&nbsp;&nbsp;<br>&nbsp;&nbsp;下向きに正の値をとります。&nbsp;&nbsp;<br>&nbsp;&nbsp;下の図の例では正の値となります。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;verticalAdvance&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;文字を横方向にレイアウトする時に使用する数値です。&nbsp;&nbsp;<br>&nbsp;&nbsp;文字の基準点から次の文字の基準点までの縦方向の距離です。&nbsp;&nbsp;<br>&nbsp;&nbsp;下向きに正の値をとります。&nbsp;&nbsp;<br>&nbsp;&nbsp;下の図の例では正の値となります。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">これらの数値の単位はピクセルです。文字サイズの数値のポイントを単位とした値とは異なります。<br><a href="../others/libfont-Reference-Japanese.htm#SceFont_t_iGlyphMetricsInfo">SceFont_t_iGlyphMetricsInfo</a>のメンバ変数には、変数名の64を取り去った名称の値を64倍した値がストアされます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_4">
<h3>
<a href="#Heading3_3"> 3. </a>4 
<!-- hp1 --><b>ビットマップ化されたグリフイメージ</b><br>
</a>
</h3>
<div style="margin-left:50px;">アプリケーションプログラムは、2値以上の輝度情報として量子化されたグリフイメージを取得する事ができます。<br>アプリケーションプログラムは、<a href="../others/libfont-Reference-Japanese.htm#SceFont_t_userImageBufferRec">SceFont_t_userImageBufferRec</a>型のデータに出力先となるバッファメモリに関する情報と出力させる位置をセットし<a href="../others/libfont-Reference-Japanese.htm#sceFontGetCharGlyphImage">sceFontGetCharGlyphImage</a>()関数をコールする事で、引数に与えた文字コードに対応したグリフイメージを、所定のバッファメモリに転写させる事ができます。<br><br>位置の精度は1/64ピクセルです。これは、文字の送り量（horizontalAdvance）の値を、1/64ピクセル単位としている事に関連しています。バッファのピクセル境界をまたがって配置されるグリフのピクセルは、近隣のピクセルに輝度が内分されます。<br><br></div>

<!-- sce_title -->
<a Name ="HeadingT_3_4_7">
<div style="margin-left:40px;"><h4><b>SceFont_t_fGlyphMetricsInfoの内訳（SceFont_t_iGlyphMetricsInfoも同等）</b><br><br></h4></div></a>

<div style="margin-left:50px;"></div>

<div align=center>
<p>
<img src="gif/libfont-Overview-Japanese001.jpg">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 1  横組のためのグリフメトリクス情報</b><br>
</div>
<br>
<div style="margin-left:50px;"><br></div>

<div align=center>
<p>
<img src="gif/libfont-Overview-Japanese002.jpg">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 2  縦組のためのグリフメトリクス情報</b><br>
</div>
<br>
<div style="margin-left:50px;"><br></div>

<div align=center>
<p>
<img src="gif/libfont-Overview-Japanese003.jpg">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 3  SceFont_t_charInfo 内のビットマップに関する情報</b><br>
</div>
<br>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値の名称</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値の意味</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;bitmapWidth&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ビットマップデータの横サイズを、&nbsp;&nbsp;<br>&nbsp;&nbsp;ピクセルを単位として示した整数の数値です。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;bitmapHeight&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ビットマップデータの縦サイズを、&nbsp;&nbsp;<br>&nbsp;&nbsp;ピクセルを単位として示した整数の数値です。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;bitmapLeft&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;文字の基準点からビットマップの左端までの、&nbsp;&nbsp;<br>&nbsp;&nbsp;ピクセルを単位とした整数の数値です。&nbsp;&nbsp;<br>&nbsp;&nbsp;これはビットマップ化されたグリフイメージ上の&nbsp;&nbsp;<br>&nbsp;&nbsp;文字の原点のX軸上の位置を示す値です。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;bitmapTop&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;文字の基準点からビットマップの上端までの、&nbsp;&nbsp;<br>&nbsp;&nbsp;ピクセルを単位とした整数の数値です。&nbsp;&nbsp;<br>&nbsp;&nbsp;これはビットマップ化されたグリフイメージ上の&nbsp;&nbsp;<br>&nbsp;&nbsp;文字の原点のY軸上の位置を示す値です。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_title -->
<a Name ="HeadingT_3_4_8">
<div style="margin-left:40px;"><h4><b>補足</b><br><br></h4></div></a>

<div style="margin-left:67px;">ビットマップ化されたグリフイメージの縦組レイアウト用文字原点の位置を示す数値は保持していません。<br>縦に文字を組む場合は、この場合、ビットマップ化されたグリフイメージのサブピクセル配置精度は期待できませんが、<a href="../others/libfont-Reference-Japanese.htm#SceFont_t_iGlyphMetricsInfo">SceFont_t_iGlyphMetricsInfo</a>, <a href="../others/libfont-Reference-Japanese.htm#SceFont_t_fGlyphMetricsInfo">SceFont_t_fGlyphMetricsInfo</a>のverticalBearingX, verticalBearingY, verticalAdvanceの値を使ってビットマップ化されたグリフイメージを配置してください。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
