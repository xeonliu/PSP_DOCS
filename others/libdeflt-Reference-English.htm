<html lang="en">
<head>
<title>libdeflt-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libdeflt Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceGzipHeader"></a>
<table width="100%"><td width="70%"><font size=6>SceGzipHeader<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Library entry table header<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
typedef struct {
	unsigned char <i>id1</i>;
	unsigned char <i>id2</i>;
	unsigned char <i>cm</i>;
	unsigned char <i>flg</i>;
	unsigned int <i>uiMtime</i>;
	unsigned char <i>xlf</i>;
	unsigned char <i>os</i>;
} __attribute__((packed)) <b>SceGzipHeader</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>id1</i>&nbsp;</td>
<td valign="top">&nbsp;Magic&nbsp;number&nbsp;(fixed&nbsp;to&nbsp;0x1F)&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>id2</i>&nbsp;</td>
<td valign="top">&nbsp;Magic&nbsp;number&nbsp;(fixed&nbsp;to&nbsp;0x8B)&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>cm</i>&nbsp;</td>
<td valign="top">&nbsp;Indicates&nbsp;the&nbsp;compression&nbsp;method.&nbsp;Only&nbsp;0x08=DEFLATE&nbsp;is&nbsp;supported&nbsp;by&nbsp;libdeflt.&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>flg</i>&nbsp;</td>
<td valign="top">&nbsp;Flags&nbsp;<br>&nbsp;Bits&nbsp;7&nbsp;-&nbsp;5:&nbsp;Reserved&nbsp;<br>&nbsp;Bit&nbsp;4:&nbsp;FCOMMENT&nbsp;<br>&nbsp;Bit&nbsp;3:&nbsp;FNAME&nbsp;<br>&nbsp;Bit&nbsp;2:&nbsp;FEXTRA&nbsp;<br>&nbsp;Bit&nbsp;1:&nbsp;FHCRC&nbsp;<br>&nbsp;Bit&nbsp;0:&nbsp;FTEXT&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>uiMtime</i>&nbsp;</td>
<td valign="top">&nbsp;File&nbsp;Modified&nbsp;Datetime&nbsp;(GMT)&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>xlf</i>&nbsp;</td>
<td valign="top">&nbsp;Extra&nbsp;flags&nbsp;<br>&nbsp;0x02&nbsp;=&nbsp;Maximum&nbsp;compression&nbsp;rate&nbsp;<br>&nbsp;0x04&nbsp;=&nbsp;Prioritize&nbsp;speed&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>os</i>&nbsp;</td>
<td valign="top">&nbsp;OS&nbsp;identification&nbsp;code&nbsp;<br>&nbsp;0x00&nbsp;=&nbsp;FAT&nbsp;<br>&nbsp;0x01&nbsp;=&nbsp;Amiga&nbsp;<br>&nbsp;0x02&nbsp;=&nbsp;VMS&nbsp;<br>&nbsp;0x03&nbsp;=&nbsp;Unix&nbsp;<br>&nbsp;0x04&nbsp;=&nbsp;VM/CMS&nbsp;<br>&nbsp;0x05&nbsp;=&nbsp;Atari&nbsp;TOS&nbsp;<br>&nbsp;0x06&nbsp;=&nbsp;HPFS&nbsp;(OS/2,&nbsp;NT)&nbsp;<br>&nbsp;0x07&nbsp;=&nbsp;Macintosh&nbsp;<br>&nbsp;0x08&nbsp;=&nbsp;Z-System&nbsp;<br>&nbsp;0x09&nbsp;=&nbsp;CP/M&nbsp;<br>&nbsp;0x0A&nbsp;=&nbsp;TOPS-20&nbsp;<br>&nbsp;0x0B&nbsp;=&nbsp;NTFS&nbsp;(NT)&nbsp;<br>&nbsp;0x0C&nbsp;=&nbsp;QDOS&nbsp;<br>&nbsp;0x0D&nbsp;=&nbsp;Acorn&nbsp;RISCOS&nbsp;<br>&nbsp;0xFF&nbsp;=&nbsp;Unknown&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents the header of a gzip-format compressed file. <br>Various types of GZIP header parsing functions can be used to interpret this header and obtain the value and starting address of each field.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceGzipGetInfo">sceGzipGetInfo</a>(), <a href="../others/libdeflt-Reference-English.htm#sceGzipGetName">sceGzipGetName</a>(), <a href="../others/libdeflt-Reference-English.htm#sceGzipGetComment">sceGzipGetComment</a>(), <a href="../others/libdeflt-Reference-English.htm#sceGzipGetCompressedData">sceGzipGetCompressedData</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceZipHeaderPK0304"></a>
<table width="100%"><td width="70%"><font size=6>SceZipHeaderPK0304<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ZIP header attached to each file<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
typedef struct {
	unsigned int <i>signature</i>;
	unsigned short <i>version</i>;
	unsigned short <i>option</i>;
	unsigned short <i>cm</i>;
	unsigned short <i>filetime</i>;
	unsigned short <i>filedate</i>;
	unsigned int <i>crc32</i>;
	unsigned int <i>compsize</i>;
	unsigned int <i>uncompsize</i>;
	unsigned short <i>fnamelen</i>;
	unsigned short <i>extralen</i>;
	char <i>filename</i>[1];
} __attribute__((packed)) <b>SceZipHeaderPK0304</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>signature</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Magic number (fixed to 0x04034b50)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>version</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Version&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>option</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Option&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Indicates the compression method. Only 0x08=DEFLATE is supported by libdeflt.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>filetime</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File update time (MS-DOS format)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>filedate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File update date (MS-DOS format)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>crc32</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;CRC&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>compsize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Compressed size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uncompsize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Uncompressed size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fnamelen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Filename length&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>extralen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Extra field length&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>filename</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Filename (variable length, <i>fnamelen</i> bytes with no terminating character)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents the header of a ZIP-format compressed file. Multiple files can be collected together (archived) in a ZIP file, and a header with this format is attached to each individual archived file.<br>When ZIP header parsing functions are used, this header is interpreted and the value and starting address of each field are obtained.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceZipGetInfo">sceZipGetInfo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceZipFooterPK0708"></a>
<table width="100%"><td width="70%"><font size=6>SceZipFooterPK0708<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ZIP footer attached to each file<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
typedef struct {
	unsigned int <i>signature</i>;
	unsigned int <i>crc32</i>;
	unsigned int <i>compsize</i>;
	unsigned int <i>uncompsize</i>;
} __attribute__((packed)) <b>SceZipFooterPK0708</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>signature</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Magic number (fixed to 0x08074b50)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>crc32</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;CRC&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>compsize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Compressed size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uncompsize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Uncompressed size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents the footer of a ZIP-format compressed file. When the header attached to each file does not contain information related to the CRC and file size, a footer with this format is assigned to store that information.<br>When ZIP header parsing functions are used and the header does not contain a CRC32 value, this footer is interpreted and the appropriate CRC32 value is returned. <br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceZipGetInfo">sceZipGetInfo</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceDeflateDecompress"></a>
<table width="100%"><td width="70%"><font size=6>sceDeflateDecompress<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Expand deflate-compressed data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
int <b>sceDeflateDecompress</b> (
	void *<i>pDst</i>,
	unsigned int <i>uiBufSize</i>,
	const void *<i>pSrcDeflate,</i>
<i>	</i>void **<i>ppNext</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pDst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the buffer address which is to receive the expanded data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the size of the buffer which is to receive the expanded data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcDeflate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the deflate-compressed compressed data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ppNext</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the void * variable which returns the address immediately following the processed compressed data after expansion.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0 or higher&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of the expanded data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_FORMAT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid format&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer overflowed during expansion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Expands deflate-compressed data. <br>This function takes the start address of the deflate-compressed data. To expand data with a gzip header, retrieve the start address of the deflate-compressed data using the <a href="../others/libdeflt-Reference-English.htm#sceGzipGetCompressedData">sceGzipGetCompressedData</a>() function, or use the <a href="../others/libdeflt-Reference-English.htm#sceGzipDecompress">sceGzipDecompress</a>() function. <br>If expansion is completed normally, the address immediately following the compressed data which was processed is assigned to the void * variable which was specified by the <i>ppNext</i> argument. For the gzip format, CRC32 and ISIZE are stored, and for the zlib format, Adler32 is stored.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceGzipDecompress">sceGzipDecompress</a>(), <a href="../others/libdeflt-Reference-English.htm#sceGzipGetCompressedData">sceGzipGetCompressedData</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGzipDecompress"></a>
<table width="100%"><td width="70%"><font size=6>sceGzipDecompress<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Expand gzip-format data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
int <b>sceGzipDecompress</b> (
	void *<i>pDst</i>,
	unsigned int <i>uiBufSize</i>,
	const void *<i>pSrcGzip,</i>
	unsigned int *<i>puiCrc32</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pDst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the buffer address which is to receive the expanded data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the size of the buffer which is to receive the expanded data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcGzip</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the gzip-format compressed data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiCrc32</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the unsigned int variable to receive the CRC32 value.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0 or higher&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of the expanded data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_FORMAT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid format&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer overflowed during expansion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_NOT_SUPPORTED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A compression method other than DEFLATE was used&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Expands deflate-compressed data. <br>This function takes the starting address of compressed data with a gzip header and expands the data. <br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceGzipCrc32">sceGzipCrc32</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceZlibDecompress"></a>
<table width="100%"><td width="70%"><font size=6>sceZlibDecompress<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Expand zlib-format data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
int <b>sceZlibDecompress</b> (
	void *<i>pDst</i>,
	unsigned int <i>uiBufSize</i>,
	const void *<i>pSrcDeflate,</i>
<i>	</i>unsigned int *<i>puiAdler32</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pDst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the buffer address which is to receive the expanded data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiBufSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the size of the buffer which is to receive the expanded data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcDeflate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the ZLIB-compressed compressed data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiAdler32</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the unsigned int variable which returns the Adler32 checksum value stored at the address immediately following the processed compressed data after expansion.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0 or higher&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of the expanded data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_FORMAT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid format&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer overflowed during expansion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Expands deflate-compressed data. <br>This function takes the start address of the zlib-format compressed data and expands the data.<br>If expansion is completed normally, the Adler32 checksum value stored at the address immediately following the compressed data which was processed is assigned to the unsigned int variable which was specified by the <i>puiAdler32</i> argument. <br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceGzipDecompress">sceGzipDecompress</a>(), <a href="../others/libdeflt-Reference-English.htm#sceGzipGetCompressedData">sceGzipGetCompressedData</a>(), <a href="../others/libdeflt-Reference-English.htm#sceZlibAdler32">sceZlibAdler32</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGzipGetComment"></a>
<table width="100%"><td width="70%"><font size=6>sceGzipGetComment<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get comment string<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
const char *<b>sceGzipGetComment</b> (
	const char *<i> pSrcGzip</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcGzip</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the gzip-format compressed data.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Start address of the comment string&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A comment string is not stored in the gzip header. &nbsp;&nbsp;<br>&nbsp;&nbsp;Or, the data specified by <i>pSrcGzip</i> is not a gzip header.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Gets the address in which the comment string is stored in a gzip header. If it is not gzip-format data, or if a comment string is not contained in the header, NULL is returned. <br>This function is a wrapper function for the <a href="../others/libdeflt-Reference-English.htm#sceGzipGetInfo">sceGzipGetInfo</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceGzipGetInfo">sceGzipGetInfo</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGzipGetCompressedData"></a>
<table width="100%"><td width="70%"><font size=6>sceGzipGetCompressedData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Gets the start address of DEFLATE-compressed data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
const void *<b>sceGzipGetCompressedData</b> (
	const char *<i> pSrcGzip</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcGzip</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the gzip-format compressed data.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Start address of DEFLATE-compressed data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The data specified by <i>pSrcGzip</i> is not in gzip format.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Gets the start address of deflate-compressed data from a gzip header. If data is not in gzip format, NULL is returned. <br>This function is a wrapper function for the <a href="../others/libdeflt-Reference-English.htm#sceGzipGetInfo">sceGzipGetInfo</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceGzipGetInfo">sceGzipGetInfo</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGzipGetInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceGzipGetInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get elements from gzip header<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
int <b>sceGzipGetInfo</b> (
	const void *<i>pSrcGzip</i>,
	const void **<i>ppvExtra</i>,
	const char **<i>ppszName</i>,
	const char **<i>ppszComment</i>,
	unsigned short *<i>pusCrc</i>,
	const void **<i>ppvData</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcGzip</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the gzip-format compressed data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ppvExtra</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the void * variable which receives the extra field start address.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ppszName</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the const char * variable which receives the filename field start address.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ppszComment</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the const char * variable which receives the comment field start address.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pusCrc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the unsigned short variable to receive the CRC16 value.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ppvData</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the const void * variable which receives the compressed data start address.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_FORMAT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The gzip header is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Gets the addresses of the elements from a gzip file header. Only CRC16 is fixed-size data, so this element is retrieved directly. <br>Some of the elements may not be mandatory in gzip headers. For elements which are not present in the file, NULL is returned for the address.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGzipGetName"></a>
<table width="100%"><td width="70%"><font size=6>sceGzipGetName<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get filename<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
const char *<b>sceGzipGetName</b> (
	const char *<i> pSrcGzip</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcGzip</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the gzip-format compressed data.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Start address of the filename&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A filename is not stored in the gzip header. &nbsp;&nbsp;<br>&nbsp;&nbsp;Or, the data specified by <i>pSrcGzip</i> is not a gzip header.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Gets the address in which the filename is stored in a gzip header. If it is not gzip-format data, or if a filename is not contained in the header, NULL is returned. <br>This function is a wrapper function for the <a href="../others/libdeflt-Reference-English.htm#sceGzipGetInfo">sceGzipGetInfo</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceGzipGetInfo">sceGzipGetInfo</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGzipIsValid"></a>
<table width="100%"><td width="70%"><font size=6>sceGzipIsValid<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Check the magic number of a gzip header<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
int <b>sceGzipIsValid</b> (
	const void *<i> pSrcGzip</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcGzip</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the gzip-format compressed data.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Magic number found in gzip header&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Magic number does not match&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Checks the magic number at the beginning of a header, and determines whether or not the data is in gzip format. The first two bytes of the header of gzip-format data constitute a magic number, and are 0x1F and 0x8B. The sceGzipIsValid() function checks only the first two bytes.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceZlibGetCompressedData"></a>
<table width="100%"><td width="70%"><font size=6>sceZlibGetCompressedData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get the start address of DEFLATE-compressed data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
const void *<b>sceZlibGetCompressedData</b> (
	const char *<i> pSrcZlib</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcZlib</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the zlib-format compressed data.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Start address of DEFLATE-compressed data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The data specified by <i>pSrcZlib</i> is not in zlib format.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Gets the start address of deflate-compressed data from a zlib-format header. If data is not in zlib format, NULL is returned. <br>This function is a wrapper function for the <a href="../others/libdeflt-Reference-English.htm#sceZlibGetInfo">sceZlibGetInfo</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceZlibGetInfo">sceZlibGetInfo</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceZlibGetInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceZlibGetInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get elements from zlib header<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
int <b>sceZlibGetInfo </b>(
	const void *<i>pSrcZlib</i>,
	unsigned char *<i>pbCmf</i>,
	unsigned char *<i>pbFlg</i>,
	unsigned int *<i>puiDictId</i>,
	const void **<i>ppvData</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcZlib</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the zlib-format compressed data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pbCmf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the unsigned char variable which receives the compression method and flags.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pbFlg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the unsigned char variable which receives the flags for compression level etc.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiDictId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the unsigned int variable which receives the dictionary ID, when a defined dictionary is used.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ppvData</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the const void * variable which receives the compressed data start address.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_FORMAT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The zlib header is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Gets the elements from zlib-format data. For the meaning of the respective elements, refer to RFC 1950.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceZlibIsValid"></a>
<table width="100%"><td width="70%"><font size=6>sceZlibIsValid<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Check the magic number of a zlib header<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
int <b>sceZlibIsValid</b> (
	const void *<i> pSrcZlib</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrcZlib</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the zlib-format compressed data.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Magic number found in zlib header&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Magic number does not match&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Checks the magic number at the beginning of a zlib-format header, and determines whether or not the data is in zlib format. When the first two bytes of a zlib-format header constitute a big-endian 16-bit value, it will be an integral multiple of 31. The sceZlibIsValid() function checks only the first two bytes.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceZipGetInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceZipGetInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get elements from ZIP header<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
int <b>sceZipGetInfo </b>(
	const void *<i>pSrc</i>,
	const void **<i>ppvExtra</i>,
	unsigned int *<i>puiCrc</i>,
	const void **<i>ppvData</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the ZIP-format compressed data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ppvExtra</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the void * variable which receives the extra field start address. &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>puiCrc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the unsigned int variable to receive the CRC32 value. &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ppvData</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies a pointer to the const void * variable which receives the compressed data start address.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_FORMAT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The ZIP header is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Gets information from a ZIP-format archive related to individual files within the archive.<br>DEFLATE-format compressed data from the stored address<i>,</i> or uncompressed original data that is copied directly is placed at <i>ppvData</i>. If the data is compressed, it can be expanded by passing this address to <a href="../others/libdeflt-Reference-English.htm#sceDeflateDecompress">sceDeflateDecompress</a>().<br>To determine if the data is compressed, check the value of the <i>cm</i> member of the <a href="../others/libdeflt-Reference-English.htm#SceZipHeaderPK0304">SceZipHeaderPK0304</a> structure.<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGzipCrc32"></a>
<table width="100%"><td width="70%"><font size=6>sceGzipCrc32<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Calculate CRC32 checksum<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
int <b>sceGzipCrc32</b> (
	unsigned int <i>uiCrc</i>,
	const unsigned char *<i>pSrc</i>,
	unsigned int <i>uiSize</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiCrc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the initial value. Normally set to 0.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the data for which to perform the CRC32 calculation.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the size of the data for which to perform the CRC32 calculation.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns a CRC32.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Calculates checksum digits using the CRC32 algorithm. Refer to RFC 1952.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceGzipDecompress">sceGzipDecompress</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceZlibAdler32"></a>
<table width="100%"><td width="70%"><font size=6>sceZlibAdler32<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Calculate Adler32 checksum<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libdeflt.h&gt;
int <b>sceZlibAdler32</b> (
	unsigned int <i>uiAdler</i>,
	const unsigned char *<i>pSrc</i>,
	unsigned int <i>uiSize</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-disabled or -enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiAdler</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the initial value. Normally set to 1.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the start address of the data for which to perform the checksum calculation.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the size of the data for which to perform the checksum calculation.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns an Adler32-format checksum.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Calculates a checksum using the Adler32 algorithm. Refer to RFC 1950.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../others/libdeflt-Reference-English.htm#sceZlibDecompress">sceZlibDecompress</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>libdeflt error codes<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0 or higher&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of the expanded data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_INVALID_FORMAT">SCE_ERROR_INVALID_FORMAT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid format&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_INVALID_SIZE">SCE_ERROR_INVALID_SIZE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer overflowed during expansion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_ERROR_NOT_SUPPORTED">SCE_ERROR_NOT_SUPPORTED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A compression method other than DEFLATE was used&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2010 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
