<html lang="jp">
<head>
<title>libsha0-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libsha0
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>ライブラリ概要</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>概要</b><br>
</a>
</h3>
<div style="margin-left:50px;">libsha0は、SHA-0(Secure Hash Algorithm)形式のダイジェスト値を生成するためのライブラリです。データの破壊を検出したり、HMAC(Keyed-Hashing for Message Authentication)に応用することでデータの改竄を防ぐのに使用することができます。<br><br>SHA-0はコリジョンが発生させられることがわかっているため、使用はお勧めしません。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>関連ファイル</b><br>
</a>
</h3>
<div style="margin-left:50px;">libsha0を使用するために必要なファイルは次のとおりです。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>カテゴリ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ヘッダファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libsha0.h&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;スタティックリンクライブラリファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libsha0.a&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;スタブライブラリファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libsha0_stub.a&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;weakインポートスタブライブラリファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libsha0_stub_weak.a&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;PRXモジュールファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libsha0.prx&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>使用手順</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>基本的な使用手順</b><br>
</a>
</h3>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_1_1"><h4>
(1)&nbsp;<b>SHA-0ダイジェスト値の計算(一括)</b><br></h4>
</a></div>
<div style="margin-left:67px;">libsha0の使用には特に初期化は必要ありません。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>u_char digest[SCE_SHA0_DIGEST_SIZE];

<a href="../others/libsha0-Reference-Japanese.htm#sceSha0Digest">sceSha0Digest</a>(plaintext, length, digest);
</font></pre></div>
<div style="margin-left:67px;"><br>以上のようにいきなり<a href="../others/libsha0-Reference-Japanese.htm#sceSha0Digest">sceSha0Digest</a>()関数を使用すれば、ダイジェスト値計算処理が行われます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_1_2"><h4>
(2)&nbsp;<b>SHA-0ダイジェスト値の計算(分割)</b><br></h4>
</a></div>
<div style="margin-left:67px;">巨大なデータについてダイジェスト値を計算する場合には、ハッシュ計算処理を分割することができます。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3><a href="../others/libsha0-Reference-Japanese.htm#SceSha0Context">SceSha0Context</a> sha;
u_char digest[SCE_SHA0_DIGEST_SIZE];

<a href="../others/libsha0-Reference-Japanese.htm#sceSha0BlockInit">sceSha0BlockInit</a>(&amp;sha);
<a href="../others/libsha0-Reference-Japanese.htm#sceSha0BlockUpdate">sceSha0BlockUpdate</a>(&amp;sha, plain1, len1);
<a href="../others/libsha0-Reference-Japanese.htm#sceSha0BlockUpdate">sceSha0BlockUpdate</a>(&amp;sha, plain2, len2);
<a href="../others/libsha0-Reference-Japanese.htm#sceSha0BlockUpdate">sceSha0BlockUpdate</a>(&amp;sha, plain3, len3);
	:		任意の回数繰り返し
<a href="../others/libsha0-Reference-Japanese.htm#sceSha0BlockResult">sceSha0BlockResult</a>(&amp;sha, digest);
</font></pre></div>
<div style="margin-left:67px;"><br><a href="../others/libsha0-Reference-Japanese.htm#sceSha0BlockInit">sceSha0BlockInit</a>()関数で<a href="../others/libsha0-Reference-Japanese.htm#SceSha0Context">SceSha0Context</a>構造体を初期化し、任意の回数だけ<a href="../others/libsha0-Reference-Japanese.htm#sceSha0BlockUpdate">sceSha0BlockUpdate</a>()関数を呼び出した後、最後に<a href="../others/libsha0-Reference-Japanese.htm#sceSha0BlockResult">sceSha0BlockResult</a>()関数でダイジェスト値を取得します。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
