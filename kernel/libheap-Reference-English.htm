<html lang="en">
<head>
<title>libheap-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libheap Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHeapOptParam"></a>
<table width="100%"><td width="70%"><font size=6>SceHeapOptParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Heap additional data<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>SceHeapOptParam</b> {
	unsigned int <i>size</i>;
} SceHeapOptParam;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of this structure (sizeof(SceHeapOptParam))&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used for storing additional data related to the heap. It is provided when <a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>() is used to create the heap. Currently, it is not used yet.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHeapAllocOptParam"></a>
<table width="100%"><td width="70%"><font size=6>SceHeapAllocOptParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Heap allocation additional data<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>SceHeapAllocOptParam</b> {
	unsigned int <i>size</i>;
	unsigned int <i>alignment</i>;
} SceHeapAllocOptParam;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of this structure (sizeof(SceHeapAllocOptParam))&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>alignment</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alignment size&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used for storing additional data related to heap allocation. It is provided when <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>() is used to allocate a memory block from the heap.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHeapMallinfo"></a>
<table width="100%"><td width="70%"><font size=6>SceHeapMallinfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Heap usage status information<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>SceHeapMallinfo </b>{
	int <i>arena</i>;		/* Total space allocated from system     */
	int <i>ordblks</i>;		/* Number of ordinary blocks             */
	int <i>smblks</i>;		/* Unused -- always zero                 */
	int <i>hblks</i>;		/* Number of FPL regions                 */
	int <i>hblkhd</i>;		/* Total space allocated from FPL (same as arena) */
	int <i>usmblks</i>;		/* Unused -- always zero                 */
	int <i>fsmblks</i>;		/* Unused -- always zero                 */
	int <i>uordblks</i>;		/* Total allocated space                 */
	int <i>fordblks</i>;		/* Total memory that can be allocated      */
	int <i>keepcost</i>;		/* Unused -- always zero                 */
} SceHeapMallinfo;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arena</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Total memory allocated from the kernel (bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ordblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of allocated blocks&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unused (always zero)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>hblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of times fixed-length pools were allocated from the kernel&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>hblkhd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Total memory allocated from the kernel (same as arena)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>usmblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unused (always zero)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fsmblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unused (always zero)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uordblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Total allocated memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fordblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Total memory that can be allocated&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>keepcost</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unused (always zero)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used for storing data that is obtained when <a href="../kernel/libheap-Reference-English.htm#sceHeapGetMallinfo">sceHeapGetMallinfo</a>() is used to get the heap memory usage status.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapGetMallinfo">sceHeapGetMallinfo</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapAllocHeapMemory"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapAllocHeapMemory<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Allocate memory from heap memory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
void * <b>sceHeapAllocHeapMemory</b>(
	void *<i>heap</i>,
	unsigned int <i>nbytes</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of heap memory previously allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>().&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nbytes</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of memory to be allocated in bytes.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Result&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Not NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of allocated memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Allocation failed&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function allocates memory from <i>heap</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapAllocHeapMemoryWithOption"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapAllocHeapMemoryWithOption<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Allocate memory from heap memory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
void * <b>sceHeapAllocHeapMemoryWithOption </b>(
	void *<i>heap</i>,
	unsigned int <i>nbytes,</i>
	const <a href="../kernel/libheap-Reference-English.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a> *<i>optParam</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of heap memory previously allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>().&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nbytes</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of memory to be allocated in bytes.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to an <a href="../kernel/libheap-Reference-English.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a> structure that contains additional information for use when memory is allocated.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Result&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Not NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of allocated memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Allocation failed&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function allocates memory from <i>heap</i>. The alignment size of the memory to be allocated can be specified by using the <a href="../kernel/libheap-Reference-English.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a> structure.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapCreateHeap"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapCreateHeap<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create heap memory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
void * <b>sceHeapCreateHeap </b>( 
	const char *<i>name,</i>
	int <i>heapblocksize</i>,
	int <i>flags,</i>
	const <a href="../kernel/libheap-Reference-English.htm#SceHeapOptParam">SceHeapOptParam</a> *<i>optParam</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Name of the heap. This is only used by the operator for visual identification during debugging, so no specific check for uniqueness is performed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heapblocksize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of heap memory to be allocated, in bytes.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0 or a flag.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reserved for future extensions. NULL should be specified.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Result&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Not NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of allocated memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Allocation failed&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function allocates heap memory with a size equal to the number of bytes specified by the <i>heapblocksize </i>argument rounded up to a multiple of 4 or more. <br><br>The following flags can be specified for <i>flags</i>.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Flag&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Meaning&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_HEAP_AUTO_EXTEND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;When there is insufficient heap memory, the heap is automatically extended.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_HEAP_ALLOC_MEM_BOTTOM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory is allocated by searching for an empty area starting from high memory addresses.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapDeleteHeap">sceHeapDeleteHeap</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapDeleteHeap"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapDeleteHeap<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete heap memory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
int <b>sceHeapDeleteHeap </b>(
	void *<i>heap</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of heap memory to be released&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If an error occurs, a negative value is returned.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Result&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i> is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function releases the heap memory specified by <i>heap</i> and returns it to the PSP&trade; kernel. Note that even if memory that was previously allocated with a function such as <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>() was left in heap memory, the entire heap memory will be deleted, regardless.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a> ()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapFreeHeapMemory"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapFreeHeapMemory<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Release memory back to heap memory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
int <b>sceHeapFreeHeapMemory </b>(
	void *<i>heap</i>,
	void *<i>ptr</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of heap memory previously allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>().&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of the memory to be released.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If an error occurs, a negative value is returned.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Value&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;Result&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i> is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_POINTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i> is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function releases memory blocks that were allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), or <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>() from the heap indicated by <i>heap</i> back to heap memory. The <i>heap</i> argument must specify the same heap as was specified when the memory was allocated.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(),<br><a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapGetTotalFreeSize"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapGetTotalFreeSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get size of empty heap memory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
int <b>sceHeapGetTotalFreeSize </b>(
	void *<i>heap</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of heap memory previously allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>().&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If an error occurs, a negative value is returned.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i> is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the current amount of empty heap memory.<br>When there are discontiguous empty memory areas within heap memory, this function returns the sum of the sizes of all empty memory areas. Note that the size that is returned by this function does not match the total size of memory that can be allocated by a function such as <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>() because of libheap management overhead.<br>If it is a problem that discontiguous empty memory areas exist within heap memory, this situation can be avoided by using the <a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>() function to create multiple independent heap memories.<br><br>This function is assumed to be used essentially for debugging.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapGetMallinfo"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapGetMallinfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get heap memory usage status<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
int <b>sceHeapGetMallinfo </b>(
	void *<i>heap,</i>
	<a href="../kernel/libheap-Reference-English.htm#SceHeapMallinfo">SceHeapMallinfo</a> *<i>pInfo</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of heap memory previously allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>().&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pInfo</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to an <a href="../kernel/libheap-Reference-English.htm#SceHeapMallinfo">SceHeapMallinfo</a> structure for obtaining heap memory information.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If an error occurs, a negative value is returned.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i> is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the current usage status of the specified heap memory.<br><br>This function is assumed to be used essentially for debugging.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#SceHeapMallinfo">SceHeapMallinfo</a><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapIsAllocatedHeapMemory"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapIsAllocatedHeapMemory<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Check whether or not memory was allocated from heap memory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
int <b>sceHeapIsAllocatedHeapMemory </b>(
	void *<i>heap</i>,
	void *<i>ptr</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of heap memory that was allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>().&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of the memory to be checked.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If an error occurs, a negative value is returned.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The memory was allocated from <i>heap</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The memory was not allocated from <i>heap</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i> is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_POINTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i> is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description  -->
<div style="margin-left:10px;"><b>Description </b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function checks whether or not the heap indicated by the <i>heap</i> argument is memory that was allocated by <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), or <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>().<br><br>This function is assumed to be used essentially for debugging. <br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapReallocHeapMemory"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapReallocHeapMemory<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reallocate memory from heap memory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
void * <b>sceHeapReallocHeapMemory</b>(
	void *<i>heap</i>,
	void *<i>ptr</i>,
	unsigned int <i>nbytes</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of heap memory previously allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>(). &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of memory block to be reallocated.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nbytes</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of new memory to be allocated in bytes.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value </b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Not NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of reallocated memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reallocation failed&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function reallocates memory from <i>heap</i>. For <i>ptr</i>, specify either NULL or the memory block that was previously allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), sceHeapReallocHeapMemory(), or <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>(). If NULL is specified for <i>ptr</i>, this function will operate the same as <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>().<br>For <i>nbytes</i>, specify the updated memory block size that is desired. If 0 is specified for <i>nbytes</i>, this function operates the same as <a href="../kernel/libheap-Reference-English.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>(). The return value at this time will be NULL.<br>If the newly allocated size is larger than the current size, the newly allocated memory block may be moved to a different location than the address specified by <i>ptr</i>. If a move occurs, the current memory block will be released by <a href="../kernel/libheap-Reference-English.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapReallocHeapMemoryWithOption"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapReallocHeapMemoryWithOption<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reallocate memory from heap memory<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
void * <b>sceHeapReallocHeapMemoryWithOption </b>(
	void *<i>heap</i>,
	void *<i>ptr</i>,
	unsigned int <i>nbytes,</i>
	const <a href="../kernel/libheap-Reference-English.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a> *<i>optParam</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of heap memory previously allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>().&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of memory block to be reallocated.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nbytes</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of new memory to be allocated in bytes.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to an <a href="../kernel/libheap-Reference-English.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a> structure that contains additional information for use when memory is allocated. &nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Not NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of reallocated memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reallocation failed&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function reallocates memory from <i>heap</i>. For <i>ptr</i>, specify either NULL or the memory block that was previously allocated with <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), or sceHeapReallocHeapMemoryWithOption(). If NULL is specified for <i>ptr</i>, this function will operate the same as <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>().<br>For <i>nbytes</i>, specify the updated memory block size that is desired. If 0 is specified for <i>nbytes</i>, this function operates the same as <a href="../kernel/libheap-Reference-English.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>(). The return value at this time will be NULL.<br><br>The alignment size of the memory to be allocated can be specified in the <a href="../kernel/libheap-Reference-English.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a> structure.<br><br>If the newly allocated size is larger than the current size or if the current pointer is incompatible with the alignment size specified in the <a href="../kernel/libheap-Reference-English.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a> structure, the newly allocated memory block may be moved to a different location than the address specified by <i>ptr</i>. If a move occurs, the current memory block will be released by <a href="../kernel/libheap-Reference-English.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>(). <br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-English.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-English.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), <a href="../kernel/libheap-Reference-English.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a><br><br><br><br><br><br><br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2008 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
