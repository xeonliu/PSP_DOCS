<html lang="jp">
<head>
<title>libheap-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libheap
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHeapOptParam"></a>
<table width="100%"><td width="70%"><font size=6>SceHeapOptParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープの付加データ<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>SceHeapOptParam</b> {
	unsigned int <i>size</i>;
} SceHeapOptParam;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;この構造体のサイズ(sizeof(SceHeapOptParam)の値)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()でヒープを生成する場合に与える付加データを格納するために使用する構造体です。現在はまだ使用されていません。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHeapAllocOptParam"></a>
<table width="100%"><td width="70%"><font size=6>SceHeapAllocOptParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープアロケーションの付加データ<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>SceHeapAllocOptParam</b> {
	unsigned int <i>size</i>;
	unsigned int <i>alignment</i>;
} SceHeapAllocOptParam;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;この構造体のサイズ(sizeof(SceHeapAllocOptParam)の値)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>alignment</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;アラインメントサイズ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>()でヒープからメモリブロックをアロケートする場合に与える付加データを格納するために使用する構造体です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHeapMallinfo"></a>
<table width="100%"><td width="70%"><font size=6>SceHeapMallinfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープ使用状態情報<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>typedef struct <b>SceHeapMallinfo </b>{
	int <i>arena</i>;		/*J カーネルから割り当てた総メモリサイズ  */
				/*E Total space allocated from system     */
	int <i>ordblks</i>;		/*J 割り当てブロックの数                  */
				/*E Number of ordinary blocks             */
	int <i>smblks</i>;		/*J 未使用(常に0)                         */
				/*E Unused -- always zero                 */
	int <i>hblks</i>;		/*J 保持ブロック数                        */
				/*E Number of FPL regions                 */
	int <i>hblkhd</i>;		/*J 保持ブロックの総バイト数(arenaと同じ) */
				/*E Total space allocated from FPL(arena) */
	int <i>usmblks</i>;		/*J 未使用(常に0)                         */
				/*E Unused -- always zero                 */
	int <i>fsmblks</i>;		/*J 未使用(常に0)                         */
				/*E Unused -- always zero                 */
	int <i>uordblks</i>;		/*J 割り当て済みメモリサイズの合計        */
				/*E Total allocated space                 */
	int <i>fordblks</i>;		/*J 割り当て可能なメモリサイズの合計      */
				/*E Total non-inuse space                 */
	int <i>keepcost</i>;		/*J 未使用(常に0)                         */
				/*E Unused -- always zero                 */
} SceHeapMallinfo;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arena</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;カーネルから割り当てた総メモリサイズ(バイト)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ordblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り当てブロックの数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>smblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;未使用(常に0)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>hblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;カーネルから固定長プールを割り当てた回数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>hblkhd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;カーネルから割り当てた総メモリサイズ(<i>arena</i>と同じ値)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>usmblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;未使用(常に0)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fsmblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;未使用(常に0)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uordblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り当て済みメモリサイズの合計&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fordblks</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り当て可能なメモリサイズの合計&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>keepcost</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;未使用(常に0)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapGetMallinfo">sceHeapGetMallinfo</a>()でヒープメモリ使用状態を取得するときに得られるデータを格納するために使用する構造体です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapGetMallinfo">sceHeapGetMallinfo</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapAllocHeapMemory"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapAllocHeapMemory<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープメモリからのメモリ確保<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
void * <b>sceHeapAllocHeapMemory</b>(
	void *<i>heap</i>,
	unsigned int <i>nbytes</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可、ディスパッチ許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()で割り当てられたヒープメモリの&nbsp;&nbsp;<br>&nbsp;&nbsp;先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nbytes</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;確保するメモリサイズをbyte単位で指定します。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;非NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り当てたメモリの先頭アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り当て失敗&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>heap</i>からメモリを確保します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapAllocHeapMemoryWithOption"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapAllocHeapMemoryWithOption<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープメモリからのメモリ確保<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
void * <b>sceHeapAllocHeapMemoryWithOption </b>(
	void *<i>heap</i>,
	unsigned int <i>nbytes,</i>
	const <a href="../kernel/libheap-Reference-Japanese.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a> *<i>optParam</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可、ディスパッチ許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()で割り当てられたヒープメモリの&nbsp;&nbsp;<br>&nbsp;&nbsp;先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nbytes</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;確保するメモリサイズをbyte単位で指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メモリ確保にあたっての付加情報を含む&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../kernel/libheap-Reference-Japanese.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a>構造体へのポインタを指定します。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;非NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り当てたメモリの先頭アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り当て失敗&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>heap</i>からメモリを確保します。<a href="../kernel/libheap-Reference-Japanese.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a>構造体により、アロケートするメモリのアラインメントサイズを指定する事ができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapCreateHeap"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapCreateHeap<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープメモリの作成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
void * <b>sceHeapCreateHeap </b>(
	const char *<i>name,</i>
	int <i>heapblocksize</i>,
	int <i>flags,</i>
	const <a href="../kernel/libheap-Reference-Japanese.htm#SceHeapOptParam">SceHeapOptParam</a> *<i>optParam</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ヒープの名前を指定します。デバッグ時にオペレータが見て&nbsp;&nbsp;<br>&nbsp;&nbsp;識別する目的で使うので、ユニークな名前であるかのチェックは&nbsp;&nbsp;<br>&nbsp;&nbsp;特にしません。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heapblocksize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り当てるヒープメモリサイズをbyte単位で指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0またはフラグを指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;将来の拡張用です。NULLを指定してください。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;非NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り当てたメモリの先頭アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;割り当て失敗&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>heapblocksize</i>で指定したバイト数を4またはそれ以上の倍数に切り上げたサイズのヒープメモリを割り当てます。<br><br><i>flags</i>には以下のフラグが個別に指定できます。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>フラグ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>意味</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_HEAP_AUTO_EXTEND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ヒープメモリが足りなくなったとき&nbsp;&nbsp;<br>&nbsp;&nbsp;自動的に拡張されます。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_HEAP_ALLOC_MEM_BOTTOM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メモリアドレスの大きい方から空きエリアを&nbsp;&nbsp;<br>&nbsp;&nbsp;探して割り当てます。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapDeleteHeap">sceHeapDeleteHeap</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapDeleteHeap"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapDeleteHeap<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープメモリの削除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
int <b>sceHeapDeleteHeap </b>(
	void *<i>heap</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み禁止、許可状態に依存しない)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;解放するヒープメモリの先頭アドレス&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーの場合、負の値が返ります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;正常終了&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>が正しくない&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>heap</i>で指定したヒープメモリを解放し、PSP&reg;カーネルに返します。もしヒープメモリ内に<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>()等で確保されたメモリが残っていたとしても、おかまいなしにヒープメモリがまるごと削除されてしまうことに注意してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapFreeHeapMemory"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapFreeHeapMemory<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープメモリへのメモリ解放<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
int <b>sceHeapFreeHeapMemory </b>(
	void *<i>heap</i>,
	void *<i>ptr</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可、ディスパッチ許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()で割り当てられたヒープメモリの&nbsp;&nbsp;<br>&nbsp;&nbsp;先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;解放するメモリの先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーの場合、負の値が返ります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;正常終了&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>が正しくない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_POINTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i>が正しくない&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>heap</i>で示されるヒープから<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()のいずれかで割り当てられたメモリブロックを、再びヒープメモリへと解放します。引数<i>heap</i>では、確保した時と同じヒープを指定しなくてはなりません。<br>引数<i>ptr</i>にNULLが指定された場合はなにもしません。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapGetTotalFreeSize"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapGetTotalFreeSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープメモリの空きサイズ取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
int <b>sceHeapGetTotalFreeSize </b>(
	void *<i>heap</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可、ディスパッチ許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()で割り当てられたヒープメモリの先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーの場合、負の値が返ります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;=0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;空きサイズ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>が正しくない&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ヒープメモリの現在の空きサイズを取得します。<br>ヒープメモリ内で分断された空きメモリがあった場合、sceHeapGetTotalFreeSize()関数の戻り値は全ての空きメモリを合計した値になります。また、libheapが管理のために用いるオーバーヘッドがありますので、sceHeapGetTotalFreeSize()関数の戻り値で得られたサイズが、<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>()等でアロケート可能なメモリサイズの合計に一致するわけではないことに注意してください。<br>ヒープメモリ内での空きメモリが分断されることが問題になる場合は、<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()関数によってそれぞれ独立した複数のヒープメモリを持つようにすることで回避できます。<br><br>この関数は、基本的にはデバッグ目的での使用を想定しています。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapGetMallinfo"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapGetMallinfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープメモリの使用状態取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
int <b>sceHeapGetMallinfo </b>(
	void *<i>heap,</i>
	<a href="../kernel/libheap-Reference-Japanese.htm#SceHeapMallinfo">SceHeapMallinfo</a> *<i>pInfo</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可、ディスパッチ許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()で割り当てられたヒープメモリの先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pInfo</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ヒープメモリの情報を得る<a href="../kernel/libheap-Reference-Japanese.htm#SceHeapMallinfo">SceHeapMallinfo</a>構造体へのポインタを指定します。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーの場合、負の値が返ります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;正常終了&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>が正しくない&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ヒープメモリの現在の使用状態を取得します。<br><br>この関数は、基本的にはデバッグ目的での使用を想定しています。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#SceHeapMallinfo">SceHeapMallinfo</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapIsAllocatedHeapMemory"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapIsAllocatedHeapMemory<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープメモリから確保されたメモリであるかどうか判別<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
int <b>sceHeapIsAllocatedHeapMemory </b>(
	void *<i>heap</i>,
	void *<i>ptr</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可、ディスパッチ許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()で割り当てられたヒープメモリの&nbsp;&nbsp;<br>&nbsp;&nbsp;先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;判別するメモリの先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エラーの場合、負の値が返ります。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>から割り当てられたメモリである&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>から割り当てられたメモリではない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>が正しくない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_INVALID_POINTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i>が正しくない&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">引数<i>heap</i>で示されるヒープが、<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()のいずれかで確保されたメモリであるかどうかを判別します。<br><br>この関数は、基本的にはデバッグ目的での使用を想定しています。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapReallocHeapMemory"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapReallocHeapMemory<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープメモリからのメモリ再確保<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
void * <b>sceHeapReallocHeapMemory</b>(
	void *<i>heap</i>,
	void *<i>ptr</i>,
	unsigned int <i>nbytes</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可、ディスパッチ許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()で割り当てられたヒープメモリの&nbsp;&nbsp;<br>&nbsp;&nbsp;先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;再割り当てするメモリブロックの先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nbytes</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;新たに確保するメモリサイズをbyte単位で指定します。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;非NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;再割り当てしたメモリの先頭アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;再割り当て失敗&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>heap</i>からメモリを再割り当てします。<i>ptr</i>には、NULLまたは事前に<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), sceHeapReallocHeapMemory(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()のいずれかで割り当てられたメモリブロックを指定してください。引数<i>ptr</i>にNULLを指定した場合は、<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>()と同じ動作になります。<br>引数<i>nbytes</i>には変更後のメモリブロックサイズを指定します。引数<i>nbytes</i>に0を指定した場合は、<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>()と同じ動作になります。このときの戻り値はNULLになります。<br>新しく割り当てられるサイズが現在のサイズよりも大きい場合、新たに割り当てられるメモリブロックは引数<i>ptr</i>で指定されたアドレスから移動されることがあります。移動が発生した場合、従来のメモリブロックは<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>()によって開放されます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemoryWithOption">sceHeapReallocHeapMemoryWithOption</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHeapReallocHeapMemoryWithOption"></a>
<table width="100%"><td width="70%"><font size=6>sceHeapReallocHeapMemoryWithOption<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ヒープメモリからのメモリ再確保<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libheap.h&gt;
void * <b>sceHeapReallocHeapMemoryWithOption </b>(
	void *<i>heap</i>,
	void *<i>ptr</i>,
	unsigned int <i>nbytes,</i>
	const <a href="../kernel/libheap-Reference-Japanese.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a> *<i>optParam</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可、ディスパッチ許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>heap</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>()で割り当てられたヒープメモリの&nbsp;&nbsp;<br>&nbsp;&nbsp;先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ptr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;再割り当てするメモリブロックの先頭アドレスを指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nbytes</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;新たに確保するメモリサイズをbyte単位で指定します。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メモリ確保にあたっての付加情報を含む&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../kernel/libheap-Reference-Japanese.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a>構造体へのポインタを指定します。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>結果</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;非NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;再割り当てしたメモリの先頭アドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;再割り当て失敗&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>heap</i>からメモリを再割り当てします。<i>ptr</i>には、NULLまたは事前に<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), sceHeapReallocHeapMemoryWithOption()のいずれかで割り当てられたメモリブロックを指定してください。引数<i>ptr</i>にNULLを指定した場合は、<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>()と同じ動作になります。<br>引数<i>nbytes</i>には変更後のメモリブロックサイズを指定します。引数<i>nbytes</i>に0を指定した場合は、<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>()と同じ動作になります。このときの戻り値はNULLになります。<br><br><a href="../kernel/libheap-Reference-Japanese.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a>構造体により、アロケートするメモリのアラインメントサイズを指定する事ができます。<br><br>新しく割り当てられるサイズが現在のサイズよりも大きい場合、または現在のポインタでは<a href="../kernel/libheap-Reference-Japanese.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a>構造体で指定されたアラインメントサイズに適合しなかった場合、新たに割り当てられるメモリブロックは引数<i>ptr</i>で指定されたアドレスから移動されることがあります。移動が発生した場合、従来のメモリブロックは<a href="../kernel/libheap-Reference-Japanese.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>()によって開放されます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/libheap-Reference-Japanese.htm#sceHeapCreateHeap">sceHeapCreateHeap</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapFreeHeapMemory">sceHeapFreeHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemory">sceHeapAllocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapAllocHeapMemoryWithOption">sceHeapAllocHeapMemoryWithOption</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#sceHeapReallocHeapMemory">sceHeapReallocHeapMemory</a>(), <a href="../kernel/libheap-Reference-Japanese.htm#SceHeapAllocOptParam">SceHeapAllocOptParam</a><br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2011 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
