<html lang="jp">
<head>
<title>PSP_Setup_Guide</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
PSP&reg;セットアップガイド
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>PSP&reg;開発環境</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>PSP&reg;開発環境の構成</b><br>
</a>
</h3>
<div style="margin-left:50px;">PSP&reg;開発環境は、以下の構成となります。<br></div>

<div align=center>
<p>
<img src="gif/PSP_Setup_Guide-Japanese001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 1  PSP&reg;開発環境の構成</b><br>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>開発ホスト</b><br>
</a>
</h3>
<div style="margin-left:50px;">開発ホストとして、Windows XPまたはCentOS 4.4などのLinuxが動作するパソコンが必要になります。<br><br>推奨環境：<br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;- Windows XP SP3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;* Windows Vistaでも基本動作は確認しています。&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;- CentOS 4.4&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;* その他、動作確認しているディストリビューション&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;FedoraCore 3.4.5&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;RedHat9&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">開発ホストではアプリケーションプログラムのコンパイル・ビルドを行います。ビルドしたプログラムをPSP&reg; Hardware Toolにロード・実行しデバッグするなどの操作も、開発ホストを用いて行います。<br>コンパイラおよびデバッガとしては、次のものを利用することができます。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_2_1">
<div style="margin-left:40px;"><h4><b>GUI版のコンパイラおよびデバッガ</b><br><br></h4></div></a>

<div style="margin-left:67px;">Windows XP ＋ Microsoft Visual Studio 2005/2008 ＋ SN Systems ProDG for PSP<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_2_2">
<div style="margin-left:40px;"><h4><b>GUI版のデバッガ</b><br><br></h4></div></a>

<div style="margin-left:67px;">Windows XP ＋ PSP&reg; Debugger<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_2_3">
<div style="margin-left:40px;"><h4><b>コマンドライン版のコンパイラ</b><br><br></h4></div></a>

<div style="margin-left:67px;">Windows XP ＋ SN Systems pspsnc<br>Windows XP ＋ CygWin ＋ psp-gcc<br>Linux ＋ psp-gcc<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_2_4">
<div style="margin-left:40px;"><h4><b>コマンドライン版のデバッガ</b><br><br></h4></div></a>

<div style="margin-left:67px;">Windows XP ＋ CygWin ＋ psp-gdb<br>Linux ＋ psp-gdb<br></div>
<div style="margin-left:50px;"><br>また、デバッグの完了したアプリケーションをパッケージングする作業や、PSP&reg; Hardware Toolの内蔵ソフトウェアをアップデートする作業も、開発ホストを用いて行います。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_2_5">
<div style="margin-left:40px;"><h4><b>パッケージ作成</b><br><br></h4></div></a>

<div style="margin-left:67px;">Windows XP ＋ PSP&reg; Game Master Disc PackageまたはPSP&reg; Downloadable Game / Additional Gamedata Package ＋ CygWin (コマンドラインツールを利用する場合)<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_2_6">
<div style="margin-left:40px;"><h4><b>PSP&reg; Hardware Toolのアップデート</b><br><br></h4></div></a>

<div style="margin-left:67px;">Windows XP ＋ PSPhtool_Updater<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_3">
<h3>
<a href="#Heading3_1"> 1. </a>3 
<!-- hp1 --><b>PSP&reg; Hardware Tool</b><br>
</a>
</h3>
<div style="margin-left:50px;">PSP&reg; Hardware Toolではアプリケーションプログラムのテストランとデバッグを行います。このためPSP&reg; Hardware Toolには、PSP&reg;に相当する機能に加えて、開発ホストとの通信機能やさまざまなデバッグ支援機能が搭載されています。デバッグ支援機能の詳細に関しては「8 システムソフトウェアのデバッグ支援機能」を参照して下さい。<br><br>PSP&reg; Hardware Toolは本体とコントローラ部分の組み合わせで提供され、以下のモデルがあります。<br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-T2000&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：日本市場向け（DTP-T1000＋DTP-H200）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-T2000A&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：北米・欧州・アジア市場向け（DTP-T1000A＋DTP-H200）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-T1000&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：（旧モデル）日本市場向け（DTP-T1000＋DTP-H110）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-T1000A&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：（旧モデル）北米・欧州・アジア市場向け（DTP-T1000A＋DTP-H110）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">また、PSP&reg; Hardware Toolから開発ホストとの通信機能を省いたテストラン専用の機器として、PSP&reg; Testing Toolがあります。<br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-H2500&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：日本市場向け（DTP-H1500＋DTP-H200）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-H2500A&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：北米・欧州・アジア市場向け（DTP-H1500A＋DTP-H200）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-H1500&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：（旧モデル）日本市場向け（DTP-H1500＋DTP-H110）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-H1500A&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：（旧モデル）北米・欧州・アジア市場向け（DTP-H1500A＋DTP-H110）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">コントローラ単体のモデルもあり、各PSP&reg; Hardware Toolのコントローラを差し替えて利用することができます。<br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-H110&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：PSP-1000相当&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-H200&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：PSP-2000 / PSP-3000相当&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;− DTP-H300&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;：PSP-N1000相当&nbsp;&nbsp;</td>
</tr>
</table>
</div>

<!-- sce_hd4 -->
<a name="Heading4_1_4">
<h3>
<a href="#Heading3_1"> 1. </a>4 
<!-- hp1 --><b>PSP&reg;ソフトウェア開発キット</b><br>
</a>
</h3>
<div style="margin-left:50px;">PSP&reg;ソフトウェア開発キット(SDK)とは、ランタイムライブラリやドキュメントを含む、PSP&reg;アプリケーション開発用のソフトウェアツール一式を指します。<br>SDKは以下に示すようにいくつかのパッケージに分けて、PSP&reg; Developer Network (<u>https://psp.scedev.ne</u>t)からダウンロードできるようになっています。各パッケージのダウンロードアドレスは、「スタートアップガイド」(<u>https://psp.scedev.net/docs/startup_guid</u>e)をご参照ください。なお、本ドキュメントではパッケージのファイル名をPSP_Runtime_Libraries-x.x.x.zipのように表現していますが、このうちの「x.x.x」はバージョンを表しています。例えば、バージョン5.0.0の場合はPSP_Runtime_Libraries-5.0.0.zipとなります。<br>なお、後で説明するように、PSP&trade; (PlayStation&reg;Portable) SDK Installerを使用すると最新バージョンを一括してダウンロードすることができます。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_4_7">
<div style="margin-left:40px;"><h4><b>PSP&reg; Hardware Toolのアップデートに使用するソフトウェア（Windows XP用）</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;Hardware tool&nbsp;&nbsp;<br>&nbsp;&nbsp;アップデートツール&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSPhtool_Updater-xxx.zip&nbsp;&nbsp;<br>&nbsp;&nbsp;PSP&reg; Hardware Toolのファームウェアおよび&nbsp;&nbsp;<br>&nbsp;&nbsp;内蔵のシステムソフトウェアを一括してアップデートするツールを&nbsp;&nbsp;<br>&nbsp;&nbsp;パッケージングしたものです。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;カーネルアップデート&nbsp;&nbsp;<br>&nbsp;&nbsp;バイナリ&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP_Hardware_tool_Kernel_Update_Binary_xxx.zip&nbsp;&nbsp;<br>&nbsp;&nbsp;PSP&reg; Hardware Toolのファームウェアと&nbsp;&nbsp;<br>&nbsp;&nbsp;内蔵のシステムソフトウェアをアップデートするための&nbsp;&nbsp;<br>&nbsp;&nbsp;バイナリデータをパッケージングしたものです。&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<div style="margin-left:50px;">なお、PSP&reg; Hardware Toolのアップデートの方法はSDKバージョン5.0.0以降で変更され、Windows XPが必要になっています。本ドキュメントはバージョン5.0.0以降に対応しています。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_4_8">
<div style="margin-left:40px;"><h4><b>Windows XP / Linux共通のソフトウェア</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;ランタイムライブラリ&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP_Runtime_Libraries-x.x.x.zip&nbsp;&nbsp;<br>&nbsp;&nbsp;アプリケーションを構築するためのライブラリやヘッダ、&nbsp;&nbsp;<br>&nbsp;&nbsp;モジュールとサンプルプログラム、またLinux用コマンドライン&nbsp;&nbsp;<br>&nbsp;&nbsp;ツールをパッケージングしたものです。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;サンプルコードデータ&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP_Sample_Code_Data-*-x.x.x.zip&nbsp;&nbsp;<br>&nbsp;&nbsp;ランタイムライブラリに含まれるサンプルプログラムを&nbsp;&nbsp;<br>&nbsp;&nbsp;実行するときに使用するデータです。&nbsp;&nbsp;</td>
</tr>
</table>
</div>

<!-- sce_title -->
<a Name ="HeadingT_1_4_9">
<div style="margin-left:40px;"><h4><b>Windows XP用のソフトウェア</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;ProDG for PSP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ProDGforPSPvX.X.X.exe&nbsp;&nbsp;<br>&nbsp;&nbsp;ProDG Debugger、Target Manager、SNC PSP Toolchain&nbsp;&nbsp;<br>&nbsp;&nbsp;(コンパイラ、アセンブラ、リンカ、PRXジェネレータ)、&nbsp;&nbsp;<br>&nbsp;&nbsp;Visual Studio Integrationのツールをパッケージングしたものです。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;psp-utils for Windows&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;psp-utils-x.x.x-windows.zip&nbsp;&nbsp;<br>&nbsp;&nbsp;ランタイムライブラリに含まれているツールのWindows XP版を&nbsp;&nbsp;<br>&nbsp;&nbsp;パッケージングしたものです。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Cygwin版コンパイラ&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;psp-gcc-x.x.x-cygwin.zip&nbsp;&nbsp;<br>&nbsp;&nbsp;Windows XP上にインストールしたCygwin上でアプリケーションを&nbsp;&nbsp;<br>&nbsp;&nbsp;ビルドするためのツールやライブラリをパッケージングしたものです。&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Windowsデバッガ&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP_Debugger-x.x.x.zip&nbsp;&nbsp;<br>&nbsp;&nbsp;Windows XP上でGUIを用いてアプリケーションをデバッグする&nbsp;&nbsp;<br>&nbsp;&nbsp;ツールです。&nbsp;&nbsp;</td>
</tr>
</table>
</div>

<!-- sce_title -->
<a Name ="HeadingT_1_4_10">
<div style="margin-left:40px;"><h4><b>Linux用のソフトウェア</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;Linux版コンパイラ&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;psp-gcc-x.x.x-linux.tgz&nbsp;&nbsp;<br>&nbsp;&nbsp;Linux上でアプリケーションをビルドするためのツールやライブラリを&nbsp;&nbsp;<br>&nbsp;&nbsp;パッケージングしたものです。&nbsp;&nbsp;</td>
</tr>
</table>
</div>

<!-- sce_hd4 -->
<a name="Heading4_1_5">
<h3>
<a href="#Heading3_1"> 1. </a>5 
<!-- hp1 --><b>開発環境の構築手順</b><br>
</a>
</h3>
<div style="margin-left:50px;">PSP&reg;開発環境の構築は以下の手順で行ってください。<br></div>
</ul>
<div style="margin-left:55px;"><ol>
<li VALUE=1> 開発ホストとPSP&reg; Hardware Toolを準備する。</li>
<li VALUE=2> PSP&reg;ソフトウェア開発キットをダウンロードし、開発ホストにセットアップする。<br>詳細は「開発ホストの構築（Visual Studio + ProDG）」「開発ホストの構築（Cygwin）」「開発ホストの構築（Linux）」のいずれかを参照してください。</li>
<li VALUE=3> 開発ホストとPSP&reg; Hardware Toolをネットワークで接続し、PSP&reg; Hardware Toolをアップデートする。<br>詳細は「PSP&reg; Hardware Toolの設定」を参照してください。</li>
</ol></div>
        <div style="margin-left:80px;"><pre><font size=3>
</font></pre></div>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>開発ホストの構築（Visual Studio + ProDG）</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>Visual Studioのセットアップ</b><br>
</a>
</h3>
<div style="margin-left:50px;">ProDGを開発環境として利用するためには、以下のバージョンのVisual Studioが必要となります。<br></div>
</ol>
<div style="margin-left:40px;"><ul>
<li> Visual Studio 2005/2008 Standard Edition以上
</ul></div>
<div style="margin-left:50px;">上記Visual Studioがインストールされている場合、「PSP&reg;ソフトウェア開発キットのインストール」に従いPSP&trade; SDK Installerを利用してProDGをインストールすることで、Visual Studio Integrationがインストールされ、Visual Studioをアプリケーションの開発環境として利用することが可能になります。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>PSP&reg;ソフトウェア開発キットのインストール</b><br>
</a>
</h3>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;(1)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;下記URLよりPSP&trade; SDK Installerをダウンロードしてください(バージョンは変更されている場合もありますので、最新版をダウンロードしてください)。&nbsp;&nbsp;<br>&nbsp;&nbsp;<u>https://psp.scedev.net/projects/pspinstaller</u>&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese002.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(2)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ZIPアーカイブを解凍してPSP&trade; SDK Installerを起動してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(3)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP&trade; SDK Installerの「Next &gt;」ボタンを押してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese003.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(4)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;「Install (online)」を選択してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese004.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;「Install (online)」ボタンを選択した後、「Failed to Update List of Components」ダイアログが表示される場合は、ネットワークのプロキシが設定されていない可能性があります。「Settings」を選択して「Proxy Settings」を確認してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese005.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(5)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP&reg; Developer Networkのログイン情報を入力して「OK」ボタンを押してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese006.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(6)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リストからインストールするコンポーネントを選択します。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese007.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;「Filter」のプルダウンを最新版に設定してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;アプリケーションの開発を行うためにはランタイムライブラリ(Runtime Libraries)、カーネルアップデート(Kernel Update)、サンプルデータ(Sample Data)、ツール(Tools [Debug / Graphics / Network / Sound / Video Streaming / SN Tools / UMD Game Master Disc])、psp-utils(PSP Utils)を必要とします。ツール(Tools)を選択した場合、ProDGもインストールされます。ドキュメント(Documentation)、カンファレンス資料(ConferenceContent)には開発に有用な情報が記載されておりますので必要に応じてインストールして下さい。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(7)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;「Install Directory」は(6)で選択したコンポーネントがインストールされるディレクトリとなります。必要に応じてインストールディレクトリを変更して下さい。意図した「Install Directory」が設定されていることを確認後、「Next &gt;」ボタンを押してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(8)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;インストールコンポーネントを確認し、問題がなければ、「Install &gt;」ボタンを押してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese008.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(9)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP&trade; SDK Installer上にプログレスバーが表示されます。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese009.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(10)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ProDGインストーラが起動しますので、デフォルトオプションを使用してインストールしてください。ProDG for PSPのインストーラにはSNC/C++ Compiler、ProDG Debugger、Target Managerに加えて、Visual Studio Integration (VSI)のインストーラが付属しています。Visual Studioをご利用の場合は、VSIのインストールも行ってください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese010.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(11)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;psp-utilsのコマンドプロンプトインストーラが表示されますので、何かキーを押してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese011.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(12)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;「Finish」ボタンを押して終了してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese012.jpg">&nbsp;&nbsp;</td>
</tr>
</table>
</div>

<!-- sce_hd4 -->
<a name="Heading4_2_3">
<h3>
<a href="#Heading3_2"> 2. </a>3 
<!-- hp1 --><b>環境変数の設定</b><br>
</a>
</h3>
<div style="margin-left:50px;">以下の環境変数がインストールの過程で自動的に設定されます。。Windows XPで環境変数を更新するには、「マイコンピュータ」アイコンを右クリックして「プロパティ」を選択します。「システムのプロパティ」ウィンドウで「詳細設定」を選択し、「環境変数」をクリックします。「システム環境変数」の一覧から該当する環境変数を探してください。<br><br></div>
<div style="margin-left:40px;"><ul>
<li> PATH<br>実行可能ファイルが置かれた複数のディレクトリをセミコロンで区切ったものが設定されています。ProDG for PSPの利用に必要な値はProDG for PSPインストーラによって自動的に追加されます。
<li> SCE_PSP_HW_ROOT<br>開発キットのルートディレクトリが設定されます。PSP&trade; SDK Installerの「Install Directory」で指定したディレクトリが自動的に設定されます。本環境変数は、Runtime Librariesのパッケージをインストールすると設定されます。
<li> SN_COMMON_PATH<br>ProDG for PSPのパッケージをインストールするとSN Systemsの共通バイナリへのパスが設定されます。ProDG for PSPインストーラによって自動的に設定されます。
<li> SN_PSP_PATH<br>SN SystemsのPSP&reg;固有バイナリへのパスが設定されます。ProDG for PSPインストーラによって自動的に設定されます。
</ul></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>開発ホストの構築（Cygwin）</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">Cygwinは、Windows上でLinuxと似たようなコマンドラインツールを利用可能にするソフトウェアです。CygwinをインストールすることでWindows上にコマンドラインツールベースの開発環境を構築することができ、コマンドラインによる自動化されたワークフローやバッチファイルの作成を行うことが可能になります。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_3_11">
<div style="margin-left:40px;"><h4><b>注意</b><br><br></h4></div></a>

<div style="margin-left:67px;">コマンドラインツールを利用する予定がない場合は本章の設定を行う必要はありません。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>Cygwinのインストール</b><br>
</a>
</h3>
</ul>
<div style="margin-left:55px;"><ol>
<li VALUE=1> <u>http://www.Cygwin.com/setup.ex</u>eからCygwinセットアップアプリケーションをダウンロードして実行します。</li>
<li VALUE=2> 「Cygwin Setup」画面で「Next &gt;」ボタンを押します。</li>
<li VALUE=3> ダウンロードソースとして「Install from Internet」を選択し、「Next &gt;」ボタンを押します。</li>
<li VALUE=4> インストールディレクトリを選択します。デフォルトで記述されている「C:\Cygwin」を利用することをお勧めします。</li>
<li VALUE=5> 必要に応じて「Install For」エリアで「All Users」を選択した後、「Next &gt;」ボタンを押します。<br>「Default Text File Type」は「Unix / binary」から変更しないでください。<br></li>

<img src="gif/PSP_Setup_Guide-Japanese013.gif">
<li VALUE=6> 「Select Local Package Directory」画面で「Next &gt;」ボタンを押します。</li>
<li VALUE=7> 「Select Connection Type」画面で、プロキシが存在する場合はそのプロキシ設定を入力します。プロキシがない場合は「Direct Connection」を選択し、「Next &gt;」ボタンを押します。</li>
<li VALUE=8> 「Choose Download Site(s)」画面で任意のサイトを選択し（複数選択可能ですが、できれば地理的に近いサイトを選択してください）、「Next &gt;」ボタンを押します。<br>パッケージをダウンロードしている間、進捗状況を表す画面が表示されます。</li>
<li VALUE=9> ダウンロードが完了すると、「Select Packages」画面が表示されます。Develカテゴリを展開し、インストール対象としてmakeパッケージを選択、次にUtilsカテゴリを選択してrpmパッケージを選択します。<br></li>

<img src="gif/PSP_Setup_Guide-Japanese014.gif">
<li VALUE=10> 「Next &gt;」ボタンを押してダウンロード/インストール処理を開始します。<br>インストールの進捗状況を表す画面が表示されます。</li>
<li VALUE=11> インストールが完了したら、Create Iconのオプションを必要に応じて設定し、「Finish」ボタンを押します。</li>
</ol></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>Cygwin用コンパイラのインストール</b><br>
</a>
</h3>
<div style="margin-left:50px;">下記URLよりCygwin版コンパイラpsp-gccパッケージpsp-gcc-X.XX.X-cygwin.zipをダウンロードしてください。<br><u>https://psp.scedev.net/projects/compile</u>r<br>psp-gcc-X.XX.X-cygwin.zipを一時的に作業を行うフォルダ(ここではtmpフォルダとします)に解凍し、Cygwinを起動して以下のコマンドを実行して下さい（"Cygwin &gt;"はプロンプトです）。<br><br>[例]<br>　Cygwin &gt; cd /tmp<br>　Cygwin &gt; unzip psp-gcc-x.x.x-cygwin.zip<br>　Cygwin &gt; rpm -ivh psp-gcc_x_x_x-x-x.cygwin.i386.rpm<br>　Cygwin &gt; rpm -ivh psp-newlib_x_x_x-x-x.cygwin.i386.rpm<br><br>これにより、C:\Cygwin\usr\local\psp\gcc-x.x.x以下にpsp-gccがインストールされます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_3">
<h3>
<a href="#Heading3_3"> 3. </a>3 
<!-- hp1 --><b>PSP&reg;ソフトウェア開発キットのインストール</b><br>
</a>
</h3>
<div style="margin-left:50px;">「開発ホストの構築（Visual Studio + ProDG）に従い、PSP&trade; SDK Installerを用いてPSP&reg;ソフトウェア開発キットをインストールしてください。<br>Cygwinを用いてコマンドラインベースで開発を行う場合は、インストールするコンポーネントのうち、Tools [Debug / Graphics / Network / Sound / Video Streaming / SN Tools / UMD Game Master Disc]内にある「SN ProDG for PSP」は省いて構いません。<br>また、PSP&trade; SDK Installerの「Install Directory」には、Cygwinのルートディレクトリから見て/usr/localに相当するディレクトリ(通常は「C:\Cygwin\usr\local」)を設定するようにして下さい。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_4">
<h3>
<a href="#Heading3_3"> 3. </a>4 
<!-- hp1 --><b>環境変数の設定</b><br>
</a>
</h3>
<div style="margin-left:50px;">Cygwin環境における環境変数の設定は「7 サンプルプログラムのコンパイルと実行（Cygwin / Linux）」に従って行って下さい。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_5">
<h3>
<a href="#Heading3_3"> 3. </a>5 
<!-- hp1 --><b>Cygwin用コンパイラの一時ディレクトリの設定</b><br>
</a>
</h3>
<div style="margin-left:50px;">Cygwin用コンパイラは、Cygwin環境下で実行されますが内部でWindows用のツールを呼び出しています。<br>そのため、一時ディレクトリを設定する環境変数のTEMP / TMP / TEMPDIR / TMPDIRにWindowsから参照できないパスが指定されていると、そこにツールがアクセスできずにエラーになることがあります。<br>Cygwin用コンパイラをお使いの場合は、Cygwin上で環境変数TEMP / TMP / TEMPDIR / TMPDIRを設定しないままにしておくか、Windowsのパス表現で以下の例のように実際に存在するフォルダを指定するようにしてください。<br><br>[例]<br>　Cygwin &gt; export TMP=c:\\Temp<br>　(\はCygwin上では制御文字として使われますのでエスケープしてください。)<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_4">
<h2>
 4 <!-- hp --><b>開発ホストの構築（Linux）</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">下記において、"CentOS &gt;"は開発ホスト上のプロンプトを意味します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_1">
<h3>
<a href="#Heading3_4"> 4. </a>1 
<!-- hp1 --><b>PSP&reg;ソフトウェア開発キットのインストール</b><br>
</a>
</h3>
<div style="margin-left:55px;"><ol>
<li VALUE=1> /usr/local/pspディレクトリを生成します（必ず実ディレクトリにしてください）。<br>[例]<br>　CentOS &gt; cd /usr/local<br>　CentOS &gt; mkdir psp</li>
<li VALUE=2> "PSP_Runtime_Libraries-xxx.zip"を/usr/local/psp以下に展開します。<br>[例]<br>　CentOS &gt; cd /usr/local/psp<br>　CentOS &gt; unzip PSP_Runtime_Libraries-x.x.x.zip</li>
<li VALUE=3> "PSP_Sample_Code_Data-*-x.x.x.zip"を必要に応じて/usr/local/psp以下に展開します。<br>[例]<br>　CentOS &gt; cd /usr/local/psp<br>　CentOS &gt; unzip PSP_Sample_Code_Data-*-x.x.x.zip</li>
<li VALUE=4> "psp-gcc-x.x.x-linux.tgz"をインストールします。<br>注意:　rpmでインストールすると、どのディレクトリで行っても/usr/local/psp/gcc-x.x.x配下にインストールされます。<br>[例]<br>　CentOS &gt; cd /tmp<br>　CentOS &gt; tar zxvf psp-gcc-x.x.x-linux.tgz<br>　CentOS &gt; rpm -ivh psp-gcc_x_x_x-x-x.i386.rpm<br>　CentOS &gt; rpm -ivh psp-newlib_x_x_x-x-x.i386.rpm</li>
</ol></div>

<!-- sce_hd4 -->
<a name="Heading4_4_2">
<h3>
<a href="#Heading3_4"> 4. </a>2 
<!-- hp1 --><b>環境変数の設定</b><br>
</a>
</h3>
<div style="margin-left:50px;">Linux環境における環境変数の設定は「7 サンプルプログラムのコンパイルと実行（Cygwin / Linux）」に従って行って下さい。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_5">
<h2>
 5 <!-- hp --><b>PSP&reg; Hardware Toolの設定</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_5_1">
<h3>
<a href="#Heading3_5"> 5. </a>1 
<!-- hp1 --><b>PSP&reg; Hardware Toolのネットワーク設定</b><br>
</a>
</h3>
<div style="margin-left:50px;">PSP&reg; Hardware Toolのネットワーク設定を行い、開発ホストとネットワーク接続をしてください。<br>PSP&reg; Hardware Toolのネットワーク設定については、PSP&reg; Hardware Toolに同梱されている取扱説明書を参照してください。ランタイムライブラリのdevkit/setupディレクトリにもPDFファイルで納めてあります。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_5_2">
<h3>
<a href="#Heading3_5"> 5. </a>2 
<!-- hp1 --><b>PSP&reg; Hardware Toolのアップデート</b><br>
</a>
</h3>
<div style="margin-left:50px;">ランタイムライブラリのバージョンと、PSP&reg; Hardware Toolのファームウェアおよびシステムソフトウェアのバージョンは適切な組み合わせになっていなければなりません。SDKに含まれているアップデートツールを使って、次の手順でPSP&reg; Hardware Toolのファームウェアおよびシステムソフトウェアをアップデートしてください。<br>更新前に、開発ホストから設定したPSP&reg; Hardware Toolのアドレス(例えばIPアドレスが192.168.100.1の場合は「<u>http://192.168.100.1</u>/」)にブラウザを通してアクセスし、PSP&reg; Hardware Toolへアクセス可能なことを確認してください。<br><br></div>
<div style="margin-left:55px;"><ol>
<li VALUE=1> %SCE_PSP_HW_ROOT%\devkit\tool\PSPhtool_Updater\PSPhtool_Updater.exeを実行します。<br></li>

<img src="gif/PSP_Setup_Guide-Japanese015.jpg">
<li VALUE=2> PSPhtool_Updaterの「新規設定」ボタンを押すと、開発機設定ウィンドウがポップアップするので、TOOLのコントローラに表示されているIPアドレスを入力してください。管理者パスワードにパスワード(デフォルトAdministrator)を入力し、決定します。<br></li>

<img src="gif/PSP_Setup_Guide-Japanese016.jpg">
<li VALUE=3> 設定に任意の名前を付けて「決定」ボタンを押します。<br></li>

<img src="gif/PSP_Setup_Guide-Japanese017.jpg">
<li VALUE=4> アップデータ配置パスの参照ボタンを押して%SCE_PSP_HW_ROOT%/devkit/htool_updater/htool_updater-*.binを指定してください。<br></li>

<img src="gif/PSP_Setup_Guide-Japanese018.jpg">

</ol></div>
<div style="margin-left:80px;">「アップデート開始」ボタンを押して表示される確認ダイアログで「OK」ボタンを押してください。<br>このプロセスは約5分かかります。<br>アップデート中に「a010000b」エラーが表示される場合、ファイアウォールとアンチウイルスソフトウェアを一時的に停止することで、接続に関する問題を解決できる可能性があります。<br>上記の対応行ってもなおアップデートに失敗する場合は、テクニカルサポートに連絡してください。<br>コントローラの画面に表示されるSystem Software Versionを確認して、ファームウェアが更新されたことを確認してください。<br></div>
<div style="margin-left:67px;"><br></div>

<!-- sce_hd3 -->
<a name="Heading3_6">
<h2>
 6 <!-- hp --><b>サンプルプログラムのコンパイルと実行（Visual Studio + ProDG）</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">この章では、コンパイル、実行およびデバッグの基本プロセスをSN Systems社製ツールProDG for PSPおよびMicrosoft Visual Studioを利用して説明します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_6_1">
<h3>
<a href="#Heading3_6"> 6. </a>1 
<!-- hp1 --><b>Target Managerの設定</b><br>
</a>
</h3>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;(1)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Target Managerをスタートメニューから開きます。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese019.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(2)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;左上の「ターゲットの追加」ボタン（<img src="gif/PSP_Setup_Guide-Japanese020.gif">）を押します。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese021.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(3)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP&reg; Hardware Toolの名前を入力して、ハードウェアを選択します。ここでは、Development Tool (DTP-T1000)を選択して「次へ」ボタンを押します。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese022.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(4)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PSP&reg; Hardware Toolのコントローラのスクリーンに表示されているIPアドレスを入力して、「次へ」ボタンを押します。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese023.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(5)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;次の画面で「完了」ボタンを押すことで、ターゲットのセットアップが終了します。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese024.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(6)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ターゲットがセットアップされたので、左側のメニューの新しいターゲットを選択して、「接続」ボタン（<img src="gif/PSP_Setup_Guide-Japanese025.gif">）を押してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;左側の情報パネルでPSP&reg; Hardware Toolに接続できたことを確認してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese026.gif">&nbsp;&nbsp;</td>
</tr>
</table>
</div>

<!-- sce_hd4 -->
<a name="Heading4_6_2">
<h3>
<a href="#Heading3_6"> 6. </a>2 
<!-- hp1 --><b>コンパイルとアプリケーションの実行、デバッグ</b><br>
</a>
</h3>
<div style="margin-left:50px;">このセクションは、Visual Studioでプログラムをコンパイルし、ProDGを使用してPSP&reg; Hardware Tool上で実行するまでを説明します。<br>Visual Studio 2005とVisual Studio 2008はどちらでも利用可能ですが、Visual Studio 2005のソリューションファイルをVisual Studio 2008を用いて開いた場合、ソリューションファイルの変換ウィザードが起動し、ソリューションファイルはVisual Studio 2008用に変換されます。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;(1)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;%SCE_PSP_HW_ROOT%\devkit\samples\PSP Samples.slnを開いてください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese027.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(2)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ビルドしたいプロジェクトを右クリックして「ビルド」を選択してください。ここではBalloonを選択しています。プロジェクト全てをビルドする場合は、「ビルド」メニューの「ビルド・ソリューション」を使用してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese028.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(3)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ビルドが完了後、エラーがないことを確認してください。もし何かエラーやワーニングがある場合は、ビルドに失敗している可能性があります。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese029.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(4)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プロジェクトのコンパイルに成功すると、Visual StudioからProDG Debuggerを利用してデバッグすることが可能です。ビルドしたプロジェクトを右クリックして「スタートアッププロジェクトにセット」をしてください。&nbsp;&nbsp;<br>&nbsp;&nbsp;プロジェクトを実行するためには、下図の「プロジェクトELFファイルを実行する」ボタン（<img src="gif/PSP_Setup_Guide-Japanese030.gif">）を使用してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese031.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(5)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プロジェクトのデバッグには、下図の「ProDGデバッガでELFを起動」または、「ProDG デバッガでELFをロードしmainで実行停止」を選択してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese032.gif">&nbsp;&nbsp;</td>
</tr>
</table>
</div>

<!-- sce_hd4 -->
<a name="Heading4_6_3">
<h3>
<a href="#Heading3_6"> 6. </a>3 
<!-- hp1 --><b>ProDG VSI.NET PSP Projectsの新規作成</b><br>
</a>
</h3>
<div style="margin-left:50px;">ここでは、新しいプロジェクトの作成方法を説明します。<br>ProDGインストーラに含まれているVisual Studio Integrationを利用することで、簡単にプロジェクトをセットアップできます。<br><br></div>
<div style="margin-left:90px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;(1)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ファイルメニューを開いて、「新規作成」-&gt;「プロジェクト」を選択します。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese033.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(2)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プロジェクトの種類で「ProDG VSI.NET PSP Project」を選択し、テンプレートのリストから「PSP Hardware PRX」を選択してください。プロジェクト名およびフォルダを入力して「OK」ボタンを押してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese034.gif">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;(3)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;あらかじめ利用するヘッダファイルをコンパイルしておきビルド時間を短縮するプリコンパイルヘッダ機能を利用する場合は、「プリコンパイルヘッダを使用する」を選択して、「スタンドアロンPRX」が選択されていることを確認し、「Finish」ボタンを押してプロジェクトを作成してください。&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;<img src="gif/PSP_Setup_Guide-Japanese035.jpg">&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">ここまでの作業で、新しいプロジェクトが作成され、コンパイラとリンカの設定が完了してアプリケーションを作成可能な状態になっているはずです。ソースコードなどを新規に作成したプロジェクトファイルに追加し、開発を行ってください。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_7">
<h2>
 7 <!-- hp --><b>サンプルプログラムのコンパイルと実行（Cygwin / Linux）</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">下記において、"sh &gt;"は開発ホスト上のプロンプト、"dstdb &gt;"はデバッガdstdbのコマンドプロンプトを意味します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_7_1">
<h3>
<a href="#Heading3_7"> 7. </a>1 
<!-- hp1 --><b>環境変数のSCE_PSP_SDK_HOMEを設定する</b><br>
</a>
</h3>
<div style="margin-left:50px;">SCE_PSP_SDK_HOMEを設定します。通常は、/usr/local/psp/devkitを設定します。この変数を利用することで、簡単にdevkitのバージョンを切り替えることができます。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>[例]
　sh &gt; cd /usr/local/psp
　sh &gt; ls -1
　devkit           &larr; (バージョンはx.x.x)
　devkit-3.3.0
　devkit-3.5.0
　devkit-3.8.0
　      :
　sh &gt; export SCE_PSP_SDK_HOME=/usr/local/psp/devkit
</font></pre></div>
<div style="margin-left:50px;">別のバージョンで動作の確認を行いたい場合は、以下のようにすると簡単にdevkitのバージョンを切り替えられます。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>[例]
　sh &gt; export SCE_PSP_SDK_HOME=/usr/local/psp/devkit-3.3.0

</font></pre></div>
<div style="margin-left:50px;">上記の場合では、ログアウト（終了）すると環境変数が失われてしまうので、ログインシェルの起動ファイルにコマンドを登録しておいてください。<br>ログインシェルがBASHの場合は、ホームディレクトリ（/home/users（usersは任意））配下の「.bash_profile」に、上記コマンドを入れておいてください。<br>自分のログインシェルが何かを調べるには、例えば以下のように実行してください。<br>（usersは任意）<br></div>
        <div style="margin-left:80px;"><pre><font size=3>sh &gt; grep users /etc/passwd
users:x:501:100:users:/home/users:/bin/bash
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_7_2">
<h3>
<a href="#Heading3_7"> 7. </a>2 
<!-- hp1 --><b>環境変数のPATHを設定する</b><br>
</a>
</h3>
<div style="margin-left:50px;">/usr/local/psp/devkit/binを実行パスに追加します。<br>上記のようにSCE_PSP_SDK_HOMEを設定している場合は、以下のように設定すると便利です。こちらもログインシェルの起動ファイルにコマンドを登録しておいてください。ただし、SCE_PSP_SDK_HOMEを切り替えた場合は、PATHもexportし直す必要があります。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>[例]
　sh &gt; export PATH=$PATH:$SCE_PSP_SDK_HOME/bin
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_7_3">
<h3>
<a href="#Heading3_7"> 7. </a>3 
<!-- hp1 --><b>環境変数のPSP_GCC_VERSIONを設定する</b><br>
</a>
</h3>
<div style="margin-left:50px;">gccは、インストールすると以下のようにエントリされます。通常は、最新バージョンのgccを使用します。最新のバージョン以外のgccを使用する場合は、以下のように設定してください。簡単に使用するgccを切り替えることができます。こちらもログインシェルの起動ファイルにコマンドを登録しておいてください。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>[例]
　sh &gt; cd /usr/local/psp
　sh &gt; ls -1
　gcc-1.13.0
　gcc-2.4.2
　gcc-2.5.2
　sh &gt; export PSP_GCC_VERSION=gcc-1.13.0
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_7_4">
<h3>
<a href="#Heading3_7"> 7. </a>4 
<!-- hp1 --><b>実行イメージの作成</b><br>
</a>
</h3>
<div style="margin-left:50px;">開発ホスト上で実行イメージを作成します。下記は、サンプルコードのビルド方法です。ここでは、グラフィックスサンプルのballoonを例にあげます。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>sh &gt; cd /usr/local/psp/devkit/sample/graphics/balloon
sh &gt; make
</font></pre></div>
<div style="margin-left:50px;">これで当該サンプルの実行イメージであるprxあるいはelfファイルが作成されます。<br>上記のパスに書き込み権限がないような場合、書き込み権限のあるディレクトリに必要なサンプルをコピーして実行イメージを作成する場合は、Makefileを書き換えてください。例えば以下のようにします。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>sh &gt; cd /home/users/test
sh &gt; cp -r /usr/local/psp/devkit/sample/graphics/balloon gr_balloon
sh &gt; cd gr_balloon
sh &gt; vi Makefile  …  エディタでMakefileを開き、
    SDK_TOP = ../../..  をSDK_TOP = /usr/local/psp/devkit
    あるいは、SDK_TOP = $(SCE_PSP_SDK_HOME) と変更する。
sh &gt; make
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_7_5">
<h3>
<a href="#Heading3_7"> 7. </a>5 
<!-- hp1 --><b>プログラムの実行</b><br>
</a>
</h3>
<div style="margin-left:50px;">Windows XP上では、Windowsデバッガpspdbgがご使用になれます。<br>Windowsデバッガpspdbgの使用方法は、pspdbgのヘルプを参照してください。<br>GUIを用いているので操作方法は、簡易です。<br>また、プログラムを実行するだけであれば、PRX Loaderが便利です。PRX Loaderは、プログラムを実行する以外に、システムソフトウェアの起動や画面のキャプチャ機能も兼ね備えています。<br></div>
<br>
<div style="margin-left:50px;">以下では、Linux及びCygwinでのコマンドによるプログラムの実行方法を説明します。<br>各コマンドは、ウィンドウを占有しますので、それぞれ別ウィンドウで実行してください。ここでは、グラフィックスサンプルのballoonを例にあげます。<br>XX.XX.XX.XXは、PSP&reg; Hardware ToolのIPアドレスです。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_5_1"><h4>
(1)&nbsp;<b>開発ホスト上の１つ目のウィンドウでターミナルコンソールdspconsを起動します。ディレクトリは、どこでも構いません。</b><br></h4>
</a></div>
        <div style="margin-left:80px;"><pre><font size=3>sh &gt; dspcons -d XX.XX.XX.XX
dspcons (Version 2.24.21 Mon Feb  5 19:00:38 JST 2007)
target=SC display=S[0123456789K]TTYP,M[0123456789K]TTYP,STTYP keyboard=S0TTYP
escape=^]
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_5_2"><h4>
(2)&nbsp;<b>開発ホスト上の別のウィンドウを開き、ディレクトリを移動します。</b><br></h4>
</a></div>
        <div style="margin-left:80px;"><pre><font size=3>sh &gt; cd /usr/local/psp/devkit/sample/graphics/balloon
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_5_3"><h4>
(3)&nbsp;<b>開発ホスト上の上記ウィンドウでデバッガdstdbを起動します。</b><br></h4>
</a></div>
        <div style="margin-left:80px;"><pre><font size=3>sh &gt; dstdb -d XX.XX.XX.XX
dstdb (Version 2.24.21 Mon Feb  5 19:01:11 JST 2007)
node=SC dbgp=STDBGP filep=SDRFP0 loadp=SLOADP
*** DBGP Version 4.09
(type `help' for getting help, or `help help' for getting help of help)
dstdb 0?0&gt;
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_5_4"><h4>
(4)&nbsp;<b>PSP&reg;ブートコード「kbooti.bin」はバージョン5.0.0から廃止になりましたのでロードする必要はありません。</b><br></h4>
</a></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_5_5"><h4>
(5)&nbsp;<b>dstdbから、resetコマンドを使ってPSP&reg; Hardware Toolのシステムをresetします。</b><br></h4>
</a></div>
        <div style="margin-left:80px;"><pre><font size=3>dstdb 0?0&gt; reset 00000000
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_5_6"><h4>
(6)&nbsp;<b>ブートコードが起動されるとdspcons上に下記のようなメッセージが表示され、プログラムがロードできるようになります。</b><br></h4>
</a></div>
        <div style="margin-left:80px;"><pre><font size=3>devkit version 0x03010110
 (Development Tool  Revision A)
Loading all modules ... Ready
</font></pre></div>
<div style="margin-left:67px;">注意：このメッセージが出力されるまでは、以下に続くmstartは、行わないでください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_5_7"><h4>
(7)&nbsp;<b>mstartでプログラムをロードしてください。</b><br></h4>
</a></div>
        <div style="margin-left:80px;"><pre><font size=3>dsdtb 0R0&gt; mstart balloon.prx
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_5_8"><h4>
(8)&nbsp;<b>デバッガを終了します。</b><br></h4>
</a></div>
        <div style="margin-left:80px;"><pre><font size=3>dsdtb 0R0&gt; quit
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_7_6">
<h3>
<a href="#Heading3_7"> 7. </a>6 
<!-- hp1 --><b>デバッグ</b><br>
</a>
</h3>
<div style="margin-left:50px;">Windows XP上では、Windowsデバッガpspdbgがご使用になれます。<br>Windowsデバッガpspdbgの使用方法は、pspdbgのヘルプを参照してください。<br>GUIを用いているので操作方法は簡易です。<br><br>以下では、Linux及びCygwinでのコマンド"dstdb"を用いたデバッグについて簡単に説明します。<br>「balloon.prx」(/usr/local/psp/devkit/sample/graphics/balloon)を例に説明します。モジュールのロード実行、デバッグには、実行ファイルとソースファイルが必要です。この例では、以下のファイルが必要です。<br></div>
</ol>
<div style="margin-left:40px;"><ul>
<li> モジュールイメージファイル「balloon.prx」
<li> モジュールソースコード「balloon.c」
</ul></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_6_1"><h4>
(1)&nbsp;<b>ディレクトリを移動し、モジュールファイル、シンボルファイルをロードします。</b><br></h4>
</a></div>
        <div style="margin-left:80px;"><pre><font size=3>sh &gt; cd /usr/local/psp/devkit/sample/graphics/balloon
sh &gt; <u>dstdb -d XX.XX.XX.XX</u>
dstdb 0?0&gt; reset 00000000

dstdb 0R0&gt; mload balloon.prx
Loading 601 symbols ...
dstdb 0R0&gt; sload balloon.prx
Loading 601 symbols ...
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_6_2"><h4>
(2)&nbsp;<b>モジュールのソースコードを表示します。</b><br></h4>
</a></div>
<div style="margin-left:67px;">関数名がわかっている場合は、直接関数名を指定します。アドレスでの指定も可能です。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>dstdb 0R0&gt; list main
 main.c:265
    255                 texture_mode=texture_next;
    256                 change=1;
    257         }
    258         prev_state=state;
    259         proc_clouds();
    260
    261         frame++;
    262 }
    263
    264 int main(void)
    265 {
    266         init_all();
    267
    268         while (pad_read()) {
    269                 draw_frame();
    270                 <a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankStart">sceDisplayWaitVblankStart</a>();
    271                 <a href="../graphics/libgu-Reference-Japanese.htm#sceGuSwapBuffers">sceGuSwapBuffers</a>();
    272                 frame_update();
    273         }
    274         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuTerm">sceGuTerm</a>();
    275
dstdb 0R0&gt; list init_all
 main.c:108
     98         draw_balloon();
     99         draw_clouds();
    100
    101         <a href="../graphics/libgum-Reference-Japanese.htm#sceGumPopMatrix">sceGumPopMatrix</a>();
    102
    103         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinish">sceGuFinish</a>();
    104         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuSync">sceGuSync</a>(SCEGU_SYNC_FINISH, SCEGU_SYNC_WAIT);
    105 }
    106
    107 static void init_all(void)
    108 {
    109         <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a>  vec;
    110
    111         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuInit">sceGuInit</a>();
    112
    113         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuStart">sceGuStart</a>(SCEGU_IMMEDIATE, disp_list, sizeof(disp_list));
    114         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDrawBuffer">sceGuDrawBuffer</a>(SCEGU_PF8888, SCEGU_VRAM_BP32_0, SCEGU_VRAM_WIDTH);
    115         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDispBuffer">sceGuDispBuffer</a>(SCEGU_SCR_WIDTH, SCEGU_SCR_HEIGHT,
    116                                     SCEGU_VRAM_BP32_1, SCEGU_VRAM_WIDTH);
    117         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDepthBuffer">sceGuDepthBuffer</a>(SCEGU_VRAM_BP32_2, SCEGU_VRAM_WIDTH);
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_6_3"><h4>
(3)&nbsp;<b>ロードしたモジュールコード中にブレークポイントを設定します。</b><br></h4>
</a></div>
<div style="margin-left:67px;">(2)により取得したプログラムコード中にブレークポイントを設定し、デバッグを進めます。<br>以下のように、ソースファイル名に続けて「:」で行数を指定することが可能です。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>dstdb 0R0&gt; bp main.c:111
 $BP1=0x088ec830 &lt;init_all+0x10&gt; init=0x1 curr=0x1 # enabled, auto-init
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_6_4"><h4>
(4)&nbsp;<b>ロードしたモジュールを実行します。</b><br></h4>
</a></div>
<div style="margin-left:67px;">(3)で設定したブレークポイントまで実行します。デバッガに制御を戻すには、CTRL-Gを入力します。mstartの-dは、デバッグモードでエントリポイントを呼び出すためのオプションです。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>dstdb 0R0&gt; mstart -d
*** PC=0x088ec830
*** Unexpected reply - type=BREAKR code=ff result=BRKPT
*** Target program stopped.
*** Abort
dstdb 0S0&gt; list
 main.c:111
    101         <a href="../graphics/libgum-Reference-Japanese.htm#sceGumPopMatrix">sceGumPopMatrix</a>();
    102
    103         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinish">sceGuFinish</a>();
    104         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuSync">sceGuSync</a>(SCEGU_SYNC_FINISH, SCEGU_SYNC_WAIT);
    105 }
    106
    107 static void init_all(void)
    108 {
    109         <a href="../kernel/Types-Reference-Japanese.htm#ScePspFVector3">ScePspFVector3</a>  vec;
    110
-&gt;  111         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuInit">sceGuInit</a>();
    112
    113         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuStart">sceGuStart</a>(SCEGU_IMMEDIATE, disp_list, sizeof(disp_list));
    114         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDrawBuffer">sceGuDrawBuffer</a>(SCEGU_PF8888, SCEGU_VRAM_BP32_0, SCEGU_VRAM_WIDTH);
    115         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDispBuffer">sceGuDispBuffer</a>(SCEGU_SCR_WIDTH, SCEGU_SCR_HEIGHT,
    116                                     SCEGU_VRAM_BP32_1, SCEGU_VRAM_WIDTH);
    117         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDepthBuffer">sceGuDepthBuffer</a>(SCEGU_VRAM_BP32_2, SCEGU_VRAM_WIDTH);
    118
    119         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuOffset">sceGuOffset</a>(SCEGU_SCR_OFFSETX, SCEGU_SCR_OFFSETY);
    120         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuViewport">sceGuViewport</a>(2048, 2048, SCEGU_SCR_WIDTH, SCEGU_SCR_HEIGHT);
    121         <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDepthRange">sceGuDepthRange</a>(50000, 10000);
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_6_5"><h4>
(5)&nbsp;<b>デバッグを進めます。</b><br></h4>
</a></div>
<div style="margin-left:67px;">dstdbコマンドについては、詳細を以下で確認することができます。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>dstdb 0S0&gt; help

</font></pre></div>
<div style="margin-left:67px;">例えば、以下のようなコマンドがあります。<br>詳しくは、「dstdbコマンドリファレンス」と、「dsnet for PSP&reg;概要」をご参照ください。該当ファイルは、ランタイムライブラリドキュメントパッケージに含まれています。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>コマンド</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;list [&lt;adr&gt; [&lt;cnt&gt; [&lt;back&gt;]]]&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ソース行の表示&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;dr [-hf] [&lt;reg&gt;]...&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;レジスタの表示&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;minfo [-i] [-a] [-uk] [&lt;id&gt;]&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;モジュールの情報表示&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;bp [&lt;adr&gt;[,&lt;cnt&gt;]]...&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ブレークポイントの設定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ub [all|&lt;adr&gt;]...&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ブレークポイントの削除&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;lstep [&lt;cnt&gt;]&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ソース行単位でのステップ実行&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;lnext [&lt;cnt&gt;]&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ソース行単位でのネクスト実行（関数内に入りません）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;luntil &lt;line&gt;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プログラムの指定ソース行までの実行&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;cont [&lt;cnt&gt;]&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;プログラムの継続実行&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;bt [&lt;cnt&gt;]&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;バックトレースの表示&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;show [&lt;show_args&gt;]...&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;各種情報の表示&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;printf "&lt;fmt&gt;" [&lt;args&gt;]...&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;書式付きメッセージ出力&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_7_6_6"><h4>
(6)&nbsp;<b>再起動</b><br></h4>
</a></div>
<div style="margin-left:67px;">プログラムを再起動する際には、dstdb上で、resetコマンドからやり直してください。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_8">
<h2>
 8 <!-- hp --><b>システムソフトウェアのデバッグ支援機能</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">PSP&reg; Hardware Toolのシステムソフトウェアには、PSP&reg;アプリケーション開発をサポートするためのデバッグ機能が搭載されています(PSP&reg; Testing Tool (DTP-H2500(A) / DTP-H1500 (A) )も同様です）。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_8_1">
<h3>
<a href="#Heading3_8"> 8. </a>1 
<!-- hp1 --><b>コンテンツ情報チェック機能</b><br>
</a>
</h3>
<div style="margin-left:50px;">以下に挙げるコンテンツについてチェックを行う機能があります。詳しくは、「コンテンツ情報チェック機能」ドキュメントをご参照ください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_1_1"><h4>
(1)&nbsp;<b>UMD&reg;</b><br></h4>
</a></div>
<div style="margin-left:67px;">ホームメニューにてUMD&reg;アイコンを選択し、△ボタンで開くメニューから「☆Check」を選択すると、コンテンツ情報の整合性についてチェックすることができます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_1_2"><h4>
(2)&nbsp;<b>セーブデータ</b><br></h4>
</a></div>
<div style="margin-left:67px;">ホームメニューにて任意のセーブデータアイコンを選択し、△ボタンで開くメニューから「☆Check」を選択すると、コンテンツ情報の整合性についてチェックすることができます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_1_3"><h4>
(3)&nbsp;<b>ゲームシェアリング</b><br></h4>
</a></div>
<div style="margin-left:67px;">ホームメニューにてゲームシェアリングデータを受信すると、受信したバイナリを起動する前にコンテンツ情報の整合性についてチェックすることができます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_1_4"><h4>
(4)&nbsp;<b>Memory Stick&trade;起動ゲーム</b><br></h4>
</a></div>
<div style="margin-left:67px;">ホームメニューにて任意のMemory Stick&trade;起動ゲームアイコンを選択し、△ボタンで開くメニューから「☆Check」を選択すると、コンテンツ情報の整合性についてチェックすることができます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_1_5"><h4>
(5)&nbsp;<b>スクリーンショット</b><br></h4>
</a></div>
<div style="margin-left:67px;">ホームメニューにて任意のスクリーンショットアイコンを選択し、△ボタンで開くメニューから「☆Check」を選択すると、コンテンツ情報の整合性についてチェックすることができます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_1_6"><h4>
(6)&nbsp;<b>タイトルストアプレビュー</b><br></h4>
</a></div>
<div style="margin-left:67px;">ホームメニューの「PlayStation&reg;Network」列から「☆Title Store Preview」を選択することで、タイトルに依存したストアコンテンツの状態を確認することができます。後に説明する「☆Debug Settings」にて、「Service ID」の設定が必要です。<br></div>
</ul>
<div style="margin-left:55px;"><ol>
<li VALUE=1> ☆Title Store Preview (InGame)<br>Service IDに対応したIn-Game Storeカタログを表示します。</li>
<li VALUE=2> ☆Title Store Preview (Store)<br>Service IDに対応したRegional Storeカタログを表示します。</li>
</ol></div>

<!-- sce_hd4 -->
<a name="Heading4_8_2">
<h3>
<a href="#Heading3_8"> 8. </a>2 
<!-- hp1 --><b>デバッグ用の各種設定</b><br>
</a>
</h3>
<div style="margin-left:50px;">ホームメニューにて「設定」−「☆Debug Settings」を選択すると、デバッグ用の設定を行うことができます。この設定は、ホームメニューからディスク起動した時に有効になります。デバッガやPRX Loaderでプログラムを起動する場合の設定方法は、各ツールの説明をご参照ください。デバッグ用設定機能は、開発当初から意図して使うようにしてください。気付かずに使用していて開発期間の後半に判明するようなことのないよう、十分にご注意ください。<br></div>

<div align=center>
<p>
<img src="gif/PSP_Setup_Guide-Japanese036.jpg">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_1"><h4>
(1)&nbsp;<b>Available Memory：([32MB] / 64MB)</b><br></h4>
</a></div>
<div style="margin-left:67px;">PSP&reg;が使用できるメモリのサイズを切り替えることができます。デバッグ機能などでメモリが多く必要な場合に切り替えてご使用ください。<br>マスター前の確認は、必ず32MBモードで行ってください。<br>UMD&trade; Cache機能を使用するときは、32MBモードにしてください。<br>64MBモードにすると、UMD&trade; Cache機能は強制的に無効になります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_2"><h4>
(2)&nbsp;<b>UMD&trade; Cache：([Off] / On)</b><br></h4>
</a></div>
<div style="margin-left:67px;">PSP-3000 / PSP-2000で使用可能なUMD&reg;のキャッシュ機能を、PSP&reg; Hardware Tool上でUMD&reg; / DVD-Rのどちらでも確認することができます。<br>UMD&trade; Cache機能を使用する場合は、メモリは32MBモードにしてください。<br>UMD&trade; Cache機能を有効にした場合は、メモリは強制的に32MBモードになります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_3"><h4>
(3)&nbsp;<b>○ Button Behavior：(Enter / [Back])</b><br></h4>
</a></div>
<div style="margin-left:67px;">○ボタンを押した時の挙動を「決定(Enter)」か「戻る(Back)」に設定することができます。PSP&reg;本体は、販売仕向けによってシステムが○ボタンを押した時の認識が違います。作成しているゲームを販売する仕向けに合わせて確認するようにしてください。なお、×ボタンが○ボタンの逆の認識になります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_4"><h4>
(4)&nbsp;<b>USB GPS Driver：([Release] / Debug)</b><br></h4>
</a></div>
<div style="margin-left:67px;">USB GPSドライバの切り替えを行うことができます。詳しくは、GPSエミュレータのドキュメントをご参照ください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_5"><h4>
(5)&nbsp;<b>Flash<sup>&reg;</sup> Player：([Disable] / Enable)</b><br></h4>
</a></div>
<div style="margin-left:67px;">インターネットブラウザにてMacromedia<sup>&reg;</sup> Flash<sup>&reg;</sup> Playerを有効／無効にすることを、インターネットに接続せずに行うことができます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_6"><h4>
(6)&nbsp;<b>GPI6 Memory Stick&trade; Lock Emulation：([Off] / On)</b><br></h4>
</a></div>
<div style="margin-left:67px;">GPI6スイッチによるLOCK付きMemory Stick&trade;のエミュレーションの有効／無効を切り替えます。有効時、GPI6スイッチがONの状態で挿入されたMemory Stick&trade;は、LOCKスイッチがLOCKされているものとしてエミュレーションされます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_7"><h4>
(7)&nbsp;<b>DVD Mode Speed：([UMD&trade; Almost Compatible] / DVD Maximum Speed)</b><br></h4>
</a></div>
<div style="margin-left:67px;">DVD-Rからの読み出し速度を変更することができます。UMD&reg;からの読み出し速度をエミュレーションしたUMD&trade; Almost CompatibleとDVDの最大読み出し速度のDVD Maximum Speedがあります。DVD-Rからの読み出し速度を変えて動作テストを行うことによって、ディスクからの読み出し速度に依存した問題を検出できる可能性があります。<br>DVD Maximum Speedにて開発を行う場合は、DVD-Rからの読み出し速度がUMD&reg;と比較して速いということに留意してください。UMD&trade; Almost Compatibleの場合、ファイルのシーク操作がエミュレートできるようになりましたので、UMD&reg;に焼く前に必ずこのモードでデータアクセスについてのチェックを行ってください。UMD&reg;のシークはデータアクセス速度を低下させる場合があります。一度に大量のファイルの読み込みや位置の離れた複数のファイルを読み込むような実装の場合、DVD-R上では気付かずに、UMD&reg;にて読み込み時間が極端に長くなるような問題に発展することがあります。このような実装にならないようご注意ください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_8"><h4>
(8)&nbsp;<b>UMD&trade;/DVD Random Delay：([Off] / On)</b><br></h4>
</a></div>
<div style="margin-left:67px;">DVD/UMD&reg;の読み込みをランダムに遅延させることができます。本機能を有効にすると、UMD&reg;とDVD-Rどちらからの読み出しも、ランダムに最大8秒間遅延させることができます。本機能を有効にして動作テストを行うことによって、ディスクからの読み出し速度に依存した問題を検出できる可能性があります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_9"><h4>
(9)&nbsp;<b>WLAN Random Packet Drop：([Off] / On)</b><br></h4>
</a></div>
<div style="margin-left:67px;">ワイヤレスLAN上のネットワーク通信に使用するパケットを、ランダムに棄却することができます。本機能を有効にすると、10%の確率で5秒間のパケット棄却期間が発生します。その間は、通信が遮断されます。通信エラーが発生しやすい状況での問題などを検出できる可能性があります。<br>パケット棄却の動作について詳しくは、「ifhandleドキュメント」をご参照ください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_10"><h4>
(10)&nbsp;<b>Memory Block Overflow Check：([Off] / On)</b><br></h4>
</a></div>
<div style="margin-left:67px;">メモリブロックのオーバーフローをチェックすることができます。本機能を有効にすると、メモリブロックのオーバーフローを検出できる可能性があります。例えばアプリケーションが用意したメモリサイズを越えてデータをコピーしてしまった場合や、確保もしていない領域にデータを書き込もうとした時にエラーになります。ただし本機能を有効にすると、メモリを確保するごとに256バイトずつチェック用の領域が確保されます。このため、アプリケーションがメモリをぎりぎりまで使用している場合は、Onにするとメモリ不足で動作しないことがあります。その場合は、メモリを64MBモードにして動作確認を行ってください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_11"><h4>
(11)&nbsp;<b>WLAN coexistence max clock：([222MHz] / 333MHz)</b><br></h4>
</a></div>
<div style="margin-left:67px;">WLAN使用時の最高クロック周波数を切り替えることができます。本機能で333MHzモードにした場合は、PSP-2000以降相当の動作となり、タイトル内で弊社提供のAPIでクロック周波数を変更することで、ネットワーク使用時も333MHzで動作させることができます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_12"><h4>
(12)&nbsp;<b>USB Serial : ([Off] / On)</b><br></h4>
</a></div>
<div style="margin-left:67px;">USBシリアルドライバの有効/無効を切り替えます。有効時にはUSBシリアルドライバの機能を利用することができます。マスター前の確認は、必ず無効にして行ってください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_13"><h4>
(13)&nbsp;<b>Debugger Mode: ([DECI2p]/BSOD)</b><br></h4>
</a></div>
<div style="margin-left:67px;">アプリケーションをホームメニューからUMD&reg; /DVD-R / Memory Stick&trade; / ゲームシェアリングで起動するとき、DECI2pプロトコルによるデバッガ接続の代わりにDTP-H1500と同等のBSODを使用するかどうか選択します。<br>BSODを使用した場合DECI2pプロトコルによるホストCPUと通信することで実現される機能は使用できません。printf()やhost0:ファイルシステム等を使用する場合はDECI2pを選択してください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_14"><h4>
(14)&nbsp;<b>NP Environment：(sp-int)</b><br></h4>
</a></div>
<div style="margin-left:67px;">PlayStation&reg;Networkの環境変数を設定する機能です。現状では、この値は変更しないでください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_15"><h4>
(15)&nbsp;<b>NP Debug：([Off] / On)</b><br></h4>
</a></div>
<div style="margin-left:67px;">PlayStation&reg;Networkを利用するアプリケーション開発を支援するための機能です。<br>現在、以下の機能が有効になります。<br></div>
</ol>
<div style="margin-left:40px;"><ul>
<li> サインインチケットの有効期限を5分に短縮<br>通常、サインインチケットの有効期限は、24時間に設定されていますが、これをデバッグ目的のために5分に短縮します。サインインチケットが有効期限切れした場合のエラー処理のテストなどにご利用ください。
</ul></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_16"><h4>
(16)&nbsp;<b>Service ID</b><br></h4>
</a></div>
<div style="margin-left:67px;">PlayStation&reg;Networkを利用するアプリケーション開発を支援するための機能です。Service IDに、タイトルに割り当てられたサービスIDを設定し、ホームメニューにて「☆Title Store Preview」を選択することでタイトルに依存したストアコンテンツの状態を確認することができます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_17"><h4>
(17)&nbsp;<b>NPDRM Debug：([Off] / On)</b><br></h4>
</a></div>
<div style="margin-left:67px;">PlayStation&reg;Storeから追加ゲームデータを販売するアプリケーションの開発を支援するための機能です。本機能を有効にすると、購入した追加ゲームデータ(NPDRM EDATA, NPDRM SPRX)の所有権がなくなった状態をエミュレートします(ms0:/PSP/LICENSE/ 以下のRIFファイルを全削除した時の動作に相当します)。エラー処理のテストにご利用ください。一部のコンテンツだけ権利が消失している状態については、このメニューではテストできません。この場合は従来どおり、対応するRIFファイルを削除することで権利消失時の動作を確認してください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_8_2_18"><h4>
(18)&nbsp;<b>Adhoc SSID prefix：(PSP)</b><br></h4>
</a></div>
<div style="margin-left:67px;">アドホック接続をする際のSSIDのprefixを指定する項目で、アドホックパーティーのデバッグ目的に使用できます。PlayStation&reg;3 Debugging Stationのシステムソフトウェア3.00に追加された同名のDebug Settingsの項目と連動して使用することで、同じ値に設定したPlayStation&reg;3 Debugging StationとPSP&reg;だけが参加できるアドホックパーティーのためのIBSSを構築することができます。デフォルトの値は"PSP"で、長さは3文字固定です。<br></div>

<!-- sce_hd6 -->
<a name="Heading6_8_2_18_1">
<div style="margin-left:63px;"><h4><b>制限事項</b><br><br></h4></a></div>
<div style="margin-left:80px;">アプリケーションをビルドしたSDKが2.00より古いものである場合、本設定は反映されません。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_8_3">
<h3>
<a href="#Heading3_8"> 8. </a>3 
<!-- hp1 --><b>☆Install Package機能</b><br>
</a>
</h3>
<div style="margin-left:50px;">ホームメニューにて「設定」−「☆Install Package」を選択すると、シンプルオーサリングサービスから取得できるPKGパッケージをPlayStation&reg;3開発ツールを利用せずPSP&reg;開発ツールに直接インストールすることが可能です。本項目を選択することで、Memory Stick&trade;のルートディレクトリに置かれたPKGパッケージが最大64個までPSP&reg;開発ツールにインストールされます。<br></div>

<!-- sce_hd3 -->
<a name="Heading3_9">
<h2>
 9 <!-- hp --><b>補足</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_9_1">
<h3>
<a href="#Heading3_9"> 9. </a>1 
<!-- hp1 --><b>PRX/ELFの最大サイズ</b><br>
</a>
</h3>
<div style="margin-left:50px;">ロード可能なユーザプログラムの最大サイズは、0x08804000から0x0a000000までのエリアにファイルと配置されたイメージが収まる範囲です。ユーザ空間は、24MiBありますが、サービスライブラリが若干使用しています。そのほか、ヒープやスタックなどのメモリが使用します。<br><br>PRXの最大サイズは、残りメモリにPRXファイルが乗る必要があるので「メモリ残容量 &gt; ファイルサイズ」である必要があります。<br>ELFに関しては、ELF自体が固定アドレスを要求するため、ELFのロードアドレスからファイルサイズ分のメモリが空いている必要があります。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_9_2">
<h3>
<a href="#Heading3_9"> 9. </a>2 
<!-- hp1 --><b>タイトルアプリケーションが使用できるメモリサイズ</b><br>
</a>
</h3>
<div style="margin-left:50px;">製品版としてタイトルアプリケーションが使用できるメモリサイズは、上記でも述べていますが24MiBあります（サービスライブラリなどが使用する領域も含む）。<br>デバッグ用として、64MBモードがありますが、こちらはシステムが使用する領域の他に予約領域として8MiB使用しておりますので、48MiBとなります（サービスライブラリなどが使用する領域も含む）。なお、64MBモードはUMD&trade; Cache機能を使用している時は無効になりますのでご注意ください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_9_3">
<h3>
<a href="#Heading3_9"> 9. </a>3 
<!-- hp1 --><b>ネットワーク接続に関する問題が発生した場合</b><br>
</a>
</h3>
<div style="margin-left:50px;">ネットワークに関する問題（PSP&reg; Hardware Toolの認証、接続、アップデートに関する問題など）が発生した場合に行うべき最初のステップは、PSP&reg; Hardware Toolに対してpingが行えるか確認することです。これを行うには、コマンドプロンプトを開いて次のように入力します。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>ping &lt; PSP&reg; Hardware Tool のIPアドレス &gt;
</font></pre></div>
<div style="margin-left:50px;">すぐに応答が受信されない場合、ネットワークの設定（プロキシまたはファイアウォールの設定）に問題があります。PSP&reg; Hardware Toolが開発ホストと同じネットワーク上にあり、正しく設定されていることを確認した後、ファイアウォールやアンチウイルスプログラムをすべて無効にしてみます。それでも問題が解決されない場合は、セキュリティソフトウェアを再び有効にし、テクニカルサポートまでご連絡ください。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2011 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
