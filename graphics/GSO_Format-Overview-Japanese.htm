<html lang="jp">
<head>
<title>GSO_Format-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; GSO 3D Converter</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
GSOフォーマット・概要
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>はじめに</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>機能概要</b><br>
</a>
</h3>
<div style="margin-left:50px;">基本的な3Dシーンの表示を目的としたファイルフォーマットです。<br>3Dシーンに格納される情報には、以下のようなものがあります。<br><br></div>
<div style="margin-left:40px;"><ul>
<li> 環境（バックグラウンド、アンビエントライト）
<li> フォグ
<li> ライト
<li> カメラ
<li> ノード
<li> オブジェクト（モデルデータ）
<li> テクスチャ（画像データ）
<li> コントロール（プログラム）
<li> モーション
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>作成方法</b><br>
</a>
</h3>
<div style="margin-left:50px;">一般的な3Dシーンデータから変換することによって作成します。<br><br></div>

<div style="margin-left:67px;">
<p>
<img src="gif/GSO_Format-Overview-Japanese001.gif">
</div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_3">
<h3>
<a href="#Heading3_1"> 1. </a>3 
<!-- hp1 --><b>表記について</b><br>
</a>
</h3>
<div style="margin-left:50px;">このドキュメントでは、データ型を以下のように表記します。バイトオーダーはリトルエンディアンです。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>型名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>型</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>型名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>型</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;char&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき8ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;u_char&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし8ビット整数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;short&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき16ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;u_short&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし16ビット整数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;int&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき32ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;u_int&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし32ビット整数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;float&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;32ビット浮動小数点数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>データ構造</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>階層構造</b><br>
</a>
</h3>
<div style="margin-left:50px;">3Dフォーマットは以下のように階層的なブロック構造を持ちます。<br><br></div>

<div style="margin-left:67px;">
<p>
<img src="gif/GSO_Format-Overview-Japanese002.gif">
</div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>ブロック</b><br>
</a>
</h3>
<div style="margin-left:50px;">ブロックは、モデルデータにおけるひとまとまりのデータを表します。<br>ブロックは、ブロックタイプ、ブロック名および任意の個数の引数を持ちます。<br>直接的なデータ配列として、ブロックデータを含むことができます。<br>下位の階層構造として、コマンド、サブブロックを含むことができます。<br><br></div>

<div style="margin-left:67px;">
<p>
<img src="gif/GSO_Format-Overview-Japanese003.gif">
</div>
<div style="margin-left:50px;"><br>ブロック名は、外部からこのブロックを参照するために使用します。<br>ある階層における同じタイプのブロック中で一意であることが必要です。<br>引数は、ブロックにおける必須の情報を表すために使用します。<br>おもにデータブロックのフォーマット情報などで使用します。<br><br>記述例：<br></div>
        <div style="margin-left:80px;"><pre><font size=3><a href="../graphics/GSO_Format-Reference-Japanese.htm#Scene">Scene</a>"scene-0" {				// ブロック
	<a href="../graphics/GSO_Format-Reference-Japanese.htm#BoundingBox">BoundingBox</a> -100 -100 -100 100 100 100	// ブロックのコマンド

	<a href="../graphics/GSO_Format-Reference-Japanese.htm#Node">Node</a> "node-0" {			// サブブロック
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#Translate">Translate</a> 0 0 0			// サブブロックのコマンド
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#RotateYXZ">RotateYXZ</a> 0 0 0			// サブブロックのコマンド
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#Scale">Scale</a> 1 1 1			// サブブロックのコマンド
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#NodeObject">NodeObject</a> "object-0"		// サブブロックのコマンド
	}
}
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_2_3">
<h3>
<a href="#Heading3_2"> 2. </a>3 
<!-- hp1 --><b>コマンド</b><br>
</a>
</h3>
<div style="margin-left:50px;">コマンドは、それを含むブロックの要素データを表します。<br>コマンドは、コマンドタイプ、および任意の個数の引数を持ちます。<br></div>

<div style="margin-left:67px;">
<p>
<img src="gif/GSO_Format-Overview-Japanese004.gif">
</div>
<div style="margin-left:50px;"><br>引数の個数およびデータ型は、各コマンドごとに規定されています。<br>引数のデータ型には、以下のようなものがあります。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>型名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>内容</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>記述例</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;int&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき32ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;short&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき16ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;char&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき8ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;u_int&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし32ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;u_short&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし16ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;u_char&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし8ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;float&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;単精度浮動小数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1.0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;string&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;文字列&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;"tex.bmp"&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ref&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ブロック参照&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;"node-0"&nbsp;&nbsp;<br>&nbsp;&nbsp;"<a href="../graphics/GSO_Format-Reference-Japanese.htm#Node">Node</a>::node-0"&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;enum&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;列挙定数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LINEAR&nbsp;&nbsp;<br>&nbsp;&nbsp;LINEAR｜HOLD&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;void&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;上記の任意の型&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;------------&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">ブロック参照は、他のブロックを指定する場合に使用します。<br>"ブロックタイプ::ブロック名" のようにブロックタイプを指定することもできます。<br><br>列挙定数は、特定のコマンドの引数として使用可能な定数です。<br>"|" で連結することで、論理和を指定することもできます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_4">
<h3>
<a href="#Heading3_2"> 2. </a>4 
<!-- hp1 --><b>テキスト形式</b><br>
</a>
</h3>
<div style="margin-left:50px;">テキスト形式は、ファイルの先頭行にファイルヘッダを記述し、それ以降の行にブロックとコマンドを記述する形式になっています。<br><br>記述例：<br></div>
        <div style="margin-left:80px;"><pre><font size=3>.GSS 1.00

<a href="../graphics/GSO_Format-Reference-Japanese.htm#Scene">Scene</a> "scene-0" {
	<a href="../graphics/GSO_Format-Reference-Japanese.htm#Env">Env</a> "env-0" {
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#EnvBackground">EnvBackground</a> 1.0 1.0 1.0 1.0
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#EnvAmbient">EnvAmbient</a> 0.5 0.5 0.5 1.0
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#EnvMap">EnvMap</a> <a href="../graphics/GSO_Format-Reference-Japanese.htm#EnvBackground">EnvBackground</a> "texture-0"
	}
	<a href="../graphics/GSO_Format-Reference-Japanese.htm#Node">Node</a> "node-0" {
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#NodeObject">NodeObject</a> "object-0"
	}
	<a href="../graphics/GSO_Format-Reference-Japanese.htm#Node">Node</a> "node-1" {
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#Parent">Parent</a> "node-0"
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#Translate">Translate</a> -10.0 5.0 0.0
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#RotateYXZ">RotateYXZ</a> 0.0 1.57 0.0
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#NodeObject">NodeObject</a> "object-1"
	}
	<a href="../graphics/GSO_Format-Reference-Japanese.htm#Node">Node</a> "node-2" {
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#Parent">Parent</a> "node-0"
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#Translate">Translate</a> 10.0 5.0 0.0
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#RotateYXZ">RotateYXZ</a> 0.0 -1.57 0.0
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#NodeObject">NodeObject</a> "object-1"
	}
	<a href="../graphics/GSO_Format-Reference-Japanese.htm#Object">Object</a> "object-0" {
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#FileName">FileName</a> "map.gmo"
	}
	<a href="../graphics/GSO_Format-Reference-Japanese.htm#Object">Object</a> "object-1" {
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#FileName">FileName</a> "dog.gmo"
	}
	<a href="../graphics/GSO_Format-Reference-Japanese.htm#Texture">Texture</a> "texture-0" {
		<a href="../graphics/GSO_Format-Reference-Japanese.htm#FileName">FileName</a> "sky.bmp"
	}
}
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_2_5">
<h3>
<a href="#Heading3_2"> 2. </a>5 
<!-- hp1 --><b>バイナリ形式</b><br>
</a>
</h3>
<div style="margin-left:50px;">バイナリ形式の構造はテキスト形式の構造と類似しています。<br>バイナリ形式では、ファイル先頭に16バイトのヘッダを格納し、それに続くチャンクの階層構造にモデルデータを格納します。<br></div>

<div style="margin-left:67px;">
<p>
<img src="gif/GSO_Format-Overview-Japanese005.gif">
</div>
<div style="margin-left:50px;"><br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_5_1">
<div style="margin-left:40px;"><h4><b>ファイルヘッダ</b><br><br></h4></div></a>

<div style="margin-left:67px;">ファイルヘッダは、以下のようなデータ構造を持ちます。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>typedef struct {
	u_int signature ;	// ファイル識別子 ( '.GSO' )
	u_int version ;	// バージョン番号 ( '1.00' )
	u_int style ;		// データスタイル ( 'PSP' )
	u_int option ;		// オプション ( 0 )
} GsoHeader ;
</font></pre></div>
<div style="margin-left:67px;"><br>データスタイルはデータ表現が特定のAPIに最適化されていることを表します。<br>'PSP' スタイルではPSP&reg;ライブラリの制約にしたがった形式で格納されます。詳しくは「PSP&reg;ライブラリによる制限」の章、およびPSP&reg;ライブラリのドキュメントを参照してください。<br>データスタイルがゼロのときはテキスト形式と同じです。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_5_2">
<div style="margin-left:40px;"><h4><b>チャンク構造</b><br><br></h4></div></a>

<div style="margin-left:67px;">チャンクとはひとまとまりのデータのことで、バイナリ形式においてはブロックチャンク、コマンドチャンクの2種類のチャンクが定義され、それぞれがブロックとコマンドに対応しています。<br><br>ブロックチャンクは、以下のようなデータ構造を持ちます。<br></div>

<div style="margin-left:67px;">
<p>
<img src="gif/GSO_Format-Overview-Japanese006.gif">
</div>
<div style="margin-left:67px;"><br><br>ブロックチャンクヘッダは、以下のようなデータ構造を持ちます。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>typedef struct {
	u_short type ;		// チャンクタイプ
	u_short args_offs ;	// ブロック引数のオフセット
	u_int next_offs ;	// 次のチャンクのオフセット
	u_int child_offs ;	// 下位チャンクのオフセット
	u_int data_offs ;	// ブロックデータのオフセット
} GsoChunk ;
</font></pre></div>
<div style="margin-left:67px;"><br>ブロックに含まれる各要素の先頭は、4バイト単位でのアラインメントが必要です。<br>ブロックチャンクヘッダに含まれるサイズ、オフセット等はすべて4の倍数となります。<br>バイナリ形式ではブロックは番号によって参照されるため、ブロック名は省略可能です。<br><br>コマンドチャンクは、以下のようなデータ構造を持ちます。<br></div>

<div style="margin-left:67px;">
<p>
<img src="gif/GSO_Format-Overview-Japanese007.gif">
</div>
<div style="margin-left:67px;"><br>コマンドチャンクヘッダは、以下のようなデータ構造を持ちます。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>typedef struct {
	u_short type ;		// チャンクタイプ
	u_short name ;		// 使用しません（つねに0）
	u_int next_offs ;	// 次のチャンクのオフセット
} GsoChunk ;

</font></pre></div>
<div style="margin-left:67px;">これらのブロックチャンク、コマンドチャンクは入れ子状に格納されます。<br>ブロックチャンクにおける下位階層のチャンクは連続して格納されます。<br></div>

<div style="margin-left:67px;">
<p>
<img src="gif/GSO_Format-Overview-Japanese008.gif">
</div>
<div style="margin-left:67px;"><br>連続するチャンクの一つがコマンドチャンクであるかブロックチャンクであるかは、チャンクタイプの最上位ビット（GSO_HALF_CHUNK）で判別できます。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_5_3">
<div style="margin-left:40px;"><h4><b>データ表現</b><br><br></h4></div></a>

<div style="margin-left:67px;">バイナリ形式では、データ型は以下のように表現されます。<br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>型名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>内容</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>アラインメント</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;int&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき32ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;short&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき16ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;char&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき8ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;u_int&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし32ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;u_short&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし16ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;u_char&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし8ビット整数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;float&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;単精度浮動小数&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;string&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;文字列（ヌル終端）&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ref&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ブロック参照（32ビット整数）&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;enum&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;列挙定数（32ビット整数）&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;void&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;上記の任意の型&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;----------------&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:67px;">各引数は表に示した単位でのアラインメントが必要です。<br>そのため必要に応じてパディングを行います。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_5_4">
<div style="margin-left:40px;"><h4><b>ブロック参照</b><br><br></h4></div></a>

<div style="margin-left:67px;">テキスト形式では、ブロック参照はブロック名によって表されますが、バイナリ形式では、ブロック参照はブロック番号によって表されます。<br>ブロック参照は、以下のようなビット構成を持ちます。<br></div>

<div style="margin-left:67px;">
<p>
<img src="gif/GSO_Format-Overview-Japanese009.gif">
</div>
<div style="margin-left:67px;"><br>タイプは、参照されるブロックのチャンクタイプを表します。<br>レベルは、いくつ上の階層レベルに存在するかを表します。<br>番号は、同じタイプのブロック中で何番目かを表します。<br>無効な参照の場合、すべてのビットが1となります。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>PSP&reg;ライブラリによる制限</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">'PSP' スタイルのバイナリ形式には、以下のような制限があります。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>関数データブロック</b><br>
</a>
</h3>
<div style="margin-left:50px;">関数データブロックには、キーフレームの時刻と値を16bit浮動小数点数で格納することができます。このとき関数データのフォーマット引数にSCEGSO_FCURVE_FLOAT16ビットがセットされます。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2005 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
