<html lang="en">
<head>
<title>libgim_Picture-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libgim_picture Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceGimPicture"></a>
<table width="100%"><td width="70%"><font size=6>SceGimPicture<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Structure for representing a picture<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>(Omitted)

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">(Omitted)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a structure for representing a picture.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Since the application need not directly access or should not access the members of this structure, the descriptions of the structure and members are omitted.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCreate">sceGimPictureCreate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceGimChunk"></a>
<table width="100%"><td width="70%"><font size=6>SceGimChunk<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Structure for representing a chunk<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>(Omitted)

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">(Omitted)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a structure for representing data blocks of the various layers constituting the format.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For details about chunk structures, refer to the format documents.<br>To access chunk elements, use chunk manipulation macros.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetChunkCount">sceGimPictureGetChunkCount</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetChunk">sceGimPictureGetChunk</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceGimImageHeader"></a>
<table width="100%"><td width="70%"><font size=6>SceGimImageHeader<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Structure for representing an image header<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>(Omitted)

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">(Omitted)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a structure for representing the header of an image chunk.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Since the application need not directly access the members of this structure, the descriptions of the structure and members are omitted.<br>For details, refer to the separate document entitled "GIM Format Overview."<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceGimPaletteHeader"></a>
<table width="100%"><td width="70%"><font size=6>SceGimPaletteHeader<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Structure for representing a palette header<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>(Omitted)

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">(Omitted)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a structure for representing the header of a palette chunk.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Since the application need not directly access the members of this structure, the descriptions of the structure and members are omitted.<br>For details, refer to the separate document entitled "GIM Format Overview."<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPalette">sceGimPictureGetPalette</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetMemoryManager"></a><a name="sceGimPictureSetMemoryManager2"></a><a name="sceGimPictureSetMemoryManager3"></a>
<a name="sceGimPictureSetMemoryManager / sceGimPictureSetMemoryManager2 / sceGimPictureSetMemoryManager3"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetMemoryManager / sceGimPictureSetMemoryManager2 / sceGimPictureSetMemoryManager3<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set memory management functions<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetMemoryManager</b>( 
	void *(*<i>malloc</i>)( size_t ),
	void (*<i>free</i>)( void * ) 
) ;
void <b>sceGimPictureSetMemoryManager2</b>(
	void *(*<i>malloc</i>)( size_t ),
	void (*<i>free</i>)( void * ) 
) ;
void <b>sceGimPictureSetMemoryManager3</b>(
	void *(*<i>malloc</i>)( size_t ),
	void (*<i>free</i>)( void * ) 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>malloc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory allocation function&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>free</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory release function&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting a function for allocating and a function for releasing memory for pictures.<br>sceGimPictureSetMemoryManager2() is a function for DMA memory. It stores packet and pixel data. If it is omitted, the functions that were set by using sceGimPictureSetMemoryManager() are used. sceGimPictureSetMemoryManager3() is a function for eDRAM. It stores pixel data. If it is omitted, eDRAM is not allocated.<br><br>Memory that is allocated for pictures must have 4-byte alignment when the VFPU is not used. It must have 16-byte alignment when VFPU is used. Although memory that is allocated for DMA memory or eDRAM must be aligned in terms of 16-byte units, to also avoid unexpected behavior due to D cache write backs, alignment in terms of 64-byte units is recommended for memory that is to be DMA transferred.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetMemoryManager( malloc, free ) ;



</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureOpenMemoryCluster"></a><a name="sceGimPictureOpenMemoryCluster2"></a><a name="sceGimPictureOpenMemoryCluster3"></a>
<a name="sceGimPictureOpenMemoryCluster / sceGimPictureOpenMemoryCluster2 / sceGimPictureOpenMemoryCluster3"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureOpenMemoryCluster / sceGimPictureOpenMemoryCluster2 / sceGimPictureOpenMemoryCluster3<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Start memory cluster<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void *<b>sceGimPictureOpenMemoryCluster</b>(
	size_t <i>size</i>,
	size_t <i>align</i>
) ;
void *<b>sceGimPictureOpenMemoryCluster2</b>(
	size_t <i>size</i>,
	size_t <i>align</i>
) ;
void *<b>sceGimPictureOpenMemoryCluster3</b>(
	size_t <i>size</i>,
	size_t <i>align</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory cluster size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>align</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alignment (power of 2)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The allocated memory cluster address is returned. (If processing fails, 0 is returned)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function starts memory cluster use.<br>Memory clusters are used mainly to avoid heap memory fragmentation.<br>First, a memory cluster of the specified size is allocated by using a memory management function, and thereafter, library internal memory allocation is performed for that memory cluster. All memory that allocated is aligned according to the value specified by <i>align</i>. However, when the memory cluster runs out of free space, memory is allocated by using a memory management function.<br>A memory cluster is released by a memory management function when all internal memory is released.<br><br>sceGimPictureOpenMemoryCluster2() is a function for DMA memory. sceGimPictureOpenMemoryCluster3() is a function for eDRAM.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>void *addr = sceGimPictureOpenMemoryCluster( 100000, 16 ) ;
<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *picture = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCreate">sceGimPictureCreate</a>( chunk ) ;
int size = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCloseMemoryCluster">sceGimPictureCloseMemoryCluster</a>() ;


</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCloseMemoryCluster">sceGimPictureCloseMemoryCluster</a>()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureCloseMemoryCluster"></a><a name="sceGimPictureCloseMemoryCluster2"></a><a name="sceGimPictureCloseMemoryCluster3"></a>
<a name="sceGimPictureCloseMemoryCluster / sceGimPictureCloseMemoryCluster2 / sceGimPictureCloseMemoryCluster3"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureCloseMemoryCluster / sceGimPictureCloseMemoryCluster2 / sceGimPictureCloseMemoryCluster3<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Terminate memory cluster<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureCloseMemoryCluster</b>(
	void
) ;
int <b>sceGimPictureCloseMemoryCluster2</b>(
	void
) ;
int <b>sceGimPictureCloseMemoryCluster3</b>(
	void
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The memory size used by the memory cluster is returned. (If no memory is in used, 0 is returned)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function terminates memory cluster use.<br>Subsequent library internal memory allocation is performed by using a memory management function again.<br>If the memory cluster is currently not being used at all, it is released here.<br><br>sceGimPictureCloseMemoryCluster2() is a function for DMA memory. sceGimPictureCloseMemoryCluster3() is a function for eDRAM.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>void *addr = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureOpenMemoryCluster">sceGimPictureOpenMemoryCluster</a>( 100000, 16 ) ;
<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *picture = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCreate">sceGimPictureCreate</a>( chunk ) ;
int size = sceGimPictureCloseMemoryCluster() ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureOpenMemoryCluster">sceGimPictureOpenMemoryCluster</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureCheckFileHeader"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureCheckFileHeader<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Check file header<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGimPictureCheckFileHeader</b>( 
	const void *<i>buf</i>,
	int <i>size</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File image address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File image size (0 if the size is unknown)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, true is returned, and if processing fails, false is returned. <br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for checking the header of a picture file.<br>If an appropriate header exists in the area specified by <i>buf</i> and <i>size</i>, true is returned. Otherwise, false is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>if ( !sceGimPictureCheckFileHeader( buf, size ) ) return ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetChunkCount">sceGimPictureGetChunkCount</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetChunk">sceGimPictureGetChunk</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetChunkCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetChunkCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of picture data values<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetChunkCount</b>(
	const void *<i>buf</i>,
	int <i>size</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File image address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File image size (0 if the size is unknown)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The number of picture data values is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the number of picture data values that are contained in a picture file.<br>The number of picture chunks that exist in the area specified by <i>buf</i> and <i>size</i> is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int count = sceGimPictureGetChunkCount( buf, size ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCheckFileHeader">sceGimPictureCheckFileHeader</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetChunk">sceGimPictureGetChunk</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetChunk"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetChunk<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get picture data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<b>sceGimPictureGetChunk</b>( 
	const void *<i>buf</i>,
	int <i>size</i>,
	int <i>index</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File image address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File image size (0 if the size is unknown)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture number within file&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to a picture chunk is returned. If the relevant picture chunk does not exist, 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting picture data that is contained in a picture file.<br>A pointer to the <i>index</i>-th picture chunk in the area specified by <i>buf</i> and <i>size</i> is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *chunk = sceGimPictureGetChunk( buf, size, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCheckFileHeader">sceGimPictureCheckFileHeader</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetChunkCount">sceGimPictureGetChunkCount</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetMetrics"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetMetrics<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get picture information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int<b> sceGimPictureGetMetrics</b>(
	SceGimMetrics *<i>buf</i>,
	int <i>size</i>,
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture information buffer address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture information buffer size ( sizeof( SceGimMetrics ) )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The data size that was stored in the picture information buffer is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets detailed picture information that is contained in picture data.<br>For the picture information contents, refer to gim_metrics.h.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGimMetrics buf ;
int size = sceGimPictureGetMetrics( &amp;buf, sizeof( buf ), chunk ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureAddMetrics">sceGimPictureAddMetrics</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetMemoryClusterSize">sceGimPictureGetMemoryClusterSize</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureAddMetrics"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureAddMetrics<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Add picture information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureAddMetrics</b>(
	SceGimMetrics *<i>buf</i>,
	int <i>size</i>,
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture information buffer address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture information buffer size ( sizeof( SceGimMetrics ) )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The data size that was stored in the picture information buffer is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function adds detailed picture information that is contained in picture data to the current buffer value.<br>The buffer must be cleared with zeros or a suitable value must be set.<br>For the picture information contents, refer to gim_metrics.h.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGimMetrics buf ;
memset( &amp;buf, 0, sizeof( buf ) ) ;
int size = sceGimPictureAddMetrics( &amp;buf, sizeof( buf ), chunk ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetMetrics">sceGimPictureGetMetrics</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetMemoryClusterSize">sceGimPictureGetMemoryClusterSize</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetMemoryClusterSize"></a><a name="sceGimPictureGetMemoryClusterSize2"></a><a name="sceGimPictureGetMemoryClusterSizeEx"></a><a name="sceGimPictureGetMemoryClusterSize2Ex"></a>
<a name="sceGimPictureGetMemoryClusterSize / sceGimPictureGetMemoryClusterSize2 / sceGimPictureGetMemoryClusterSizeEx / sceGimPictureGetMemoryClusterSize2Ex"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetMemoryClusterSize / sceGimPictureGetMemoryClusterSize2 / sceGimPictureGetMemoryClusterSizeEx / sceGimPictureGetMemoryClusterSize2Ex<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Estimate memory cluster size<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetMemoryClusterSize</b>(
	SceGimMetrics *<i>buf</i>,
	int <i>size</i>,
	int <i>align</i>
) ;
int <b>sceGimPictureGetMemoryClusterSize2</b>(
	SceGimMetrics *<i>buf</i>,
	int <i>size</i>,
	int <i>align</i>
) ;
int <b>sceGimPictureGetMemoryClusterSizeEx</b>(
	SceGimMetrics *<i>buf</i>,
	int <i>size</i>,
	int <i>align</i>,
	int <i>dup_flags</i>
) ;
int<b> sceGimPictureGetMemoryClusterSize2Ex</b>(
	SceGimMetrics *<i>buf</i>,
	int <i>size</i>,
	int <i>align</i>,
	int <i>dup_flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture information buffer address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture information buffer size ( sizeof( SceGimMetrics ) )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>align</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory cluster alignment&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dup_flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicate flag&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>dup_flags</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_DUPLICATE_REFERENCE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Increment reference counter only&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_DUPLICATE_STRUCTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Always duplicate in new structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_DUPLICATE_AUTOMATIC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicate if time information is included&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_DUPLICATE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicate all elements&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The estimated size of the memory cluster is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function estimates the memory cluster size that is required when creating a picture based on the picture information.<br>Because of factors such as alignment, the estimated value is somewhat larger than the precise value.<br>sceGimPictureGetMemoryClusterSize2() is a function for DMA memory.<br><br>sceGimPictureGetMemoryClusterSizeEx() and sceGimPictureGetMemoryClusterSize2Ex() are more detailed functions. By specifying <i>dup_flags</i>, the memory cluster size that is required when duplicating a picture can be estimated. If SCEGIM_DUPLICATE_ALL is specified for <i>dup_flags</i>, the memory cluster size that is required when creating the picture is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGimMetrics buf ;
int size = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetMetrics">sceGimPictureGetMetrics</a>( buf, sizeof( SceGimMetrics ), chunk ) ;
int required = sceGimPictureGetMemoryClusterSize( buf, size, 16 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetMetrics">sceGimPictureGetMetrics</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureAddMetrics">sceGimPictureAddMetrics</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureOpenMemoryCluster">sceGimPictureOpenMemoryCluster</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCloseMemoryCluster">sceGimPictureCloseMemoryCluster</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetMemoryClusterSizes"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetMemoryClusterSizes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Estimate memory cluster size<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureGetMemoryClusterSizes</b>(
	int *<i>sizes</i>,
	const int *<i>aligns,</i>
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sizes</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Array for storing memory cluster sizes (2 elements)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aligns</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory cluster alignment array (2 elements)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a convenience function for estimating the memory cluster size. The results when the memory cluster size was estimated after picture information data was obtained is stored in <i>sizes</i>. The elements of <i>sizes</i> and <i>aligns</i> correspond to individual memory clusters.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int sizes[ 2 ] ;
const int aligns[ 2 ] = { 4, 64 } ;
sceGimPictureGetMemoryClusterSizes( sizes, aligns, chunk ) ;

<a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureOpenMemoryCluster">sceGimPictureOpenMemoryCluster</a>( sizes[ 0 ], aligns[ 0 ] ) ;
<a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureOpenMemoryCluster2">sceGimPictureOpenMemoryCluster2</a>( sizes[ 1 ], aligns[ 1 ] ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetMetrics">sceGimPictureGetMetrics</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureAddMetrics">sceGimPictureAddMetrics</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureOpenMemoryCluster">sceGimPictureOpenMemoryCluster</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCloseMemoryCluster">sceGimPictureCloseMemoryCluster</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureCreate"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureCreate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create picture structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<b>sceGimPictureCreate</b>(
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Initialization data (0 if unnecessary)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to the picture structure that was created is returned.<br>If creation fails, 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for creating a structure for managing pictures.<br>If a pointer to the picture chunk that was obtained by <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetChunk">sceGimPictureGetChunk</a>() is specified for the argument <i>chunk</i>, processing for loading the contents of the specified picture chunk is also performed after the picture structure is created.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *picture = sceGimPictureCreate( 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureDelete">sceGimPictureDelete</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureDuplicate">sceGimPictureDuplicate</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetChunk">sceGimPictureGetChunk</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureLoad">sceGimPictureLoad</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureDelete"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureDelete<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete picture structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGimPictureDelete</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes the structure for managing pictures.<br>The reference counter for the picture structure specified by <i>picture</i> is decremented, and if the structure is not being referenced, the memory that had been occupied by that picture structure is freed.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureDelete( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCreate">sceGimPictureCreate</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureDuplicate">sceGimPictureDuplicate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureDuplicate"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureDuplicate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Duplicate picture structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<b>sceGimPictureDuplicate</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>flags</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplication method specification&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_DUPLICATE_REFERENCE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Increments only the reference counter&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_DUPLICATE_STRUCTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Always duplicates structure in a new structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_DUPLICATE_AUTOMATIC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates structure if it contains time information&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to the new picture structure is returned.<br>If duplication fails, 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for duplicating the picture structure.<br>When SCEGIM_DUPLICATE_REFERENCE is specified for <i>flags</i>, the reference counter for the picture structure specified by <i>picture</i> is incremented. If a picture that does not move (or a picture that makes exactly the same movement) must be duplicated, then using this method will conserve memory.<br>When SCEGIM_DUPLICATE_STRUCTURE is specified, a new memory area is allocated and a copy of the picture structure specified by <i>picture</i> is created.<br>When SCEGIM_DUPLICATE_AUTOMATIC is specified, if the picture structure specified by <i>picture</i> has multiple frames, a new copy is created, but if it does not have mutiple frames, the reference counter is incremented.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *picture2 = sceGimPictureDuplicate( picture, 
		SCEGIM_DUPLICATE_AUTOMATIC ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCreate">sceGimPictureCreate</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureDelete">sceGimPictureDelete</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureLoadFile"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureLoadFile<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Load picture file<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGimPictureLoadFile</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	const void *<i>buf</i>,
	int <i>size</i>,
	int <i>index</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File image address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File image size (0 if the size is unknown)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture number within file&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, true is returned. If processing fails, false is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for loading a picture chunk within a file into a picture structure.<br>The contents of the <i>index</i>-th picture chunk within the file image specified by <i>buf</i> and <i>size</i> are loaded into the picture structure specified by <i>picture</i>.<br>If the width or height of image data that is contained in the image chunk is not a power of 2, image cropping is set so that the entire image data is represented.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureLoadFile( picture, buf, size, 0 ) ;


</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The following functions are provided for loading individual images. Although they are used internally by libgim, they should be referenced if you want to create independent processing for loading images.<br><br></div>
        <div style="margin-left:50px;"><pre><font size=3>bool <b>sceGimPictureLoadTm2</b>( <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *picture, const void *buf, int size, int index ) ;
bool <b>sceGimPictureLoadTga</b>( <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *picture, const void *buf, int size ) ;
bool <b>sceGimPictureLoadBmp</b>( <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *picture, const void *buf, int size ) ;
</font></pre></div>
<div style="margin-left:50px;"><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureLoad">sceGimPictureLoad</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureUnload">sceGimPictureUnload</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureLoad"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureLoad<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Load picture data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGimPictureLoad</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Initialization data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, true is returned. If processing fails, false is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for loading a picture chunk into a picture structure.<br>For <i>chunk</i>, specify a picture chunk that was obtained by <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetChunk">sceGimPictureGetChunk</a>(). The contents of that picture chunk are loaded into the picture structure specified by <i>picture</i>.<br>If the width or height of image data that is contained in the image chunk is not a power of 2, image cropping is set so that the entire image data is represented.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureLoad( picture, chunk ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetChunk">sceGimPictureGetChunk</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureLoadFile">sceGimPictureLoadFile</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureUnload">sceGimPictureUnload</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureUnload"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureUnload<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Unload picture data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureUnload</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for unloading picture data.<br>The picture structure specified by <i>picture</i> is returned to the initial state immediately after creation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureUnload( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureLoadFile">sceGimPictureLoadFile</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureLoad">sceGimPictureLoad</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureLoadCache"></a><a name="sceGimPictureLoadCacheEx"></a>
<a name="sceGimPictureLoadCache / sceGimPictureLoadCacheEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureLoadCache / <br>sceGimPictureLoadCacheEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Load cache data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGimPictureLoadCache</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>
) ;
bool <b>sceGimPictureLoadCacheEx</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cache flag&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_CACHE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;All cache data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_CACHE_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture packets&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_CACHE_PIXEL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, true is returned. If processing fails, false is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for loading cache data.<br>It creates and saves data for increasing the speed of pre-set packets.<br>A pre-set packet uses on CALL step of a display list.<br><br>sceGimPictureLoadCacheEx() is a more detailed function. Detailed operation can be specified by using <i>flags</i>. To load pixel data, be sure to unload the preceding pre-set packet.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureLoadCache( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureUnloadCache">sceGimPictureUnloadCache</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureUnloadCache"></a><a name="sceGimPictureUnloadCacheEx"></a>
<a name="sceGimPictureUnloadCache / sceGimPictureUnloadCacheEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureUnloadCache / sceGimPictureUnloadCacheEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Unload cache data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureUnloadCache</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;
void <b>sceGimPictureUnloadCacheEx</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cache flag&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_CACHE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;All cache data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_CACHE_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture packets&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_CACHE_PIXEL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for unloading cache data.<br>It destroys data for increasing the speed of pre-set packets.<br>Be sure not to call this function while data is being DMA transferred.<br><br>sceGimPictureUnloadCacheEx() is a more detailed function. Detailed operation can be specified by using <i>flags</i>. When pixel data is unloaded, pre-set packets are unloaded automatically for safety.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureUnloadCache() ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureLoadCache">sceGimPictureLoadCache</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureAnimate"></a><a name="sceGimPictureAnimateEx"></a>
<a name="sceGimPictureAnimate / sceGimPictureAnimateEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureAnimate / sceGimPictureAnimateEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Animation processing<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureAnimate</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	float <i>step</i> 
) ;
void <b>sceGimPictureAnimateEx</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	float <i>step</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>step</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Step interval (units = seconds)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Animation flag&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags.</i><br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ANIMATE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform all processing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ANIMATE_FRAME&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Update current frame&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ANIMATE_PARAM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Update parameter value&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for advancing the current frame of an animation.<br>For the picture structure specified by <i>picture</i>, the frame that is advanced by the interval specified by <i>step</i> from the current frame is interpolated and calculated, and that frame is set as the new current frame. If a negative value is specified for <i>step</i>, the current frame moves backward in time.<br>The new current frame is not immediately reflected indrawing, but is used for drawing when <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureActivate">sceGimPictureActivate</a>() is called.<br><br>sceGimPictureAnimateEx() is a detailed function. Detailed operation can be specified by using <i>flags</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureAnimate( picture, 1.0f / 60.0f ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureActivate"></a><a name="sceGimPictureActivateEx"></a>
<a name="sceGimPictureActivate /sceGimPictureActivateEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureActivate /<br>sceGimPictureActivateEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set texture<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGimPictureActivate</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;
bool <b>sceGimPictureActivateEx</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
<i>	</i>unsigned int<i> **pkt</i>,
<i>	</i>unsigned int<i> *size,</i>
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pkt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to packet pointer (input/output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to packet size (input/output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Setting flag&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags.</i><br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Explanation</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ACTIVATE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform all processing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ACTIVATE_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Set texture&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ACTIVATE_RENDERSTATE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Set render state&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, true is returned. If processing fails, false is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates a packet for setting the current frame image of the picture specified by <i>picture</i> as a texture in the libgu packet buffer. The corresponding GE commands are as follows.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Picture Data</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>GE Command</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Image&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TMODE TPF TBP TBW TSIZE FLUSH&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Palette&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;CLUT CBP CBW CLOAD&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">When SCEGIM_ENABLE_DISSOLVE is set for the enable bit, two dissolve images are set for mipmap texture levels 0 and 1. At this time, the mipmap images that are contained in the picture are not used as textures.<br><br>Also, if other enable bits are set, the render state corresponding to each bit is set. The corresponding GE commands are as follows.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>GE Command</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_FACTOR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TLEVEL&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_CROP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TU TV SU SV&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_BLEND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;BLEND FIXA FIXB&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_FUNC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TFUNC&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_FILTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TFILTER&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_WRAP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TWRAP&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">To set these values for a device by using separate methods, get the settings from the picture and set them for the device independently.<br><br>sceGimPictureActivateEx() is a more detailed function. It creates packets in the packet buffer that is specified by *<i>pkt</i> and *<i>size</i>. Also, detailed operation can be specified by using <i>flags</i>. If processing is successful, the next packet address is stored in *<i>pkt</i>, and the remaining packet size is stored in *<i>size</i>. If processing fails, the values of *<i>pkt </i>and *<i>size</i> are not changed.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureActivate( picture ) ;
</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetEnableBits"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetEnableBits<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set enable bits<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetEnableBits</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>mask</i>,
	int <i>value</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mask pattern for specifying bits to be set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to be set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following flags can be specified for the arguments <i>mask</i> and <i>value</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_DISSOLVE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Dissolve texture&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_FACTOR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Dissolve factor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_CROP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture cropping&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_BLEND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alpha blending&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_FUNC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture function&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_FILTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture filter&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_ENABLE_WRAP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture wrap&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting enable bits for controlling picture functions.<br>Values corresponding to the <i>mask</i> and <i>value</i> specifications are set for enable bits for the picture specified by <i>picture</i>.<br>For <i>mask</i>, specify the logical OR of flags corresponding to functions for which the status is to be changed.<br>For <i>value</i>, specify the logical OR of flags corresponding to functions that are to be enabled. For functions that are to be disabled, leave the relevant bit 0.<br>When <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureActivate">sceGimPictureActivate</a>() is called, the render state corresponding to each bit is set for the device by using a libgu function.<br>By default, all functions are disabled.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetEnableBits( picture, SCEGIM_ENABLE_DISSOLVE, ~0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetEnableBits">sceGimPictureGetEnableBits</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetEnableBits"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetEnableBits<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get enable bits<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetEnableBits</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The enable bit values are returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting enable bits for controlling picture functions.<br>The values of the enable bits for the picture specified by <i>picture</i> are returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int enable = sceGimPictureGetEnableBits( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetEnableBits">sceGimPictureSetEnableBits</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetImageCrop"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetImageCrop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set image cropping<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetImageCrop</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
	const float *<i>crop</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>crop</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to image cropping ( x y w h )&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting image cropping or, in other words, the image display range.<br>For the picture specified by <i>picture</i>, the x, y, w, and h values specified by <i>crop</i> are set as the display range. x and y represent the position of the upper-left corner of the display range, and w and h represent the width and height of the display range. Since these are ratios relative to the sizes obtained by rounding up the width and height of the image to a power of 2, a value in the range 0.0f to 1.0f should be specified for each of them.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>static float Crop[] = { 0.0f, 0.0f, 1.0f, 1.0f } ;
sceGimPictureSetImageCrop( picture, Crop ) ;

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureLoadFile">sceGimPictureLoadFile</a>() or <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureLoad">sceGimPictureLoad</a>() is used to load a picture, if the image width or height is not a power of 2, image cropping is automatically set so that the entire image is represented.<br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImageCrop">sceGimPictureGetImageCrop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetImageCrop"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetImageCrop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get image cropping<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const float *<b>sceGimPictureGetImageCrop</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Values -->
<div style="margin-left:10px;"><b>Return Values</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to image cropping (x, y, w, h) is returned.<br>If image cropping has not been set, 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the image cropping or, in other words, the image display range.<br><br>For the picture specified by <i>picture</i>, the display range that has been set is obtained as an array consisting of the four elements x, y, w, and h, and a pointer to that array is returned. x and y represent the position of the upper-left corner of the display range, and w and h represent the width and height of the display range. Since these are ratios relative to the sizes obtained by rounding up the width and height of the image to a power of 2, each of them is a value in the range 0.0f to 1.0f.<br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const float *crop = sceGimPictureGetImageCrop( picture ) ;
if ( crop != 0 ) {
	<a href="../graphics/libgu-Reference-English.htm#sceGuTexOffset">sceGuTexOffset</a>( crop[ 0 ], crop[ 1 ] ) ;
	<a href="../graphics/libgu-Reference-English.htm#sceGuTexScale">sceGuTexScale</a>( crop[ 2 ], crop[ 3 ] ) ;
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImageCrop">sceGimPictureSetImageCrop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetBlend"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetBlend<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set alpha blending<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetBlend</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
	int<i> mode</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alpha blending mode&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following values can be specified for <i>mode</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_BLEND_OFF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cs&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_BLEND_MIX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cd * ( 1-alpha ) + Cs * alpha&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_BLEND_ADD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cd + Cs * alpha&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_BLEND_SUB&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cd - Cs * alpha&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_BLEND_MIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;min( Cd, Cs )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_BLEND_MAX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;max( Cd, Cs )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_BLEND_ABS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;abs( Cd - Cs )&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting alpha blending.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetBlend( picture, SCEGIM_BLEND_MIX ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetBlend">sceGimPictureGetBlend</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetBlend"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetBlend<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get alpha blending<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const int *<b>sceGimPictureGetBlend</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to alpha blending information is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting alpha blending information.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const int *blend = sceGimPictureGetBlend( picture ) ;
int mode = blend[ 0 ] ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetBlend">sceGimPictureSetBlend</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetFunc"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetFunc<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set texture function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetFunc</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
	int<i> mode</i>,
	int <i>comp</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture function mode&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>comp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture function component&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following values can be specified for <i>mode</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FUNC_MODULATE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;MODULATE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FUNC_DECAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DECAL&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">The following values can be specified for <i>comp</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FUNC_RGB&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;RGB&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FUNC_RGBA&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;RGBA&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting the texture function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetFunc( picture, SCEGIM_FUNC_MODULATE, SCEGIM_FUNC_RGBA ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetFunc">sceGimPictureGetFunc</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetFunc"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetFunc<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const int *<b>sceGimPictureGetFunc</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to the texture function is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the texture function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const int *func = sceGimPictureGetFunc( picture ) ;
int mode = func[ 0 ] ;
int comp = func[ 1 ] ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetFunc">sceGimPictureSetFunc</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetFilter"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetFilter<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set texture filter<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetFilter</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
	int<i> mag</i>,
	int <i>min</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mag</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture magnification filter&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>min</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture minification filter.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following values can be specified for <i>mag</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FILTER_NEAREST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NEAREST&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FILTER_LINEAR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LINEAR&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">The following values can be specified for <i>min</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FILTER_NEAREST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NEAREST&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FILTER_LINEAR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LINEAR&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FILTER_NEAREST_MIPMAP_NEAREST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NEAREST + NEAREST&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FILTER_LINEAR_MIPMAP_NEAREST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LINEAR + NEAREST&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FILTER_NEAREST_MIPMAP_LINEAR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NEAREST + LINEAR&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_FILTER_LINEAR_MIPMAP_LINEAR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LINEAR + LINEAR&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting the texture filter.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetFilter( picture, SCEGIM_FILTER_LINEAR, 	SCEGIM_FILTER_LINEAR_MIPMAP_LINEAR ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetFilter">sceGimPictureGetFilter</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetFilter"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetFilter<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture filter<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const int *<b>sceGimPictureGetFilter</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to the texture filter is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the texture filter.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const int *filter = sceGimPictureGetFilter( picture ) ;
int mag = filter[ 0 ] ;
int min = filter[ 1 ] ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetFilter">sceGimPictureSetFilter</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetWrap"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetWrap<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set texture wrapping<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetWrap</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
	int<i> u,</i>
<i>	</i>int<i> v</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>u</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture U wrapping&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>v</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture V wrapping&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following values can be specified for <i>u</i> and <i>v</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_WRAP_REPEAT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;REPEAT&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_WRAP_CLAMP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;CLAMP&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting texture wrapping.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetWrap( picture, SCEGIM_WRAP_REPEAT, SCEGIM_WRAP_REPEAT) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetWrap">sceGimPictureGetWrap</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetWrap"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetWrap<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture wrapping<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const int *<b>sceGimPictureGetWrap</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to texture wrapping information is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting texture wrapping information.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const int *wrap = sceGimPictureGetWrap( picture ) ;
int u = wrap[ 0 ] ;
int v = wrap[ 1 ] ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetWrap">sceGimPictureSetWrap</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureHasAnimation"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureHasAnimation<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Check whether animation exists<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGimPictureHasAnimation</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If there is an animation, true is returned. If not, false is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for checking whether or not a picture has an animation.<br>For the picture specified by <i>picture</i>, a value indicating whether or not the image or palette has multiple frames is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>if ( !sceGimPictureHasAnimation( picture ) ) return ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetFrameLoop"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetFrameLoop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set loop range<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetFrameLoop</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>, 
	float<i> start</i>, 
	float <i>end</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>start</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting frame&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>end</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ending frame&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting the animation loop range.<br>It sets that the animation is to be repeated for the picture specified by <i>picture</i> by returning from the frame specified by <i>end</i> to the frame specified by <i>start</i>.<br>By default, no loop is set.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetFrameLoop( picture, 0.0f, 10.0f ) ;

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">No check is made by the library concerning the relative sizes of <i>start</i> and <i>end</i>. If these arguments are set so that <i>end</i> &lt; <i>start</i>, the frames between them will be skipped.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetFrameLoop">sceGimPictureGetFrameLoop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetFrameLoop"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetFrameLoop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get loop range<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const float *<b>sceGimPictureGetFrameLoop</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to an array representing the loop range (starting frame, ending frame) is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the animation loop range.<br>The loop range that has been set for the picture specified by <i>picture</i> is obtained and returned as a 2-element float array. The first element represents the starting frame, and the second element represents the ending frame.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const float *loop = sceGimPictureGetFrameLoop( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetFrameLoop">sceGimPictureSetFrameLoop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetFrameRate"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetFrameRate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set frame rate<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetFrameRate</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
<i>	</i>float<i> fps</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fps</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame rate&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting the animation frame rate.<br>Its sets so that the frame will advance by the value specified by <i>fps</i> in one second when the picture specified by picture is animated. <br>The default frame rate is set to 12.0.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetFrameRate( picture, 60.0f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetFrameRate">sceGimPictureGetFrameRate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetFrameRate"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetFrameRate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get frame rate<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>float <b>sceGimPictureGetFrameRate</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The frame rate is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the animation frame rate.<br>The frame rate value that has been set for the picture specified by <i>picture</i> is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float fps = sceGimPictureGetFrameRate( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetFrameRate">sceGimPictureSetFrameRate</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetFrameRepeat"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetFrameRepeat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set repeat mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetFrameRepeat</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
<i>	</i>int<i> mode</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Repeat mode&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following values can be set for the <i>mode </i>argument.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_REPEAT_HOLD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Stop when loop range is exceeded&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGIM_REPEAT_CYCLE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cycle when loop range is exceeded&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting the animation repeat mode.<br>The default repeat mode is set to SCEGIM_REPEAT_CYCLE.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetFrameRepeat( picture, SCEGIM_REPEAT_HOLD ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetFrameRepeat">sceGimPictureGetFrameRepeat</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetFrameRepeat"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetFrameRepeat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get repeat mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetFrameRepeat</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The repeat mode is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the animation repeat mode.<br>The value of the repeat mode that had been set for the picture specified by <i>picture</i> is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int mode = sceGimPictureGetFrameRepeat( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetFrameRepeat">sceGimPictureSetFrameRepeat</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetFrame"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetFrame<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set current frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetFrame</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
<i>	</i>float<i> frame</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting the current frame of an animation.<br>For the picture specified by <i>picture</i>, the frame specified by <i>frame</i> becomes the current frame, and <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureAnimate">sceGimPictureAnimate</a>() calculates the image frame number and palette frame number based on that value. If the picture does not have a sequence, the current frame value will become the image frame number and palette frame number directly.<br><br>In normal animation processing, the current frame advances sequentially by repeatedly calling <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureAnimate">sceGimPictureAnimate</a>(). However, this function can be used to specify a specific frame.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetFrame( picture, 0.0f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetFrame">sceGimPictureGetFrame</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetFrame"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetFrame<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get current frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>float <b>sceGimPictureGetFrame</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The frame value of the current frame is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the current frame of an animation.<br>The current frame of the picture specified by <i>picture</i> is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float frame = sceGimPictureGetFrame( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetFrame">sceGimPictureSetFrame</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetImageFrame"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetImageFrame<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set basic image frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetImageFrame</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
<i>	</i>int<i> frame</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for directly specifying the basic image frame.<br>For the picture specified by <i>picture</i>, the remainder value when <i>frame</i> is divided by the number of frames that that picture image has is set as the basic image frame number.<br>In normal animation processing, the basic image frame is calculated based on the current frame. However, if a specific image frame is to be used, this function can be used to directly specify it.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetImageFrame( picture, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImageFrame">sceGimPictureGetImageFrame</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImageFrame2">sceGimPictureSetImageFrame2</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetPaletteFrame">sceGimPictureSetPaletteFrame</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetPaletteFrame2">sceGimPictureSetPaletteFrame2</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetImageFrame"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetImageFrame<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get basic image frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetImageFrame</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The frame number of the basic image frame is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the basic image frame.<br>The frame number of the basic image frame of the picture specified by <i>picture</i> is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int frame = sceGimPictureGetImageFrame( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImageFrame">sceGimPictureSetImageFrame</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImageFrame2">sceGimPictureGetImageFrame2</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPaletteFrame">sceGimPictureGetPaletteFrame</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPaletteFrame2">sceGimPictureGetPaletteFrame2</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetImageFrame2"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetImageFrame2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set dissolve image frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetImageFrame2</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
<i>	</i>int<i> frame</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for directly specifying the dissolve image frame.<br>For the picture specified by <i>picture</i>, the remainder value when <i>frame</i> is divided by the number of frames that that picture image has is set as the dissolve image frame number.<br>In normal animation processing, the dissolve image frame is calculated based on the current frame. However, if a specific image frame is to be used as the dissolve image, this function can be used to directly specify it.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetImageFrame2( picture, 1 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImageFrame2">sceGimPictureGetImageFrame2</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImageFrame">sceGimPictureSetImageFrame</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetPaletteFrame">sceGimPictureSetPaletteFrame</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetPaletteFrame2">sceGimPictureSetPaletteFrame2</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetImageFrame2"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetImageFrame2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get dissolve image frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetImageFrame2</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The frame number of the dissolve image frame is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the dissolve image frame.<br>For the picture specified by <i>picture</i>, the frame number of the dissolve image frame is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int frame = sceGimPictureGetImageFrame2( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImageFrame2">sceGimPictureSetImageFrame2</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImageFrame">sceGimPictureGetImageFrame</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPaletteFrame">sceGimPictureGetPaletteFrame</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPaletteFrame2">sceGimPictureGetPaletteFrame2</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetPaletteFrame"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetPaletteFrame<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set palette frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetPaletteFrame</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
<i>	</i>int<i> frame</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Palette frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for directly setting the palette frame.<br>For the picture specified by <i>picture</i>, the remainder value when <i>frame</i> is divided by the number of frames that that picture image has is set as the palette frame number.<br>In normal animation processing, the palette frame is calculated based on the current frame. However, if a specific palette is to be used, this function can be used to directly specify it.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetPaletteFrame( picture, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPaletteFrame">sceGimPictureGetPaletteFrame</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImageFrame">sceGimPictureSetImageFrame</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImageFrame2">sceGimPictureSetImageFrame2</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetPaletteFrame2">sceGimPictureSetPaletteFrame2</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetPaletteFrame"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetPaletteFrame<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get palette frame number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetPaletteFrame</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The frame number of the palette frame is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the palette frame.<br>For the picture specified by <i>picture</i>, the frame number of the palette frame is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int frame = sceGimPictureGetPaletteFrame( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetPaletteFrame">sceGimPictureSetPaletteFrame</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImageFrame">sceGimPictureGetImageFrame</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImageFrame2">sceGimPictureGetImageFrame2</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPaletteFrame2">sceGimPictureGetPaletteFrame2</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetPaletteFrame2"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetPaletteFrame2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set dissolve palette frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetPaletteFrame2</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
<i>	</i>int<i> frame</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Palette frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for directly specifying the dissolve palette frame.<br>For the picture specified by <i>picture</i>, the remainder value when <i>frame</i> is divided by the number of frames that that picture image has is set as the dissolve palette frame number.<br>In normal animation processing, the dissolve palette frame is calculated based on the current frame. However, if a specific palette is to be used as the dissolve palette, this function can be used to directly specify it.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetPaletteFrame2( picture, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPaletteFrame2">sceGimPictureGetPaletteFrame2</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImageFrame">sceGimPictureSetImageFrame</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImageFrame2">sceGimPictureSetImageFrame2</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetPaletteFrame">sceGimPictureSetPaletteFrame</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetPaletteFrame2"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetPaletteFrame2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get dissolve palette frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetPaletteFrame2</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The frame number of the dissolve palette frame is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the dissovle palette frame.<br>For the picture specified by <i>picture</i>, the frame number of the dissolve palette frame is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int frame = sceGimPictureGetPaletteFrame2( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetPaletteFrame2">sceGimPictureSetPaletteFrame2</a>()<br><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImageFrame">sceGimPictureGetImageFrame</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImageFrame2">sceGimPictureGetImageFrame2</a>(), <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPaletteFrame">sceGimPictureGetPaletteFrame</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetDissolve"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetDissolve<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set dissolve value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetDissolve</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture,</i>
	float<i> dissolve</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dissolve</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Dissolve value (0.0f to 1.0f)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting the dissolve value or, in other words, the value representing the interpolation rate in dissolve processing for superimposing two frames.<br>For the picture specified by <i>picture</i>, the value specified by <i>dissolve</i> is set as the dissolve value. The dissolve value is in the range 0.0f to 1.0f. When it is 0.0f, it represents an interpolation rate in which the basic frame is 100% and the dissolve frame is 0%. When it is 1.0f, it represents an interpolation rate in which the basic frame is 0% and the dissolve frame is 100%.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetDissolve( picture, 0.5f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetDissolve">sceGimPictureGetDissolve</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetDissolve"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetDissolve<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get dissolve value<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>float <b>sceGimPictureGetDissolve</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The current dissolve value is returned. The range of values that are returned is 0.0f to 1.0f.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the dissolve value or, in other words, the value representing the interpolation rate in dissolve processing for superimposing two frames.<br>For the picture specified by <i>picture</i>, the current dissolve value is obtained and returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float dissolve = sceGimPictureGetDissolve( picture ) ;
<a href="../graphics/libgu-Reference-English.htm#sceGuTexLevelMode">sceGuTexLevelMode</a>( SCEGU_LOD_CONSTANT, dissolve ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetDissolve">sceGimPictureSetDissolve</a>()<br><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetSequenceCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetSequenceCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of sequences<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetSequenceCount</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The number of sequences is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of picture sequences.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int count = sceGimPictureGetSequenceCount( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetSequence">sceGimPictureGetSequence</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetSequence"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetSequence<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get sequence information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGimSequenceHeader *<b>sceGimPictureGetSequence</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>index</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sequence number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to a sequence structure is returned.<br>If no sequence structure exists, 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting sequence information.<br>A pointer to the sequence structure that the picture structure specified by <i>picture</i> contains is returned.<br>For details about sequence structures, refer to the "GIM Format Overview."<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGimSequenceHeader *sequence = sceGimPictureGetSequence( picture ) ;
</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetCurrentSequence"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetCurrentSequence<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Select sequence<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetCurrentSequence</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>index</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sequence number (-1 to stop)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function selects the sequence to be played.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetCurrentSequence( picture, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetCurrentSequence">sceGimPictureGetCurrentSequence</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetCurrentSequence"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetCurrentSequence<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get sequence number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetCurrentSequence</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The sequence number is returned (-1 when animation is stopped)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the sequence number that is being played.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int sequence = sceGimPictureGetCurrentSequence( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetCurrentSequence">sceGimPictureSetCurrentSequence</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetImagePlaneCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetImagePlaneCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get plane count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetImagePlaneCount</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The plane count is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the plane count.<br>If no plane mask exists, 0 is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int count = sceGimPictureGetImagePlaneCount( picture ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetImagePlane"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetImagePlane<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set plane number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetImagePlane</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>plane</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>plane</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Plane number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting the plane number of the plane to be displayed.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetImagePlane( picture, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImagePlane">sceGimPictureGetImagePlane</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetImagePlane"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetImagePlane<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get plane number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureGetImagePlane</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The plane number is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the plane number of the plane that is being displayed.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int plane = sceGimPictureGetImagePlane( picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImagePlane">sceGimPictureSetImagePlane</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetPaletteOffset"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetPaletteOffset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set palette offset<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetPaletteOffset</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>shift,</i>
<i>	</i>int<i> mask,</i>
<i>	</i>int<i> offs</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>shift</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Index shift&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Index mask&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>offs</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Index offset&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for setting the palette offset.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetPaletteOffset( picture, 0, 255, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPaletteOffset">sceGimPictureGetPaletteOffset</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetPaletteOffset"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetPaletteOffset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get palette offset<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const int *<b>sceGimPictureGetPaletteOffset</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to the palette offset is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the palette offset.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const int *palette_offset = sceGimPictureGetPaletteOffset( picture ) ;
int shift = palette_offset[ 0 ] ;
int mask = palette_offset[ 1 ] ;
int offs = palette_offset[ 2 ] ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetPaletteOffset">sceGimPictureSetPaletteOffset</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetImage"></a><a name="sceGimPictureGetActiveImage"></a>
<a name="sceGimPictureGetImage / sceGimPictureGetActiveImage"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetImage / sceGimPictureGetActiveImage<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get image information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<b>sceGimPictureGetImage</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>
) ;
<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<b>sceGimPictureGetActiveImage</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to an image structure is returned.<br>If the image structure does not exist, 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting image information.<br>A pointer to the image structure for the picture structure specified by <i>picture</i> is returned. For details about the image structure, refer to the separate document entitled "GIM Format Overview."<br>sceGimPictureGetActiveImage() is a function for getting image information for cache data.<br>If cache data is loaded, image information for the cache data is returned, and if no cache data is loaded, normal image information is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = sceGimPictureGetImage( picture ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetPalette"></a><a name="sceGimPictureGetActivePalette"></a>
<a name="sceGimPictureGetPalette / sceGimPictureGetActivePalette"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetPalette / sceGimPictureGetActivePalette<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get palette information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPaletteHeader">SceGimPaletteHeader</a> *<b>sceGimPictureGetPalette</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>
) ;
<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPaletteHeader">SceGimPaletteHeader</a> *<b>sceGimPictureGetActivePalette</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to a palette structure is returned.<br>If the palette structure does not exist, 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting palette information.<br>A pointer to the palette structure for the picture structure specified by <i>picture</i> is returned. For details about the palette structure, refer to the separate document entitled "GIM Format Overview."<br><br>sceGimPictureGetActivePalette() is a function for getting palette information for cache data.<br>If cache data is loaded, palette information for the cache data is returned, and if no cache data is loaded, normal palette information is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPaletteHeader">SceGimPaletteHeader</a> *palette = sceGimPictureGetPalette( picture ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetImagePixels"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetImagePixels<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get image pixel buffer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void *<b>sceGimPictureGetImagePixels</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>level</i>, 
	int <i>frame</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Level number&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to a pixel buffer is returned.<br>If the relevant pixel buffer does not exist, 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for extracting a single image from an image structure.<br>The starting addess of the image specified by <i>level</i> and <i>frame</i> is obtained from the image structure of the picture structure specified by <i>picture</i> and returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>void *pixels = sceGimPictureGetImagePixels( picture, 0, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetImagePixels">sceGimPictureSetImagePixels</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetPalettePixels"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetPalettePixels<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get palette pixel buffer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void *<b>sceGimPictureGetPalettePixels</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>level</i>,
	int <i>frame</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Level number&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to a pixel buffer is returned.<br>If the relevant pixel buffer does not exist, 0 is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for extracting a single image from a palette structure.<br>The starting addess of the image specified by <i>level</i> and <i>frame</i> is obtained from the palette structure of the picture structure specified by <i>picture</i> and returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>void *pixels = sceGimPictureGetPalettePixels( picture, 0, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureSetPalettePixels">sceGimPictureSetPalettePixels</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetImagePixels"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetImagePixels<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set image pixel buffer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetImagePixels</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>level</i>,
	int <i>frame</i>,
	void *<i>pixels</i> 
) ;
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Level number&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame number&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pixels</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel buffer address (16-byte aligned)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for replacing an image contained in an image structure.<br>Among the images in the image structure of the picture structure specified by <i>picture,</i> the image specified by <i>level</i> and <i>frame</i> is replaced with the image in the pixel buffer specified by <i>pixels</i>.<br>The pixel buffer must be aligned on a 16-byte boundary.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetImagePixels( picture, 0, 0, pixels ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImagePixels">sceGimPictureGetImagePixels</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureSetPalettePixels"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureSetPalettePixels<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set palette pixel buffer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGimPictureSetPalettePixels</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>level</i>,
	int <i>frame</i>,
	void *<i>pixels</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Level number&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame number&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pixels</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel buffer address (16-byte aligned)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for replacing an image contained in a palette structure.<br>Among the images in the palette structure of the picture structure specified by <i>picture,</i> the image specified by <i>level</i> and <i>frame</i> is replaced with the image in the pixel buffer specified by <i>pixels</i>.<br>The pixel buffer must be aligned on a 16-byte boundary.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureSetPalettePixels( picture, 0, 0, pixels ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetPalettePixels">sceGimPictureGetPalettePixels</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureReallocImage"></a><a name="sceGimPictureReallocImageEx"></a>
<a name="sceGimPictureReallocImage / sceGimPictureReallocImageEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureReallocImage / sceGimPictureReallocImageEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reallocate image<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGimPictureReallocImage</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>format</i>,
	int <i>w</i>,
	int <i>h</i>,
	int <i>level</i>,
	int <i>frame</i>,
	void *<i>pixels</i> 
) ;
bool <b>sceGimPictureReallocImageEx</b>(
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>format</i>,
	int <i>order</i>,
	int <i>w</i>,
	int <i>h</i>,
	int <i>level</i>,
	int <i>frame</i>,
	void *<i>pixels</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>format</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel format&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>order</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel order&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>w</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting image width&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>h</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting image height&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of levels&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of frames&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pixels</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel buffer (0 if automatically allocated)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, true is returned. If processing fails, false is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for reallocating the image area of a picture. It can be used when replacing an image, and it can also be used by an independently created load routine to allocate the area for an image.<br>The function competely releases the memory area occupied by the image in the picture specified by <i>picture</i>, allocates a new area according to the values of <i>format</i>, <i>w</i>, <i>h</i>, <i>level</i>, and <i>frame</i>, and then initializes the image header. If 0 is specified for <i>pixels</i>, the library automatically allocates the new area, and if a value other than 0 is specified, the area is used.<br>The address specified by <i>pixels</i> must be aligned on a 16-byte boundary.<br><br>sceGimPictureReallocImageEx() is a more detailed function. The pixel order can be specified by <i>order.</i><br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureReallocImage( picture, SCEGU_PF8888, 256, 256, 1, 1, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureReallocPalette">sceGimPictureReallocPalette</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureReallocPalette"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureReallocPalette<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reallocate palette<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGimPictureReallocPalette</b>( 
	<a href="../graphics/libgim_Picture-Reference-English.htm#SceGimPicture">SceGimPicture</a> *<i>picture</i>,
	int <i>format</i>,
	int <i>w</i>,
	int <i>level</i>,
	int <i>frame</i>,
	void *<i>pixels</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>format</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel format&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>w</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting image width&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of levels&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of frames&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pixels</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel buffer (0 if automatically allocated)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing is successful, true is returned. If processing fails, false is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for reallocating the palette of a picture. It can be used when replacing a palette, and it can also be used by an independently created load routine to allocate the area for a palette.<br>The function competely releases the memory area occupied by the palette in the picture specified by <i>picture</i>, allocates a new area according to the values of <i>format</i>, <i>w</i>, <i>level</i>, and <i>frame</i>, and then initializes the image header. If 0 is specified for <i>pixels</i>, the library automatically allocates the new area, and if a value other than 0 is specified, the area is used.<br>The address specified by <i>pixels</i> must be aligned on a 16-byte boundary.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGimPictureReallocPalette( picture, SCEGU_PF8888, 256, 1, 1, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureReallocImage">sceGimPictureReallocImage</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetFormat"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetFormat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pixel format<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetFormat</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The pixel format is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the pixel format.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int format = sceGimImageGetFormat( image ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetOrder"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetOrder<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pixel order<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetOrder</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The pixel order is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the pixel order.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int order = sceGimImageGetOrder( image ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetBPP"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetBPP<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of bits per pixel<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetBPP</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The number of bits per pixel is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the number of bits per pixel.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int bpp = sceGimImageGetBPP( image ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetWidth"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetWidth<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get image width<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetWidth</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image,</i>
<i>	</i>int<i> level</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Level number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The image width is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the image width of the specified level.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int width = sceGimImageGetWidth( image, 0 ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetHeight"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetHeight<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get image height<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetHeight</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image,</i>
<i>	</i>int<i> level</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Level number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The image height is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the image height of the specified level.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int height = sceGimImageGetHeight( image, 0 ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetPitch"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetPitch<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pitch<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetPitch</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image,</i>
<i>	</i>int<i> width</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image width&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The pitch is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the pitch from the image width.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int width = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimImageGetWidth">sceGimImageGetWidth</a>( image, 0 ) ;
int pitch = sceGimImageGetPitch( image, width ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetBufWidth"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetBufWidth<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get buffer width<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetBufWidth</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image,</i>
<i>	</i>int<i> width</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image width&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The buffer width is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the buffer width from the image width.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int width = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimImageGetWidth">sceGimImageGetWidth</a>( image, 0 ) ;
int buf_width = sceGimImageGetBufWidth( image, width ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetBufHeight"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetBufHeight<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get buffer height<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetBufHeight</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image,</i>
<i>	</i>int<i> height</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image height&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The buffer height is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the buffer height from the image height.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int height = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimImageGetHeight">sceGimImageGetHeight</a>( image, 0 ) ;
int buf_height = sceGimImageGetBufHeight( image, height ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetTexWidth"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetTexWidth<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture width<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetTexWidth</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image,</i>
<i>	</i>int<i> width</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image width&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The texture width is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the texture width from the image width.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int width = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimImageGetWidth">sceGimImageGetWidth</a>( image, 0 ) ;
int tex_width = sceGimImageGetTexWidth( image, width ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetTexHeight"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetTexHeight<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture height<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetTexHeight</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image,</i>
<i>	</i>int<i> height</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image height&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The texture height is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the texture height from the image height.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int height = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimImageGetHeight">sceGimImageGetHeight</a>( image, 0 ) ;
int tex_height = sceGimImageGetTexHeight( image, height ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetPlaneMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetPlaneMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get plane mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetPlaneMask</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The plane mask is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the plane mask.<br>If no plane mask exists, 0 is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int mask = sceGimImageGetPlaneMask( image ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetLevelCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetLevelCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get level count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetLevelCount</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The level count is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the level count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int count = sceGimImageGetLevelCount( image ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetFrameCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetFrameCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get frame count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetFrameCount</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The frame count is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the frame count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int count = sceGimImageGetFrameCount( image ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetUserData"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetUserData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get user data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ void *<b>sceGimImageGetUserData</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The user data address is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the user data address.<br>If no user data exists, 0 is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
void *data = sceGimImageGetUserData( image ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetUserDataSize"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetUserDataSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get user data size<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>sceGimImageGetUserDataSize</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The user data size is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the user data size.<br>If no user data exists, 0 is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
int size = sceGimImageGetUserDataSize( image ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimImageGetPixels"></a>
<table width="100%"><td width="70%"><font size=6>sceGimImageGetPixels<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pixel buffer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ void *<b>sceGimImageGetPixels</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *<i>image,</i>
<i>	int level,</i>
<i>	int frame</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>image</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Image header (or palette header)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Level number&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The pixel buffer is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a function for getting the pixel buffer.<br>If the relevant pixel buffer does not exist, 0 is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimImageHeader">SceGimImageHeader</a> *image = <a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureGetImage">sceGimPictureGetImage</a>( picture ) ;
void *pixels = sceGimImageGetPixels( image, 0, 0 ) ;
</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureGetRootChunk"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureGetRootChunk<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get root chunk<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<b>sceGimPictureGetRootChunk</b>( 
	const void *<i>buf</i>,
	int <i>size</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File image address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;File image size (0 if the size is unknown)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to the root chunk is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a pointer to the root chunk that is contained in the scene file.<br>If no root chunk exists, 0 is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *chunk = sceGimPictureGetRootChunk( buf, size ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureCountChildChunk"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureCountChildChunk<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of child chunks<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGimPictureCountChildChunk</b>(
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>,
	int <i>type</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Chunk address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>type</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Child chunk type (if this is 0, the type is arbitrary)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The number of child chunks is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of child chunks. If a non-zero value is specified for the type, the number of child chunks of the specified type is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int count = sceGimPictureCountChildChunk( chunk, SCEGIM_PICTURE ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureFindChildChunk">sceGimPictureFindChildChunk</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGimPictureFindChildChunk"></a>
<table width="100%"><td width="70%"><font size=6>sceGimPictureFindChildChunk<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Find child chunk<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<b>sceGimPictureFindChildChunk</b>( 
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>,
	int <i>type</i>,
	int <i>index</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Chunk address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>type</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Child chunk type  (if this is 0, the type is arbitrary)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Child chunk number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to a child chunk is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a pointer to the N-th child chunk. If a non-zero value is specified for the type, a pointer to the N-th child chunk among the child chunks of the specified type is returned.<br>If no relevant chunk exists, 0 is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *chunk = sceGimPictureFindChildChunk( chunk, SCEGIM_PICTURE, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgim_Picture-Reference-English.htm#sceGimPictureCountChildChunk">sceGimPictureCountChildChunk</a>()<br><br></div>

<!-- sce_hd2 -->
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCEGIM_CHUNK_TYPE"></a>
<table width="100%"><td width="70%"><font size=6>SCEGIM_CHUNK_TYPE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Chunk Manipulation Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Chunk type<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>SCEGIM_CHUNK_TYPE</b>(
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Chunk address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The chunk type is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro gets the chunk type of the specified chunk.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int type = SCEGIM_CHUNK_TYPE( chunk ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCEGIM_CHUNK_NEXT"></a>
<table width="100%"><td width="70%"><font size=6>SCEGIM_CHUNK_NEXT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Chunk Manipulation Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Next chunk<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<b>SCEGIM_CHUNK_NEXT</b>(
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Chunk address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to the next chunk is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro gets a pointer to the next chunk at the same level as the specified chunk. If the specified chunk is the last chunk, a pointer to the next chunk of the higher level chunks is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *next = SCEGIM_CHUNK_NEXT( chunk ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCEGIM_CHUNK_CHILD"></a>
<table width="100%"><td width="70%"><font size=6>SCEGIM_CHUNK_CHILD<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Chunk Manipulation Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Child chunk<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<b>SCEGIM_CHUNK_CHILD</b>(
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Chunk address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to the first child chunk is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro gets a pointer to the first child chunk of the specified chunk. If the specified chunk has not child chunks, a pointer to the next chunk is returned. To check whether or not the specified chunk has child chunks, use SCEGIM_CHUNK_CHILDSIZE() to get the size.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *child = SCEGIM_CHUNK_CHILD( chunk ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SCEGIM_CHUNK_CHILDSIZE()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCEGIM_CHUNK_DATA"></a>
<table width="100%"><td width="70%"><font size=6>SCEGIM_CHUNK_DATA<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Chunk Manipulation Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Chunk data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ void *<b>SCEGIM_CHUNK_DATA</b>(
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Chunk address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to chunk data is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro gets a pointer to chunk data of the specified chunk. If the specified chunk has no chunk data, the return value is invalid. To check whether or not the specified chunk has chunk data, use SCEGIM_CHUNK_DATASIZE() to get the size.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>void *data = SCEGIM_CHUNK_DATA( chunk ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SCEGIM_CHUNK_DATASIZE()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCEGIM_CHUNK_SIZE"></a>
<table width="100%"><td width="70%"><font size=6>SCEGIM_CHUNK_SIZE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Chunk Manipulation Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Chunk size<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>SCEGIM_CHUNK_SIZE</b>(
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Chunk address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The chunk size is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro gets the size of the specified chunk.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int size = SCEGIM_CHUNK_SIZE( chunk ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCEGIM_CHUNK_TAGSIZE"></a>
<table width="100%"><td width="70%"><font size=6>SCEGIM_CHUNK_TAGSIZE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Chunk Manipulation Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Chunk tag size<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>SCEGIM_CHUNK_TAGSIZE</b>(
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Chunk address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The chunk tag size is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro gets the size of the chunk tag of the specified chunk.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int size = SCEGIM_CHUNK_TAGSIZE( chunk ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCEGIM_CHUNK_DATASIZE"></a>
<table width="100%"><td width="70%"><font size=6>SCEGIM_CHUNK_DATASIZE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Chunk Manipulation Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Chunk data size<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>SCEGIM_CHUNK_DATASIZE</b>(
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Chunk address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The chunk data size is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro gets the size of the chunk data of the specified chunk.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int size = SCEGIM_CHUNK_DATASIZE( chunk ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SCEGIM_CHUNK_DATA()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCEGIM_CHUNK_CHILDSIZE"></a>
<table width="100%"><td width="70%"><font size=6>SCEGIM_CHUNK_CHILDSIZE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Chunk Manipulation Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Child chunk total size<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ int <b>SCEGIM_CHUNK_CHILDSIZE</b>(
	const <a href="../graphics/libgim_Picture-Reference-English.htm#SceGimChunk">SceGimChunk</a> *<i>chunk</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>chunk</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Chunk address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The total size of child chunks is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro gets the total size of the child chunks of the specified chunk.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int size = SCEGIM_CHUNK_CHILDSIZE( chunk ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">SCEGIM_CHUNK_CHILD()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCEGIM_CHUNK_SKIPSTRING"></a>
<table width="100%"><td width="70%"><font size=6>SCEGIM_CHUNK_SKIPSTRING<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Chunk Manipulation Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Skip string<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>static __inline__ void *<b>SCEGIM_CHUNK_SKIPSTRING</b>(
	const char *<i>str</i>,
	int <i>align</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>str</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;String argument address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>align</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alignment of next argument&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A pointer to the next argument is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro gets a pointer to the next argument of the string arguments.<br>Specify a power of 2 for the alignment.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>char *str_arg = (char *)SCEGIM_CHUNK_DATA( chunk ) ;
int *int_arg = (int *)SCEGIM_CHUNK_SKIPSTRING( str_arg, sizeof( int ) ) ;
</font></pre></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2010 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
