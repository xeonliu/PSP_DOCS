<html lang="jp">
<head>
<title>GE-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
Graphics Engineマネージャ(geman)
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>ライブラリ概要</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>機能の特徴</b><br>
</a>
</h3>
<div style="margin-left:50px;">Graphics Engineマネージャ(以下gemanと略記します)は、PSP&reg;の描画エンジンであるGraphics Engineを制御するためのサービスです。<br>gemanは、ディスプレイリスト(Graphics Engineに転送する一連のコマンド)をキューとして管理する機能を提供します。gemanを用いることによって、アプリケーションは描画の終了タイミングを意識せずにディスプレイリストを作成し転送することができます。また、アプリケーションが描画終了を待ったり、逆にストールアドレスを指定することで描画処理を待たせたり、描画処理の特定の箇所でコールバック関数を呼び出させたりすることによって、描画処理とアプリケーションの処理とを同期させることができます。<br>gemanは最大64個までのディスプレイリストをキューイングすることができ、描画が終了したキューは自動的に開放されます。<br>このほか、gemanはGraphics EngineのeDRAM / コマンドレジスタ / マトリクスレジスタに関する機能を提供します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>関連ファイル</b><br>
</a>
</h3>
<div style="margin-left:50px;">gemanを使用するために必要なファイルは次のとおりです。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>カテゴリ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ヘッダファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;geman.h&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;スタブライブラリファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ge_user_stub.a&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>使用手順</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>基本的な使用手順</b><br>
</a>
</h3>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_1_1"><h4>
(1)&nbsp;<b>ライブラリの初期化</b><br></h4>
</a></div>
<div style="margin-left:67px;">gemanはデフォルトのモジュールとして動作しますので、明示的に初期化処理を行う必要はありません。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_1_2"><h4>
(2)&nbsp;<b>コールバック関数の設定</b><br></h4>
</a></div>
<div style="margin-left:67px;">必要に応じて、<a href="../graphics/GE-Reference-Japanese.htm#sceGeSetCallback">sceGeSetCallback</a>()関数を用いてシグナルコールバック関数とフィニッシュコールバック関数を登録します。コールバックIDが返されますが、後でキューイングを行うときに使用しますので、適当な変数に保存しておいてください。<br>以下にコールバック関数の設定例を示します。詳細は「<u><a href="../graphics/GE-Overview-Japanese.htm#Heading3_5">コールバック関数による同期処理</a></u>」を参照してください。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
static void callback_sig(int intrcode, void *cookie, const void *madr);
static void callback_fin(int intrcode, void *cookie, const void *madr);
static int intrId;
<a href="../graphics/GE-Reference-Japanese.htm#SceGeCbParam">SceGeCbParam</a>	cbParam;

cbParam.pSignalFunc = callback_sig;
cbParam.pFinishFunc = callback_fin;
cbParam.pSignalCookie = NULL;
cbParam.pFinishCookie = NULL;
intrId = <a href="../graphics/GE-Reference-Japanese.htm#sceGeSetCallback">sceGeSetCallback</a>(&amp;cbParam);
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_1_3"><h4>
(3)&nbsp;<b>Graphics Engineの初期化</b><br></h4>
</a></div>
<div style="margin-left:67px;">Graphics Engineの各コマンドは、リセット直後には不定の値となっています。安定した動作をさせるために、最初にGraphics Engineのコマンドを0で初期化しておくことを推奨します。<br>初期化は次のように、各コマンドに0を設定したディスプレイリストをキューイング関数で転送することによって行います。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
static const unsigned int initCmd[] = {
//	((SCE_GE_CMD_NOP	&lt;&lt; 24) | 0),	// 0x00
	((SCE_GE_CMD_VADR	&lt;&lt; 24) | 0),	// 0x01
	((SCE_GE_CMD_IADR	&lt;&lt; 24) | 0),	// 0x02
		:
		:(途中省略)
		:
	((SCE_GE_CMD_XSIZE	&lt;&lt; 24) | 0),	// 0xEE
	((SCE_GE_CMD_FINISH	&lt;&lt; 24) | 0),	// terminate display list
	((SCE_GE_CMD_END	&lt;&lt; 24) | 0)	//
};
int	queId;

queId = <a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>(initCmd, NULL, -1, NULL);
<a href="../graphics/GE-Reference-Japanese.htm#sceGeListSync">sceGeListSync</a>(queId, 0);

</font></pre></div>
<div style="margin-left:67px;">なお、描画をキックするコマンドやディスプレイリストのアドレス生成を行うコマンドなどは初期化する必要がないため、初期化用ディスプレイリストに含めなくても差し支えありません。初期化する必要のないコマンドは次のとおりです。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>CMD_NOP, CMD_PRIM, CMD_BEZIER, CMD_SPLINE, CMD_BBOX, CMD_JUMP, CMD_BJUMP, CMD_CALL,
CMD_RET, CMD_END, CMD_SIGNAL, CMD_FINISH, CMD_ORIGIN, CMD_XSTART
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_1_4"><h4>
(4)&nbsp;<b>ディスプレイリストの作成とキューイング</b><br></h4>
</a></div>
<div style="margin-left:67px;">ディスプレイリストは各アプリケーションで適宜の方法で作成してください。geman独自の制限および機能拡張がありますので、「<u><a href="../graphics/GE-Overview-Japanese.htm#Heading3_3">ディスプレイリスト</a></u>」を参照してください。<br>作成したディスプレイリストは<a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>()関数を用いてキューイングします。このとき、ストールアドレス / コールバックID / コンテキスト退避用バッファのアドレスを、必要に応じて指定します。これらの詳細は「<u><a href="../graphics/GE-Overview-Japanese.htm#Heading3_4">キューイング</a></u>」を参照してください。<br><a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>()関数はキューIDを返します。キューIDは、<a href="../graphics/GE-Reference-Japanese.htm#sceGeListSync">sceGeListSync</a>()関数で描画終了を待ったり、<a href="../graphics/GE-Reference-Japanese.htm#sceGeBreak">sceGeBreak</a>()関数で描画処理を中断したりする際に、ディスプレイリストを指定するために使用します。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>int		queId;
<a href="../graphics/GE-Reference-Japanese.htm#SceGeContext">SceGeContext</a>	ctx;
void 		*disp_list;
	:
	:(ディスプレイリストの作成処理：省略)
	:
queId = <a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>(disp_list, NULL, intrId, &amp;ctx);
<a href="../graphics/GE-Reference-Japanese.htm#sceGeListSync">sceGeListSync</a>(queId, 0);
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>コンテキストの切り替え</b><br>
</a>
</h3>
<div style="margin-left:50px;">Graphics Engineが保持している各コマンドの設定値をひとまとめにして、コンテキストと呼びます。コンテキストは描画結果に影響するため、ディスプレイリストはそれぞれ適切なコンテキストのもとで描画しなければなりません。コンテキストを一時的に変更して描画を行い、また元のコンテキストに戻して描画を続けたい場合のために、コンテキストの退避 / 復帰を容易に行えるしくみが用意されています。<br>具体的には、ディスプレイリストをキューイングする際に、<a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>()関数の第4引数として<a href="../graphics/GE-Reference-Japanese.htm#SceGeListOptParam">SceGeListOptParam</a>構造体のpGeContextメンバで、コンテキスト退避用バッファ<a href="../graphics/GE-Reference-Japanese.htm#SceGeContext">SceGeContext</a>のアドレスを指定します。すると、当該ディスプレイの描画開始時にまずコンテキストを退避して、ディスプレイリストを描画し、描画が終了するとコンテキストを復帰する処理が自動的に行われます。<br>また、複数のディスプレイリストにわたってコンテキストを変更したい場合には、<a href="../graphics/GE-Reference-Japanese.htm#sceGeSaveContext">sceGeSaveContext</a>()関数および<a href="../graphics/GE-Reference-Japanese.htm#sceGeRestoreContext">sceGeRestoreContext</a>()関数で明示的に退避および復帰を行うことができます。<a href="../graphics/GE-Reference-Japanese.htm#sceGeSaveContext">sceGeSaveContext</a>()関数および<a href="../graphics/GE-Reference-Japanese.htm#sceGeRestoreContext">sceGeRestoreContext</a>()関数はディスプレイリストが停止している状態で呼び出す必要があります。ディスプレイリストの実行中に<a href="../graphics/GE-Reference-Japanese.htm#sceGeSaveContext">sceGeSaveContext</a>()関数および<a href="../graphics/GE-Reference-Japanese.htm#sceGeRestoreContext">sceGeRestoreContext</a>()関数を呼び出すことはできません。<br>コンテキストの退避 / 復帰はオーバーヘッドを生じます。コンテキストの退避 / 復帰を行わないで済むように描画順序を調整するほうが、パフォーマンスの点で有利です。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_3">
<h3>
<a href="#Heading3_2"> 2. </a>3 
<!-- hp1 --><b>描画の中断・割り込み</b><br>
</a>
</h3>
<div style="margin-left:50px;"><a href="../graphics/GE-Reference-Japanese.htm#sceGeBreak">sceGeBreak</a>()関数を使用すると、現在描画中のキューを中断させることができます。中断したキューの描画を再開させるには<a href="../graphics/GE-Reference-Japanese.htm#sceGeContinue">sceGeContinue</a>()関数を使用します。<br>描画を中断している間に、<a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueueHead">sceGeListEnQueueHead</a>()関数を使用してキューの先頭にディスプレイリストを割り込ませることができます。割り込ませたディスプレイリストは、<a href="../graphics/GE-Reference-Japanese.htm#sceGeContinue">sceGeContinue</a>()関数を呼び出して描画を再開させたとき、最初に描画されることになります。<br>たとえば、60fpsで描画を行っているあいだに、V-Blankのコールバックで１回おきに描画を中断してディスプレイリストを割り込ませて描画を再開するという処理を行うと、30fpsの描画を同じ画面に重ね合わせて表示することができます。<br><a href="../graphics/GE-Reference-Japanese.htm#sceGeBreak">sceGeBreak</a>()関数による割り込み描画は、<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_SIGNAL_PAUSE">SCE_GE_SIGNAL_SIGNAL_PAUSE</a>を含むディスプレイリストの描画中に使用することは出来ません。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>ディスプレイリスト</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>ディスプレイリストに関する制限</b><br>
</a>
</h3>
<div style="margin-left:50px;">ディスプレイリストは、Graphics Engineに対するコマンドを並べたものです。gemanがディスプレイリストを正しく扱うために、ディスプレイリスト中のCMD_FINISHおよびCMD_ENDの配置について以下に示す制限があります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_1_1"><h4>
(1)&nbsp;<b>ディスプレイリストの末尾にCMD_FINISH＋CMD_ENDが置かれていること</b><br></h4>
</a></div>
<div style="margin-left:50px;"></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 1  正しいディスプレイリスト</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_1_2"><h4>
(2)&nbsp;<b>ディスプレイリストの途中にCMD_FINISHが含まれていないこと</b><br></h4>
</a></div>
<div style="margin-left:50px;"></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese002.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 2  正しくないディスプレイリスト1</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_1_3"><h4>
(3)&nbsp;<b>ディスプレイリストの途中に(CMD_SIGNALに続く場合を除いて)CMD_ENDが含まれていないこと</b><br></h4>
</a></div>
<div style="margin-left:50px;"></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese003.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 3  正しくないディスプレイリスト2</b><br>
</div>
<br>
<div style="margin-left:50px;"><br>上記の制限に反するディスプレイリストをキューイングした場合、キューの切り替えが正常に行われなくなり、描画が終了しないといった不具合が発生する可能性があります。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>CMD_SIGNALの機能拡張</b><br>
</a>
</h3>
<div style="margin-left:50px;">CMD_SIGNALは描画処理中の任意のタイミングで割り込みを発生させるためのコマンドですが、gemanでは本来のシグナル処理のほかに、ディスプレイリストのコールおよびリターンを行うために利用し、32段までのコールを可能にしています(Graphics Engineのハードウェアがサポートするコール段数は2段までです)。<br>このため、gemanで取り扱うディスプレイリストでは、CMD_SIGNALについて次の機能拡張および制限があります。<br></div>
<div style="margin-left:40px;"><ul>
<li> CMD_SIGNALに続いてCMD_ENDが置かれている必要がある
<li> CMD_SIGNALのbit16〜bit23は拡張コマンドコードと解釈される
</ul></div>
<div style="margin-left:50px;"><br>拡張コマンドコードについて以下に説明します。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_1"><h4>
(1)&nbsp;<b>SCE_GE_SIGNAL_SIGNAL_WAIT(0x01) - シグナル割り込み発生(Waitあり)</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_SIGNAL_WAIT">SCE_GE_SIGNAL_SIGNAL_WAIT</a>(0x01)となっているCMD_SIGNALを読み込んだとき、gemanは描画を一時中断し、登録されているシグナルコールバック関数を呼び出します。このとき、CMD_SIGNALの下位16bitを第1引数としてシグナルコールバック関数に渡します。<br>シグナルコールバック関数から戻ったあと、描画を再開します。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese004.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 4  シグナル割り込み発生(Waitあり)</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_2"><h4>
(2)&nbsp;<b>SCE_GE_SIGNAL_SIGNAL_NOWAIT(0x02) - シグナル割り込み発生(Waitなし)</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_SIGNAL_NOWAIT">SCE_GE_SIGNAL_SIGNAL_NOWAIT</a>(0x02)となっているCMD_SIGNALを読み込んだとき、gemanは描画を続けたまま、登録されているシグナルコールバック関数を呼び出します。このとき、CMD_SIGNALの下位16bitを第1引数としてシグナルコールバック関数に渡します。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese005.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 5  シグナル割り込み発生(Waitなし)</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_3"><h4>
(3)&nbsp;<b>SCE_GE_SIGNAL_SIGNAL_PAUSE(0x03) - シグナル割り込み発生(Pause)</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_SIGNAL_PAUSE">SCE_GE_SIGNAL_SIGNAL_PAUSE</a>(0x03)となっているCMD_SIGNALを読み込んだとき、gemanは描画を一時中断し、登録されているシグナルコールバック関数を呼び出します。このとき、CMD_SIGNALの下位16bitを第1引数としてシグナルコールバック関数に渡します。<br>描画を再開するには、<a href="../graphics/GE-Reference-Japanese.htm#sceGeContinue">sceGeContinue</a>()関数を明示的に呼ぶ必要があります。<br>なお、この拡張コマンドを使用するときには、図のように、CMD_SIGNAL＋CMD_ENDに続いてCMD_FINISH＋CMD_ENDを置く必要があります。<br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese006.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 6  シグナル割り込み発生(Pause)</b><br>
</div>
<br>
<div style="margin-left:67px;"><a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_SIGNAL_PAUSE">SCE_GE_SIGNAL_SIGNAL_PAUSE</a>を含むディスプレイリストの描画中に<a href="../graphics/GE-Reference-Japanese.htm#sceGeBreak">sceGeBreak</a>()関数を使用することは出来ません。これは<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_SIGNAL_PAUSE">SCE_GE_SIGNAL_SIGNAL_PAUSE</a>の実行によって停止したのか、<a href="../graphics/GE-Reference-Japanese.htm#sceGeBreak">sceGeBreak</a>()関数の実行によって停止したのかがタイミングによって曖昧な動作になってしまうのを避けるためです。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_4"><h4>
(4)&nbsp;<b>SCE_GE_SIGNAL_DRAWSYNC(0x08) - 描画の同期</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_DRAWSYNC">SCE_GE_SIGNAL_DRAWSYNC</a>(0x08)となっているCMD_SIGNALを読み込んだとき、gemanは描画を一時完了させ、描画完了してからディスプレイリストの続きを実行します。<br>なお、この拡張コマンドを使用するときには、図のように、CMD_SIGNAL＋CMD_ENDに続いてCMD_FINISH＋CMD_ENDを置く必要があります。<br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese007.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 7  描画の同期</b><br>
</div>
<br>
<div style="margin-left:67px;">後続のコマンドは、CMD_SIGNAL + CMD_END + CMD_FINSIH + CMD_ENDの一連のコマンドがすべて完了した後に再開されます。<br><a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_DRAWSYNC">SCE_GE_SIGNAL_DRAWSYNC</a>は、CMD_XSTARTでディスプレイリストをGE eDRAMにコピーし、CMD_JUMP/CMD_CALLによって制御を移す場合などに使用する事ができます。CMD_XSTARTの転送終了はCMD_FINISHによるFINISH割り込みでしか検出できないこと、Graphics Engineが行うディスプレイリストの先読み動作を無効化しCMD_XSTARTで転送されたデータを新しいディスプレイリストとして認識させるためには、CMD_ENDコマンドによってディスプレイリストをいったん停止させ、改めてディスプレイリストを再起動させる必要があるためです。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_5"><h4>
(5)&nbsp;<b>SCE_GE_SIGNAL_JUMP(0x10) - ジャンプ</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_JUMP">SCE_GE_SIGNAL_JUMP</a>(0x10)となっているCMD_SIGNALを読み込んだとき、gemanはディスプレイリストの絶対アドレス無条件ジャンプを行います。CMD_SIGNALのbit15〜bit0がジャンプ先アドレスの上位16ビット、CMD_ENDのbit15〜bit0がジャンプ先アドレスの下位16ビットとなります。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese008.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 8  ジャンプ</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_6"><h4>
(6)&nbsp;<b>SCE_GE_SIGNAL_CALL(0x11) - コール</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_CALL">SCE_GE_SIGNAL_CALL</a>(0x11)となっているCMD_SIGNALを読み込んだとき、gemanはディスプレイリストの絶対アドレスコールを行います。CMD_SIGNALのbit15〜bit0がコール先アドレスの上位16ビット、CMD_ENDのbit15〜bit0がコール先アドレスの下位16ビットとなります。<br><br>コールの最大ネスト段数は<a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>()関数でディスプレイリストをキューイングするとき<a href="../graphics/GE-Reference-Japanese.htm#SceGeListOptParam">SceGeListOptParam</a>で指定します。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese009.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 9  コール</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_7"><h4>
(7)&nbsp;<b>SCE_GE_SIGNAL_RET(0x12) - リターン</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_RET">SCE_GE_SIGNAL_RET</a>(0x12)となっているCMD_SIGNALを読み込んだとき、gemanは直前にディスプレイリストのコールが行われた箇所へリターンします。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese010.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 10  リターン</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_8"><h4>
(8)&nbsp;<b>SCE_GE_SIGNAL_RJUMP(0x13) - アドレス相対ジャンプ</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_RJUMP">SCE_GE_SIGNAL_RJUMP</a>(0x13)となっているCMD_SIGNALを読み込んだとき、gemanはディスプレイリストのアドレス相対で無条件ジャンプを行います。CMD_SIGNALのbit15〜bit0が相対アドレスの上位16ビット、CMD_ENDのbit15〜bit0が相対先アドレスの下位16ビットとなります。相対アドレスの基点はCMD_SIGNALが置かれていたアドレスとなります。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese011.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 11  アドレス相対ジャンプ</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_9"><h4>
(9)&nbsp;<b>SCE_GE_SIGNAL_RCALL(0x14) - アドレス相対コール</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_RCALL">SCE_GE_SIGNAL_RCALL</a>(0x14)となっているCMD_SIGNALを読み込んだとき、gemanはディスプレイリストのアドレス相対でコールを行います。CMD_SIGNALのbit15〜bit0が相対アドレスの上位16ビット、CMD_ENDのbit15〜bit0が相対アドレスの下位16ビットとなります。相対アドレスの基点はCMD_SIGNALが置かれていたアドレスとなります。<br><br>コールの最大ネスト段数は<a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>()関数でディスプレイリストをキューイングするとき<a href="../graphics/GE-Reference-Japanese.htm#SceGeListOptParam">SceGeListOptParam</a>で指定します。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese012.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 12  アドレス相対コール</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_10"><h4>
(10)&nbsp;<b>SCE_GE_SIGNAL_OJUMP(0x15) - オフセット相対ジャンプ</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_OJUMP">SCE_GE_SIGNAL_OJUMP</a>(0x15)となっているCMD_SIGNALを読み込んだとき、gemanはディスプレイリストのオフセット相対で無条件ジャンプを行います。CMD_SIGNALのbit15〜bit0が相対アドレスの上位16ビット、CMD_ENDのbit15〜bit0が相対先アドレスの下位16ビットとなります。相対アドレスの基点はCMD_OFFSETまたはCMD_ORIGINコマンドによって設定されていたオフセットアドレスとなります。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese013.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 13  オフセット相対ジャンプ</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_11"><h4>
(11)&nbsp;<b>SCE_GE_SIGNAL_OCALL(0x16) - オフセット相対コール</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_OCALL">SCE_GE_SIGNAL_OCALL</a>(0x16)となっているCMD_SIGNALを読み込んだとき、gemanはディスプレイリストのオフセット相対でコールを行います。CMD_SIGNALのbit15〜bit0が相対アドレスの上位16ビット、CMD_ENDのbit15〜bit0が相対アドレスの下位16ビットとなります。相対アドレスの基点はCMD_OFFSETまたはCMD_ORIGINコマンドによって設定されていたオフセットアドレスとなります。<br><br>コールの最大ネスト段数は<a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>()関数でディスプレイリストをキューイングするとき<a href="../graphics/GE-Reference-Japanese.htm#SceGeListOptParam">SceGeListOptParam</a>で指定します。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
</font></pre></div>
<div style="margin-left:67px;"></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese014.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 14  オフセット相対コール</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_12"><h4>
(12)&nbsp;<b>SCE_GE_SIGNAL_RTBP0〜7 (0x20〜27) - アドレス相対テクスチャ</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_RTBP0〜7">SCE_GE_SIGNAL_RTBP0〜7</a>(0x20〜27)となっているCMD_SIGNALを読み込んだとき、gemanはアドレス相対で計算されたテクスチャベースポイントを設定するCMD_TBP0〜7+CMD_TBW0〜7にディスプレイリストを書き換えます。CMD_SIGNALのbit15〜bit0が相対アドレスの上位16ビット、CMD_ENDのbit15〜bit0が相対先アドレスの下位16ビット、CMD_ENDのbit 23〜15はテクスチャバッファ幅となります。相対アドレスの基点はCMD_OFFSETまたはCMD_ORIGINコマンドによって設定されていたオフセットアドレスとなります。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese015.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 15  アドレス相対テクスチャ</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_13"><h4>
(13)&nbsp;<b>SCE_GE_SIGNAL_OTBP0〜7 (0x28〜2F) - オフセット相対テクスチャ</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_OTBP0〜7">SCE_GE_SIGNAL_OTBP0〜7</a>(0x20〜27)となっているCMD_SIGNALを読み込んだとき、gemanはアドレス相対で計算されたテクスチャベースポイントを設定するCMD_TBP0〜7+CMD_TBW0〜7にディスプレイリストを書き換えます。CMD_SIGNALのbit15〜bit0が相対アドレスの上位16ビット、CMD_ENDのbit15〜bit0が相対先アドレスの下位16ビット、CMD_ENDのbit 23〜15はテクスチャバッファ幅となります。相対アドレスの基点はCMD_OFFSETまたはCMD_ORIGINコマンドによって設定されていたオフセットアドレスとなります。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese016.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 16  アドレス相対テクスチャ</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_14"><h4>
(14)&nbsp;<b>SCE_GE_SIGNAL_RCBP (0x30) - アドレス相対CLUT</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_RCBP">SCE_GE_SIGNAL_RCBP</a> (0x30)となっているCMD_SIGNALを読み込んだとき、gemanはアドレス相対で計算されたCLUTベースポイントを設定するCMD_CBP+CMD_CBWにディスプレイリストを書き換えます。CMD_SIGNALのbit15〜bit0が相対アドレスの上位16ビット、CMD_ENDのbit15〜bit0が相対先アドレスの下位16ビットとなります。相対アドレスの基点はCMD_SIGNALが置かれていたアドレスとなります。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese017.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 17  アドレス相対CLUT</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_15"><h4>
(15)&nbsp;<b>SCE_GE_SIGNAL_OCBP (0x38) - オフセット相対CLUT</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_OCBP">SCE_GE_SIGNAL_OCBP</a>(0x38)となっているCMD_SIGNALを読み込んだとき、gemanはアドレス相対で計算されたCLUTベースポイントを設定するCMD_CBP+CMD_CBWにディスプレイリストを書き換えます。CMD_SIGNALのbit15〜bit0が相対アドレスの上位16ビット、CMD_ENDのbit15〜bit0が相対先アドレスの下位16ビットとなります。相対アドレスの基点はCMD_OFFSETまたはCMD_ORIGINコマンドによって設定されていたオフセットアドレスとなります。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese018.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 18  アドレス相対CLUT</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_2_16"><h4>
(16)&nbsp;<b>SCE_GE_SIGNAL_BREAK (0xFF) - ディスプレイリストブレークポイント</b><br></h4>
</a></div>
<div style="margin-left:67px;">bit16〜bit23が<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_BREAK">SCE_GE_SIGNAL_BREAK</a>(0xFF)となっているCMD_SIGNALを読み込んだとき、gemanはディスプレイリストおよびCPUを停止させ、デバッガよりディスプレイリストコマンドをステップ実行などさせるためのディスプレイリスト停止状態にします。このディスプレイリスト停止状態は、<a href="../graphics/GE-Reference-Japanese.htm#sceGeBreak">sceGeBreak</a>()関数による描画の中断とは異なります。<br>CMD_SIGNALのbit15〜bit0はブレークポイントを判別するためのマークで、自由な値を設定することができます。<br><br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese019.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 19  ディスプレイリストのブレークポイント</b><br>
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_hd3 -->
<a name="Heading3_4">
<h2>
 4 <!-- hp --><b>キューイング</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">作成したディスプレイリストをキューイングするには、<a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>()関数を使用します。この関数を呼び出すことで、指定したディスプレイリストがgemanの管理しているキューの最後尾に追加されます。<br><a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>()関数の引数としては、ディスプレイリストの開始アドレスのほかに、ストールアドレス、コールバックIDおよびコンテキスト退避領域のポインタを指定します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_1">
<h3>
<a href="#Heading3_4"> 4. </a>1 
<!-- hp1 --><b>ストールアドレス</b><br>
</a>
</h3>
<div style="margin-left:50px;">ストールアドレスを指定すると、Graphics Engineへの転送処理がディスプレイリスト中の指定した箇所まで進んだところでストールします。ストールアドレスを指定しておくことで、ディスプレイリストの先頭部分だけ作成してキューイングし、gemanが転送している間にその続きを作成して追加していく、といった処理を行うことができます。ディスプレイリストの続きを追加したら、<a href="../graphics/GE-Reference-Japanese.htm#sceGeListUpdateStallAddr">sceGeListUpdateStallAddr</a>()関数でストールアドレスを更新してください。<br></div>

<div align=center>
<p>
<img src="gif/GE-Overview-Japanese020.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 20  ストールアドレスによる同期</b><br>
</div>
<br>
<div style="margin-left:50px;">実際に転送されるコマンドは、ストールアドレスの直前のコマンドまでです。転送アドレスとストールアドレスが一致した場合には、そのアドレスのコマンドを転送せずにストールします。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_2">
<h3>
<a href="#Heading3_4"> 4. </a>2 
<!-- hp1 --><b>コールバックID</b><br>
</a>
</h3>
<div style="margin-left:50px;">コールバックIDを指定すると、そのディスプレイリストの描画終了またはそのディスプレイリスト中のCMD_SIGNALによって、指定したコールバック関数が呼び出されます。あらかじめ<a href="../graphics/GE-Reference-Japanese.htm#sceGeSetCallback">sceGeSetCallback</a>()関数でコールバック関数を登録しておき、そのときに返されたコールバックIDを指定してください。コールバック関数を呼び出す必要がない場合は、コールバックIDとして負の値を指定してください。<br>「<u><a href="../graphics/GE-Overview-Japanese.htm#Heading3_5">コールバック関数による同期処理</a></u>」にも解説がありますので参照してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_3">
<h3>
<a href="#Heading3_4"> 4. </a>3 
<!-- hp1 --><b>コンテキストの退避</b><br>
</a>
</h3>
<div style="margin-left:50px;">コンテキスト退避領域のポインタを指定すると、そのディスプレイリストの描画開始前にコンテキストを退避して描画終了時に復帰する処理が行われます。コンテキストの退避が不要な場合はNULLを指定してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_4">
<h3>
<a href="#Heading3_4"> 4. </a>4 
<!-- hp1 --><b>sceGeListEnQueue()関数の返り値</b><br>
</a>
</h3>
<div style="margin-left:50px;"><a href="../graphics/GE-Reference-Japanese.htm#sceGeListEnQueue">sceGeListEnQueue</a>()関数の返す値は、キューイングしたディスプレイリストをユニークに表すキューIDです。たとえば、特定のディスプレイリストの描画終了との同期を取るためには、キューIDを指定して<a href="../graphics/GE-Reference-Japanese.htm#sceGeListSync">sceGeListSync</a>()関数をコールします。gemanのキュー全体の終了との同期を取るためには、<a href="../graphics/GE-Reference-Japanese.htm#sceGeDrawSync">sceGeDrawSync</a>()関数をコールします。キューIDは<a href="../graphics/GE-Reference-Japanese.htm#sceGeDrawSync">sceGeDrawSync</a>()関数のブロッキング呼び出し時に回収されますので、1画面ぶんの描画が完了させるたびごとに<a href="../graphics/GE-Reference-Japanese.htm#sceGeDrawSync">sceGeDrawSync</a>()関数を呼び出す必要があります。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_5">
<h2>
 5 <!-- hp --><b>コールバック関数による同期処理</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">gemanでは2種類のコールバックをサポートしています。ディスプレイリストに含まれているCMD_SIGNAL / CMD_FINISHをGraphics Engineが処理したタイミングで割り込みが発生し、それを受けてgemanがシグナルコールバック関数 / フィニッシュコールバック関数を呼び出します。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_5_1"><h4>
(1)&nbsp;<b>コールバック関数の登録</b><br></h4>
</a></div>
<div style="margin-left:67px;">コールバック関数を登録するには、<a href="../graphics/GE-Reference-Japanese.htm#sceGeSetCallback">sceGeSetCallback</a>()関数を使用してください。シグナルコールバック関数 / フィニッシュコールバック関数それぞれのエントリポインタと、それぞれの関数が呼び出されるときに引数として渡すCookie領域のポインタを登録することができ、同時に16組までのコールバック関数を登録することができます。<br><a href="../graphics/GE-Reference-Japanese.htm#sceGeSetCallback">sceGeSetCallback</a>()関数は、登録されたコールバック関数を識別するためのコールバックIDを返します。<br>なお、使用しなくなったコールバック関数は、<a href="../graphics/GE-Reference-Japanese.htm#sceGeUnsetCallback">sceGeUnsetCallback</a>()関数で登録を解除してください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_5_2"><h4>
(2)&nbsp;<b>キューイング</b><br></h4>
</a></div>
<div style="margin-left:67px;">ディスプレイリストをキューイングする際に、コールバック関数を登録したときに返されたコールバックIDを指定すると、そのディスプレイリストの中に含まれるCMD_SIGNALおよびCMD_FINISHがGraphics Engineで処理されたタイミングで、該当するコールバック関数が呼び出されます。<br>コールバックの不要なディスプレイリストをキューイングするときには、コールバックIDとして負の値を指定してください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_5_3"><h4>
(3)&nbsp;<b>シグナルコールバックの呼び出し</b><br></h4>
</a></div>
<div style="margin-left:67px;">CMD_SIGNALコマンドの拡張機能で<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_SIGNAL_WAIT">SCE_GE_SIGNAL_SIGNAL_WAIT</a>, <a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_SIGNAL_NOWAIT">SCE_GE_SIGNAL_SIGNAL_NOWAIT</a>, <a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_SIGNAL_PAUSE">SCE_GE_SIGNAL_SIGNAL_PAUSE</a>が実行されたとき、シグナルコールバック関数が呼び出されます。シグナルコールバック関数は割り込みハンドラとして実行され、返り値はありません。<br><br>第1引数<i>intrcode</i>には原因となったCMD_SIGNALの下位16bitが渡されます。第2引数<i>cookie</i>には、登録時に<i>pSignalCookie</i>で指定したCookie領域のポインタがそのまま渡されます。第3引数には、この割り込みを発生させたときのディスプレイリストアドレスが渡されます。ただし、<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_SIGNAL_NOWAIT">SCE_GE_SIGNAL_SIGNAL_NOWAIT</a>による呼び出しの場合には引数<i>madr</i>は意味を持ちません。シグナルコールバック関数の呼び出し前に後続するディスプレイリストの実行が再開されているためです。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_5_4"><h4>
(4)&nbsp;<b>フィニッシュコールバックの呼び出し</b><br></h4>
</a></div>
<div style="margin-left:67px;">CMD_FINISH+CMD_ENDコマンドによってディスプレイリストが干渉した時にフィニッシュコールバック関数が呼び出されます。フィニッシュコールバック関数は割り込みハンドラとして実行され、返り値はありません。<br><br>第1引数<i>intrcode</i>には原因となったCMD_FINISHの下位16bitが渡されます。第2引数<i>cookie</i>には、登録時に<i>pFinishCookie</i>で指定したCookie領域のポインタがそのまま渡されます。第3引数には、ディスプレイリストが終了したアドレスが渡されます。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_6">
<h2>
 6 <!-- hp --><b>ディスプレイリストデバッグ</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">ディスプレイリスト内に<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_BREAK">SCE_GE_SIGNAL_BREAK</a>を置くことにより、ディスプレイリストのシングルステップ実行などのデバッグ操作を行う事ができます。ここではdstdbを使用したデバッグ方法を説明します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_6_1">
<h3>
<a href="#Heading3_6"> 6. </a>1 
<!-- hp1 --><b>SCE_GE_SIGNAL_BREAKの配置</b><br>
</a>
</h3>
<div style="margin-left:50px;">まず、デバッグを行いたいディスプレイリストにあらかじめ<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_BREAK">SCE_GE_SIGNAL_BREAK</a>を配置しておきます。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>_sceGupCommand(pCtx, SCE_GE_SET_SIGNAL_BREAK(0x1234));
_sceGupCommand(pCtx, SCE_GE_SET_END_BREAK());
</font></pre></div>
<div style="margin-left:50px;"><br>SCE_GE_SET_SIGNAL_BREAK()では任意の16ビットの値をマークとして使用する事ができます。これは複数個所にブレークポイントを配置したときに、どの位置で停止したか確認する目的で自由に使用する事ができます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_6_2">
<h3>
<a href="#Heading3_6"> 6. </a>2 
<!-- hp1 --><b>ブレークポイント到達による通知</b><br>
</a>
</h3>
<div style="margin-left:50px;">Graphics Engineがディスプレイリスト内の<a href="../graphics/GE-Reference-Japanese.htm#SCE_GE_SIGNAL_BREAK">SCE_GE_SIGNAL_BREAK</a>の位置に到達した時、デバッガに対して通知が行われます。dstdbでは、以下のような表示がされてプログラム停止状態になります。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>dstdb 0S0&gt; reset
dstdb 0S0&gt; mstart ????.prx
*** Unexpected reply - type=BREAKR code=ff result=AWBRKPT
*** Target program stopped. Check the location by dr -ge command.
dstdb 0S0&gt; 
</font></pre></div>
<div style="margin-left:50px;"><br>この状態ではGraphics Engine理由によるプログラム停止状態で、Graphics EngineだけではなくALLEGREX CPU内で動作するスレッドや割り込みハンドラも実行されることがない状態になっています。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_6_3">
<h3>
<a href="#Heading3_6"> 6. </a>3 
<!-- hp1 --><b>ブレークポイント到達時の状態を確認</b><br>
</a>
</h3>
<div style="margin-left:50px;">ディスプレイリスのブレークポイントに到達した場合、dstdbのdr -geコマンドを使用してディスプレイリストの停止状態を確認することができます。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>*** Unexpected reply - type=BREAKR code=ff result=AWBRKPT
*** Target program stopped. Check the location by dr -ge command.
dstdb 0S0&gt; dr -ge
 ge_cur=  0c000000 ge_list= 00000000 ge_oadr= 00000000
 ge_madr= 0880f610 ge_sadr= 00000000 ge_vadr= 00000000 ge_iadr= 00000000
 ge_radr1=00000000 ge_radr2=00000000 ge_oadr1=00000000 ge_oadr2=00000000
 ge_ist=  -------- ge_iss=  -------- ge_ies=  --------
  0x0880f600: 0x00000000  CMD_NOP (LABEL=0x00000000)
  0x0880f604: 0x0880edfc  CMD_JUMP (ADDR=0x0080edfc)
  0x0880f608: 0x0e120000  CMD_SIGNAL (CMD=RET)
  0x0880f60c: 0x0c000000  CMD_END (noparam)
-&gt;0x0880f610: 0x0eff1234  CMD_SIGNAL (CMD=BREAK, MARK=0x1234)
  0x0880f614: 0x0c000000  CMD_END (noparam)
  0x0880f618: 0x00000001  CMD_NOP (LABEL=0x00000001)
  0x0880f61c: 0x00000002  CMD_NOP (LABEL=0x00000002)
dstdb 0S0&gt; 
</font></pre></div>
<div style="margin-left:50px;"><br>ここではGraphics Engine制御レジスタの一部と、停止したディスプレイリストの位置が表示されます。<br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>レジスタ名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_CUR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;最後に実行したコマンド&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_LIST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リスト操作&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_OADR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オフセットアドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_MADR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ディスプレイリストアドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_SADR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ストールアドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_VADR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;頂点バッファアドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_IADR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;インデックスバッファアドレス&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_RADR1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リターンアドレススタック1&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_RADR2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リターンアドレススタック2&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_OADR1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オフセットアドレススタック1&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;GE_OADR2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オフセットアドレススタック2&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">各レジスタの詳細は非公開ですが、ここで注目するのは現在のアドレスを示すGE_MADRのみです。dstdbでは、ディスプレイリストのカレントアドレスに-&gt;マークをつけて表示します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_6_4">
<h3>
<a href="#Heading3_6"> 6. </a>4 
<!-- hp1 --><b>Graphics Engineコマンドレジスタの確認</b><br>
</a>
</h3>
<div style="margin-left:50px;">ディスプレイリストによって設定される各コマンドレジスタの内容をdrコマンドで確認する事ができます。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>dstdb 0S0&gt; dr ge
</font></pre></div>
<div style="margin-left:50px;"><br>とすると、表示可能なGraphics Engineレジスタを全て表示します。他にコマンドだけ表示を行ったり、特定のコマンドレジスタ、特定のマトリクスレジスタだけを表示したりすることなどが可能です。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>dstdb 0S0&gt; dr ge_cmd
dstdb 0S0&gt; dr ge_cmd_le0
dstdb 0S0&gt; dr ge_proj
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_6_5">
<h3>
<a href="#Heading3_6"> 6. </a>5 
<!-- hp1 --><b>ディスプレイリストのシングルステップ実行</b><br>
</a>
</h3>
<div style="margin-left:50px;">Graphics Engine理由によるプログラム停止状態からは、後続のディスプレイリストをシングルステップ実行する事が可能です。dstdbのgstepコマンドを使用します。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>dstdb 0S0&gt; gstep
*** MADR=0x0880f618
*** AW Step or Next
 ge_cur=  0c000000 ge_list= 00000000 ge_oadr= 00000000
 ge_madr= 0880f618 ge_sadr= 00000000 ge_vadr= 00000000 ge_iadr= 00000000
 ge_radr1=00000000 ge_radr2=00000000 ge_oadr1=00000000 ge_oadr2=00000000
 ge_ist=  -------- ge_iss=  -------- ge_ies=  --------
  0x0880f608: 0x0e120000  CMD_SIGNAL (CMD=RET)
  0x0880f60c: 0x0c000000  CMD_END (noparam)
  0x0880f610: 0x0eff1234  CMD_SIGNAL (CMD=BREAK, MARK=0x1234)
  0x0880f614: 0x0c000000  CMD_END (noparam)
-&gt;0x0880f618: 0x00000001  CMD_NOP (LABEL=0x00000001)
  0x0880f61c: 0x00000002  CMD_NOP (LABEL=0x00000002)
  0x0880f620: 0x00000003  CMD_NOP (LABEL=0x00000003)
  0x0880f624: 0x00000004  CMD_NOP (LABEL=0x00000004)
</font></pre></div>
<div style="margin-left:50px;"><br>Graphics Engineは1コマンドだけ実行したところで停止し、再びプログラム停止状態になります。このとき、Graphics Engineをシングルステップ実行させるために一瞬ALLEGREX CPUが動作状態になることにご注意ください。スレッドや割り込みハンドラの処理がディスパッチされることがあります。<br><br>dstdbではgstep, gnext, gcontの各コマンドを使用する事ができます。後続ディスプレイリストの実行を最後まで継続させる場合にはgcontを使用します。このとき、gbpコマンドによってデバッガからブレークポイントを設定することが可能です。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2007 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
