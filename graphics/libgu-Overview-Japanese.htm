<html lang="jp">
<head>
<title>libgu-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libgu
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>ライブラリ概要</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>機能の特徴</b><br>
</a>
</h3>
<div style="margin-left:50px;">libguは、Graphics Engineを用いてグラフィックスの描画を行うための基本ライブラリです。Graphics Engineに対する描画パラメータや描画コマンドのシーケンス、つまりディスプレイリストを作成するための関数を中心に、描画の開始 / 中断 / 同期を制御する関数が用意されています。<br></div>

<div align=center>
<p>
<img src="gif/libgu-Overview-Japanese001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 1　libguの位置付け</b><br>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>主な関数</b><br>
</a>
</h3>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_1"><h4>
(1)&nbsp;<b>初期化/終了関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">ライブラリの初期化 / 終了を行う関数が用意されています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_2"><h4>
(2)&nbsp;<b>ディスプレイリスト関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">ディスプレイリストの作成開始 / 終了、Graphics Engineへの転送、転送終了待ち、シグナル割り込みの制御、ディスプレイリスト用のメモリ管理などを行う関数群が用意されています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_3"><h4>
(3)&nbsp;<b>モード関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">Graphics Engineの持つ各種の描画モードを制御する関数群、一括して描画モードを退避・復帰する関数が用意されています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_4"><h4>
(4)&nbsp;<b>プリミティブ関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">各種のプリミティブを描画するコマンドをディスプレイリストに挿入する関数群が用意されています。点 / 線分 / 連結線分 / 三角形 / 連結三角形 / 扇形連結三角形 / 矩形については、複数個のプリミティブを連続して描画することができます。曲面についてはスプライン曲面とベジェ曲面をサポートし、分割数と分割プリミティブを指定することができます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_5"><h4>
(5)&nbsp;<b>オブジェクトカリング関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">バウンディングボックスをディスプレイリストに挿入し、それに続く一連のコマンドシーケンスを描画するかどうか制御するための関数群が用意されています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_6"><h4>
(6)&nbsp;<b>ボーンとモーフィング関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">ボーンによるスキニング処理とウェイトによるモーフィング処理に関する設定を行う関数群が用意されています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_7"><h4>
(7)&nbsp;<b>座標変換関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">プロジェクション行列 / ビュー行列 / ワールド行列 / テクスチャ行列、そのほかモデル座標から描画座標までの座標変換に関するパラメータを設定する関数群が用意されています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_8"><h4>
(8)&nbsp;<b>カラーと照光設定関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">モデルカラー / 光源 / アンビエントなど、レンダリングに関する各種の設定を行う関数群が用意されています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_9"><h4>
(9)&nbsp;<b>テクスチャ関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">テクスチャマッピングに関する各種の設定を行う関数群が用意されています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_10"><h4>
(10)&nbsp;<b>バッファ設定関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">描画バッファ / 表示バッファ / デプスバッファに関する設定を行う関数、描画バッファと表示バッファの入れ替えを行う関数が用意されています。通常、各バッファに関するパラメータはライブラリ内部で保持し、ディスプレイリストの作成を開始するときに自動的に必要なコマンドが挿入されるしくみになっています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_11"><h4>
(11)&nbsp;<b>フォグ関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">フォグパラメータを設定する関数が用意されています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_12"><h4>
(12)&nbsp;<b>ピクセルオペレーション関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">シザリング、アルファテスト / デプステスト / カラーテスト、アルファブレンディング、ステンシルなどのピクセルオペレーションに関する設定を行う関数群が用意されています。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_13"><h4>
(13)&nbsp;<b>クリア関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">描画バッファ / デプスバッファ / ステンシルをクリアする関数群が用意されています。クリア用のパラメータを設定する関数群と、それを用いてクリアを実行するコマンドをディスプレイリストに挿入する関数があります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_14"><h4>
(14)&nbsp;<b>デバッグ関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">デバッグ用として、任意の文字列を画面上の任意の位置に表示する関数が用意されています。通常はダブルバッファの切り替え時に表示されますが、任意のタイミングで表示させることもできます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_2_15"><h4>
(15)&nbsp;<b>その他の関数</b><br></h4>
</a></div>
<div style="margin-left:67px;">描画バッファ上の矩形領域をコピーする関数が用意されています。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_3">
<h3>
<a href="#Heading3_1"> 1. </a>3 
<!-- hp1 --><b>関連ファイル</b><br>
</a>
</h3>
<div style="margin-left:50px;">libguを使用するために必要なファイルは次のとおりです。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>カテゴリ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ヘッダファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libgu.h&nbsp;&nbsp;<br>&nbsp;&nbsp;libgup.h&nbsp;&nbsp;<br>&nbsp;&nbsp;gecmd.h&nbsp;&nbsp;<br>&nbsp;&nbsp;geman.h&nbsp;&nbsp;<br>&nbsp;&nbsp;gevtx.h&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ライブラリファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libgu.a&nbsp;&nbsp;<br>&nbsp;&nbsp;libgu_debug.a&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;スタブライブラリファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;display_stub.a&nbsp;&nbsp;<br>&nbsp;&nbsp;ge_user_stub.a&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">libgu_debug.aはlibgu関数の引数が正しいかどうかassert()によるチェックを行うデバッグ用ライブラリです。libgu_debug.aをマスター版で使用することはできません。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_4">
<h3>
<a href="#Heading3_1"> 1. </a>4 
<!-- hp1 --><b>参考資料</b><br>
</a>
</h3>
<div style="margin-left:50px;">Graphics Engineマネージャ(geman)<br>Graphics Engine Users Manual<br>Graphics Engine Command Reference Manual<br>libgum<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>使用手順</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>基本的な使用手順</b><br>
</a>
</h3>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_1_1"><h4>
(1)&nbsp;<b>初期化</b><br></h4>
</a></div>
<div style="margin-left:67px;">ライブラリの使用開始時に、<a href="../graphics/libgu-Reference-Japanese.htm#sceGuInit">sceGuInit</a>()を呼び出して初期化を行ってください。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
<a href="../graphics/libgu-Reference-Japanese.htm#sceGuInit">sceGuInit</a>();					// libgu の初期化
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_1_2"><h4>
(2)&nbsp;<b>バッファの設定</b><br></h4>
</a></div>
<div style="margin-left:67px;">描画バッファ / 表示バッファ / デプスバッファを、それぞれ<a href="../graphics/libgu-Reference-Japanese.htm#sceGuDrawBuffer">sceGuDrawBuffer</a>() / <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDispBuffer">sceGuDispBuffer</a>() / <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDepthBuffer">sceGuDepthBuffer</a>()を用いて設定してください。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
<a href="../graphics/libgu-Reference-Japanese.htm#sceGuDrawBuffer">sceGuDrawBuffer</a>( SCEGU_PF5551, SCEGU_VRAM_BP_0, 
	SCEGU_VRAM_WIDTH );			// 描画バッファの設定
<a href="../graphics/libgu-Reference-Japanese.htm#sceGuDispBuffer">sceGuDispBuffer</a>( SCEGU_SCR_WIDTH, SCEGU_SCR_HEIGHT, 
	SCEGU_VRAM_BP_1, SCEGU_VRAM_WIDTH);	// 表示バッファの設定
<a href="../graphics/libgu-Reference-Japanese.htm#sceGuDepthBuffer">sceGuDepthBuffer</a>(SCEGU_VRAM_BP_2, 
	SCEGU_VRAM_WIDTH);			// デプスバッファの設定
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_1_3"><h4>
(3)&nbsp;<b>ディスプレイリストの作成</b><br></h4>
</a></div>
<div style="margin-left:67px;">ディスプレイリスト用のメモリ領域を適宜確保し、<a href="../graphics/libgu-Reference-Japanese.htm#sceGuStart">sceGuStart</a>()でその領域を指定してディスプレイリストの作成を開始します。<br>続いて、プリミティブ関数 / テクスチャ関数 / 座標変換関数 / カラーおよび照光関数 / ピクセルオペレーション関数 / ディスプレイリスト関数などを使用してディスプレイリストを作成していきます。これらの関数は、それぞれ適切な描画コマンドシーケンスを作成中のディスプレイリストに追加する働きを持っています。<br>ディスプレイリストの作成を終了するには<a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinish">sceGuFinish</a>() / <a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinishId">sceGuFinishId</a>()を使用します。<br>なお、作成中のディスプレイリストが指定されたメモリ領域に収まっているかどうかをlibguはチェックしていません。<a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinish">sceGuFinish</a>() / <a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinishId">sceGuFinishId</a>()の返り値または、適宜<a href="../graphics/libgu-Reference-Japanese.htm#sceGuCheckList">sceGuCheckList</a>()を使用して、残り領域を確認してください。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
char	disp_list[MAX_LIST_SIZE] __attribute__((aligned(64)));
int	size;

<a href="../graphics/libgu-Reference-Japanese.htm#sceGuStart">sceGuStart</a>(SCEGU_IMMEDIATE, disp_list, sizeof(disp_list));
	:
size = <a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinish">sceGuFinish</a>();
if (size &gt; MAX_LIST_SIZE) {
	printf(&quot;error: display list size\n&quot;);
}
<a href="../graphics/libgu-Reference-Japanese.htm#sceGuSync">sceGuSync</a>(SCEGU_SYNC_FINISH, SCEGU_SYNC_WAIT);
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_1_4"><h4>
(4)&nbsp;<b>ディスプレイリストの描画</b><br></h4>
</a></div>
<div style="margin-left:67px;">ディスプレイリストを描画する方法は2とおりあります。<br>ひとつはディスプレイリストの作成と描画を同時並行で行う方法です。<a href="../graphics/libgu-Reference-Japanese.htm#sceGuStart">sceGuStart</a>()で作成を開始するときにSCEGU_IMMEDIATEモードを指定しておくと、プリミティブ関数などによってディスプレイリストに追加されたコマンドシーケンスがそのつど描画されるようになります。<br>もうひとつは、ディスプレイリストをあらかじめ作成してメモリ上に保持しておき、必要になった時点で<a href="../graphics/libgu-Reference-Japanese.htm#sceGuSendList">sceGuSendList</a>()を呼び出して描画する（描画キューに加える）方法です。この方法を取る場合は、<a href="../graphics/libgu-Reference-Japanese.htm#sceGuStart">sceGuStart</a>()で作成を開始するときにSCEGU_LISTまたはSCEGU_CALLまたはSCEGU_LIST_CACHEDまたはSCEGU_CALL_CACHEDモードを指定してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>描画の中断・割り込み</b><br>
</a>
</h3>
<div style="margin-left:50px;"><a href="../graphics/libgu-Reference-Japanese.htm#sceGuBreak">sceGuBreak</a>()を使用すると、ディスプレイリストの途中で描画を中断したり、一時停止したりすることができます。<br>一時停止した場合、他のディスプレイリストを割り込ませて描画することができます。割り込み描画の際には、<a href="../graphics/libgu-Reference-Japanese.htm#sceGuSendList">sceGuSendList</a>()でSCEGU_QUEUE_HEADモードを指定して、ディスプレイリストを描画キューの先頭に追加するとよいでしょう。また、コンテキスト退避用の領域を指定すると、割り込み描画の前後で自動的にコンテキストの退避と復帰が行われるようになります。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_3">
<h3>
<a href="#Heading3_2"> 2. </a>3 
<!-- hp1 --><b>同期処理</b><br>
</a>
</h3>
<div style="margin-left:50px;">Graphics Engineでのディスプレイリスト描画処理とアプリケーションの処理とを同期させる方法がいくつかあります。<br>まずひとつは、<a href="../graphics/libgu-Reference-Japanese.htm#sceGuSync">sceGuSync</a>()を使用してブロッキングまたはポーリングする方法です。描画の終了 / シグナル割り込み / 読み出し終了 / ディスプレイリスト転送の終了 / <a href="../graphics/libgu-Reference-Japanese.htm#sceGuSendList">sceGuSendList</a>()で転送したディスプレイリストの描画終了を検出することができます。<br>もうひとつは、割り込みコールバックを使用する方法です。ディスプレイリストの描画終了時に発生するフィニッシュ割り込みと、あらかじめ指定した箇所まで描画処理が進んだときに発生するシグナル割り込みとがあり、それぞれに対するコールバック関数を<a href="../graphics/libgu-Reference-Japanese.htm#sceGuSetCallback">sceGuSetCallback</a>()で登録することができます。<br>シグナル割り込みを発生させる箇所は、ディスプレイリストの作成中に<a href="../graphics/libgu-Reference-Japanese.htm#sceGuSignal">sceGuSignal</a>()を呼び出して指定します。このときに指定するシグナルIDがコールバック関数に引数として渡されるので、コールバック関数は描画処理がどこまで進んだかを判断することができます。フィニッシュ割り込みについても、<a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinishId">sceGuFinishId</a>()を用いてディスプレイリストの作成を終了すればIDが埋め込まれ、コールバック関数に引数として渡されるようになります。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>ディスプレイリストの作成について</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>ディスプレイリスト作成モード</b><br>
</a>
</h3>
<div style="margin-left:50px;"><a href="../graphics/libgu-Reference-Japanese.htm#sceGuStart">sceGuStart</a>()でディスプレイリストの作成を開始するときに、作成モードとして3とおりを選択することができます。<br>モードとしてSCEGU_IMMEDIATEを指定した場合は、ディスプレイリストを作成しながら同時にGraphics Engineに転送して描画するモードとなります。<br>SCEGU_LISTまたはSCEGU_LIST_CACHEDを指定した場合は、ディスプレイリストを作成するだけで描画は行われません。<a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinish">sceGuFinish</a>()で作成終了した後で、あらためて<a href="../graphics/libgu-Reference-Japanese.htm#sceGuSendList">sceGuSendList</a>()を使用して描画します。<br>SCEGU_CALLまたはSCEGU_CALL_CACHEDを指定した場合も、ディスプレイリストを作成するだけで描画は行われません。この場合、サブルーチンとして呼び出すタイプのディスプレイリストが作成されます。<a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinish">sceGuFinish</a>()で作成終了した後、親となる他のディスプレイリストから呼び出すように設定してください（<a href="../graphics/libgu-Reference-Japanese.htm#sceGuCallList">sceGuCallList</a>()を使用します）。親のディスプレイリストを描画するときに、呼び出されて描画されることになります。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>ディスプレイリストの呼び出し</b><br>
</a>
</h3>
<div style="margin-left:50px;">ちょうどサブルーチンのように、ディスプレイリストから他のディスプレイリストを呼び出すことができます。<br>作成手順としては、呼び出される側のディスプレイリストを先に作成してください。このとき、<a href="../graphics/libgu-Reference-Japanese.htm#sceGuStart">sceGuStart</a>()でモードとしてSCEGU_CALLまたはSCEGU_CALL_CACHEDを指定しておきます。続いて、呼び出す側のディスプレイリストを作成する際に<a href="../graphics/libgu-Reference-Japanese.htm#sceGuCallList">sceGuCallList</a>()を用いて、ディスプレイリストを呼び出すコマンドを挿入します。<br>ディスプレイリストの呼び出しは通常は2段までです。<a href="../graphics/libgu-Reference-Japanese.htm#sceGuCallMode">sceGuCallMode</a>()で設定することによって、最大32段までの呼び出しができるようになります。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_3">
<h3>
<a href="#Heading3_3"> 3. </a>3 
<!-- hp1 --><b>頂点データの構成</b><br>
</a>
</h3>
<div style="margin-left:50px;">Graphics Engineには、3D描画を行う通常モードと2D描画を行うスルーモードと2とおりの描画モードがあり、それぞれの描画モードにおいて多様な形式の頂点データを効率よく扱えるしくみになっています。<br>通常モードの頂点データは、以下の5つのパラメータで構成されます。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>順序</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>パラメータ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>データフォーマット</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ボーンウェイト &nbsp;&nbsp;<br>&nbsp;&nbsp;(Wa, Wb, Wc, Wd, We, Wf, Wg, Wh)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし8bit / 符号なし16bit / 単精度浮動小数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;テクスチャ座標 (S, T)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし8bit / 符号なし16bit / 単精度浮動小数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;カラー (C)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;5:6:5:0 / 5:5:5:1 / 4:4:4:4 / 8:8:8:8&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;法線ベクトル(Nx, Ny, Nz)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき8bit / 符号つき16bit / 単精度浮動小数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;5&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;モデル座標(Xm, Ym, Zm)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき8bit / 符号つき16bit / 単精度浮動小数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">パラメータの順序は上記のとおりでなければなりませんが、モデル座標以外のパラメータは省略できます。ボーンウェイトは0個から8個の間で任意の個数を持たせることができます。また、各パラメータのデータフォーマットは上記の中からいずれかを選ぶことができます。<br><br>一方、スルーモードの頂点データは以下の3つのパラメータで構成されます。<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>順序</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>パラメータ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>データフォーマット</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;テクセル座標(U,V)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号なし16bit&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;カラー (C)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;5:6:5:0 / 5:5:5:1 / 4:4:4:4 / 8:8:8:8&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;描画座標(Xd,Yd,Zd)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;符号つき16bit(Zdのみ符号なし)/ 単精度浮動小数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">パラメータの順序は上記のとおりでなければなりませんが、描画座標以外のパラメータは省略でき、カラーのデータフォーマットは上記の中からいずれかを選ぶことができます。<br><br>libguのプリミティブ描画関数では、このように多様な頂点データの形式を、引数<i>type</i>で指定するしくみになっています。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_4">
<h3>
<a href="#Heading3_3"> 3. </a>4 
<!-- hp1 --><b>頂点配列とインデックス配列</b><br>
</a>
</h3>
<div style="margin-left:50px;">プリミティブを描画する際には複数の頂点データを配列として与えます。通常は頂点配列の先頭から順に描画されますが、頂点の順序を一時的に変更したり頂点データを共用したりするために、描画順序を表すインデックス配列を別に与えることができます。<br>たとえば図のように、8つの頂点（A〜H）を表す頂点データの配列があるとします。ここで図の右に示したインデックス配列を指定すると、頂点配列自体を並べ替えなくとも、A - E - B - F - C - G - D - H - A - Eの順序で連続3角形を描画して4面の壁を描くことができます。<br></div>

<div align=center>
<p>
<img src="gif/libgu-Overview-Japanese002.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 2　頂点配列とインデックス配列</b><br>
</div>
<br>
<div style="margin-left:50px;">インデックス配列を使用すると描画速度が低下しますので、頂点配列を並べ替える処理とのトレードオフを考慮して使用してください。<br></div>

<!-- sce_hd3 -->
<a name="Heading3_4">
<h2>
 4 <!-- hp --><b>注意事項</b>
<hr noshade>
</h2>


<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_4_1"><h4>
(1)&nbsp;<b>libguコンテキスト</b><br></h4>
</a></div>
<div style="margin-left:67px;">libguでは、ディスプレイリストの作成モードごとに別々のコンテキストを保持しているため、モードが異なる場合には多重にディスプレイリストを作成することが可能です。たとえば、SCEGU_IMMEDIATEモードでディスプレイリストを作成、描画している間に、SCEGU_LISTまたはSCEGU_CALLモードで別のディスプレイリストを作成するといったことができます。モードの切り替えは<a href="../graphics/libgu-Reference-Japanese.htm#sceGuStart">sceGuStart</a>()関数および<a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinish">sceGuFinish</a>() / <a href="../graphics/libgu-Reference-Japanese.htm#sceGuFinishId">sceGuFinishId</a>()関数によっておこなわれ、各モードは1回ずつまでネスト動作することができます。<br><br>一方、ディスプレイリストのモードごとに別々のコンテキストを内部で保持しているため、コンテキストを変更する関数を呼び出す場合には、それぞれのモードで呼び出す必要があります。<br>コンテキストの内容を変更する関数には以下のものがあります。<br><br></div>
<div style="margin-left:70px;"><ul>
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuScissor">sceGuScissor</a>()
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuEnable">sceGuEnable</a>(SCEGU_SCISSOR_TEST)
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDisable">sceGuDisable</a>(SCEGU_SCISSOR_TEST)
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuEnable">sceGuEnable</a>(SCEGU_COLOR_DOUBLE)
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDisable">sceGuDisable</a>(SCEGU_COLOR_DOUBLE)
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDepthRange">sceGuDepthRange</a>()
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDepthOffset">sceGuDepthOffset</a>()
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuSpriteMode">sceGuSpriteMode</a>()
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuClearColor">sceGuClearColor</a>()
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuClearStencil">sceGuClearStencil</a>()
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuClearDepth">sceGuClearDepth</a>()
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuTexMode">sceGuTexMode</a>()
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuTexFunc">sceGuTexFunc</a>()
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuTexMapMode">sceGuTexMapMode</a>()
<li> <a href="../graphics/libgu-Reference-Japanese.htm#sceGuTexProjMapMode">sceGuTexProjMapMode</a>()
</ul></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_4_2"><h4>
(2)&nbsp;<b>Ｄキャッシュのライトバック</b><br></h4>
</a></div>
<div style="margin-left:67px;">Graphics EngineはALLEGREX CPUとは独立したバスマスタとして動作するため、ALLEGREX CPUのDキャッシュとメモリの間でDキャッシュのコヒーレンシが確保されていない状態では正しい描画が行えません。ディスプレイリスト、頂点バッファ、頂点インデックス、テクスチャ、CLUTなどはGraphics Engineから直接アクセスされますので、必要な場合には明示的にからALLEGREXのDキャッシュをライトバックしてから描画を開始してください。<br>SCEGU_IMMEDIATEモードでは、ディスプレイリストをアンキャッシュアクセスで生成していますが、<a href="../graphics/libgu-Reference-Japanese.htm#sceGuDrawArray">sceGuDrawArray</a>(), <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDrawArrayN">sceGuDrawArrayN</a>(), <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDrawBezier">sceGuDrawBezier</a>(), <a href="../graphics/libgu-Reference-Japanese.htm#sceGuDrawSpline">sceGuDrawSpline</a>()などの描画関数から参照される頂点バッファ,インデックスなどは特に注意が必要です。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
