<html lang="en">
<head>
<title>libgmq_Model-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libgmq_model Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetMemoryManager"></a><a name="sceGmqModelSetMemoryManager2"></a><a name="sceGmqModelSetMemoryManager3"></a>
<a name="sceGmqModelSetMemoryManager / sceGmqModelSetMemoryManager2 / sceGmqModelSetMemoryManager3"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetMemoryManager / sceGmqModelSetMemoryManager2 / sceGmqModelSetMemoryManager3<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set memory management functions<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelSetMemoryManager</b>(
	void *(<i>*malloc</i>)( size_t ),
	void (<i>*free</i>)( void * ),
	size_t <i>aligned_size</i>,
	bool <i>delay_release</i>
) ;
void <b>sceGmqModelSetMemoryManager2</b>(
	void *(<i>*malloc</i>)( size_t ),
	void (<i>*free</i>)( void * ),
	size_t <i>aligned_size</i>,
	bool <i>delay_release</i>
) ;
void <b>sceGmqModelSetMemoryManager3</b>(
	void *(<i>*malloc</i>)( size_t ),
	void (<i>*free</i>)( void * ),
	size_t <i>aligned_size</i>,
	bool <i>delay_release</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>malloc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory allocation function&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>free</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory free function&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>aligned_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alignment&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>delay_release</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Delayed release flag&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets functions for allocating and freeing memory for a model.<br><br>sceGmqModelSetMemoryManager() sets normal memory management functions. Structures and arrays are stored in this memory. If it is omitted, the normal <i>malloc</i> and <i>free</i> are used.<br>sceGmqModelSetMemoryManager2() sets DMA memory management functions. Packet and vertex data are stored in this memory. If omitted, the normal memory management functions are used.<br>sceGmqModelSetMemoryManager3() sets eDRAM memory management functions. Packet and vertex data are stored in this memory. If omitted, eDRAM memory is not allocated.<br><br>For <i>aligned_size</i>, specify the minimum alignment guaranteed by the memory management functions. This enables unnecessary padding to be suppressed. If the minimum alignment is unknown, specify 1.<br><br>For <i>delay_release</i>, specify whether or not to perform delayed release. If delayed release is enabled, the release of memory will be delayed until <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCleanMemory">sceGmqModelCleanMemory</a>() is called. This feature is used to release DMA memory or eDRAM memory at a safe time.<br>If this feature is unnecessary, specify false.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetMemoryManager( malloc, free, 16, true ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetMemoryMutex"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetMemoryMutex<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set memory mutex functions<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelSetMemoryMutex</b>(
	void (*<i>lock</i>)(),
	void (*<i>unlock</i>)()
) ;
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>lock</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Lock function (0 if not needed)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>unlock</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Unlock function (0 if not needed)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets functions for protecting the memory manager from access by multiple threads.<br>For<i> lock</i> and <i>unlock</i>, specify functions for locking and unlocking a mutex created by the application. These functions are called immediately before and after allocating and freeing memory. If 0 is specified for these functions, nothing is called.<br>Note that the functions in this library are basically not thread safe. This function is valid only in limited situations. For details, refer to the separate document entitled "libgmq Model Overview."<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetMemoryMutex( lock, unlock ) ;
</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetPictureManager"></a><a name="sceGmqModelSetPictureManager2"></a>
<a name="sceGmqModelSetPictureManager / sceGmqModelSetPictureManager2"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetPictureManager / sceGmqModelSetPictureManager2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set picture data management functions<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelSetPictureManager</b>(
	SceGiqPicture *(*<i>get</i>)( const char *<i>filename</i> ),
	void (*<i>set</i>)( const char *<i>filename</i>, SceGiqPicture *<i>picture</i> )
) ;
void <b>sceGmqModelSetPictureManager2</b>(
	SceGiqPicture *(*<i>get</i>)( int <i>type</i> ),
	void (*<i>set</i>)( int <i>type</i>, SceGiqPicture *<i>picture</i> )
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>get</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture retrieval function&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>set</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture registration function&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These functions set functions for retrieving and registering picture data by filename. <br><br>By using these functions, when the texture of a model contains picture data, the registration function will be called. When the texture of a model does not contain picture data, the retrieval function will be called, and external picture data can be linked to the texture. If these functions are omitted, these operations will not be performed.<br><br>sceGmqModelSetPictureManager2() sets functions for retrieving and registering picture data by mapping type. If a texture has not been set to a layer of the model, the retrieval function is called, and the layer can be drawn using external picture data. Currently, there are no circumstances under which the registration function will be called.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>extern SceGiqPicture *get_picture( const char *filename ) ;

sceGmqModelSetPictureManager( get_picture, 0 ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelTouchMemory"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelTouchMemory<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Update delayed release<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelTouchMemory</b>(
	int <i>frame</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function updates the frame number for the delayed release of memory.<br><br>This value is recorded in the memory management area where delayed release is to be performed. Memory that is waiting for delayed release will finally be released when <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCleanMemory">sceGmqModelCleanMemory</a>() is called with a value greater than or equal to the <i>frame</i> value specified here.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelTouchMemory( ++ touch_frame ) ;
</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelCleanMemory"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelCleanMemory<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Execute delayed release<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelCleanMemory</b>(
	int <i>frame</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function executes the delayed release of memory.<br><br>Of the memory awaiting delayed release, only memory with an acceptable frame number is actually released. This number is stored in the memory management area, and it must be equal to or less than the <i>frame</i> value specified here.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelCleanMemory( ++ clean_frame ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetMemoryInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetMemoryInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get memory information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void *<b>sceGmqModelGetMemoryInfo</b>(
	void *<i>addr</i>,
	uint32_t *<i>size</i>,
	uint32_t *<i>type</i>,
	uint32_t *<i>ref</i>,
	void **<i>next</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>addr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Location for storing size of memory area&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>type</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Location for storing type of memory area&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ref</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Location for storing reference count of memory area&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>next</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Location for storing starting address of next memory area&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the starting address of the memory area that contains the specified address (or 0 if none exists).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets information for the memory area that contains the specified address. If 0 is specified as the address, information about the first memory area is obtained. If 0 is specified as the storage destination address in any other argument, the relevant information is not returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>void *addr = 0, *area ;
uint32_t size, type, ref ;
while ( ( area = sceGmqModelGetMemoryInfo( addr, &amp;size, &amp;type, &amp;ref, &amp;addr ) ) != 0 ) {
	printf( "%p %d : %d %d\n", area, size, type, ref ) ;
	if ( addr == 0 ) break ;
}
</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelCreate"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelCreate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create model structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqModel *<b>sceGmqModelCreate</b>(
	void
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns a model structure (or 0 if unsuccessful).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates a structure for managing a model.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqModel *model = sceGmqModelCreate() ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelDelete">sceGmqModelDelete</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelDuplicate">sceGmqModelDuplicate</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelDelete"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelDelete<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete model structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelDelete</b>(
	SceGmqModel <i>*model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes a structure for managing a model.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelDelete( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCreate">sceGmqModelCreate</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelDuplicate">sceGmqModelDuplicate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelDuplicate"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelDuplicate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Duplicate model structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqModel *<b>sceGmqModelDuplicate</b>(
	SceGmqModel <i>*model</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplication method (one of the constants below)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_REFERENCE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Increment reference count only&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_STRUCTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Always duplicate into new structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_AUTOMATIC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicate if time data is included&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;By-type flag (logical sum of the flags below)&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_BONE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates bone&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_PART&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates part&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_MESH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates mesh&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_ARRAYS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates vertex data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_MATERIAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates material&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_LAYER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates layer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates texture&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_MOTION&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates motion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_FCURVE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates function curve&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_PICTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates picture&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_IMAGE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates image&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DUPLICATE_PALETTE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplicates palette&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns a new model structure (or 0 if unsuccessful).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function duplicates a structure for managing a model.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqModel *model2 = sceGmqModelDuplicate( model, SCEGMQ_DUPLICATE_AUTOMATIC ) ;

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Sub-block structures are duplicated by using SCEGMQ_DUPLICATE_AUTOMATIC. <br>To force duplication, specify the by-type flags.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCreate">sceGmqModelCreate</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelDelete">sceGmqModelDelete</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelLoadFile"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelLoadFile<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Load model file<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGmqModelLoadFile</b>(
	SceGmqModel *<i>model</i>,
	const void <i>*buf</i>,
	int <i>size</i>,
	int <i>index</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address of file image&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of file image (0 if unknown)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model number in the file&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns true if successful, or false is unsuccessful.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function loads a model file.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelLoadFile( model, buf, size, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUnload">sceGmqModelUnload</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelUnload"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelUnload<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Unload model data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelUnload</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function unloads model data.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelUnload() ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelLoadFile">sceGmqModelLoadFile</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelLoadCache"></a><a name="sceGmqModelLoadCacheEx"></a>
<a name="sceGmqModelLoadCache / sceGmqModelLoadCacheEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelLoadCache / sceGmqModelLoadCacheEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Load cache data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGmqModelLoadCache</b>(
	SceGmqModel *<i>model</i>
) ;
bool<b> sceGmqModelLoadCacheEx</b>(
	SceGmqModel *<i>model</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cache flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags.</i><br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_CACHE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;All cache data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_CACHE_PRIMITIVE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Primitive packets&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_CACHE_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture packets&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_CACHE_VERTEX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_CACHE_PIXEL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns true if successful, or false is unsuccessful.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function loads cache data. <br>It creates and saves data in order to speed up performance. <br><br>sceGmqModelLoadCacheEx() is a more detailed function. Its behavior can be specified in detail using <i>flags</i>. However, in the current version, packets are automatically loaded and the SCEGMQ_CACHE_PRIMITIVE and SCEGMQ_CACHE_TEXTURE flags are not referenced.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelLoadCache( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUnloadCache">sceGmqModelUnloadCache</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelUnloadCache"></a><a name="sceGmqModelUnloadCacheEx"></a>
<a name="sceGmqModelUnloadCache / sceGmqModelUnloadCacheEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelUnloadCache / sceGmqModelUnloadCacheEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Unload cache data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelUnloadCache</b>(
	SceGmqModel *<i>model</i>
) ;
void <b>sceGmqModelUnloadCacheEx</b>(
	SceGmqModel <i>*model</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cache flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags.</i><br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_CACHE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;All cache data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_CACHE_PRIMITIVE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Primitive packets&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_CACHE_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture packets&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_CACHE_VERTEX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_CACHE_PIXEL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pixel data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function unloads cache data.<br>It discards data in order to speed up performance.<br><br>sceGmqModelUnloadCacheEx() is a more detailed function. You can specify a detailed operation by using <i>flags</i>. However, in the current version, packets are automatically unloaded and the SCEGMQ_CACHE_PRIMITIVE and SCEGMQ_CACHE_TEXTURE flags are not referenced.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelUnloadCache() ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelLoadCache">sceGmqModelLoadCache</a>()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelAnimate"></a><a name="sceGmqModelAnimateEx"></a>
<a name="sceGmqModelAnimate / sceGmqModelAnimateEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelAnimate / sceGmqModelAnimateEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Perform animation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelAnimate</b>(
	SceGmqModel *<i>model</i>,
	float <i>step</i> 
) ;
void <b>sceGmqModelAnimateEx</b>(
	SceGmqModel <i>*model</i>,
	float <i>step</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>step</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Step time (units: seconds)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Animation flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags.</i><br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ANIMATE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform all animation&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ANIMATE_FRAME&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Update the current frame&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ANIMATE_PARAM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Update the parameter values&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function advances the time of the selected motion by the specified step time, and performs animation control on the parameters for bones, materials, etc. <br><br>sceGmqModelAnimateEx() is a more detailed function. Its behavior can be specified in detail using <i>flags</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelAnimate( model, 1.0f / 60.0f ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelUpdate"></a><a name="sceGmqModelUpdateEx"></a>
<a name="sceGmqModelUpdate / sceGmqModelUpdateEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelUpdate / sceGmqModelUpdateEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Perform update<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelUpdate</b>(
	SceGmqModel <i>*model</i>
) ;
void sce<b>GmqModelUpdateEx</b>(
	SceGmqModel <i>*model</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Update flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags.</i><br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_UPDATE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform all processing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_UPDATE_PARAM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Update parameter value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_UPDATE_MATRIX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Update bone matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function updates bone matrices, etc.<br><br>sceGmqModelUpdateEx() is a more detailed function. Its behavior can be specified in detail using <i>flags</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelUpdate( model ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelDraw"></a><a name="sceGmqModelDrawEx"></a>
<a name="sceGmqModelDraw / sceGmqModelDrawEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelDraw / sceGmqModelDrawEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Perform drawing<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>size_t <b>sceGmqModelDraw</b>(
	SceGmqModel <i>*model</i>
) ;
size_t <b>sceGmqModelDrawEx</b>(
	SceGmqModel <i>*model</i>,
	unsigned int **<i>pkt</i>,
	unsigned int <i>*size</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pkt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to packet pointer (input/output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to packet size  (input/output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Drawing flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags.</i><br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform all processing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_PRIMITIVE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Draw primitive&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_TRANSFORM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Set transform&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_MATERIAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Set material&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Set texture&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_OPAQUE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Draw opaque bone&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_TRANSP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Draw semi-transparent bone&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns packet size that was used (or 0 if unsuccessful).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates packets for drawing a model in the libgu packet buffer. The corresponding GE commands are as follows.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>GE Commands</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_PRIMITIVE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;IADR VADR VTYPE&nbsp;&nbsp;<br>&nbsp;&nbsp;PRIM BEZIER SPLINE BBOX&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_TRANSFORM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;WORLDN WORLDD BONE BONED&nbsp;&nbsp;<br>&nbsp;&nbsp;WEIGHT DIVIDE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_MATERIAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;MAC MAA MDC MSC MK&nbsp;&nbsp;<br>&nbsp;&nbsp;BLEND FIXA FIXB LMODE&nbsp;&nbsp;<br>&nbsp;&nbsp;TU TV SU SV TMAP TSHADE&nbsp;&nbsp;<br>&nbsp;&nbsp;TGENN TGEND&nbsp;&nbsp;<br>&nbsp;&nbsp;LTE FGE TME BCE&nbsp;&nbsp;<br>&nbsp;&nbsp;ZTE ZMSK ATE PMSK2&nbsp;&nbsp;<br>&nbsp;&nbsp;CULL NREV PFACE&nbsp;&nbsp;<br>&nbsp;&nbsp;TFUNC TFILTER TWRAP&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TMODE TPF TBP TBW TSIZE&nbsp;&nbsp;<br>&nbsp;&nbsp;CLUT CBP CBW CLOAD FLUSH&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">sceGmqModelDrawEx() is a more detailed function. It creates packets in the packet buffer specified by <i>*pkt</i> and <i>*size</i>. If it is successful, the next packet address will be stored in <i>*pkt</i>, and the remaining packet size will be stored in <i>*size</i>. If it fails, <i>*pkt</i> and <i>*size</i> will not change. When <i>pkt</i> is 0, no packet will be created and the essential required packet size will be returned.<br><br>Also, the function's behavior can be specified in detail using <i>flags</i>. In addition to being able to optionally output GE commands, you can also optionally draw opaque bones or semi-transparent bones.<br><br>In addition, sceGmqModelDrawEx() does not update the libgum matrix stack. To set the view matrix and projection matrix, call <a href="../graphics/libgum-Reference-English.htm#sceGumUpdateMatrix">sceGumUpdateMatrix</a>() beforehand.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelDraw( model ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelDrawList"></a><a name="sceGmqModelDrawListEx"></a>
<a name="sceGmqModelDrawList / sceGmqModelDrawListEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelDrawList / sceGmqModelDrawListEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Perform list drawing<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>size_t <b>sceGmqModelDrawList</b>(
	SceGmqModel <i>*model</i>,
	int <i>flags</i>,
	const short <i>*idxs</i>,
	int <i>num</i>,
	size_t <i>stride</i>
) ;
size_t <b>sceGmqModelDrawListEx</b>(
	SceGmqModel <i>*model</i>,
	unsigned int **<i>pkt</i>,
	unsigned int <i>*size</i>,
	int <i>flags</i>,
	const short <i>*idxs</i>,
	int <i>num</i>,
	size_t <i>stride</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pkt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to packet pointer (input/output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to packet size  (input/output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Drawing flags&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idxs</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone number array&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone number count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>stride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Array stride&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags.</i><br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform all processing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_PRIMITIVE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Draw primitive&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_TRANSFORM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Set transform&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_MATERIAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Set material&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Set texture&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_OPAQUE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Draw opaque bone&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DRAW_TRANSP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Draw semi-transparent bone&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns packet size that was used (or 0 if unsuccessful).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function draws a model by specifying the bone drawing order.<br><br>If a bone number array is specified for <i>idxs</i>, bones are drawn in the specified order. If 0 is specified for <i>idxs</i>, this function performs the same processing as <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelDraw">sceGmqModelDraw</a>().<br>You can also specify the array stride (array spacing) for <i>stride</i>. If 0 is specified for <i>stride</i>, contiguous addresses are accessed.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>short idxs[] = { 0, 1, 2, 3 } ;
sceGmqModelDrawList( model, SCEGMQ_DRAW_ALL, idxs, 4, 0 ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSort"></a><a name="sceGmqModelSortList"></a>
<a name="sceGmqModelSort / sceGmqModelSortList"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSort / sceGmqModelSortList<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Sort drawing order<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelSort</b>(
	SceGmqModel <i>*model</i>,
	int <i>flags</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*axis</i>
) ;
int <b>sceGmqModelSortList</b>(
	SceGmqModel <i>*model</i>,
	int <i>flags</i>,
	short <i>*idxs</i>,
	int <i>num</i>,
	size_t <i>stride</i>,
	float <i>*zs</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*axis</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sort flags&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idxs</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone number array (output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum bone number count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>stride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Array stride&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>zs</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Z value array (output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>axis</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Axis vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags.</i><br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_SORT_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform all processing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_SORT_OPAQUE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sort opaque bones&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_SORT_TRANSP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sort semi-transparent bones&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns number of bones that were sorted (or 0 if unsuccessful).<br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sorts the bone drawing order.<br><br>For <i>axis</i>, specify the Z row of the view matrix. The inner product of this vector and the bone position is used to calculate the Z value, which is used as a key to sort in ascending order.<br><br>sceGmqModelSortList() is a function for outputting the sorted results into an array without changing the drawing order.<br>Bone numbers are output to the array specified by <i>idxs</i>. Z values are output to the array specified by <i>zs</i>. If 0 is specified for <i>idxs</i>, this function performs the same processing as sceGmqModelSort(). If 0 is specified for <i>zs</i>, no Z values are output.<br>You can also specify the array stride (array spacing) for <i>stride</i>. If 0 is specified for <i>stride</i>, contiguous addresses are accessed.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> axis ;
sceGmqModelSort( model, SCEGMQ_SORT_TRANSP, &amp;axis ) ;;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelEnumList"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelEnumList<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Enumerate drawing order<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelEnumList</b>(
	SceGmqModel <i>*model</i>,
	int <i>flags</i>,
	short <i>*idxs</i>,
	int <i>num</i>,
	size_t <i>stride</i>,
	float <i>*zs</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*axis</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sort flags&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idxs</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone number array (output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum bone number count&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>stride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Array stride&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>zs</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Z value array (output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>axis</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Axis vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags.</i><br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_SORT_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform all processing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_SORT_OPAQUE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sort opaque bones&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_SORT_TRANSP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sort semi-transparent bones&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns number of bones that were enumerated (or 0 if unsuccessful).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function enumerates the bone drawing order.<br><br>Bone numbers are output to the array specified by <i>idxs</i>. Z values are output to the array specified by <i>zs</i>. If 0 is specified for <i>idxs</i> or <i>zs</i>, those values are not output.<br>You can also specify the array stride (array spacing) for <i>stride</i>. If 0 is specified for <i>stride</i>, contiguous addresses are accessed.<br>For <i>axis</i>, specify the Z row of the view matrix. The inner product of this vector and the bone position is used to calculate the Z value.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> axis ;
short idxs[ 4 ] ;
float zs[ 4 ] ;
sceGmqModelEnumList( model, SCEGMQ_SORT_TRANSP, idxs, 4, 0, zs, &amp;axis ) ;;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelImportMotions"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelImportMotions<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Import external motions<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGmqModelImportMotions</b>(
	SceGmqModel *<i>model</i>,
	int <i>idx</i>,
	SceGmqModel *<i>model2</i>,
	int <i>idx2</i>,
	int <i>num</i>,
	int <i>flags</i>
) ;
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure (duplication destination)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion number (duplication destination)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure (duplication source)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx2</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion number (duplication source)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of duplicated motions&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplication method (same as for <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelDuplicate">sceGmqModelDuplicate</a>())&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns true if successful, or false is unsuccessful.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function imports external motions.<br><br>The <i>idx2</i> th motion of <i>model2</i> is duplicated in the <i>idx</i> th motion of <i>model</i>. In addition, only the number of consecutive motions specified by <i>num</i> are duplicated.<br><br>Although the processing performed by this function is similar to that which is performed by consecutively calling sceGmqModelSetMotion(), it differs in that it also performs animation target name resolution when sub-block names are loaded in advance using <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelLoadNames">sceGmqModelLoadNames</a>().<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelImportMotions( model, 0, model2, 0, 1,
				SCEGMQ_DUPLICATE_AUTOMATIC ) ;
</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelImportPictures"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelImportPictures<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Import external pictures<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGmqModelImportPictures</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns true if successful, or false is unsuccessful.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function imports external pictures.<br><br>If a texture exists for which no picture has been set, call the picture data management function specified by <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetPictureManager">sceGmqModelSetPictureManager</a>() to get a picture and set it for that texture.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelImportPictures( model ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelReconfigure"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelReconfigure<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reconfigure model<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelReconfigure</b>(
	SceGmqModel <i>*model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function reconfigures the internal flags of the model.<br><br>Since the model saves internal flags for optimization, if a specific parameter is changed, the internal flags must be properly reconfigured by calling this function.<br>The following changes require reconfiguration of internal flags.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Target</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Change</b>&nbsp;</td>
</tr>
<tr>
<td rowspan= 3  valign="top">&nbsp;Bone&nbsp;</td>
<td valign="top">&nbsp;Change&nbsp;of&nbsp;parent&nbsp;bone&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;Change&nbsp;of&nbsp;drawing&nbsp;part&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;Change&nbsp;of&nbsp;Z&nbsp;sort&nbsp;mode&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;Material&nbsp;</td>
<td valign="top">&nbsp;Enabling/disabling&nbsp;of&nbsp;cropping&nbsp;</td>
</tr>
<tr>
<td rowspan= 2  valign="top">&nbsp;Texture&nbsp;</td>
<td valign="top">&nbsp;Enabling/disabling&nbsp;of&nbsp;cropping&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;Registration&nbsp;of&nbsp;external&nbsp;picture&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;Motion&nbsp;</td>
<td valign="top">&nbsp;Registration&nbsp;of&nbsp;external&nbsp;motion&nbsp;</td>
</tr></table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelReconfigure( model ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelNormalize"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelNormalize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Normalize model<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelNormalize</b>(
	SceGmqModel <i>*model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns true if successful, or false is unsuccessful.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function normalizes model data.<br><br>Although normalization is performed on loading so that model data can be displayed correctly, if a specific parameter is changed, normalization must be explicitly performed by calling this function.<br>The following changes require normalization of model data.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Target</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Change</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Motion&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Registration of external motion&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelNormalize( model ) ;

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetWorldMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetWorldMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set world matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqModelSetWorldMatrix</b>(
	SceGmqModel *<i>model</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>world</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>world</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;World matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the world matrix representing the location of the origin of the model.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetWorldMatrix( model, &amp;world ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetWorldMatrix">sceGmqModelGetWorldMatrix</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetWorldMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetWorldMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get world matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceGmqModelGetWorldMatrix</b>(
	SceGmqModel <i>*model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the world matrix.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the world matrix representing the location of the origin of the model.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *world = sceGmqModelGetWorldMatrix( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetWorldMatrix">sceGmqModelSetWorldMatrix</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetCurrentMotion"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetCurrentMotion<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Select motion<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelSetCurrentMotion</b>(
	SceGmqModel <i>*model</i>,
	int <i>index</i>,
	float <i>delay</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion number (-1 to halt)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>delay</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Delay time (units: seconds)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function selects the motion to be played. For the specified motion, the weight will be 1.0, and the frame will be 0.0. All other motion weights will be 0.0. For <i>delay</i>, specify the time period for changing the weights.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetCurrentMotion( model, 0, 0.5f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetCurrentMotion">sceGmqModelGetCurrentMotion</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetCurrentMotion"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetCurrentMotion<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get motion number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetCurrentMotion</b>(
	SceGmqModel <i>*model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the motion number (or -1 if halted).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the motion number that is being played.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int motion = sceGmqModelGetCurrentMotion( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetCurrentMotion">sceGmqModelSetCurrentMotion</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetColor"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetColor<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelSetColor</b>(
	SceGmqModel *<i>model</i>,
	unsigned int <i>color</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>color</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the color. All material colors are multiplied by this value.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetColor( model, 0xffffffff ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetColor">sceGmqModelGetColor</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetColor"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetColor<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGmqModelGetColor</b>(
	SceGmqModel <i>*model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the color. <br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int color = sceGmqModelGetColor( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetColor">sceGmqModelSetColor</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetSubdivision"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetSubdivision<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set subdivision<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqModelSetSubdivision</b>(
	SceGmqModel <i>*model</i>,
	float <i>subdiv</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>subdiv</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Subdivision&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the subdivision. All mesh patch subdivisions are multiplied by this value.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetSubdivision ( model, 1.0f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetSubdivision">sceGmqModelGetSubdivision</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetSubdivision"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetSubdivision<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get subdivision<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>float <b>sceGmqModelGetSubdivision</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the subdivision.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the subdivision. <br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float subdiv = sceGmqModelGetSubdivision( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetSubdivision">sceGmqModelSetSubdivision</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetGlobalTexGen"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetGlobalTexGen<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set texture coordinate generation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqModelSetGlobalTexGen</b>(
	int <i>mode</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>matrix</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture coordinate generation mode (0 if disabled)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>matrix</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture coordinate generation matrix (0 if disabled)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets texture coordinate generation. If any mode or matrix is enabled, texture coordinate generation is applied. At this time, the texture coordinate generation that was set in the model data is ignored.<br><br>For the argument <i>mode</i> , specify an input vector and coordinate system using logical OR.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Input Vector</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_GEN_TEXCOORD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture coordinates&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_GEN_NORMAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal vector&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_GEN_VERTEX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex vector&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Coordinate System</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_GEN_LOCAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Local coordinates&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_GEN_MODEL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model coordinates&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_GEN_WORLD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;World coordinates&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_GEN_MODEL_ROT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model rotation&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_GEN_WORLD_ROT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;World rotation&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">This setting is applied to all model drawing.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetGlobalTexGen( SCEGMQ_GEN_WORLD | SCEGMQ_GEN_VERTEX, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetGlobalTexGen">sceGmqModelGetGlobalTexGen</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetGlobalTexGen"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetGlobalTexGen<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture coordinate generation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelGetGlobalTexGen</b>(
	int *<i>mode</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> **<i>matrix</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address for storing texture coordinate generation mode&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>matrix</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address for storing pointer to texture coordinate generation matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets texture coordinate generation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int mode ;
<a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *matrix ;
sceGmqModelGetGlobalTexGen( &amp;mode, &amp;matrix ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetGlobalTexGen">sceGmqModelSetGlobalTexGen</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetClippingMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetClippingMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set clipping matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqModelSetClippingMatrix</b>(
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>matrix</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<i>margin</i>
) ;
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>matrix</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Clipping matrix (PROJECTION x VIEW)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>margin</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Clipping margin (CLIP / SCREEN)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the clipping matrix. The clipping matrix is used to perform software clipping.<br><br>For <i>matrix</i>, specify the product of the projection matrix and the view matrix. For <i>margin</i>, specify the ratio of the clipping volume to the screen volume. When software clipping is enabled, if a triangle is placed so that it spans both the inside of the clipping volume and the outside of the screen volume, it will be clipped.<br><br>Note that to enable software clipping, SCEGMQ_OPTION_SOFTWARE_CLIPPING must be set in <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetOptionFlags">sceGmqModelSetOptionFlags</a>().<br><br>Currently, the following restictions apply.<br></div>
</ul>
<div style="margin-left:60px;"><ul>
<li> Decisions are made using bounding points<br>(Compile with --rebuild_bounding_points on.)
<li> Skinning, morphing, and 16-bit vertex color are not supported
<li> Semi-transparent objects cannot be used
</ul></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> matrix ;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> margin ;
<a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuMatrix4Mul">sceVfpuMatrix4Mul</a>( &amp;matrix, &amp;projection, &amp;view ) ;
<a href="../fpu-vfpu/libvfpu-Reference-English.htm#sceVfpuVector4Set">sceVfpuVector4Set</a>( &amp;margin, 480.0f / 4000.0f, 272.0f / 4000.0f, 1, 1 ) ;
sceGmqModelSetClippingMatrix( &amp;matrix, &amp;margin ) ;

<a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetOptionFlags">sceGmqModelSetOptionFlags</a>( model, SCEGMQ_OPTION_SOFTWARE_CLIPPING, ~0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetClippingMatrix">sceGmqModelGetClippingMatrix</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetOptionFlags">sceGmqModelSetOptionFlags</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetClippingMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetClippingMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get clipping matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelGetClippingMatrix</b>(
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> **<i>matrix</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> **<i>margin</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>matrix</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address for storing clipping matrix pointer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>margin</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address for storing clipping margin pointer&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the clipping matrix.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *matrix ;
<a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *margin ;
sceGmqModelGetClippingMatrix( &amp;matrix, &amp;margin ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetClippingMatrix">sceGmqModelSetClippingMatrix</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetEnableBits"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetEnableBits<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set enable bits<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqModelSetEnableBits</b>(
	SceGmqModel <i>*model</i>,
	int <i>mask</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets enable bits. It defines the default state when the model is drawn.<br><br>For the arguments <i>mask</i> and <i>value</i>, specify the logical OR of the following flags.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;All&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_DEFAULT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Default value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_LIGHTING&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Lighting&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_FOG&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Fog&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_CULL_FACE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Backface culling&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_DEPTH_TEST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Depth test&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_DEPTH_MASK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Depth write&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_ALPHA_TEST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alpha test&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_ALPHA_MASK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alpha write&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_FLIP_FACE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flip face&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_FLIP_NORMAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flip normal&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_MODULATE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture function ( MODULATE )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_RGBA&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture function ( RGBA )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_BILINEAR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture filter ( Bi-Linear )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_TRILINEAR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture filter ( Tri-Linear )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_WRAP_U&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture wrapping ( U )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_WRAP_V&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture wrapping ( V )&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">By default, all functionality except FLIP_FACE and FLIP_NORMAL is enabled.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetEnableBits( model, SCEGMQ_ENABLE_LIGHTING, 0 ) ;

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">To disable textures, use this function in conjunction with the enable mask.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetEnableBits">sceGmqModelGetEnableBits</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetEnableBits"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetEnableBits<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get enable bits<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetEnableBits</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the enable bits.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the enable bits.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int enable = sceGmqModelGetEnableBits( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetEnableBits">sceGmqModelSetEnableBits</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetEnableMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetEnableMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set enable mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelSetEnableMask</b>(
	SceGmqModel <i>*model</i>,
	int <i>mask</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the enable mask. Materials cannot be used to change the enable bits.<br><br>For the arguments <i>mask</i> and <i>value</i>, specify the logical OR of the following flags.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;All&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_LIGHTING&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Lighting&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_FOG&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Fog&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_CULL_FACE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Rear surface culling&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_DEPTH_TEST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Depth test&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_DEPTH_MASK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Depth writing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_ALPHA_TEST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alpha test&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_ALPHA_MASK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alpha writing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_FLIP_FACE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flip face&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_FLIP_NORMAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flip normal&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_MODULATE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture function ( MODULATE )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_RGBA&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture function ( RGBA )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_BILINEAR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture filter ( Bi-Linear )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_TRILINEAR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture filter ( Tri-Linear )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_WRAP_U&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture wrapping ( U )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_ENABLE_TEX_WRAP_V&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture wrapping ( V )&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">By default, all functions can be changed.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetEnableMask( model, SCEGMQ_ENABLE_LIGHTING, -1 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetEnableMask">sceGmqModelGetEnableMask</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetEnableMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetEnableMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get enable mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetEnableMask</b>(
	SceGmqModel <i>*model</i> 
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the enable mask.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the enable mask.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int enable = sceGmqModelGetEnableMask( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetEnableMask">sceGmqModelSetEnableMask</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetOutputMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetOutputMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set output mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelSetOutputMask</b>(
	SceGmqModel <i>*model</i>,
	int <i>mask</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the output mask. By setting the corresponding bit to 0, the output of specific GE commands can be suppressed. <br><br>For the arguments <i>mask</i> and <i>value</i>, specify the logical OR of the following flags.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>GE Commands</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;All&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_DEFAULT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Default value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_TRANSFORM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;WORLDN WORLDD&nbsp;&nbsp;<br>&nbsp;&nbsp;BONE BONED&nbsp;&nbsp;<br>&nbsp;&nbsp;WEIGHT DIVIDE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_MATERIAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;MAC MAA MDC MSC MK&nbsp;&nbsp;<br>&nbsp;&nbsp;BLEND FIXA FIXB LMODE&nbsp;&nbsp;<br>&nbsp;&nbsp;TU TV SU SV TMAP TSHADE&nbsp;&nbsp;<br>&nbsp;&nbsp;TGENN TGEND&nbsp;&nbsp;<br>&nbsp;&nbsp;LTE FGE TME BCE&nbsp;&nbsp;<br>&nbsp;&nbsp;ZTE ZMSK ATE PMSK2&nbsp;&nbsp;<br>&nbsp;&nbsp;CULL NREV PFACE&nbsp;&nbsp;<br>&nbsp;&nbsp;TFUNC TFILTER TWRAP&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TMODE TPF TBP TBW TSIZE&nbsp;&nbsp;<br>&nbsp;&nbsp;CLUT CBP CBW CLOAD FLUSH&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_BITS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LTE FGE TME BCE&nbsp;&nbsp;<br>&nbsp;&nbsp;TE ZMSK ATE PMSK2&nbsp;&nbsp;<br>&nbsp;&nbsp;CULL NREV PFACE&nbsp;&nbsp;<br>&nbsp;&nbsp;TFUNC TFILTER TWRAP&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_WORLD_MATRIX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;WORLDN WORLDD&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_BONE_MATRIX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;BONEN BONED&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_MORPH_WEIGHT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;WEIGHTn&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_SUBDIVISION&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DIVIDE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_MATERIAL_COLOR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;MAC MAA MDC MSC MK&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_BLEND_FUNC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;BLEND FIXA FIXB&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_LIGHT_MODEL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LMODE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_TEX_CROP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TU TV SU SV&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_TEX_GEN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TMAP TSHADE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_TEX_MATRIX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TGENN TGEND&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_LIGHTING&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LTE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_FOG&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;FGE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_TEXTURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TME&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_CULL_FACE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;BCE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_DEPTH_TEST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ZTE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_DEPTH_MASK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ZMSK&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_ALPHA_TEST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ATE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_ALPHA_MASK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;PMSK2&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_FLIP_FACE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;CULL&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_FLIP_NORMAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NREV PFACE&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_TEX_FUNC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TFUNC&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_TEX_FILTER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TFILTER&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OUTPUT_ENABLE_TEX_WRAP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TWRAP&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">By default, all GE commands can be output.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetOutputMask( model, SCEGMQ_OUTPUT_ENABLE_TEXTURE, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetOutputMask">sceGmqModelGetOutputMask</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetOutputMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetOutputMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get output mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetOutputMask</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the output mask.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the output mask.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int output = sceGmqModelGetOutputMask( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetOutputMask">sceGmqModelSetOutputMask</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetOptionFlags"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetOptionFlags<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set option flags<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelSetOptionFlags</b>(
	SceGmqModel *<i>model</i>,
	int <i>mask</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the option flags for controlling specific operations. <br><br>For the arguments <i>mask</i> and <i>value</i>, specify the logical OR of the following flags.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Flag</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Processing</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OPTION_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform all processing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OPTION_DEFAULT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Default value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OPTION_MULTIPLY_WORLD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;In matrix calculations, multiply the bone&nbsp;&nbsp;<br>&nbsp;&nbsp;world matrix by the model world matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OPTION_RESTORE_STATE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;After model drawing, set the enable bits, &nbsp;&nbsp;<br>&nbsp;&nbsp;material colors, alpha blend functions, and&nbsp;&nbsp;<br>&nbsp;&nbsp;texture cropping to their default values&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OPTION_SUBFRAME_INTERP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;In animation calculations, perform &nbsp;&nbsp;<br>&nbsp;&nbsp;subframe interpolation for the decimal &nbsp;&nbsp;<br>&nbsp;&nbsp;part&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OPTION_DRAW_PRESET&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;If the preset packet is enabled, automatically use it during packet generation&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OPTION_IMPORT_PICTURES&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Automatically import external pictures during file loading&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_OPTION_SOFTWARE_CLIPPING&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform software clipping&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">By default, all operations except for SCEGMQ_OPTION_SOFTWARE_CLIPPING are enabled.<br><br>If SCEGMQ_OPTION_MULTIPLY_WORLD is disabled, the location relative to the model world matrix is stored in the bone world matrix, and the model world matrix is multipled again during drawing. This is effective in reducing errors when displaying a model with skinning at locations that are far from the origin. It also enables the same model to be drawn at a different location without recalculating the bone world matrix.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetOptionFlags( model, SCEGMQ_OPTION_MULTIPLY_WORLD, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetOptionFlags">sceGmqModelGetOptionFlags</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetOptionFlags"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetOptionFlags<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get option flags<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetOptionFlags</b>(
	SceGmqModel <i>*model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the option flags.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the option flags.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int option = sceGmqModelGetOptionFlags( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetOptionFlags">sceGmqModelSetOptionFlags</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetMeshType"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetMeshType<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set mesh type<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqModelSetMeshType</b>(
	SceGmqModel <i>*model</i>,
	int <i>type</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>type</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh type&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the mesh type. During drawing, this value is compared with the mesh block value and only relevant meshes are drawn.<br><br>For the argument <i>type</i>, specify the following flags using a logical OR.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Definition</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_MESH_TYPE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;All&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_MESH_TYPE_DEFAULT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Default value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_MESH_TYPE_FACE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face mesh&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_MESH_TYPE_EDGE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Edge mesh&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The default is SCEGMQ_MESH_TYPE_FACE.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetMeshType( model, SCEGMQ_MESH_TYPE_FACE ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetMeshType">sceGmqModelGetMeshType</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetMeshType"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetMeshType<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get mesh type<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetMeshType</b>(
	SceGmqModel <i>*model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the mesh type.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int type = sceGmqModelGetMeshType( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetMeshType">sceGmqModelSetMeshType</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetMeshLevel"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetMeshLevel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set mesh level<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqModelSetMeshLevel</b>(
	SceGmqModel <i>*model</i>,
	int <i>level</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh level ( 0 to 15 )&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the mesh level. During drawing, this value is compared with the mesh block value and only relevant meshes are drawn.<br><br>For the argument <i>level</i> , specify a value from 0 to 15. The default is 0.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelSetMeshLevel( model, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetMeshLevel">sceGmqModelGetMeshLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetMeshLevel"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetMeshLevel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get mesh level<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetMeshLevel</b>(
	SceGmqModel <i>*model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the mesh level.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int level = sceGmqModelGetMeshLevel( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetMeshLevel">sceGmqModelSetMeshLevel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelHasAnimation"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelHasAnimation<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Determine whether model has animation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGmqModelHasAnimation</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns true if the model has animation, or false if it does not.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function determines whether or not a model has animation. <br>It returns true if there is motion or if the texture has animation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>if ( !sceGmqModelHasAnimation( model ) ) return ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetBoundingBox"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetBoundingBox<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get bounding box<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceGmqModelGetBoundingBox</b>(
	SceGmqModel <i>*model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the bounding box (or 0 if none exists).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the bounding box (minimum and maximum coordinates).<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *box = sceGmqModelGetBoundingBox( model ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetVertexOffset"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetVertexOffset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get vertex offset<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceGmqModelGetVertexOffset</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the vertex offset (or 0 if none exists).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the vertex coordinate offset.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *offset = sceGmqModelGetVertexOffset( model ) ;

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is mainly used when vertex data is stored as integers.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetTexcoordOffset"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetTexcoordOffset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture coordinate offset<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFRect">ScePspFRect</a> *<b>sceGmqModelGetTexcoordOffset</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the vertex offset (or 0 if none exists).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the texture coordinate offset.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFRect">ScePspFRect</a> *offset = sceGmqModelGetTexcoordOffset( model ) ;

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is mainly used when vertex data is stored as integers.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetBoundingPoints"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetBoundingPoints<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get bounding point array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceGmqModelGetBoundingPoints</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the bounding point array (or 0 if none exists).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the bounding point array. The vertices in the model are contained within the convex closure of this point array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *pts = sceGmqModelGetBoundingPoints( model ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetBoundingPointsCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetBoundingPointsCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get bounding point count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetBoundingPointsCount</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the bounding point count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the bounding point count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_pts = sceGmqModelGetBoundingPointsCount( model ) ;

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetXXXCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetXXXCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get sub-block count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetBoneCount</b>(
	SceGmqModel *<i>model</i>
) ;
int <b>sceGmqModelGetPartCount</b>(
	SceGmqModel <i>*model</i>
) ;
int<b> sceGmqModelGetMaterialCount</b>(
	SceGmqModel <i>*model</i>
) ;
int <b>sceGmqModelGetTextureCount</b>(
	SceGmqModel *<i>model</i>
) ;
int <b>sceGmqModelGetMotionCount</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the sub-block count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function retrieves the model sub-block count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int count = sceGmqModelGetBoneCount( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXX">sceGmqModelGetXXX</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetXXXCount">sceGmqModelSetXXXCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetXXX">sceGmqModelSetXXX</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetXXX"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetXXX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get sub-block<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqBone *<b>sceGmqModelGetBone</b>(
	SceGmqModel *<i>model</i>,
	int <i>index</i>
) ;
SceGmqPart *<b>sceGmqModelGetPart</b>(
	SceGmqModel *<i>model</i>,
	int <i>index</i>
) ;
SceGmqMaterial *<b>sceGmqModelGetMaterial</b>(
	SceGmqModel *<i>model</i>,
	int <i>index</i>
) ;
SceGmqTexture *<b>sceGmqModelGetTexture</b>(
	SceGmqModel *<i>model</i>,
	int <i>index</i>
) ;
SceGmqMotion *<b>sceGmqModelGetMotion</b>(
	SceGmqModel *<i>model</i>,
	int <i>index</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sub-block number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns a sub-block (or 0 if none exists).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a sub-block of a model.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqBone *bone = sceGmqModelGetBone ( model, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXXCount">sceGmqModelGetXXXCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetXXXCount">sceGmqModelSetXXXCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetXXX">sceGmqModelSetXXX</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetXXXCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetXXXCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set sub-block count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGmqModelSetBoneCount</b>(
	SceGmqModel *<i>model</i>,
	int <i>count</i>
) ;
bool <b>sceGmqModelSetPartCount</b>(
	SceGmqModel *<i>model</i>,
	int <i>count</i>
) ;
bool <b>sceGmqModelSetMaterialCount</b>(
	SceGmqModel *<i>model</i>,
	int <i>count</i>
) ;
bool <b>sceGmqModelSetTextureCount</b>(
	SceGmqModel <i>*model</i>,
	int <i>count</i>
) ;
bool <b>sceGmqModelSetMotionCount</b>(
	SceGmqModel *<i>model</i>,
	int <i>count</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>count</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sub-block count&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns true if successful, or false is unsuccessful.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the model sub-block count. When the sub-block count decreases, sub-blocks are deleted. When the sub-block count increases, empty sub-blocks are registered.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>if ( !sceGmqModelSetBoneCount( model, count ) ) return ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXXCount">sceGmqModelGetXXXCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXX">sceGmqModelGetXXX</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetXXX">sceGmqModelSetXXX</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelSetXXX"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelSetXXX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Replace sub-block<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqBone *<b>sceGmqModelSetBone</b>(
	SceGmqModel *<i>model</i>,
	int <i>index</i>,
	SceGmqBone *<i>block</i>,
	int <i>flags</i>
) ;
SceGmqPart *<b>sceGmqModelSetPart</b>(
	SceGmqModel *<i>model</i>,
	int <i>index</i>,
	SceGmqPart *<i>block</i>,
	int <i>flags</i>
) ;
SceGmqMaterial *<b>sceGmqModelSetMaterial</b>(
	SceGmqModel *<i>model</i>,
	int <i>index</i>,
	SceGmqMaterial *<i>block</i>,
	int <i>flags</i>
) ;
SceGmqTexture *<b>sceGmqModelSetTexture</b>(
	SceGmqModel *<i>model</i>,
	int <i>index</i>,
	SceGmqTexture *<i>block</i>,
	int <i>flags</i>
) ;
SceGmqMotion *<b>sceGmqModelSetMotion</b>(
	SceGmqModel *<i>model</i>,
	int <i>index</i>,
	SceGmqMotion *<i>block</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sub-block number&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>block</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Block to duplicate&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Duplication method (same as for <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelDuplicate">sceGmqModelDuplicate</a>())&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns a new sub-block (or 0 if unsuccessful).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes a model sub-block and replaces it with a duplicate of the specified block.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqBone *bone = sceGmqModelGetBone ( model1, 0 ) ;
sceGmqModelSetBone( model, 0, bone, SCEGMQ_DUPLICATE_AUTOMATIC ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXXCount">sceGmqModelGetXXXCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXX">sceGmqModelGetXXX</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetXXXCount">sceGmqModelSetXXXCount</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelLoadPreset"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelLoadPreset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Load preset packet<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGmqModelLoadPreset</b>(
	SceGmqModel *<i>model</i>,
	int <i>n_frames</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n_frames</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of frames&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns true if successful, or false is unsuccessful.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function loads a preset packet.<br><br>A packet representing the current state of the model is created and saved in advance. This preset packet can be automatically used for drawing to reduce the CPU load during packet generation.<br>However, changes in parameters other than the matrix will no longer be reflected in the display.<br><br>When the preset packet is created with the number of frames set to 1, drawing is performed using packet copying.<br>In that case, the preset packet can be shared between model duplicates.<br><br>When the preset packet is created with the number of frames set to 2, drawing is performed using a packet call.<br>In that case, a preset packet must be created for each model duplicate.<br><br>To suppress the automatic use of a preset packet, disable the option flag for the preset packet.<br><br>Note that a preset packet contains call commands for external primitive packets and texture packets, and since their buffers are not directly protected by reference counters, primitives and textures and their caches are not released while a preset packet is in use.<br><br>Also, when drawing using a packet call, ensure that the model structure itself is duplicated. Specify SCEGMQ_DUPLICATE_AUTOMATIC | SCEGMQ_DUPLICATE_MODEL.<br>Be particularly careful when duplicating a model that does not have animation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelLoadPreset( model, 1 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUnloadPreset">sceGmqModelUnloadPreset</a>()<br><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelSetOptionFlags">sceGmqModelSetOptionFlags</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetOptionFlags">sceGmqModelGetOptionFlags</a>()<br><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetPresetPacketSize">sceGmqModelGetPresetPacketSize</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetPresetFrameCount">sceGmqModelGetPresetFrameCount</a>()<br><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUpdatePreset">sceGmqModelUpdatePreset</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCallPreset">sceGmqModelCallPreset</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCopyPreset">sceGmqModelCopyPreset</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelUnloadPreset"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelUnloadPreset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Unload preset packet<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelUnloadPreset</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function unloads a preset packet.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelUnloadPreset( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelLoadPreset">sceGmqModelLoadPreset</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetPresetFrameCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetPresetFrameCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get preset packet frame count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetPresetFrameCount</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the preset packet frame count (or 0 if none has been loaded).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the present packet frame count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int count = sceGmqModelGetPresetFrameCount( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelLoadPreset">sceGmqModelLoadPreset</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUnloadPreset">sceGmqModelUnloadPreset</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetPresetPacketSize"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetPresetPacketSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get preset packet size<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>size_t <b>sceGmqModelGetPresetPacketSize</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the preset packet size (or 0 if none has been loaded).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the preset packet size.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>size_t size = sceGmqModelGetPresetPacketSize( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelLoadPreset">sceGmqModelLoadPreset</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUnloadPreset">sceGmqModelUnloadPreset</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelUpdatePreset"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelUpdatePreset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Update preset packet<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelUpdatePreset</b> (
	SceGmqModel *<i>model</i>,
	int <i>frame</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function updates the specified frame for the preset packet.<br><br>The updated frame can be drawn using <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCallPreset">sceGmqModelCallPreset</a>() or <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCopyPreset">sceGmqModelCopyPreset</a>(). When using <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCallPreset">sceGmqModelCallPreset</a>(), be careful not to update the frame being drawn by the GPU.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelUpdatePreset ( model, frame ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCallPreset">sceGmqModelCallPreset</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelCopyPreset">sceGmqModelCopyPreset</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelCallPreset"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelCallPreset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Call preset packet<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>size_t <b>sceGmqModelCallPreset</b> (
	SceGmqModel *<i>model</i>,
	int <i>frame</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>Model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>Frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the packet size that was used (or 0 if processing failed).<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function draws the model by calling the updated frame of the preset packet.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelCallPreset( model, frame ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetPresetFrameCount">sceGmqModelGetPresetFrameCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUpdatePreset">sceGmqModelUpdatePreset</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelCopyPreset"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelCopyPreset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Copy preset packet<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>size_t <b>sceGmqModelCopyPreset</b>(
	SceGmqModel *<i>model</i>,
	int <i>frame</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns packet size that was used (or 0 if unsuccessful).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function draws the model by copying the updated frame of the preset packet.<br><br>If -1 is specified for <i>frame</i>, it draws the model by copying the first frame of the preset packet to the display list and then updating that display list.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelCopyPreset( model, -1 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUpdatePreset">sceGmqModelUpdatePreset</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelLoadEdges"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelLoadEdges<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Load edge information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGmqModelLoadEdges</b>(
	SceGmqModel *<i>model</i>,
	const void *<i>buf</i>,
	int <i>size</i>,
	int <i>index</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address of file image&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of file image (0 if unknown)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model number in file&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns true if successful, or false if unsuccessful.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function loads edge information from a model file.<br></div>

<!-- sce_hd6 -->
<a name="Heading6_6_1">
<div style="margin-left:50px;"><h4><b>Note</b><br><br></h4></a></div>
<div style="margin-left:70px;">A new converter planned for a later release is required in order to use this feature.<br></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelLoadEdges( model, buf, size, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUnloadEdges">sceGmqModelUnloadEdges</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelDrawEdges">sceGmqModelDrawEdges</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelUnloadEdges"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelUnloadEdges<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Unload edge information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelUnloadEdges</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function unloads edge information from model data.<br></div>

<!-- sce_hd6 -->
<a name="Heading6_6_2">
<div style="margin-left:50px;"><h4><b>Note</b><br><br></h4></a></div>
<div style="margin-left:70px;">A new converter planned for a later release is required to use this feature.<br></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelUnloadEdges( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelLoadEdges">sceGmqModelLoadEdges</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelDrawEdges">sceGmqModelDrawEdges</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelDrawEdges"></a><a name="sceGmqModelDrawEdgesEx"></a>
<a name="sceGmqModelDrawEdges / sceGmqModelDrawEdgesEx"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelDrawEdges / sceGmqModelDrawEdgesEx<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Edge drawing processing<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>size_t <b>sceGmqModelDrawEdges</b>(
	SceGmqModel *<i>model</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>view</i>,
	int <i>flags</i>
) ;
size_t <b>sceGmqModelDrawEdgesEx</b>(
	SceGmqModel *<i>model</i>,
	unsigned int **<i>pkt</i>,
	unsigned int *<i>size</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>view</i>,
	int <i>flags</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pkt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to packet pointer (input/output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to packet size (input/output)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>view</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;View matrix&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Edge flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The following macros can be specified for <i>flags</i>.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_EDGE_ALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Perform all processing&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_EDGE_VERGE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Draw edges with no adjoining plane&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_EDGE_RIDGE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Draw edges that are ridge lines&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_EDGE_HARD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Draw edges with discontinuous normal lines&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_EDGE_SEAM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Draw edges with discontinuous UV&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns packet size that was used (or 0 if unsuccessful).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function draws the edges of the model.<br><br>If a view matrix is specified for <i>view</i>, the front and back of each surface are determined. If flags are specified for <i>flags</i>, the relevant edges are drawn with lines according to the front/back determination result.<br>Since no render state related to material or texture is output, the render state should be set in advance when necessary.<br></div>

<!-- sce_hd6 -->
<a name="Heading6_6_3">
<div style="margin-left:50px;"><h4><b>Note</b><br><br></h4></a></div>
<div style="margin-left:70px;">A new converter planned for a later release is required to use this feature.<br></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> view ;
sceGmqModelDrawEdges( model, &amp;view, SCEGMQ_EDGE_ALL ) ;
</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelLoadNames"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelLoadNames<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Load sub-block names<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGmqModelLoadNames</b>(
	SceGmqModel *<i>model</i>,
	const void *<i>buf</i>,
	int <i>size</i>,
	int <i>index</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address of file image&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of file image (0 if unknown)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model number in the file&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns true if successful, or false is unsuccessful.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function loads sub-block names from a model file.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelLoadNames( model, buf, size, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUnloadNames">sceGmqModelUnloadNames</a>()<br><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXXNameCount">sceGmqModelGetXXXNameCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXXName">sceGmqModelGetXXXName</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelUnloadNames"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelUnloadNames<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Unload sub-block names<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqModelUnloadNames</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function unloads sub-block names from model data.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqModelUnloadNames( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelLoadNames">sceGmqModelLoadNames</a>()<br><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXXNameCount">sceGmqModelGetXXXNameCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXXName">sceGmqModelGetXXXName</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetXXXNameCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetXXXNameCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of sub-block names<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqModelGetBoneNameCount</b>(
	SceGmqModel *<i>model</i>
) ;
int <b>sceGmqModelGetPartNameCount</b>(
	SceGmqModel *<i>model</i>
) ;
int<b> sceGmqModelGetMaterialNameCount</b>(
	SceGmqModel *<i>model</i>
) ;
int <b>sceGmqModelGetTextureNameCount</b>(
	SceGmqModel *<i>model</i>
) ;
int <b>sceGmqModelGetMotionNameCount</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the number of sub-block names.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of sub-block names for a model.<br><br>Since sub-block names are read independently of the model data, this value may differ from the number of sub-blocks.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int count = sceGmqModelGetBoneNameCount( model ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelLoadNames">sceGmqModelLoadNames</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUnloadNames">sceGmqModelUnloadNames</a>(),<br><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXXName">sceGmqModelGetXXXName</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqModelGetXXXName"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqModelGetXXXName<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get sub-block name<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const char *<b>sceGmqModelGetBoneName</b> (
	SceGmqModel *<i>model</i>,
	int <i>index</i>
) ;
const char *<b>sceGmqModelGetPartName</b> (
	SceGmqModel *<i>model</i>,
	int <i>index</i>
) ;
const char *<b>sceGmqModelGetMaterialName</b> (
	SceGmqModel *<i>model</i>,
	int <i>index</i>
) ;
const char *<b>sceGmqModelGetTextureName</b> (
	SceGmqModel *<i>model</i>,
	int <i>index</i>
) ;
const char *<b>sceGmqModelGetMotionName</b> (
	SceGmqModel *<i>model</i>,
	int <i>index</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sub-block number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the sub-block name (or NULL if none exists).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets a sub-block name of a model.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const char *name = sceGmqModelGetBoneName ( model, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelLoadNames">sceGmqModelLoadNames</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelUnloadNames">sceGmqModelUnloadNames</a>(),<br></div>
        <div style="margin-left:50px;"><pre><font size=3><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqModelGetXXXNameCount">sceGmqModelGetXXXNameCount</a>()
</font></pre></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetInitialState"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetInitialState<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get initial state<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqBone *<b>sceGmqBoneGetInitialState</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the intial state.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the initial state immediately after loading.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqBone *initial = sceGmqBoneGetInitialState( bone ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetParentBone"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetParentBone<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set parent bone number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetParentBone</b>(
	SceGmqBone *<i>bone</i>,
	int <i>idx</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Parent bone number (-1 if it does not exist)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the parent bone number.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetParentBone( bone, idx ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetParentBone">sceGmqBoneGetParentBone</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetParentBone"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetParentBone<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get parent bone number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqBoneGetParentBone</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the parent bone number (-1 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the parent bone number.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int idx = sceGmqBoneGetParentBone( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetParentBone">sceGmqBoneSetParentBone</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetVisibility"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetVisibility<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set visibility<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetVisibility</b>(
	SceGmqBone *<i>bone</i>,
	int v<i>isibility</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>visibility</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Visibility&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the visibility.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetVisibility( bone, visibility ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetVisibility">sceGmqBoneGetVisibility</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetVisibility"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetVisibility<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get visibility<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqBoneGetVisibility</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the visibility.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the visibility.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int visibility = sceGmqBoneGetVisibility( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetVisibility">sceGmqBoneSetVisibility</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetDrawParts"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetDrawParts<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set drawing parts array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetDrawParts</b>(
	SceGmqBone *<i>bone</i>,
	const int <i>*parts</i>,
	int <i>n_parts</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>parts</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Drawing parts array&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n_parts</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of drawing parts&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the drawing parts array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetDrawParts( bone, parts, n_parts ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetDrawPartsCount">sceGmqBoneGetDrawPartsCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetDrawParts">sceGmqBoneGetDrawParts</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetDrawPartsCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetDrawPartsCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of drawing parts<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqBoneGetDrawPartsCount</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Number of drawing parts<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of drawing parts.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_parts = sceGmqBoneGetDrawPartsCount( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetDrawParts">sceGmqBoneGetDrawParts</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetDrawParts">sceGmqBoneSetDrawParts</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetDrawParts"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetDrawParts<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get drawing parts array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const int *<b>sceGmqBoneGetDrawParts</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns drawing parts array (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the drawing parts array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const int *parts = sceGmqBoneGetDrawParts( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetDrawPartsCount">sceGmqBoneGetDrawPartsCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetDrawParts">sceGmqBoneSetDrawParts</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetMorphWeights"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetMorphWeights<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set morphing weight array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetMorphWeights</b>(
	SceGmqBone *<i>bone</i>,
	const float <i>*weights</i>,
	int <i>n_weights</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>weights</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Morphing weight array&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n_weights</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of morphing weights&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the morphing weight array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetMorphWeights( bone, weights, n_weights ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetMorphWeightsCount">sceGmqBoneGetMorphWeightsCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetMorphWeights">sceGmqBoneGetMorphWeights</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetMorphWeightsCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetMorphWeightsCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of morphing weights<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqBoneGetMorphWeightsCount</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the number of morphing weights.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of morphing weights.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_weights = sceGmqBoneGetMorphWeightsCount( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetMorphWeights">sceGmqBoneGetMorphWeights</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetMorphWeights">sceGmqBoneSetMorphWeights</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetMorphWeights"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetMorphWeights<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get morphing weight array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const float *<b>sceGmqBoneGetMorphWeights</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the morphing weight array (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the morphing weight array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const float *weights = sceGmqBoneGetMorphWeights( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetMorphWeightsCount">sceGmqBoneGetMorphWeightsCount</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetMorphWeights">sceGmqBoneSetMorphWeights</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetMorphIndex"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetMorphIndex<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set morphing index<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetMorphIndex</b>(
	SceGmqBone *<i>bone</i>,
	float <i>index</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>index</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Morphing index&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the morphing index.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetMorphIndex( bone, 7.0f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetMorphIndex">sceGmqBoneGetMorphIndex</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetMorphIndex"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetMorphIndex<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get morphing index<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqBoneGetMorphIndex</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the morphing index.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the morphing index.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float index = sceGmqBoneGetMorphIndex( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetMorphIndex">sceGmqBoneSetMorphIndex</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetBlendBonesCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetBlendBonesCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of blending bones<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqBoneGetBlendBonesCount</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the number of blending bones.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of blending bones.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_bones = sceGmqBoneGetBlendBonesCount( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetBlendBones">sceGmqBoneGetBlendBones</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetBlendBones"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetBlendBones<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get blending bone array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const short *<b>sceGmqBoneGetBlendBones</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the blending bone array (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the blending bone array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const short *bones = sceGmqBoneGetBlendBones( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetBlendBonesCount">sceGmqBoneGetBlendBonesCount</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetBlendOffsetsCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetBlendOffsetsCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get number of blending offsets<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqBoneGetBlendOffsetsCount</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the number of blending offsets.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the number of blending offsets.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_offsets = sceGmqBoneGetBlendOffsetsCount( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetBlendOffsets">sceGmqBoneGetBlendOffsets</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetBlendOffsets"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetBlendOffsets<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get blending offset array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceGmqBoneGetBlendOffsets</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the blending offset array (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the blending offset array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *offsets = sceGmqBoneGetBlendOffsets( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetBlendOffsetsCount">sceGmqBoneGetBlendOffsetsCount</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetPivot"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetPivot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set pivot<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetPivot</b>(
	SceGmqBone *<i>bone</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*pivot</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pivot</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pivot&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the pivot.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetPivot( bone, pivot ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetPivot">sceGmqBoneGetPivot</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetPivot"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetPivot<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pivot<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceGmqBoneGetPivot</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the pivot (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the pivot.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *pivot = sceGmqBoneGetPivot( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetPivot">sceGmqBoneSetPivot</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetMultMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetMultMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set multiplication matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetMultMatrix</b>(
	SceGmqBone *<i>bone</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>matrix</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>matrix</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Multiplication matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the multiplication matrix.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetMultMatrix( bone, &amp;matrix ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetMultMatrix">sceGmqBoneGetMultMatrix</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetMultMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetMultMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get multiplication matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceGmqBoneGetMultMatrix</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the multiplication matrix (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the multiplication matrix.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *matrix = sceGmqBoneGetMultMatrix( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetMultMatrix">sceGmqBoneSetMultMatrix</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetTranslate"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetTranslate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set translation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetTranslate</b>(
	SceGmqBone *<i>bone</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*translate</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>translate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Translation&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the translation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetTranslate( bone, translate ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetTranslate">sceGmqBoneGetTranslate</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetTranslate"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetTranslate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get translation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceGmqBoneGetTranslate</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the translation (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the translation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *translate = sceGmqBoneGetTranslate( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetTranslate">sceGmqBoneSetTranslate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetRotate"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetRotate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set rotation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetRotate</b>(
	SceGmqBone *<i>bone</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> <i>*rotate</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rotate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Rotation&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the rotation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetRotate( bone, rotate ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetRotate">sceGmqBoneGetRotate</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetRotate"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetRotate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get rotation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *<b>sceGmqBoneGetRotate</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the rotation (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the rotation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFQuaternion">ScePspFQuaternion</a> *rotate = sceGmqBoneGetRotate( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetRotate">sceGmqBoneSetRotate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetScale"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetScale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set scaling<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetScale</b>(
	SceGmqBone *<i>bone</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*scale</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>scale</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scaling&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the scaling.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetScale( bone, scale ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetScale">sceGmqBoneGetScale</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetScale"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetScale<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get scaling<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceGmqBoneGetScale</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the scaling (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the scaling.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *scale = sceGmqBoneGetScale( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetScale">sceGmqBoneSetScale</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetRotateYXZ"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetRotateYXZ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set YXZRotation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetRotateYXZ</b>(
	SceGmqBone *<i>bone</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*rotate</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rotate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;YXZRotation&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the YXZRotation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetRotateYXZ( bone, rotate ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetRotate">sceGmqBoneSetRotate</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetRotateZYX">sceGmqBoneSetRotateZYX</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetRotateZYX"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetRotateZYX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set ZYXRotation<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetRotateZYX</b>(
	SceGmqBone *<i>bone</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*rotate</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rotate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ZYXRotation&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the ZYXRotation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetRotateZYX( bone, rotate ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetRotate">sceGmqBoneSetRotate</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetRotateYXZ">sceGmqBoneSetRotateYXZ</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetScale2"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetScale2<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set hierarchy scaling<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetScale2</b>(
	SceGmqBone *<i>bone</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*scale</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>scale</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Hierarchy scaling&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the hierarchy scaling.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetScale2( bone, scale ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetScale">sceGmqBoneSetScale</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetScale3">sceGmqBoneSetScale3</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetScale3"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetScale3<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set partition scaling<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetScale3</b>(
	SceGmqBone *<i>bone</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*scale</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>scale</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Partition scaling&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets partition scaling.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetScale3( bone, scale ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetScale">sceGmqBoneSetScale</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetScale2">sceGmqBoneSetScale2</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetWorldMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetWorldMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set world matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqBoneSetWorldMatrix</b>(
	SceGmqBone *<i>bone</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<i>world</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>world</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;World matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the world matrix.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetWorldMatrix( bone, &amp;world ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetWorldMatrix">sceGmqBoneGetWorldMatrix</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetWorldMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetWorldMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get world matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceGmqBoneGetWorldMatrix</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the world matrix.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the world matrix.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *world = sceGmqBoneGetWorldMatrix( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetWorldMatrix">sceGmqBoneSetWorldMatrix</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetColor"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetColor<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqBoneSetColor</b>(
	SceGmqBone *<i>bone</i>,
	unsigned int <i>color</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>color</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetColor( bone, 0xffffffff ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetColor">sceGmqBoneGetColor</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetColor"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetColor<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGmqBoneGetColor</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int color = sceGmqBoneGetColor( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetColor">sceGmqBoneSetColor</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneSetZSortMode"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneSetZSortMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set Z sort mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqBoneSetZSortMode</b>(
	SceGmqBone *<i>bone</i>,
	int <i>mode</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Z sort mode&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the Z sort mode.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqBoneSetZSortMode( bone, 1 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneGetZSortMode">sceGmqBoneGetZSortMode</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqBoneGetZSortMode"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqBoneGetZSortMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get Z sort mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqBoneGetZSortMode</b>(
	SceGmqBone <i>*bone</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bone</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bone structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the Z sort mode.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the Z sort mode.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int mode = sceGmqBoneGetZSortMode( bone ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqBoneSetZSortMode">sceGmqBoneSetZSortMode</a>()<br><br></div>

<!-- sce_hd2 -->
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqPartGetMeshCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqPartGetMeshCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get mesh count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqPartGetMeshCount</b>(
	SceGmqPart <i>*part</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>part</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Part structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the mesh count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the mesh count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_meshes = sceGmqPartGetMeshCount( part ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqPartGetMesh">sceGmqPartGetMesh</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqPartGetMesh"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqPartGetMesh<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get mesh<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqMesh *<b>sceGmqPartGetMesh</b>(
	SceGmqPart <i>*part</i>,
	int <i>idx</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>part</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Part structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the mesh (0 if it does not exist).<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the mesh.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqMesh *mesh = sceGmqPartGetMesh( part, idx ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqPartGetMeshCount">sceGmqPartGetMeshCount</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqPartGetArraysCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqPartGetArraysCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get vertex data count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqPartGetArraysCount</b>(
	SceGmqPart <i>*part</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>part</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Part structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the vertex data count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the vertex data count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_arrays = sceGmqPartGetArraysCount( part ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqPartGetArrays">sceGmqPartGetArrays</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqPartGetArrays"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqPartGetArrays<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get vertex data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqArrays *<b>sceGmqPartGetArrays</b>(
	SceGmqPart <i>*part</i>,
	int <i>idx</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>part</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Part structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the vertex data (0 if it does not exist).<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the vertex data.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqArrays *arrays = sceGmqPartGetArrays( part, idx ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqPartGetArraysCount">sceGmqPartGetArraysCount</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshGetArrays"></a><a name="sceGmqMeshGetActiveArrays"></a>
<a name="sceGmqMeshGetArrays / sceGmqMeshGetActiveArrays"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshGetArrays / sceGmqMeshGetActiveArrays<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get vertex data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqArrays *<b>sceGmqMeshGetArrays</b>(
	SceGmqMesh *<i>mesh</i>
) ;
SceGmqArrays *<b>sceGmqMeshGetActiveArrays</b>(
	SceGmqMesh *<i>mesh</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns vertex data (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets vertex data.<br><br>sceGmqMeshGetActiveArrays() is a function for getting vertex data for cache data.<br>If cache data is loaded, the vertex data for cache data is returned. If no cache data has been loaded, regular vertex data is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqArrays *arrays = sceGmqMeshGetArrays( mesh ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetNext">sceGmqArraysGetNext</a>()<br></div>
<!-- sce_function -->
<!-- hp -->
<div align=right><br></div><br>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshSetMaterial"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshSetMaterial<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set material number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMeshSetMaterial</b>(
	SceGmqMesh *<i>mesh</i>,
	int <i>idx</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material number (-1 if it does not exist)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the material number.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMeshSetMaterial( mesh, idx ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshGetMaterial">sceGmqMeshGetMaterial</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshGetMaterial"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshGetMaterial<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get material number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMeshGetMaterial</b>(
	SceGmqMesh <i>*mesh</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the material number (-1 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the material number.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int idx = sceGmqMeshGetMaterial( mesh ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshSetMaterial">sceGmqMeshSetMaterial</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshSetSubdivision"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshSetSubdivision<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set subdivision<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMeshSetSubdivision</b>(
	SceGmqMesh *<i>mesh</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> <i>*subdiv</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>subdiv</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Subdivision&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the subdivision.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMeshSetSubdivision( mesh, subdiv ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshGetSubdivision">sceGmqMeshGetSubdivision</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshGetSubdivision"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshGetSubdivision<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get subdivision<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *<b>sceGmqMeshGetSubdivision</b>(
	SceGmqMesh <i>*mesh</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the subdivision (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the subdivision.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector4">ScePspFVector4</a> *subdiv = sceGmqMeshGetSubdivision( mesh ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshSetSubdivision">sceGmqMeshSetSubdivision</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshGetBlendSubsetCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshGetBlendSubsetCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get blending selection count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMeshGetBlendSubsetCount</b>(
	SceGmqMesh <i>*mesh</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the blending selection count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the blending selection count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_subset = sceGmqMeshGetBlendSubsetCount( mesh ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshGetBlendSubset">sceGmqMeshGetBlendSubset</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshGetBlendSubset"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshGetBlendSubset<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get blending selection array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const short *<b>sceGmqMeshGetBlendSubset</b>(
	SceGmqMesh <i>*mesh</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns blending selection array (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the blending selection array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const short *subset = sceGmqMeshGetBlendSubset( mesh ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshGetBlendSubsetCount">sceGmqMeshGetBlendSubsetCount</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshGetBoundingPointsCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshGetBoundingPointsCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get bounding point count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMeshGetBoundingPointsCount</b>(
	SceGmqMesh <i>*mesh</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the bounding point count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the bounding point count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_points = sceGmqMeshGetBoundingPointsCount( mesh ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshGetBoundingPoints">sceGmqMeshGetBoundingPoints</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshGetBoundingPoints"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshGetBoundingPoints<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get bounding point array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *<b>sceGmqMeshGetBoundingPoints</b>(
	SceGmqMesh <i>*mesh</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the bounding point array.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the bounding point array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFVector3">ScePspFVector3</a> *points = sceGmqMeshGetBoundingPoints( mesh ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshGetBoundingPointsCount">sceGmqMeshGetBoundingPointsCount</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshSetEnableBits"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshSetEnableBits<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set enable bits<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMeshSetEnableBits</b>(
	SceGmqMesh *<i>mesh</i>,
	int <i>bits</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bits</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the enable bits.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMeshSetEnableBits( mesh, SCEGMQ_ENABLE_LIGHTING, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshGetEnableBits">sceGmqMeshGetEnableBits</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshGetEnableBits"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshGetEnableBits<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get enable bits<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMeshGetEnableBits</b>(
	SceGmqMesh <i>*mesh</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the enable bits.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the enable bits.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int bits = sceGmqMeshGetEnableBits( mesh ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshSetEnableBits">sceGmqMeshSetEnableBits</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshSetEnableMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshSetEnableMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set enable mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMeshSetEnableMask</b>(
	SceGmqMesh *<i>mesh</i>,
	int <i>mask</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the enable mask.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMeshSetEnableMask( mesh, SCEGMQ_ENABLE_LIGHTING, -1 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshGetEnableMask">sceGmqMeshGetEnableMask</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshGetEnableMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshGetEnableMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get enable mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMeshGetEnableMask</b>(
	SceGmqMesh <i>*mesh</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the enable mask.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the enable mask.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int mask = sceGmqMeshGetEnableMask( mesh ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshSetEnableMask">sceGmqMeshSetEnableMask</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshSetMeshMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshSetMeshMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set mesh mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMeshSetMeshMask</b>(
	SceGmqMesh *<i>mesh</i>,
	int <i>mask</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the mesh mask.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMeshSetMeshMask( mesh, SCEGMQ_MESH_TYPE_MASK,
	SCEGMQ_MESH_TYPE_EDGE ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshGetMeshMask">sceGmqMeshGetMeshMask</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMeshGetMeshMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMeshGetMeshMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get mesh mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMeshGetMeshMask</b>(
	SceGmqMesh <i>*mesh</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mesh</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Mesh structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the mesh mask.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the mesh mask.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int mask = sceGmqMeshGetMeshMask( mesh ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshSetMeshMask">sceGmqMeshSetMeshMask</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqArraysGetNext"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqArraysGetNext<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get next vertex data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqArrays *<b>sceGmqArraysGetNext</b>(
	SceGmqArrays <i>*arrays</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arrays</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the next vertex data (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the next vertex data.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqArrays *next = sceGmqArraysGetNext( arrays ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMeshGetArrays">sceGmqMeshGetArrays</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetUsage">sceGmqArraysGetUsage</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqArraysGetUsage"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqArraysGetUsage<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get usage method<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqArraysGetUsage</b>(
	SceGmqArrays <i>*arrays</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arrays</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the usage method.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the usage method.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int usage = sceGmqArraysGetUsage( arrays ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetNext">sceGmqArraysGetNext</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqArraysGetPacket"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqArraysGetPacket<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get packet<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int *<b>sceGmqArraysGetPacket</b>(
	SceGmqArrays <i>*arrays</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arrays</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the packet (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the packet.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int *packet = sceGmqArraysGetPacket( arrays ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetPacketSize">sceGmqArraysGetPacketSize</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqArraysGetPacketSize"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqArraysGetPacketSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get packet size<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqArraysGetPacketSize</b>(
	SceGmqArrays <i>*arrays</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arrays</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the packet size.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the packet size.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int size = sceGmqArraysGetPacketSize( arrays ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetPacket">sceGmqArraysGetPacket</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqArraysGetVertices"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqArraysGetVertices<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get vertex array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void *<b>sceGmqArraysGetVertices</b>(
	SceGmqArrays <i>*arrays</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arrays</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the vertex array (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the vertex array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>void *verts = sceGmqArraysGetVertices( arrays ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetVertexFormat">sceGmqArraysGetVertexFormat</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetVertexStride">sceGmqArraysGetVertexStride</a>()<br><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetVertexCount">sceGmqArraysGetVertexCount</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqArraysGetVertexFormat"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqArraysGetVertexFormat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get vertex format<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqArraysGetVertexFormat</b>(
	SceGmqArrays <i>*arrays</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arrays</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the vertex format.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the vertex format.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int format = sceGmqArraysGetVertexFormat( arrays ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetVertices">sceGmqArraysGetVertices</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqArraysGetVertexStride"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqArraysGetVertexStride<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get vertex stride<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqArraysGetVertexStride</b>(
	SceGmqArrays <i>*arrays</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arrays</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the vertex stride.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the vetex stride.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int stride = sceGmqArraysGetVertexStride( arrays ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetVertices">sceGmqArraysGetVertices</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqArraysGetVertexCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqArraysGetVertexCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get vertex count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqArraysGetVertexCount</b>(
	SceGmqArrays <i>*arrays</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arrays</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Vertex data structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the vetex count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the vertex count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_verts = sceGmqArraysGetVertexCount( arrays ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqArraysGetVertices">sceGmqArraysGetVertices</a>()<br><br></div>

<!-- sce_hd2 -->
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetLayerCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetLayerCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get layer count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMaterialGetLayerCount</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the layer count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the layer count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_layers = sceGmqMaterialGetLayerCount( material ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetLayer">sceGmqMaterialGetLayer</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetLayer"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetLayer<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get layer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqLayer *<b>sceGmqMaterialGetLayer</b>(
	SceGmqMaterial <i>*material</i>,
	int <i>idx</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the layer (0 if it does not exist).<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the layer.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqLayer *layer = sceGmqMaterialGetLayer( material, idx ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetLayerCount">sceGmqMaterialGetLayerCount</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetPassCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetPassCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get drawing pass count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMaterialGetPassCount</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the drawing pass count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the drawing pass count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_pass = sceGmqMaterialGetPassCount( material ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetLayerCount">sceGmqMaterialGetLayerCount</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetInitialState"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetInitialState<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get initial state<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqMaterial *<b>sceGmqMaterialGetInitialState</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the initial state.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the initial state immediately after loading.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqMaterial *initial = sceGmqMaterialGetInitialState( material ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialSetDiffuse"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialSetDiffuse<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set diffuse color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqMaterialSetDiffuse</b>(
	SceGmqMaterial *<i>material</i>,
	unsigned int <i>color</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>color</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Diffuse color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the diffuse color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMaterialSetDiffuse( material, 0xffffffff ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetDiffuse">sceGmqMaterialGetDiffuse</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetDiffuse"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetDiffuse<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get diffuse color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGmqMaterialGetDiffuse</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the diffuse color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the diffuse color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int color = sceGmqMaterialGetDiffuse( material ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialSetDiffuse">sceGmqMaterialSetDiffuse</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialSetSpecular"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialSetSpecular<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set specular color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqMaterialSetSpecular</b>(
	SceGmqMaterial *<i>material</i>,
	unsigned int <i>color</i>,
	float <i>shininess</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>color</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specular color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>shininess</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Shininess&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the specular color and shininess.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMaterialSetSpecular( material, 0xffffffff, 10.0f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetSpecular">sceGmqMaterialGetSpecular</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetShininess">sceGmqMaterialGetShininess</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetSpecular"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetSpecular<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get specular color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGmqMaterialGetSpecular</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the specular color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the specular color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int color = sceGmqMaterialGetSpecular( material ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialSetSpecular">sceGmqMaterialSetSpecular</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetShininess"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetShininess<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get shininess<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>float <b>sceGmqMaterialGetShininess</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the shininess.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the shininess.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float shininess = sceGmqMaterialGetShininess( material ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialSetSpecular">sceGmqMaterialSetSpecular</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialSetEmission"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialSetEmission<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set emission color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqMaterialSetEmission</b>(
	SceGmqMaterial *<i>material</i>,
	unsigned int <i>color</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>color</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Emission color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the emission color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMaterialSetEmission( material, 0xffffffff ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetEmission">sceGmqMaterialGetEmission</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetEmission"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetEmission<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get emission color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGmqMaterialGetEmission</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the emission color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the emission color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int color = sceGmqMaterialGetEmission( material ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialSetEmission">sceGmqMaterialSetEmission</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialSetAmbient"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialSetAmbient<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set ambient color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqMaterialSetAmbient</b>(
	SceGmqMaterial *<i>material</i>,
	unsigned int <i>color</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>color</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ambient color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the ambient color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMaterialSetAmbient( material, 0xffffffff ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetAmbient">sceGmqMaterialGetAmbient</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetAmbient"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetAmbient<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get ambient color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGmqMaterialGetAmbient</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the ambient color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the ambient color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int color = sceGmqMaterialGetAmbient( material ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialSetAmbient">sceGmqMaterialSetAmbient</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialSetReflection"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialSetReflection<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set reflection<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqMaterialSetReflection</b>(
	SceGmqMaterial *<i>material</i>,
	float <i>reflection</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reflection</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reflection&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the reflection.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMaterialSetReflection( material, 1.0f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetReflection">sceGmqMaterialGetReflection</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetReflection"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetReflection<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get reflection<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>float <b>sceGmqMaterialGetReflection</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the reflection.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the reflection.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float reflection = sceGmqMaterialGetReflection( material ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialSetReflection">sceGmqMaterialSetReflection</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialSetLayerTexCrop"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialSetLayerTexCrop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set layer's texture cropping<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMaterialSetLayerTexCrop</b>(
	SceGmqMaterial *<i>material</i>,
	int <i>idx</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFRect">ScePspFRect</a> <i>*crop</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer number&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>crop</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture cropping&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the layer's texture cropping.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMaterialSetLayerTexCrop( material, idx, crop ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetLayerTexCrop">sceGmqMaterialGetLayerTexCrop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetLayerTexCrop"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetLayerTexCrop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get layer's texture cropping<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFRect">ScePspFRect</a> *<b>sceGmqMaterialGetLayerTexCrop</b>(
	SceGmqMaterial *<i>material</i>,
	int <i>idx</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the texture cropping (0 if it does not exist).<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the layer's texture cropping.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFRect">ScePspFRect</a> *crop = sceGmqMaterialGetLayerTexCrop( material, idx ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialSetLayerTexCrop">sceGmqMaterialSetLayerTexCrop</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialSetEnableBits"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialSetEnableBits<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set enable bits<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMaterialSetEnableBits</b>(
	SceGmqMaterial *<i>material</i>,
	int <i>bits</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bits</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the enable bits.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMaterialSetEnableBits( material, SCEGMQ_ENABLE_LIGHTING, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetEnableBits">sceGmqMaterialGetEnableBits</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetEnableBits"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetEnableBits<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get enable bits<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMaterialGetEnableBits</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the enable bits.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the enable bits.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int bits = sceGmqMaterialGetEnableBits( material ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialSetEnableBits">sceGmqMaterialSetEnableBits</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialSetEnableMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialSetEnableMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set enable mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMaterialSetEnableMask</b>(
	SceGmqMaterial *<i>material</i>,
	int <i>mask</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the enable mask.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMaterialSetEnableMask( material, SCEGMQ_ENABLE_LIGHTING, -1 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialGetEnableMask">sceGmqMaterialGetEnableMask</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMaterialGetEnableMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMaterialGetEnableMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get enable mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMaterialGetEnableMask</b>(
	SceGmqMaterial <i>*material</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>material</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the enable mask.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the enable mask.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int mask = sceGmqMaterialGetEnableMask( material ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMaterialSetEnableMask">sceGmqMaterialSetEnableMask</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetInitialState"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetInitialState<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get initial state<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqLayer *<b>sceGmqLayerGetInitialState</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Material structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the intial state.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function returns the intial state immediately after loading.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqLayer *initial = sceGmqLayerGetInitialState( layer ) ;

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetTexture"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetTexture<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set texture number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqLayerSetTexture</b>(
	SceGmqLayer *<i>layer</i>,
	int <i>idx</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture number (-1 if it does not exist)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the texture number.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetTexture( layer, idx ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetTexture">sceGmqLayerGetTexture</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetTexture"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetTexture<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqLayerGetTexture</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the texture number (-1 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the texture number.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int idx = sceGmqLayerGetTexture( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetTexture">sceGmqLayerSetTexture</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetMapType"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetMapType<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set texture map type<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqLayerSetMapType</b>(
	SceGmqLayer *<i>layer</i>,
	int <i>type</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>type</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture map type&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the texture map type.<br>The following values can be specified for the <i>type</i> argument.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_DIFFUSE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Diffuse mapping&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_SPECULAR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specular mapping&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_EMISSION&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Emission mapping&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_AMBIENT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ambient mapping&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_REFLECTION&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reflection mapping&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetMapType( layer, SCEGMQ_DIFFUSE ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetMapType">sceGmqLayerGetMapType</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetMapType"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetMapType<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture map type<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqLayerGetMapType</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Texture map type<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the texture map type.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int type = sceGmqLayerGetMapType( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetMapType">sceGmqLayerSetMapType</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetBlendFunc"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetBlendFunc<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set alpha blending<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqLayerSetBlendFunc</b>(
	SceGmqLayer *<i>layer</i>,
	int <i>mode</i>,
	int <i>src</i>,
	int <i>dst</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Alpha blending mode&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>src</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Source coefficient&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination coefficient&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the alpha blending.<br>The following values can be specified for the <i>mode</i> argument.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_ADD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cs * src + Cd * dst&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_SUB&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cs * src - Cd * dst&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_REV&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cd * dst - Cs * src&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_MIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;min( Cd, Cs )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_MAX&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;max( Cd, Cs )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_DIFF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;abs( Cd - Cs )&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">The following values can be specified for the <i>src</i> and <i>dst</i> arguments.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_ZERO&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_ONE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_SRC_COLOR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cs&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_DST_COLOR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cd&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_SRC_ALPHA&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;As&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_DST_ALPHA&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ad&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_INV_SRC_COLOR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;( 1 - Cs )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_INV_DST_COLOR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;( 1 - Cd )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_INV_SRC_ALPHA&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;( 1 - As )&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_BLEND_INV_DST_ALPHA&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;( 1 - Ad )&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetBlendFunc( layer, SCEGMQ_BLEND_ADD,
    SCEGMQ_BLEND_SRC_ALPHA,
    SCEGMQ_BLEND_INV_SRC_ALPHA ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetBlendFunc">sceGmqLayerGetBlendFunc</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetBlendFunc"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetBlendFunc<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get alpha blending<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const unsigned char *<b>sceGmqLayerGetBlendFunc</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns a pointer to the alpha blending.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the alpha blending.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const unsigned char *blend = sceGmqLayerGetBlendFunc( layer ) ;
int mode = blend[ 0 ] ;
int src = blend[ 1 ] ;
int dst = blend[ 2 ] ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetBlendFunc">sceGmqLayerSetBlendFunc</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetTexCrop"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetTexCrop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set texture cropping<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqLayerSetTexCrop</b>(
	SceGmqLayer *<i>layer</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFRect">ScePspFRect</a> <i>*crop</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>crop</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture cropping&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the texture cropping.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetTexCrop( layer, crop ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetTexCrop">sceGmqLayerGetTexCrop</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetTexCrop"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetTexCrop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture cropping<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFRect">ScePspFRect</a> *<b>sceGmqLayerGetTexCrop</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the texture cropping (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the texture cropping.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFRect">ScePspFRect</a> *crop = sceGmqLayerGetTexCrop( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetTexCrop">sceGmqLayerSetTexCrop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetTexGen"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetTexGen<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set texture coordinate generation mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqLayerSetTexGen</b>(
	SceGmqLayer *<i>layer</i>,
	int <i>mode</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture coordinate generation mode&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the texture coordinate generation mode.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetTexGen( layer, SCEGMQ_GEN_WORLD | SCEGMQ_GEN_VERTEX ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetTexGen">sceGmqLayerGetTexGen</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetTexGen"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetTexGen<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture coordinate generation mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqLayerGetTexGen</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Texture coordinate generation mode<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the texture coordinate generation mode.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int mode = sceGmqLayerGetTexGen( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetTexGen">sceGmqLayerSetTexGen</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetTexMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetTexMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set texture coordinate generation matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqLayerSetTexMatrix</b>(
	SceGmqLayer *<i>layer</i>,
	const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> <i>*matrix</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>matrix</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture coordinate generation matrix&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the texture coordinate generation matrix.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetTexMatrix( layer, matrix ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetTexMatrix">sceGmqLayerGetTexMatrix</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetTexMatrix"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetTexMatrix<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get texture coordinate generation matrix<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *<b>sceGmqLayerGetTexMatrix</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the texture coordinate generation matrix (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the texture coordinate generation matrix.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const <a href="../kernel/Types-Reference-English.htm#ScePspFMatrix4">ScePspFMatrix4</a> *matrix = sceGmqLayerGetTexMatrix( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetTexMatrix">sceGmqLayerSetTexMatrix</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetEnableBits"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetEnableBits<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set enable bits<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqLayerSetEnableBits</b>(
	SceGmqLayer *<i>layer</i>,
	int <i>bits</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bits</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the enable bits.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetEnableBits( layer, SCEGMQ_ENABLE_LIGHTING, 0 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetEnableBits">sceGmqLayerGetEnableBits</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetEnableBits"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetEnableBits<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get enable bits<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqLayerGetEnableBits</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the enable bits.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the enable bits.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int bits = sceGmqLayerGetEnableBits( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetEnableBits">sceGmqLayerSetEnableBits</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetEnableMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetEnableMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set enable mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqLayerSetEnableMask</b>(
	SceGmqLayer *<i>layer</i>,
	int <i>mask</i>,
	int <i>value</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mask</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit mask to set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>value</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bit pattern to set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the enable mask.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetEnableMask( layer, SCEGMQ_ENABLE_LIGHTING, -1 ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetEnableMask">sceGmqLayerGetEnableMask</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetEnableMask"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetEnableMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get enable mask<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqLayerGetEnableMask</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the enable mask.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the enable mask.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int mask = sceGmqLayerGetEnableMask( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetEnableMask">sceGmqLayerSetEnableMask</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetDiffuse"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetDiffuse<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set diffuse color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqLayerSetDiffuse</b>(
	SceGmqLayer *<i>layer</i>,
	unsigned int <i>color</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>color</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Diffuse color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the diffuse color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetDiffuse( layer, 0xffffffff ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetDiffuse">sceGmqLayerGetDiffuse</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetDiffuse"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetDiffuse<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get diffuse color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGmqLayerGetDiffuse</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the diffuse color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the diffuse color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int color = sceGmqLayerGetDiffuse( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetDiffuse">sceGmqLayerSetDiffuse</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetSpecular"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetSpecular<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set specular color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqLayerSetSpecular</b>(
	SceGmqLayer *<i>layer</i>,
	unsigned int <i>color</i>,
	float <i>shininess</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>color</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specular color&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>shininess</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Shininess&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the specular color and shininess.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetSpecular( layer, 0xffffffff, 10.0f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetSpecular">sceGmqLayerGetSpecular</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetShininess">sceGmqLayerGetShininess</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetSpecular"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetSpecular<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get specular color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGmqLayerGetSpecular</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the specular color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the specular color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int color = sceGmqLayerGetSpecular( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetSpecular">sceGmqLayerSetSpecular</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetShininess"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetShininess<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get shininess<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>float <b>sceGmqLayerGetShininess</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the shininess.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the shininess.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float shininess = sceGmqLayerGetShininess( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetSpecular">sceGmqLayerSetSpecular</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetEmission"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetEmission<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set emission color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqLayerSetEmission</b>(
	SceGmqLayer *<i>layer</i>,
	unsigned int <i>color</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>color</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Emission color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the emission color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetEmission( layer, 0xffffffff ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetEmission">sceGmqLayerGetEmission</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetEmission"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetEmission<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get emission color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGmqLayerGetEmission</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the emission color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the emission color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int color = sceGmqLayerGetEmission( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetEmission">sceGmqLayerSetEmission</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerSetAmbient"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerSetAmbient<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set ambient color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void <b>sceGmqLayerSetAmbient</b>(
	SceGmqLayer *<i>layer</i>,
	unsigned int <i>color</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>color</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ambient color&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the ambient color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqLayerSetAmbient( layer, 0xffffffff ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerGetAmbient">sceGmqLayerGetAmbient</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqLayerGetAmbient"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqLayerGetAmbient<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get ambient color<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>unsigned int <b>sceGmqLayerGetAmbient</b>(
	SceGmqLayer <i>*layer</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>layer</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Layer structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the ambient color.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the ambient color.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>unsigned int color = sceGmqLayerGetAmbient( layer ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqLayerSetAmbient">sceGmqLayerSetAmbient</a>()<br><br></div>

<!-- sce_hd2 -->
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqTextureSetPicture"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqTextureSetPicture<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set picture<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqTextureSetPicture</b>(
	SceGmqTexture *<i>texture</i>,
	SceGiqPicture <i>*picture</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>texture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>picture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Picture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the picture.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqTextureSetPicture( texture, picture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqTextureGetPicture">sceGmqTextureGetPicture</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqTextureGetPicture"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqTextureGetPicture<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get picture<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGiqPicture *<b>sceGmqTextureGetPicture</b>(
	SceGmqTexture <i>*texture</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>texture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the picture (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the picture.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGiqPicture *picture = sceGmqTextureGetPicture( texture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqTextureSetPicture">sceGmqTextureSetPicture</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqTextureGetFileName"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqTextureGetFileName<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get filename<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const char *<b>sceGmqTextureGetFileName</b>(
	SceGmqTexture *<i>texture</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>texture</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Texture structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Filename (0 if none exists)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the filename.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const char *filename = sceGmqTextureGetFileName( texture ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqTextureSetPicture">sceGmqTextureSetPicture</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqTextureHasAnimation"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqTextureHasAnimation<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Determine whether animation exists<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>bool <b>sceGmqTextureHasAnimation</b>(
	SceGmqModel *<i>model</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>model</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Model structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If there is an animation, true is returned. Otherwise, false is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function determines whether or not the texture has an animation.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>if ( !sceGmqTextureHasAnimation( texture ) ) return ;

</font></pre></div>

<!-- sce_hd2 -->
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionGetFCurveCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionGetFCurveCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get function curve count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMotionGetFCurveCount</b>(
	SceGmqMotion <i>*motion</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the function curve count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the function curve count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_fcurves = sceGmqMotionGetFCurveCount( motion ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionGetFCurve">sceGmqMotionGetFCurve</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionGetFCurve"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionGetFCurve<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get function curve<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>SceGmqFCurve *<b>sceGmqMotionGetFCurve</b>(
	SceGmqMotion <i>*motion</i>,
	int <i>idx</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>idx</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Function curve number&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the function curve (0 if it does not exist).<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the function curve.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceGmqFCurve *fcurve = sceGmqMotionGetFCurve( motion, idx ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionGetFCurveCount">sceGmqMotionGetFCurveCount</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionSetFrameLoop"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionSetFrameLoop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set loop range<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMotionSetFrameLoop</b>(
	SceGmqMotion *<i>motion</i>,
	float <i>start</i>,
	float <i>end</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>start</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting frame&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>end</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ending frame&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the loop range.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMotionSetFrameLoop( motion, 0.0f, 60.0f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionGetFrameLoop">sceGmqMotionGetFrameLoop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionGetFrameLoop"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionGetFrameLoop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get loop range<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>const float *<b>sceGmqMotionGetFrameLoop</b>(
	SceGmqMotion <i>*motion</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns a pointer to the loop range.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the loop range.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>const float *loop = sceGmqMotionGetFrameLoop( motion ) ;
float start = loop[ 0 ] ;
float end = loop[ 1 ] ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionSetFrameLoop">sceGmqMotionSetFrameLoop</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionSetFrameRate"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionSetFrameRate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set frame rate<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMotionSetFrameRate</b>(
	SceGmqMotion *<i>motion</i>,
	float <i>fps</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fps</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame rate&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the frame rate<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMotionSetFrameRate( motion, 60.0f ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionGetFrameRate">sceGmqMotionGetFrameRate</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionGetFrameRate"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionGetFrameRate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get frame rate<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>float <b>sceGmqMotionGetFrameRate</b>(
	SceGmqMotion <i>*motion</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the frame rate.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the frame rate <br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float fps = sceGmqMotionGetFrameRate( motion ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionSetFrameRate">sceGmqMotionSetFrameRate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionSetFrameRepeat"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionSetFrameRepeat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set repeat mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMotionSetFrameRepeat</b>(
	SceGmqMotion *<i>motion</i>,
	int <i>mode</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Repeat mode&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the repeat mode.<br>The following values can be specified for the <i>mode</i> argument.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_REPEAT_HOLD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Stop at loop range&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCEGMQ_REPEAT_CYCLE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cycle at loop range&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMotionSetFrameRepeat( motion, mode ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionGetFrameRepeat">sceGmqMotionGetFrameRepeat</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionGetFrameRepeat"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionGetFrameRepeat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get repeat mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqMotionGetFrameRepeat</b>(
	SceGmqMotion <i>*motion</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the repeat mode.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the repeat mode.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int mode = sceGmqMotionGetFrameRepeat( motion ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionSetFrameRepeat">sceGmqMotionSetFrameRepeat</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionSetFrame"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionSetFrame<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMotionSetFrame</b>(
	SceGmqMotion *<i>motion</i>,
	float <i>frame</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>frame</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Frame&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the current frame.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMotionSetFrame( motion, frame ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionGetFrame">sceGmqMotionGetFrame</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionGetFrame"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionGetFrame<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get frame<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>float <b>sceGmqMotionGetFrame</b>(
	SceGmqMotion <i>*motion</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the frame.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the current frame.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float frame = sceGmqMotionGetFrame( motion ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionSetFrame">sceGmqMotionSetFrame</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionSetWeight"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionSetWeight<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set weight<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void<b> sceGmqMotionSetWeight</b>(
	SceGmqMotion *<i>motion</i>,
	float <i>weight</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>weight</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Weight&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the animation's weight.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceGmqMotionSetWeight( motion, weight ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionGetWeight">sceGmqMotionGetWeight</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqMotionGetWeight"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqMotionGetWeight<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get weight<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>float <b>sceGmqMotionGetWeight</b>(
	SceGmqMotion <i>*motion</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>motion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Motion structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the weight.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the animation's weight.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>float weight = sceGmqMotionGetWeight( motion ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqMotionSetWeight">sceGmqMotionSetWeight</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqFCurveGetKeyFrames"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqFCurveGetKeyFrames<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get key frame array<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>void *<b>sceGmqFCurveGetKeyFrames</b>(
	SceGmqFCurve <i>*fcurve</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fcurve</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Function curve structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns key frame array (0 if it does not exist).<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the key frame array.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>void *keys = sceGmqFCurveGetKeyFrames( fcurve ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqFCurveGetKeyFrameFormat">sceGmqFCurveGetKeyFrameFormat</a>(), <a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqFCurveGetKeyFrameStride">sceGmqFCurveGetKeyFrameStride</a>()<br><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqFCurveGetKeyFrameCount">sceGmqFCurveGetKeyFrameCount</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqFCurveGetKeyFrameFormat"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqFCurveGetKeyFrameFormat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get key frame format<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqFCurveGetKeyFrameFormat</b>(
	SceGmqFCurve <i>*fcurve</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fcurve</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Function curve structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the key frame format.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the key frame format.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int format = sceGmqFCurveGetKeyFrameFormat( fcurve ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqFCurveGetKeyFrames">sceGmqFCurveGetKeyFrames</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqFCurveGetKeyFrameDimCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqFCurveGetKeyFrameDimCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get key frame dimension count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqFCurveGetKeyFrameDimCount</b>(
	SceGmqFCurve <i>*fcurve</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fcurve</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Function curve structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the key frame dimension count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the key frame dimension count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_dims = sceGmqFCurveGetKeyFrameDimCount( fcurve ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqFCurveGetKeyFrames">sceGmqFCurveGetKeyFrames</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqFCurveGetKeyFrameStride"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqFCurveGetKeyFrameStride<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get key frame stride<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqFCurveGetKeyFrameStride</b>(
	SceGmqFCurve <i>*fcurve</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fcurve</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Function curve structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the key frame stride.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the key frame stride.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int stride = sceGmqFCurveGetKeyFrameStride( fcurve ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqFCurveGetKeyFrames">sceGmqFCurveGetKeyFrames</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqFCurveGetKeyFrameCount"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqFCurveGetKeyFrameCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get key frame count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqFCurveGetKeyFrameCount</b>(
	SceGmqFCurve <i>*fcurve</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fcurve</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Function curve structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the key frame count.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the key frame count.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int n_keys = sceGmqFCurveGetKeyFrameCount( fcurve ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqFCurveGetKeyFrames">sceGmqFCurveGetKeyFrames</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqFCurveGetTargetType"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqFCurveGetTargetType<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get target type<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqFCurveGetTargetType</b>(
	SceGmqFCurve <i>*fcurve</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fcurve</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Function curve structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the target type.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the target type.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int type = sceGmqFCurveGetTargetType( fcurve ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqFCurveGetTargetIndex">sceGmqFCurveGetTargetIndex</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceGmqFCurveGetTargetIndex"></a>
<table width="100%"><td width="70%"><font size=6>sceGmqFCurveGetTargetIndex<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get target number<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceGmqFCurveGetTargetIndex</b>(
	SceGmqFCurve <i>*fcurve</i>
) ;

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fcurve</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Function curve structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the target number.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the target number.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int idx = sceGmqFCurveGetTargetIndex( fcurve ) ;

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../graphics/libgmq_Model-Reference-English.htm#sceGmqFCurveGetTargetType">sceGmqFCurveGetTargetType</a>()<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2010 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
