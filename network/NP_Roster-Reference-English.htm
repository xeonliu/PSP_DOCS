<html lang="en">
<head>
<title>NP_Roster-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
np_roster Library Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NP_ROSTER_FRIEND_STATE_XXX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NP_ROSTER_FRIEND_STATE_XXX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constants]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Friend state constants<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

typedef int SceNpRosterFriendListEntryState;
#define SCE_NP_ROSTER_FRIEND_STATE_BOTH		1
#define SCE_NP_ROSTER_FRIEND_STATE_ASK		2
#define SCE_NP_ROSTER_FRIEND_STATE_ASKED		3
#define SCE_NP_ROSTER_FRIEND_STATE_BOTHASK	4

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NP_ROSTER_FRIEND_STATE_BOTH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Friend&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NP_ROSTER_FRIEND_STATE_ASK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Asking to add someone as a friend&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NP_ROSTER_FRIEND_STATE_ASKED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Asked to be added as someone's friend&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NP_ROSTER_FRIEND_STATE_BOTHASK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Both parties are asking to add each other as a friend&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">These constants represent the friend states that can be obtained by the <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>() function.<br>SCE_NP_ROSTER_FRIEND_STATE_BOTH represents the state in which you accepted someone's request to be added as their friend and they accepted your request to add them as your friend. In other words, it indicates that you are friends.<br>SCE_NP_ROSTER_FRIEND_STATE_ASK represents the state in which you asked to add someone as your friend but they have not accepted your request yet.<br>SCE_NP_ROSTER_FRIEND_STATE_ASKED represents the state in which you received a request to be added as someone's friend but you have not accepted their request yet. If you execute the <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAcceptFriendListEntry">sceNpRosterAcceptFriendListEntry</a>() function for someone in this state, your friend state with that person will become SCE_NP_ROSTER_FRIEND_STATE_BOTH.<br>SCE_NP_ROSTER_FRIEND_STATE_BOTHASK represents the state in which you and another person have both asked each other to be added as a friend. This state is almost the same as SCE_NP_ROSTER_FRIEND_STATE_ASKED in that your friend state with that person will become SCE_NP_ROSTER_FRIEND_STATE_BOTH if you execute the <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAcceptFriendListEntry">sceNpRosterAcceptFriendListEntry</a>() function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>(), <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAcceptFriendListEntry">sceNpRosterAcceptFriendListEntry</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNpRosterFriendListEntry"></a>
<table width="100%"><td width="70%"><font size=6>SceNpRosterFriendListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Friend list<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

typedef struct <b>SceNpRosterFriendListEntry</b> {
	SceNpRosterFriendListEntryState <i>state</i>;
	struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> <i>npId</i>;
} SceNpRosterFriendListEntry;
</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>state</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Friend state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>npId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Friend NpId&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents a friend state and friend NpId.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#SCE_NP_ROSTER_FRIEND_STATE_XXX">SCE_NP_ROSTER_FRIEND_STATE_XXX</a>, <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNpRosterFriendListMessage"></a>
<table width="100%"><td width="70%"><font size=6>SceNpRosterFriendListMessage<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Add friend request message<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_auth.h&gt;

#define SCE_NP_ROSTER_FRIENDLIST_MESSAGE_MAX	(512 * 3)
typedef struct <b>SceNpRosterFriendListMessage</b> {
	char <i>message</i>[SCE_NP_ROSTER_FRIENDLIST_MESSAGE_MAX];
	char <i>terminate</i>;
	char <i>padding</i>[3];
} SceNpRosterFriendListMessage;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>message</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Add friend request message body&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>terminate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Terminator (always specify 0)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>padding</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Padding&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents an add friend request message specified as an add friend request option. The format of<i> message</i> is UTF-8.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAddFriendListEntry">sceNpRosterAddFriendListEntry</a>(), <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterGetFriendListMessage">sceNpRosterGetFriendListMessage</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterCreateRequest"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterCreateRequest<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Initialization and Termination Processing]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create request<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterCreateRequest</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, a non-negative request ID is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates a request ID that is used when making requests for friend lists and block lists. The request ID can be used for both the friend list and block list.<br>Avoid having multiple threads perform operations for a single request ID.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int reqId
reqId = sceNpRosterCreateRequest();
if (reqId &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterDeleteRequest">sceNpRosterDeleteRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterDeleteRequest"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterDeleteRequest<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Initialization and Termination Processing]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete request<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterDeleteRequest</b>(
	int <i>reqId</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes the request ID specified by <i>reqId</i> and releases its resources.<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
ret = sceNpRosterDeleteRequest(reqId);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterAbort"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterAbort<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Initialization and Termination Processing]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Abort request<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterAbort</b>(
	int <i>reqId</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, 0 is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function aborts friend list or block list processing for the request specified by <i>reqId</i>.<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
ret = sceNpRosterAbort(reqId);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(), <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterDeleteRequest">sceNpRosterDeleteRequest</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterGetFriendListEntryCount"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterGetFriendListEntryCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Friend List]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get friend list entry count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

#define SCE_NP_ROSTER_MAX_FRIENDLIST_NUM		50

int <b>sceNpRosterGetFriendListEntryCount</b>(
	int <i>reqId</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Optional parameter (currently, this may be NULL)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the friend list entry count is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a blocking API for getting the number of friends. Since processing blocks until a response is received from the server, to interrupt this API, use <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAbort">sceNpRosterAbort</a>().<br>The list contains entries for which the friend state is SCE_NP_ROSTER_FRIEND_STATE_ASK or SCE_NP_ROSTER_FRIEND_STATE_ASKED.<br>The maximum number of entries in the friend list is 100. However, <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>() can only obtain data for a maximum of 50 friends in a single call. For details, see <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>().<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
ret = sceNpRosterGetFriendListEntryCount(reqId, NULL);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(), <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterGetFriendListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterGetFriendListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Friend List]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get friend list<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterGetFriendListEntry</b>(
	int <i>reqId</i>,
	int <i>req_num</i>,
	int <i>offset</i>,
	int *<i>total</i>,
	int *<i>entry_num</i>,
	struct <a href="../network/NP_Roster-Reference-English.htm#SceNpRosterFriendListEntry">SceNpRosterFriendListEntry</a> *<i>entries</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>req_num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of friend entries that are requested&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>offset</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Acquisition offset&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>total</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;(OUT) Total number of friends&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry_num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;(OUT) Number of friend entries that were actually obtained&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entries</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;(OUT) Friend list&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Optional parameter (currently, this may be NULL)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the friend list entry count is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a blocking API for getting the friend list. Since processing blocks until a response is received from the server, to interrupt this API, use <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAbort">sceNpRosterAbort</a>().<br>For <i>req_num</i>, specify the number of entries you want to obtain. The server will use this value as the maximum number of entries to return. Since the entry data is copied to <i>entries</i>, memory with a size of at least sizeof(struct <a href="../network/NP_Roster-Reference-English.htm#SceNpRosterFriendListEntry">SceNpRosterFriendListEntry</a>) *<i> req_num</i> must be allocated for <i>entries</i>.<br><i>offset</i> specifies the starting position from which list entries are to be obtained. If 0 is specified, entries are obtained from the beginning of the list.<br><br>The result from obtaining the friend list is returned in <i>total</i>,<i> entry_num</i>, and <i>entries</i>.<br><i>total</i> represents the total number of entries in the friend list.<br><i>entry_num</i> represents the number of entries that were actually obtained.<br>The actual friend list data is copied to <i>entries</i>.<br>Although the maximum number of friends in the friend list is 100, the maximum number of entries that this API can obtain at one time is for 50 friends. To obtain entries for all friends, divide the friends into two sets, and call this API once per friend set, specifying the appropriate values for <i>offset</i> and <i>req_num</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
int total, entry_num;
struct <a href="../network/NP_Roster-Reference-English.htm#SceNpRosterFriendListEntry">SceNpRosterFriendListEntry</a> *entries;

// Allocate memory for the number of entries to be requested
entries = (struct <a href="../network/NP_Roster-Reference-English.htm#SceNpRosterFriendListEntry">SceNpRosterFriendListEntry</a> *)malloc(
		10 * sizeof(struct <a href="../network/NP_Roster-Reference-English.htm#SceNpRosterFriendListEntry">SceNpRosterFriendListEntry</a>));
ret = sceNpRosterGetFriendListEntry(
	reqId,
	10,		// Request entries for 10 people
	0,		// Get entries from beginning of list
	&amp;total,		// Total number of entries in list
	&amp;entry_num,	// Actual number of entries obtained
	entries,	// Friend list
	NULL
);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterAddFriendListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterAddFriendListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Friend List]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Send add friend request<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterAddFriendListEntry</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	const struct <a href="../network/NP_Roster-Reference-English.htm#SceNpRosterFriendListMessage">SceNpRosterFriendListMessage</a> *<i>message</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Target of add request&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>message</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;(Optional) Add request message&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Optional parameter (currently, this may be NULL)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, a value of 0 or greater is returned.<br>If an error occurs, an error code is returned.<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a blocking API for sending an add friend request. Since processing blocks until a response is received from the server, to interrupt this API, use <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAbort">sceNpRosterAbort</a>().<br>For <i>entry</i>, specify the person to whom the add friend request is to be sent.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> npId;

// Enter an appropriate value for npId
ret = sceNpRosterAddFriendListEntry(
	reqId,
	&amp;npId,
	NULL,
	NULL
);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(),<a href="../network/NP_Roster-Reference-English.htm#sceNpRosterDeleteFriendListEntry">sceNpRosterDeleteFriendListEntry</a>(),<br><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAcceptFriendListEntry">sceNpRosterAcceptFriendListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterDeleteFriendListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterDeleteFriendListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Friend List]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Reject add friend request and delete friend<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterDeleteFriendListEntry</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Entry to be deleted&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Optional parameter (currently, this may be NULL)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, a value of 0 or greater is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a blocking API for rejecting an add friend request and deleting a friend. Since processing blocks until a response is received from the server, to interrupt this API, use <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAbort">sceNpRosterAbort</a>().<br>For <i>entry</i>, specify the friend that is to be deleted. This API differs from the one for adding a friend in that it is executed immediately without waiting for a reply from the other person. Also, your own entry will be deleted from the other person's friend list.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> npId;

// Enter an appropriate value for npId 
ret = sceNpRosterDeleteFriendListEntry(
	reqId,
	&amp;npId,
	NULL
);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(),<a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAddFriendListEntry">sceNpRosterAddFriendListEntry</a>(),<br><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAcceptFriendListEntry">sceNpRosterAcceptFriendListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterAcceptFriendListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterAcceptFriendListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Friend List]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Accept add friend request<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterAcceptFriendListEntry</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Person whose add friend request is to be accepted&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Optional parameter (currently, this may be NULL)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, a value of 0 or greater is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a blocking API for accepting an add friend request. Since processing blocks until a response is received from the server, to interrupt this API, use <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAbort">sceNpRosterAbort</a>().<br>For <i>entry</i>, specify the person whose add friend request is to be accepted. Execute this API for a person whose friend state is SCE_NP_ROSTER_FRIEND_STATE_ASKED or SCE_NP_ROSTER_FRIEND_STATE_BOTH.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> npId;

// Enter an appropriate value for npId
ret = sceNpRosterAcceptFriendListEntry(
	reqId,
	&amp;npId,
	NULL
);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(),<a href="../network/NP_Roster-Reference-English.htm#sceNpRosterDeleteFriendListEntry">sceNpRosterDeleteFriendListEntry</a>(),<br><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAddFriendListEntry">sceNpRosterAddFriendListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterGetFriendListMessage"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterGetFriendListMessage<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Friend List]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get add friend request message<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterGetFriendListMessage</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	struct <a href="../network/NP_Roster-Reference-English.htm#SceNpRosterFriendListMessage">SceNpRosterFriendListMessage</a> *<i>message</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Person whose add friend request message is to be obtained&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>message</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Add friend request message&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Optional parameter (currently, this may be NULL)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, a value of 0 or greater is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a blocking API for getting an add friend request message. Since processing blocks until a response is received from the server, to interrupt this API, use <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAbort">sceNpRosterAbort</a>().<br>For <i>entry</i>, specify the person whose add friend message is to be obtained. Execute this API for a person whose friend state is SCE_NP_ROSTER_FRIEND_STATE_ASKED or SCE_NP_ROSTER_FRIEND_STATE_BOTH.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> npId;
struct <a href="../network/NP_Roster-Reference-English.htm#SceNpRosterFriendListMessage">SceNpRosterFriendListMessage</a> message;

// Enter an appropriate value for npId
ret = sceNpRosterGetFriendListMessage(
	reqId,
	&amp;npId,
	&amp;message,
	NULL
);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(), <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAddFriendListEntry">sceNpRosterAddFriendListEntry</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterGetBlockListEntryCount"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterGetBlockListEntryCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Block List]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get block list entry count<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

#define SCE_NP_ROSTER_MAX_BLOCKLIST_NUM		50

int <b>sceNpRosterGetBlockListEntryCount</b>(
	int <i>reqId</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Optional parameter (currently, this may be NULL)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the block list entry count is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a blocking API for getting the number of block list entries. Since processing blocks until a response is received from the server, to interrupt this API, use <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAbort">sceNpRosterAbort</a>().<br>The maximum number of entries in the block list is 50.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
ret = sceNpRosterGetBlockListEntryCount(reqId, NULL);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterGetBlockListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterGetBlockListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Block List]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get block list<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterGetBlockListEntry</b>(
	int <i>reqId</i>,
	int <i>req_num</i>,
	int <i>offset</i>,
	int *<i>total</i>,
	int *<i>entry_num</i>,
	struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> *<i>entries</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>req_num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of requested entries&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>offset</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Acquisition offset&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>total</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;(OUT) Total number of friends&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry_num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;(OUT) Number of entries that were actually obtained&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entries</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;(OUT) Block list&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Optional parameter (currently, this may be NULL)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, the block list entry count is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a blocking API for getting the block list. Since processing blocks until a response is received from the server, to interrupt this API, use <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAbort">sceNpRosterAbort</a>().<br>For <i>req_num</i>, specify the number of entries you want to obtain. This value is the maximum number of entries that the server will return. Since the entry data is copied to <i>entries</i>, memory with a size of at least sizeof(struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a>) *<i> req_num</i> must be allocated for <i>entries</i>.<br><i>offset</i> specifies the position where list entries will start to be obtained. If 0 is specified, entries are obtained from the beginning of the list.<br><br>Block list acquisition results are returned in <i>total</i>, entry<i>_num</i>, and <i>entries</i>.<br><i>total</i> represents the total number of entries in the block list.<br><i>entry_num</i> represents the number of entries that were actually obtained.<br>Actual block list data is copied to <i>entries</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
int total, entry_num;
struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> *entries;

// Allocate memory for the number of entries that are requested
entries = (struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> *)malloc(10 * sizeof(struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a>));
ret = sceNpRosterGetBlockListEntry(
	reqId,
	10,		// Request entries for 10 people
	0,		// Get entries from beginning of list
	&amp;total,		// Total number of entries in list
	&amp;entry_num,	// Number of entries that are actually obtained
	entries,	// Block list
	NULL
);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterAddBlockListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterAddBlockListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Block List]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Add block list entry<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterAddBlockListEntry</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Entry to be added&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Optional parameter (currently, this may be NULL)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, a value of 0 or greater is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a blocking API for adding an entry to the block list. Since processing blocks until a response is received from the server, to interrupt this API, use <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAbort">sceNpRosterAbort</a>().<br>For <i>entry</i>, specify the person to be added to the block list.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> npId;

// Enter an appropriate value for npId
ret = sceNpRosterAddBlockListEntry(
	reqId,
	&amp;npId,
	NULL
);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(),<a href="../network/NP_Roster-Reference-English.htm#sceNpRosterDeleteBlockListEntry">sceNpRosterDeleteBlockListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterDeleteBlockListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterDeleteBlockListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Block List]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete entry from block list<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterDeleteBlockListEntry</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Request ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Entry to be deleted&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Optional parameter (currently, this may be NULL)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the function completes normally, a value of 0 or greater is returned.<br>If an error occurs, an error code is returned.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a blocking API for deleting an entry from the block list. Since processing blocks until a response is received from the server, to interrupt this API, use <a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAbort">sceNpRosterAbort</a>().<br>For <i>entry</i>, specify the person whose entry is to be deleted.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-English.htm#SceNpId">SceNpId</a> npId;

// Enter an appropriate value for npId
ret = sceNpRosterDeleteBlockListEntry(
	reqId,
	&amp;npId,
	NULL
);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-English.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(),<a href="../network/NP_Roster-Reference-English.htm#sceNpRosterAddBlockListEntry">sceNpRosterAddBlockListEntry</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of np_roster Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of np_roster Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Error codes returned by np_roster<br></div><br>

<!-- sce_title -->
<a Name ="HeadingT_6_1">
<div style="margin-left:40px;"><h4><b>Error Codes Returned by the Client Library</b><br><br></h4></div></a>

<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_ALREADY_INITIALIZED">SCE_NP_ROSTER_ERROR_ALREADY_INITIALIZED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a01&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An attempt was made to reinitialize the library even though it was already initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_NOT_INITIALIZED">SCE_NP_ROSTER_ERROR_NOT_INITIALIZED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a02&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An attempt was made to call an API when the library was uninitialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_OUT_OF_MEMORY">SCE_NP_ROSTER_ERROR_OUT_OF_MEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a03&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_INVALID_ARGUMENT">SCE_NP_ROSTER_ERROR_INVALID_ARGUMENT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a04&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid argument&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_ABORTED">SCE_NP_ROSTER_ERROR_ABORTED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a05&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Processing was aborted by the abort API&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_ID_NOT_AVAIL">SCE_NP_ROSTER_ERROR_ID_NOT_AVAIL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a06&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The context of the specified ID does not exist&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_OFFLINE">SCE_NP_ROSTER_ERROR_OFFLINE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a07&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An attempt was made to call an API when the user was not signed in&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_BAD_REQUEST">SCE_NP_ROSTER_ERROR_BAD_REQUEST</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a08&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid request parameter&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_INTERNAL">SCE_NP_ROSTER_ERROR_INTERNAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550aff&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Internal error&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a80&nbsp;&nbsp;<br>&nbsp;&nbsp;to&nbsp;&nbsp;<br>&nbsp;&nbsp;0x80550a8f&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Internal error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- sce_title -->
<a Name ="HeadingT_6_2">
<div style="margin-left:40px;"><h4><b>Error Codes Returned by the Server</b><br><br></h4></div></a>

<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_SERVER_ERROR_ITEM_NOT_FOUND">SCE_NP_ROSTER_SERVER_ERROR_ITEM_NOT_FOUND</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550b36&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified user does not exist in list&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_SERVER_ERROR_RESOURCE_CONSTRAINT">SCE_NP_ROSTER_SERVER_ERROR_RESOURCE_CONSTRAINT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550b41&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Server is temporarily busy&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_SERVER_ERROR_SERVICE_UNAVAILABLE">SCE_NP_ROSTER_SERVER_ERROR_SERVICE_UNAVAILABLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550b42&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified user account does not exist&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_SERVER_ERROR_NOT_ALLOWED_MAX_EXCEED">SCE_NP_ROSTER_SERVER_ERROR_NOT_ALLOWED_MAX_EXCEED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550b4a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An attempt was made to add more than the maximum number of list entries&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_SERVER_ERROR_NOT_ALLOWED_BLOCKED_USER">SCE_NP_ROSTER_SERVER_ERROR_NOT_ALLOWED_BLOCKED_USER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550b4b&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An attempt was made to add a user from the block list as a friend&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2010 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
