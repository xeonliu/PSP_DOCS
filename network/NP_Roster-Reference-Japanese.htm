<html lang="jp">
<head>
<title>NP_Roster-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
np_rosterライブラリリファレンス
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NP_ROSTER_FRIEND_STATE_XXX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NP_ROSTER_FRIEND_STATE_XXX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレンドの状態定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

typedef int SceNpRosterFriendListEntryState;
#define SCE_NP_ROSTER_FRIEND_STATE_BOTH   	1
#define SCE_NP_ROSTER_FRIEND_STATE_ASK    	2
#define SCE_NP_ROSTER_FRIEND_STATE_ASKED 	3
#define SCE_NP_ROSTER_FRIEND_STATE_BOTHASK	4

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NP_ROSTER_FRIEND_STATE_BOTH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレンド&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NP_ROSTER_FRIEND_STATE_ASK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレンド登録依頼の申請中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NP_ROSTER_FRIEND_STATE_ASKED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレンド登録依頼を申請されている&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NP_ROSTER_FRIEND_STATE_BOTHASK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;お互いにフレンド登録依頼を申請している&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>()で取得したフレンドの状態を表します。<br>SCE_NP_ROSTER_FRIEND_STATE_BOTHは、フレンド登録依頼が相手に承認された、あるいは相手からのフレンド登録依頼を承認した状態、つまりいわゆるフレンドであることを表します。<br>SCE_NP_ROSTER_FRIEND_STATE_ASKは、相手に対してフレンド登録依頼を申請したが、まだ承認されていないことを表します。<br>SCE_NP_ROSTER_FRIEND_STATE_ASKEDは、相手からフレンド登録依頼を受けているがまだ承認していないことを表します。この状態の相手に対して、<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAcceptFriendListEntry">sceNpRosterAcceptFriendListEntry</a>()を行うことで、その相手とSCE_NP_ROSTER_FRIEND_STATE_BOTH状態になります。<br>SCE_NP_ROSTER_FRIEND_STATE_BOTHASKは、お互いにフレンド登録依頼を申請し合っていることを表します。状態としては、SCE_NP_ROSTER_FRIEND_STATE_ASKEDとほぼ同じで、<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAcceptFriendListEntry">sceNpRosterAcceptFriendListEntry</a>()を行うことで、その相手とSCE_NP_ROSTER_FRIEND_STATE_BOTH状態になります。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>(), <a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAcceptFriendListEntry">sceNpRosterAcceptFriendListEntry</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNpRosterFriendListEntry"></a>
<table width="100%"><td width="70%"><font size=6>SceNpRosterFriendListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレンドリスト<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

typedef struct <b>SceNpRosterFriendListEntry</b> {
	SceNpRosterFriendListEntryState <i>state</i>;
	struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> <i>npId</i>;
} SceNpRosterFriendListEntry;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>state</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレンドの状態&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>npId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレンドのNpId&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">フレンドの状態とフレンドのNpIdを表す構造体です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#SCE_NP_ROSTER_FRIEND_STATE_XXX">SCE_NP_ROSTER_FRIEND_STATE_XXX</a>, <a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNpRosterFriendListMessage"></a>
<table width="100%"><td width="70%"><font size=6>SceNpRosterFriendListMessage<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレンド登録依頼メッセージ<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_auth.h&gt;

#define SCE_NP_ROSTER_FRIENDLIST_MESSAGE_MAX	(512 * 3)
typedef struct <b>SceNpRosterFriendListMessage</b> {
	char <i>message</i>[SCE_NP_ROSTER_FRIENDLIST_MESSAGE_MAX];
	char <i>terminate</i>;
	char <i>padding</i>[3];
} SceNpRosterFriendListMessage;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>message</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フレンド登録依頼メッセージ本文&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>terminate</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;終端文字（必ず0を指定してください）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>padding</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パディング&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">フレンド登録依頼のオプションとして指定するフレンド登録依頼メッセージを表します。<i>message</i>のフォーマットはUTF-8です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAddFriendListEntry">sceNpRosterAddFriendListEntry</a>(), <a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterGetFriendListMessage">sceNpRosterGetFriendListMessage</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterCreateRequest"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterCreateRequest<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[初期化・終了処理]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>リクエストの作成<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterCreateRequest</b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、0以上のリクエストIDを返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">フレンドリストとブロックリストのリクエストに使用するリクエストIDを作成します。リクエストIDは、フレンドリストとブロックリストのどちらにも使用することができます。<br>一つのリクエストIDに対して複数のスレッドから操作を行うのは避けてください。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int reqId
reqId = sceNpRosterCreateRequest();
if (reqId &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterDeleteRequest">sceNpRosterDeleteRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterDeleteRequest"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterDeleteRequest<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[初期化・終了処理]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>リクエストの削除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterDeleteRequest</b>(
	int <i>reqId</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、0を返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>reqId</i>で指定したリクエストIDを削除し、リソースを開放します。<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
ret = sceNpRosterDeleteRequest(reqId);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterAbort"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterAbort<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[初期化・終了処理]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>リクエストの中断<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterAbort</b>(
	int <i>reqId</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、0を返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><i>reqId</i>で指定したフレンドリストやブロックリストのリクエスト処理を中断します。<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
ret = sceNpRosterAbort(reqId);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(), <a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterDeleteRequest">sceNpRosterDeleteRequest</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterGetFriendListEntryCount"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterGetFriendListEntryCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[フレンドリスト]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレンドリストのエントリ数を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

#define SCE_NP_ROSTER_MAX_FRIENDLIST_NUM		50

int <b>sceNpRosterGetFriendListEntryCount</b>(
	int <i>reqId</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オプションパラメータ（現状、NULLでも問題ありません）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、フレンドリストのエントリ数を返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">フレンドの数を取得するブロッキングAPIです。サーバーからのレスポンスがあるまでブロックしますので、中断したい場合は<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAbort">sceNpRosterAbort</a>()を使用してください。<br>リストの中には、状態がSCE_NP_ROSTER_FRIEND_STATE_ASKやSCE_NP_ROSTER_FRIEND_STATE_ASKEDのものも含まれます。<br>フレンドリストのエントリの最大数は100人です。ただし、<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>()で取得できる実データは、一度に50人までとなっています。詳しくは<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>()を参照してください。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
ret = sceNpRosterGetFriendListEntryCount(reqId, NULL);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(), <a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterGetFriendListEntry">sceNpRosterGetFriendListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterGetFriendListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterGetFriendListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[フレンドリスト]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレンドリストの取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterGetFriendListEntry</b>(
	int <i>reqId</i>,
	int <i>req_num</i>,
	int <i>offset</i>,
	int *<i>total</i>,
	int *<i>entry_num</i>,
	struct <a href="../network/NP_Roster-Reference-Japanese.htm#SceNpRosterFriendListEntry">SceNpRosterFriendListEntry</a> *<i>entries</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>req_num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストするフレンドエントリの数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>offset</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得オフセット&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>total</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;（OUT）総フレンド数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry_num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;（OUT）実際に取得したフレンドエントリの数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entries</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;（OUT）フレンドリスト&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オプションパラメータ（現状、NULLでも問題ありません）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、フレンドリストのエントリ数を返します。<br>エラーがあった場合、エラーコードを返します。<br></div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">フレンドリストを取得するブロッキングAPIです。サーバーからのレスポンスがあるまでブロックしますので、中断したい場合は<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAbort">sceNpRosterAbort</a>()を使用してください。<br><i>req_num</i>には取得したいエントリの数を指定します。サーバーは、この値を最大値として、エントリを返します。エントリのデータは、<i>entries</i>にコピーされますので、<i>entries</i>には少なくともsizeof(struct <a href="../network/NP_Roster-Reference-Japanese.htm#SceNpRosterFriendListEntry">SceNpRosterFriendListEntry</a> ) *<i> req_num</i>分のメモリを割り当てておく必要があります。<br><i>offset</i>はリスト取得を開始する位置を指定します。0を指定するとリストの先頭から取得します。<br></div>
<br>
<div style="margin-left:50px;"><i>total</i>, <i>entry_num</i>, <i>entries</i>はフレンドリストの取得結果が渡されます。<br><i>total</i>は、フレンドリスト全体のエントリ数を表します。<br><i>entry_num</i>は、実際に取得できたエントリの数を表します。<br><i>entries</i>には、実際のフレンドリストのデータがコピーされます。<br>フレンドリストの最大値は100人ですが、本APIで一度に取得できる最大エントリ数は50人までとなっています。フレンド全員分のエントリを取得する場合は、<i>offset</i>と<i>req_num</i>に適切な値を指定して、APIを2度に分けて呼び出すようにしてください。<br></div>
<br>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
int total, entry_num;
struct <a href="../network/NP_Roster-Reference-Japanese.htm#SceNpRosterFriendListEntry">SceNpRosterFriendListEntry</a> *entries;

//リクエストするエントリ数分のメモリを確保
entries = (struct <a href="../network/NP_Roster-Reference-Japanese.htm#SceNpRosterFriendListEntry">SceNpRosterFriendListEntry</a> *)malloc(
		10 * sizeof(struct <a href="../network/NP_Roster-Reference-Japanese.htm#SceNpRosterFriendListEntry">SceNpRosterFriendListEntry</a>));
ret = sceNpRosterGetFriendListEntry(
	reqId,
	10,		//10人分のエントリをリクエスト
	0,		//リストの先頭から取得
	&amp;total,		//リスト全体のエントリ数
	&amp;entry_num,	//実際に取得したエントリ数
	entries,  	//フレンドリスト
	NULL
);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterAddFriendListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterAddFriendListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[フレンドリスト]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレンド登録依頼の送信<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterAddFriendListEntry</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	const struct <a href="../network/NP_Roster-Reference-Japanese.htm#SceNpRosterFriendListMessage">SceNpRosterFriendListMessage</a> *<i>message</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;登録依頼送信先&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>message</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;（オプション）登録依頼のメッセージ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オプションパラメータ（現状、NULLでも問題ありません）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、0以上の値を返します。<br>エラーがあった場合、エラーコードを返します。<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">フレンド登録依頼を送信するブロッキングAPIです。サーバーからのレスポンスがあるまでブロックしますので、中断したい場合は<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAbort">sceNpRosterAbort</a>()を使用してください。<br><i>entry</i>にはフレンド登録依頼を送信する相手を指定します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> npId;

// npId には適切な値が入っているものとします
ret = sceNpRosterAddFriendListEntry(
	reqId,
	&amp;npId,
	NULL,
	NULL
);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(),<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterDeleteFriendListEntry">sceNpRosterDeleteFriendListEntry</a>(),<br><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAcceptFriendListEntry">sceNpRosterAcceptFriendListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterDeleteFriendListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterDeleteFriendListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[フレンドリスト]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレンド登録依頼の拒否、フレンド削除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterDeleteFriendListEntry</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;削除するエントリ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オプションパラメータ（現状、NULLでも問題ありません）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、0以上の値を返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">フレンド登録依頼の拒否、およびフレンドを削除するブロッキングAPIです。サーバーからのレスポンスがあるまでブロックしますので、中断したい場合は<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAbort">sceNpRosterAbort</a>()を使用してください。<br><i>entry</i>には削除する相手を指定します。フレンドの登録と異なり、削除は相手の返答を待たずに即座に実行され、相手のフレンドリストからも自分のエントリが削除されます。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> npId;

// npId には適切な値が入っているものとします
ret = sceNpRosterDeleteFriendListEntry(
	reqId,
	&amp;npId,
	NULL
);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(),<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAddFriendListEntry">sceNpRosterAddFriendListEntry</a>(),<br><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAcceptFriendListEntry">sceNpRosterAcceptFriendListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterAcceptFriendListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterAcceptFriendListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[フレンドリスト]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレンド登録依頼の承認<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterAcceptFriendListEntry</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;登録依頼を承認する相手&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オプションパラメータ（現状、NULLでも問題ありません）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、0以上の値を返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">フレンド登録依頼を承認するブロッキングAPIです。サーバーからのレスポンスがあるまでブロックしますので、中断したい場合は<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAbort">sceNpRosterAbort</a>()を使用してください。<br><i>entry</i>にはフレンド登録依頼を承認する相手を指定します。このAPIは状態がSCE_NP_ROSTER_FRIEND_STATE_ASKEDあるいはSCE_NP_ROSTER_FRIEND_STATE_BOTHの相手に対して行ってください。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> npId;

// npId には適切な値が入っているものとします
ret = sceNpRosterAcceptFriendListEntry(
	reqId,
	&amp;npId,
	NULL
);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(),<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterDeleteFriendListEntry">sceNpRosterDeleteFriendListEntry</a>(),<br><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAddFriendListEntry">sceNpRosterAddFriendListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterGetFriendListMessage"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterGetFriendListMessage<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[フレンドリスト]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>フレンド登録依頼メッセージの取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterGetFriendListMessage</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	struct <a href="../network/NP_Roster-Reference-Japanese.htm#SceNpRosterFriendListMessage">SceNpRosterFriendListMessage</a> *<i>message</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;登録依頼メッセージを取得する相手&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>message</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;登録依頼メッセージ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オプションパラメータ（現状、NULLでも問題ありません）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、0以上の値を返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">フレンド登録依頼メッセージを取得するブロッキングAPIです。サーバーからのレスポンスがあるまでブロックしますので、中断したい場合は<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAbort">sceNpRosterAbort</a>()を使用してください。<br><i>entry</i>にはフレンド登録依頼メッセージを取得する相手を指定します。このAPIは状態がSCE_NP_ROSTER_FRIEND_STATE_ASKEDあるいはSCE_NP_ROSTER_FRIEND_STATE_BOTHの相手に対して行ってください。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> npId;
struct <a href="../network/NP_Roster-Reference-Japanese.htm#SceNpRosterFriendListMessage">SceNpRosterFriendListMessage</a> message;

// npId には適切な値が入っているものとします
ret = sceNpRosterGetFriendListMessage(
	reqId,
	&amp;npId,
	&amp;message,
	NULL
);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(), <a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAddFriendListEntry">sceNpRosterAddFriendListEntry</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterGetBlockListEntryCount"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterGetBlockListEntryCount<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[ブロックリスト]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ブロックリストのエントリ数を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

#define SCE_NP_ROSTER_MAX_BLOCKLIST_NUM		50

int <b>sceNpRosterGetBlockListEntryCount</b>(
	int <i>reqId</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オプションパラメータ（現状、NULLでも問題ありません）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、ブロックリストのエントリ数を返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ブロックリストのエントリ数を取得するブロッキングAPIです。サーバーからのレスポンスがあるまでブロックしますので、中断したい場合は<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAbort">sceNpRosterAbort</a>()を使用してください。<br>ブロックリストの最大数は50人です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
ret = sceNpRosterGetBlockListEntryCount(reqId, NULL);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterGetBlockListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterGetBlockListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[ブロックリスト]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ブロックリストの取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterGetBlockListEntry</b>(
	int <i>reqId</i>,
	int <i>req_num</i>,
	int <i>offset</i>,
	int *<i>total</i>,
	int *<i>entry_num</i>,
	struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> *<i>entries</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>req_num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストするエントリの数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>offset</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;取得オフセット&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>total</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;（OUT）総フレンド数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry_num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;（OUT）実際に取得したエントリの数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entries</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;（OUT）ブロックリスト&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オプションパラメータ（現状、NULLでも問題ありません）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、ブロックリストのエントリ数を返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ブロックリストを取得するブロッキングAPIです。サーバーからのレスポンスがあるまでブロックしますので、中断したい場合は<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAbort">sceNpRosterAbort</a>()を使用してください。<br><i>req_num</i>には取得したいエントリの数を指定します。サーバーは、この値を最大値として、エントリを返します。エントリのデータは、<i>entries</i>にコピーされますので、<i>entries</i>には少なくともsizeof(struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a>) *<i> req_num</i>分のメモリを割り当てておく必要があります。<br><i>offset</i>はリスト取得を開始する位置を指定します。0を指定するとリストの先頭から取得します。<br><br><i>total,entry_num,entries</i>は、ブロックリストの取得結果が渡されます。<br><i>total</i>は、ブロックリスト全体のエントリ数を表します。<br><i>entry_num</i>は、実際に取得できたエントリの数を表します。<br><i>entries</i>には、実際のブロックリストのデータがコピーされます。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
int total, entry_num;
struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> *entries;

//リクエストするエントリ数分のメモリを確保
entries = (struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> *)malloc(10 * sizeof(struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a>));
ret = sceNpRosterGetBlockListEntry(
	reqId,
	10,		//10人分のエントリをリクエスト
	0,		//リストの先頭から取得
	&amp;total,   	//リスト全体のエントリ数
	&amp;entry_num,	//実際に取得したエントリ数
	entries,  	//ブロックリスト
	NULL
);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterAddBlockListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterAddBlockListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[ブロックリスト]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ブロックリスト追加<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterAddBlockListEntry</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;追加するエントリ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オプションパラメータ（現状、NULLでも問題ありません）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、0以上の値を返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エントリをブロックリストへ追加するブロッキングAPIです。サーバーからのレスポンスがあるまでブロックしますので、中断したい場合は<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAbort">sceNpRosterAbort</a>()を使用してください。<br><i>entry</i>にはブロックリストへ追加する相手を指定します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> npId;

// npId には適切な値が入っているものとします
ret = sceNpRosterAddBlockListEntry(
	reqId,
	&amp;npId,
	NULL
);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(),<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterDeleteBlockListEntry">sceNpRosterDeleteBlockListEntry</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNpRosterDeleteBlockListEntry"></a>
<table width="100%"><td width="70%"><font size=6>sceNpRosterDeleteBlockListEntry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[ブロックリスト]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ブロックリストからの削除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;np_roster.h&gt;

int <b>sceNpRosterDeleteBlockListEntry</b>(
	int <i>reqId</i>,
	const struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> *<i>entry</i>,
	const struct SceNpRosterOptParam *<i>opt</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能(割り込み許可状態で呼ぶこと)<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>reqId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;削除するエントリ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>opt</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;オプションパラメータ（現状、NULLでも問題ありません）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合、0以上の値を返します。<br>エラーがあった場合、エラーコードを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">エントリをブロックリストから削除するブロッキングAPIです。サーバーからのレスポンスがあるまでブロックしますので、中断したい場合は<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAbort">sceNpRosterAbort</a>()を使用してください。<br><i>entry</i>には削除する相手を指定します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> npId;

// npId には適切な値が入っているものとします
ret = sceNpRosterDeleteBlockListEntry(
	reqId,
	&amp;npId,
	NULL
);
if (ret &lt; 0) {
	//エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterCreateRequest">sceNpRosterCreateRequest</a>(),<a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterAddBlockListEntry">sceNpRosterAddBlockListEntry</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="np_rosterのエラーコード一覧"></a>
<table width="100%"><td width="70%"><font size=6>np_rosterのエラーコード一覧<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[エラーコード]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>np_rosterの返すエラーコード<br></div><br>

<!-- sce_title -->
<a Name ="HeadingT_6_1">
<div style="margin-left:40px;"><h4><b>クライアントライブラリが返すエラーコード一覧</b><br><br></h4></div></a>

<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_ALREADY_INITIALIZED">SCE_NP_ROSTER_ERROR_ALREADY_INITIALIZED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a01&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;初期化済みのライブラリを&nbsp;&nbsp;<br>&nbsp;&nbsp;再度初期化しようとした&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_NOT_INITIALIZED">SCE_NP_ROSTER_ERROR_NOT_INITIALIZED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a02&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ライブラリが未初期化の状態で&nbsp;&nbsp;<br>&nbsp;&nbsp;APIを呼ぼうとした&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_OUT_OF_MEMORY">SCE_NP_ROSTER_ERROR_OUT_OF_MEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a03&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メモリ不足&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_INVALID_ARGUMENT">SCE_NP_ROSTER_ERROR_INVALID_ARGUMENT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a04&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_ABORTED">SCE_NP_ROSTER_ERROR_ABORTED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a05&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;中断APIによって処理が&nbsp;&nbsp;<br>&nbsp;&nbsp;中断された&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_ID_NOT_AVAIL">SCE_NP_ROSTER_ERROR_ID_NOT_AVAIL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a06&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;指定されたIDのコンテキスト&nbsp;&nbsp;<br>&nbsp;&nbsp;が存在しなかった&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_OFFLINE">SCE_NP_ROSTER_ERROR_OFFLINE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a07&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サインインしていない状態で&nbsp;&nbsp;<br>&nbsp;&nbsp;APIを呼ぼうとした&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_BAD_REQUEST">SCE_NP_ROSTER_ERROR_BAD_REQUEST</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a08&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リクエストパラメータが不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_ERROR_INTERNAL">SCE_NP_ROSTER_ERROR_INTERNAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550aff&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;内部エラー&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550a80&nbsp;&nbsp;<br>&nbsp;&nbsp;~&nbsp;&nbsp;<br>&nbsp;&nbsp;0x80550a8f&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;内部エラー&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- sce_title -->
<a Name ="HeadingT_6_2">
<div style="margin-left:40px;"><h4><b>サーバーが返すエラーコード一覧</b><br><br></h4></div></a>

<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_SERVER_ERROR_ITEM_NOT_FOUND">SCE_NP_ROSTER_SERVER_ERROR_ITEM_NOT_FOUND</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550b36&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;指定したユーザがリストに存在しない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_SERVER_ERROR_RESOURCE_CONSTRAINT">SCE_NP_ROSTER_SERVER_ERROR_RESOURCE_CONSTRAINT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550b41&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;サーバーが一時的にBusy状態になっている&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_SERVER_ERROR_SERVICE_UNAVAILABLE">SCE_NP_ROSTER_SERVER_ERROR_SERVICE_UNAVAILABLE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550b42&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;指定したユーザのアカウントが存在しない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_SERVER_ERROR_NOT_ALLOWED_MAX_EXCEED">SCE_NP_ROSTER_SERVER_ERROR_NOT_ALLOWED_MAX_EXCEED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550b4a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;リストの最大数以上追加しようとした&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_NP_ROSTER_SERVER_ERROR_NOT_ALLOWED_BLOCKED_USER">SCE_NP_ROSTER_SERVER_ERROR_NOT_ALLOWED_BLOCKED_USER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80550b4b&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ブロックリストのユーザをフレンド登録&nbsp;&nbsp;<br>&nbsp;&nbsp;しようとした&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2010 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
