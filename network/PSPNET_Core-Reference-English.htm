<html lang="en">
<head>
<title>PSPNET_Core-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
pspnet Core Reference
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetEtherAddr"></a>
<table width="100%"><td width="70%"><font size=6>SceNetEtherAddr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Ethernet address structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

#define SCE_NET_ETHER_ADDR_LEN 6
struct <b>SceNetEtherAddr</b> {
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>data</i>[SCE_NET_ETHER_ADDR_LEN];
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>data</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ethernet address data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents an Ethernet address.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#sceNetEtherStrton">sceNetEtherStrton</a>(), <a href="../network/PSPNET_Core-Reference-English.htm#sceNetEtherNtostr">sceNetEtherNtostr</a>(), <a href="../network/PSPNET_Core-Reference-English.htm#sceNetGetLocalEtherAddr">sceNetGetLocalEtherAddr</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetMallocStat"></a>
<table width="100%"><td width="70%"><font size=6>SceNetMallocStat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Internal memory usage status structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

struct <b>SceNetMallocStat</b> {
	int <i>poolsize</i>;
	int <i>maxsize</i>;
	int <i>freesize</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>poolsize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes in internal memory pool&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>maxsize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum number of bytes of internal memory for use&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>freesize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of bytes of unused memory&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents the usage status of internal memory.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#sceNetGetMallocStat">sceNetGetMallocStat</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInit"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize PSP&trade; network library <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

int <b>sceNetInit</b>(
	SceSize <i>poolsize</i>,
	int <i>callout_tpl</i>,
	SceSize <i>callout_stack</i>,
	int <i>netintr_tpl</i>,
	SceSize <i>netintr_stack</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Not multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>poolsize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory pool size for use by pspnet as a whole &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>callout_tpl</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Priority of internal callout thread&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>callout_stack</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Not used (specify 0)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>netintr_tpl</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Priority of internal netintr thread&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>netintr_stack</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Not used (specify 0)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 on normal completion.<br>When an error occurs, one of the following errors is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_CORE_NOT_TERMINATED">SCE_ERROR_NET_CORE_NOT_TERMINATED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function initializes the pspnet library.<br>It creates two internal library threads.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define PSPNET_POOLSIZE (512 * 1024)
#define CALLOUT_SPL 30
#define NETINTR_SPL 30

ret = sceNetInit(PSPNET_POOLSIZE, CALLOUT_SPL, 0, NETINTR_SPL, 0);
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The stacksize of the callout thread and netintr thread is 4096 bytes for each.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#sceNetTerm">sceNetTerm</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetTerm"></a>
<table width="100%"><td width="70%"><font size=6>sceNetTerm<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Terminate PSP&trade; network library <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

int <b>sceNetTerm</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Not multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 on normal completion.<br>When an error occurs, one of the following errors is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_CORE_INTERFACE_BUSY">SCE_ERROR_NET_CORE_INTERFACE_BUSY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function terminates the pspnet library.<br>If the network is still being used, an error is returned.<br>You must disconnect from the network before calling this function.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>ret = sceNetTerm();
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#sceNetInit">sceNetInit</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetFreeThreadinfo"></a>
<table width="100%"><td width="70%"><font size=6>sceNetFreeThreadinfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete individual thread data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

int <b>sceNetFreeThreadinfo</b>(
	SceUID <i>tid</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>tid</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Thread ID of thread for which individual data is to be deleted&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 on normal completion.<br>When an error occurs, one of the following errors is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_CORE_THREAD_NOT_FOUND">SCE_ERROR_NET_CORE_THREAD_NOT_FOUND</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_CORE_THREAD_BUSY">SCE_ERROR_NET_CORE_THREAD_BUSY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes individual data for the thread corresponding to <i>tid</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>sceNetFreeThreadinfo(<a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelGetThreadId">sceKernelGetThreadId</a>());
</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetThreadAbort"></a>
<table width="100%"><td width="70%"><font size=6>sceNetThreadAbort<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Abort thread blocking<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

int <b>sceNetThreadAbort</b>(
	SceUID <i>tid</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>tid</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Thread ID of target thread to be aborted&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 on normal completion.<br>When an error occurs, one of the following errors is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_NO_SPACE">SCE_ERROR_NET_NO_SPACE</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_CORE_THREAD_NOT_FOUND">SCE_ERROR_NET_CORE_THREAD_NOT_FOUND</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function aborts a thread that was blocked while calling an ad hoc socket API or a BSD socket API.<br>If the function that aborted blocking experiences an error, then if it is an ad hoc socket API, <a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOC_THREAD_ABORTED">SCE_ERROR_NET_ADHOC_THREAD_ABORTED</a> will be returned; if it is a BSD socket API, EINTR will be returned from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>().<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>
int tid = get_target_tid(); /* Get thread ID of abort target */

sceNetThreadAbort(tid);

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetEtherStrton"></a>
<table width="100%"><td width="70%"><font size=6>sceNetEtherStrton<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert string representation of address to 48-bit Ethernet address<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

void <b>sceNetEtherStrton</b>(
	const char *<i>str</i>,
	struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> *<i>n</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>str</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to character string that represents Ethernet address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ethernet address structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a character string (xx:xx:xx:xx:xx:xx ) that represents an Ethernet address to a 48-bit Ethernet address.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> n;

sceNetEtherStrton("01:23:45:67:89:ab", &amp;n);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#sceNetEtherNtostr">sceNetEtherNtostr</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetEtherNtostr"></a>
<table width="100%"><td width="70%"><font size=6>sceNetEtherNtostr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert 48-bit Ethernet address to character string representation of address<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

void <b>sceNetEtherNtostr</b>(
	const struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> *<i>n</i>,
	char *<i>str</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ethernet address structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>str</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area where the character string representation of the address will be stored&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a 48-bit Ethernet address to a character string representation (xx:xx:xx:xx:xx:xx ). The area <i>str</i> that is the storage destination must be at least 18 bytes.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> n;
char str[sizeof("XX:XX:XX:XX:XX:XX")];

ret = <a href="../network/PSPNET_Core-Reference-English.htm#sceNetGetLocalEtherAddr">sceNetGetLocalEtherAddr</a>(&amp;n);
if(ret &lt; 0){
	/* Error handling */
}
sceNetEtherNtostr(&amp;n, str);

printf("Local MAC Addr: %s\n", str);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#sceNetEtherStrton">sceNetEtherStrton</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetHtonl"></a>
<table width="100%"><td width="70%"><font size=6>sceNetHtonl<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert byte order of 32-bit value (host &rarr; network) <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <b>sceNetHtonl</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>host32</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>host32</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;32-bit value (host byte order)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the network byte order value of<i> host32.</i><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a 32-bit (4-byte) value from host byte order to network byte order.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> hval, nval;

hval = get_value(); /* Get 4-byte numeric value */

nval = sceNetHtonl(hval);

/* Send over network */
...

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#sceNetHtons">sceNetHtons</a>()<br><a href="../network/PSPNET_Core-Reference-English.htm#sceNetNtohl">sceNetNtohl</a>()<br><a href="../network/PSPNET_Core-Reference-English.htm#sceNetNtohs">sceNetNtohs</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetHtons"></a>
<table width="100%"><td width="70%"><font size=6>sceNetHtons<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert byte order of 16-bit value (host &rarr; network)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <b>sceNetHtons</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <i>host16</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>host16</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;16-bit value (host byte order)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the network byte order value of<i> host16.</i><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a 16-bit (2-byte) value from host byte order to network byte order.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> hval, nval;

hval = get_value(); /* Get 2-byte numeric value */

nval = sceNetHtons(hval);

/* Send over network */
...

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#sceNetHtonl">sceNetHtonl</a>()<br><a href="../network/PSPNET_Core-Reference-English.htm#sceNetNtohl">sceNetNtohl</a>()<br><a href="../network/PSPNET_Core-Reference-English.htm#sceNetNtohs">sceNetNtohs</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetNtohl"></a>
<table width="100%"><td width="70%"><font size=6>sceNetNtohl<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert byte order of 32-bit value (network &rarr;host)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <b>sceNetNtohl</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>net32</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>net32</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;32-bit value (network byte order)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns the host byte order value of<i> net32.</i><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a 32-bit (4-byte) value from network byte order to host byte order.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> hval, nval;

nval = get_value_from_peer(); /* Get 4-byte numeric value from network peer */

hval = sceNetNtohl(nval);

/* Value converted to local byte order can be used */

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#sceNetHtonl">sceNetHtonl</a>()<br><a href="../network/PSPNET_Core-Reference-English.htm#sceNetHtons">sceNetHtons</a>()<br><a href="../network/PSPNET_Core-Reference-English.htm#sceNetNtohs">sceNetNtohs</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetNtohs"></a>
<table width="100%"><td width="70%"><font size=6>sceNetNtohs<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert byte order of 16-bit value (network &rarr; host)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <b>sceNetNtohs</b>(
	<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <i>net16</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>net16</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;16-bit value (network byte order)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns host byte order value of <i>net16</i>.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a 16-bit (2-byte) value from network byte order to host byte order.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> hval, nval;

nval = get_value_from_peer(); /* Get 2-byte numeric value from network peer */

hval = sceNetNtohs(nval);

/* Value converted to local byte order can be used */

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#sceNetHtonl">sceNetHtonl</a>()<br><a href="../network/PSPNET_Core-Reference-English.htm#sceNetHtons">sceNetHtons</a>()<br><a href="../network/PSPNET_Core-Reference-English.htm#sceNetNtohl">sceNetNtohl</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetGetLocalEtherAddr"></a>
<table width="100%"><td width="70%"><font size=6>sceNetGetLocalEtherAddr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get MAC address<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

int <b>sceNetGetLocalEtherAddr</b>(
	struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> *<i>ether</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ether</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;MAC address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 on normal completion.<br>When an error occurs, one of the following errors is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_CORE_INVALID_ARG">SCE_ERROR_NET_CORE_INVALID_ARG</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the MAC address of the network interface and stores it in <i>ether</i>.<br><br></div>

<!-- sce_title -->
<a Name ="HeadingT_5_1">
<div style="margin-left:40px;"><h4><b>Precaution</b><br><br></h4></div></a>

<div style="margin-left:50px;">The specifications for this function are such that the MAC address cannot be obtained unless the PSP&trade; is connected to a network.<br>Since the <a href="../network/Wlan-Reference-English.htm#sceWlanGetEtherAddr">sceWlanGetEtherAddr</a>() function is provided for getting the MAC address regardless of the connection state, use that function instead.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> n;
char str[sizeof("XX:XX:XX:XX:XX:XX")];

ret = sceNetGetLocalEtherAddr(&amp;n);
if(ret &lt; 0){
	/* Error handling */
}
<a href="../network/PSPNET_Core-Reference-English.htm#sceNetEtherNtostr">sceNetEtherNtostr</a>(&amp;n, str);

printf("Local MAC Addr: %s\n", str);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetGetMallocStat"></a>
<table width="100%"><td width="70%"><font size=6>sceNetGetMallocStat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get internal memory usage status<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet.h&gt;

int <b>sceNetGetMallocStat</b>(
	struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetMallocStat">SceNetMallocStat</a> *<i>pspnet_mstat</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler.<br>Can be called from a thread (must be called in interrupt-enabled state).<br>Multithread safe.<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pspnet_mstat</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to memory usage status structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 on normal completion.<br>When an error occurs, one of the following errors is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_CORE_INVALID_ARG">SCE_ERROR_NET_CORE_INVALID_ARG</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the usage status of the internal PSPNET memory pool and stores it in <i>stat</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetMallocStat">SceNetMallocStat</a> stat;

ret = sceNetGetMallocStat(&amp;stat);
if(ret &lt; 0){
	/* Error handling */
}

printf("poolsize: %d, maxsize: %d, freesize: %d\n", stat.poolsize, stat.maxsize, stat.freesize);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Core-Reference-English.htm#SceNetMallocStat">SceNetMallocStat</a><br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2005 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
