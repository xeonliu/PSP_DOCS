<html lang="en">
<head>
<title>Game_Sharing-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
Game Sharing Overview
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>Game Sharing Overview</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>Overview</b><br>
</a>
</h3>
<div style="margin-left:50px;">Game sharing is a function that enables external bootable binaries to be sent and received between PSP&trade; consoles using ad hoc mode communications. This document describes how game sharing is implemented on the server and provides detailed information about the external bootable binaries.<br>An external bootable binary is a single file that contains a boot binary and header information. The maximum size of an external bootable binary is 8M bytes (8 x 1024 x 1024 bytes).<br><br>Game sharing is performed over a pre-established ad hoc network. An example is shown below.<br></div>

<div align=center>
<p>
<img src="gif/Game_Sharing-Overview-English001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 1 Game Sharing Utility Overview</b><br>
</div>
<br>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:40px;"><ul>
<li> Game sharing server<br>A game program running on the server calls a game sharing utility API to wait for a connection from a client. The size of an external bootable binary that can be transferred is limited to (8 x 1024 x 1024) bytes.
<li> Game sharing client<br>The game sharing function is implemented by PSP&trade; system software. When the user selects "Game sharing" from the "Game" menu, a search is performed to find a server. After the server is selected and the external bootable binary is successfully received, the client will automatically boot up using that data, expanding the external bootable binary in memory. When the PSP&trade; is powered off, the external bootable binary will disappear.
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>Module Organization</b><br>
</a>
</h3>
<div style="margin-left:50px;">The following files are required to use the game sharing utility.<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Category</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Filename</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Header file&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;utility_gamesharing.h&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Stub library file&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;utility_ stub.a&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">Before using the game sharing utility, a PSP&trade; must be connected to an ad hoc network for game sharing. The following libraries are required for an ad hoc network connection.<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Category</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Filename</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Header file&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;pspnet_error.h&nbsp;&nbsp;<br>&nbsp;&nbsp;pspnet.h&nbsp;&nbsp;<br>&nbsp;&nbsp;pspnet_adhoc.h&nbsp;&nbsp;<br>&nbsp;&nbsp;pspnet_adhocctl.h&nbsp;&nbsp;<br>&nbsp;&nbsp;pspnet_adhoc_matching.h&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Weak import stub library file&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;pspnet_stub_weak.a&nbsp;&nbsp;<br>&nbsp;&nbsp;pspnet_adhoc_stub_weak.a&nbsp;&nbsp;<br>&nbsp;&nbsp;pspnet_adhocctl_stub_weak.a&nbsp;&nbsp;<br>&nbsp;&nbsp;pspnet_adhoc_matching_stub_weak.a&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Stub library file&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;pspnet_stub.a&nbsp;&nbsp;<br>&nbsp;&nbsp;pspnet_adhoc_stub.a&nbsp;&nbsp;<br>&nbsp;&nbsp;pspnet_adhocctl_stub.a&nbsp;&nbsp;<br>&nbsp;&nbsp;pspnet_adhoc_matching_stub.a&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">The following files are required to load modules in an external bootable binary.<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Category</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Filename</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Header file&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;modulemgr_gamesharing.h&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Stub library file&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;modulemgr_user_stub_03.a&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_1_3">
<h3>
<a href="#Heading3_1"> 1. </a>3 
<!-- hp1 --><b>Sample Programs</b><br>
</a>
</h3>
<div style="margin-left:50px;">The following are game sharing utility sample programs that run on the server.<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_3_1"><h4>
(1)&nbsp;<b>devkit/sample/utility/gamesharing/adhoc_stick_server</b><br></h4>
</a></div>
<div style="margin-left:67px;">This is a sample game sharing utility server.<br>The host0:./upload.dat file in the current directory is transferred as an external bootable binary. This sample was created based on the adhoc_stick network sample. When the sample is started up and the O button is pressed, the PSP&trade; connects to a game sharing IBSS and then the game sharing utility automatically starts.<br>After the data is transferred, the server connects to a game IBSS and operation is the same as the adhoc_stick sample.<br>If the O button is pressed while the server is connected to a game IBSS, the server is disconnected from the network and the display returns to the initial screen.<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_1_3_2"><h4>
(2)&nbsp;<b>devkit/sample/utility/gamesharing/adhoc_stick_gamedata</b><br></h4>
</a></div>
<div style="margin-left:67px;">This is a sample of the external bootable binary (upload.dat) that is used by devkit/sample/gamesharing/adhoc_stick_server. After this sample is booted up, the game sharing server connects to an ad hoc network using the specified group name. After that, operation is the same as the adhoc_stick sample.<br><br>Note: To make a program actually run as game data, after compilation it must be packaged as an external bootable binary. For details about packaging, refer to the document entitled "External Bootable Binaries."<br></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>Game Sharing Server Implementation Method</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">This section explains how a game sharing server is implemented. For details related to the implementation, see the sample program (devkit/sample/utility/gamesharing/adhoc_stick_server). The following figure shows the processing flow of the server-side program.<br></div>

<div align=center>
<p>
<img src="gif/Game_Sharing-Overview-English002.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 2  Game Sharing (Server Side) Program Processing Flow</b><br>
</div>
<br>
<div style="margin-left:50px;">The functions of a server-side program can be broadly divided into the following five steps: network initialization, connection to a game sharing network, startup of the game sharing utility, transfer of the external bootable binary, and disconnection from the game sharing network. Each of these steps is described below.<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>Initializing the Network</b><br>
</a>
</h3>
<div style="margin-left:50px;">The network library that will be used by the game sharing utility must first be initialized by the game title. If the title also uses the network library, the library must be terminated and then initialized again.<br>The required network library modules are the PSPNET shared module set and the PSPNET ad hoc module set.<br><br>For information about how to load modules, refer to the sample program (devkit/sample/utility/gamesharing/adhoc_stick_server).<br><br>Note that to initialize the network library, the game sharing ad hoc ID must be specified and the pspnet_adhoc_matching library must be initialized. For the ad hoc ID, specify SCE_NET_ADHOCCTL_ADHOCTYPE_SYSTEM for type, and &quot;000000001&quot; for data. For information about other library initialization requirements, refer to the pspnet and pspnet_adhoc_matching documentation.<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>// Specify game sharing ad hoc ID
static struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlAdhocId">SceNetAdhocctlAdhocId</a> gamesharing_id = {
    .type = SCE_NET_ADHOCCTL_ADHOCTYPE_SYSTEM,
    .data = {'0','0','0','0','0','0','0','0','1'}   /* "000000001" */
};

// Initialize pspnet_adhocctl module
ret = <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlInit">sceNetAdhocctlInit</a>(ADHOCCTL_STACKSIZE, ADHOCCTL_TPL, &amp;gamesharing_id);
if (ret &lt; 0) {
	// Error handling
}
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>Connecting to a Game Sharing Network</b><br>
</a>
</h3>
<div style="margin-left:50px;">Use the pspnet_adhocctl library to connect to a game sharing ad hoc network. Specify the game sharing group name as an argument to the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlConnect">sceNetAdhocctlConnect</a>() function. The group name is "GameShar." For details, refer to the pspnet documentation.<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>static struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a> gamesharing_group_name = {
    .data = {'G', 'a', 'm', 'e', 'S', 'h', 'a', 'r'} /* "GameShar */
};

ret = <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlConnect">sceNetAdhocctlConnect</a>(&amp;gamesharing_group_name);
if (ret &lt; 0) {
	// Error handling
}
while (1) {
	// Poll connection status 
}
// Connection is completed

</font></pre></div>
<div style="margin-left:50px;">The network connection utility can also be used to connect to the network.<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_3">
<h3>
<a href="#Heading3_2"> 2. </a>3 
<!-- hp1 --><b>Starting Up the Game Sharing Utility</b><br>
</a>
</h3>
<div style="margin-left:50px;">The game sharing utility provides the game sharing server function. The game sharing server is started by calling a special-purpose API. When starting up the server, specify the game data and group name. For details about the API, refer to the sample program and the "Utility Reference."<br><br>When the game sharing utility is started up normally, it enters server standby state. At this time, a server list can be accessed from the client side. When the client sends a download request and the server receives it, the transfer of the game sharing external bootable binary will begin. An external bootable binary consists of binary data in a proprietary format. The format is not verified during game sharing. Only the amount of data equal to the specified data size is received. If the data is not in the proper format, game startup will fail after the transfer has completed.<br><br>The game sharing client passes the server-side MAC address and server-specified group name as startup arguments when the game is started up. This data can be used after the game is started up during gameplay with the server over the network, for example.<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_4">
<h3>
<a href="#Heading3_2"> 2. </a>4 
<!-- hp1 --><b>Game Sharing Utility Start-up Type</b><br>
</a>
</h3>
<div style="margin-left:50px;">The Game Sharing Utility has two start-up types. One is a mode for one-to-one communication between a client and server and the other is a mode that supports multiple clients.<br>The start-up type is specified by the serverType member of the <a href="../utility/Utility-Reference-English.htm#SceUtilityGameSharingParam">SceUtilityGameSharingParam</a> structure.<br></div>
<div style="margin-left:40px;"><ul>
<li> 1-to-1 mode<br>In this mode, the data transfer begins when the user accepts the request from the client. The utility is automatically terminated when the data transfer is completed. <br>The Game Sharing Utility screen flow in 1:1 mode is shown below.
</ul></div>
<div style="margin-left:50px;"><br></div>

<div align=center>
<p>
<img src="gif/Game_Sharing-Overview-English003.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 3  1:1 Mode Screen Flow</b><br>
</div>
<br>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:40px;"><ul>
<li> 1-to-n mode<br>In this mode, the data transfer begins automatically in response to a transmission from a client. At this time, a maximum of four data transfers can be performed in parallel. With this mode, the utility is not automatically terminated as it is with 1:1 mode. To terminate the utility, the user that started it up must explicitly terminate it. <br>The Game Sharing Utility screen flow in 1:n mode is shown below.
</ul></div>
<div style="margin-left:50px;"><br></div>

<div align=center>
<p>
<img src="gif/Game_Sharing-Overview-English004.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 4  1:n Mode Screen Flow</b><br>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_2_5">
<h3>
<a href="#Heading3_2"> 2. </a>5 
<!-- hp1 --><b>External Bootable Binary Transfer</b><br>
</a>
</h3>
<div style="margin-left:50px;">The following two methods can be used to transfer an external bootable binary.<br>The binary transfer method is specified by the dataLocationType member of the <a href="../utility/Utility-Reference-English.htm#SceUtilityGameSharingParam">SceUtilityGameSharingParam</a> structure.<br><br></div>
<div style="margin-left:40px;"><ul>
<li> Transferring data in the filesystem <br>Data in the filesystem is transferred by specifying SCE_UTILITY_GAMESHARING_LOCATION_TYPE_FILE for dataLocationType. Specify the file path for the filePath member of the <a href="../utility/Utility-Reference-English.htm#SceUtilityGameSharingParam">SceUtilityGameSharingParam</a> structure.
<li> Transferring data in memory <br>Data in memory is transferred by specifying SCE_UTILITY_GAMESHARING_LOCATION_TYPE_MEMORY for dataLocationType. Specify the buffer pointer and size of the data for the uploadData and uploadDataSize members of the <a href="../utility/Utility-Reference-English.htm#SceUtilityGameSharingParam">SceUtilityGameSharingParam</a> structure, respectively.
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_2_6">
<h3>
<a href="#Heading3_2"> 2. </a>6 
<!-- hp1 --><b>Disconnecting From the Game Sharing Network</b><br>
</a>
</h3>
<div style="margin-left:50px;">After the game sharing utility is terminated, disconnect from the network in the normal manner. For details, refer to the pspnet documentation.<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>External Bootable Binaries</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">An external bootable binary consists of binary data that is sent by the game sharing utility and received and booted up from the PSP&trade; system software menu. An external bootable binary consists of a system file and a game boot file which had been previously authorized.<br>This section describes how the game boot file is implemented. For details related to implementation, see the sample program (devkit/sample/utility/gamesharing/adhoc_stick_gamedata).<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>Boot-Time Arguments</b><br>
</a>
</h3>
<div style="margin-left:50px;">When the binary is booted, the following values are passed as arguments of the main() function of the program.<br>The values of these arguments are provided by the game sharing server, so they can be used after startup for communicating or for gameplay with the server.<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Arguments to main()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Data Contents</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;argv[1]&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;MAC address of server&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;argv[2]&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Group name&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The MAC address is a string having the format "XX:XX:XX:XX:XX:XX".<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>Module Loading</b><br>
</a>
</h3>
<div style="margin-left:50px;">Modules can be made available for use in the program by loading them from a buffer. Use the following API to load a module from the buffer.<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>&lt;modulemgr_gamesharing.h&gt;
int <a href="../kernel/Module_Manager-Reference-English.htm#sceKernelLoadModuleBufferUsbWlan">sceKernelLoadModuleBufferUsbWlan</a>(SceSize size, 
void *base, 
int flags, 
const <a href="../kernel/Module_Manager-Reference-English.htm#SceKernelLMOption">SceKernelLMOption</a> *pOpt
);
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_3_3">
<h3>
<a href="#Heading3_3"> 3. </a>3 
<!-- hp1 --><b>Debugging</b><br>
</a>
</h3>
<div style="margin-left:50px;">A binary which has been authorized can no longer be started up from dstdb. If the binary has not been authorized yet, a debugging program such as dstdb can be used to debug the binary just as for a normal program.<br>Specifying the MAC address of the game sharing utility server and group name in the mstart command at this time enables the binary to be started up in a form that is more like that of the production version.<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>Example:
dstdb 0R0&gt; mstart  sample.prx  00:00:00:00:00:00  GROUP
</font></pre></div>
<div style="margin-left:50px;"><br>Also, if the program is started up from dstdb, <a href="../kernel/Module_Manager-Reference-English.htm#sceKernelLoadModuleBufferUsbWlan">sceKernelLoadModuleBufferUsbWlan</a>() can no longer be used. Use the normal <a href="../kernel/Module_Manager-Reference-English.htm#sceKernelLoadModule">sceKernelLoadModule</a>() API to load a module from a host or from a disc.<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_4">
<h2>
 4 <!-- hp --><b>Precautions</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_4_1">
<h3>
<a href="#Heading3_4"> 4. </a>1 
<!-- hp1 --><b>PSP&trade; System Software Version</b><br>
</a>
</h3>
<div style="margin-left:50px;">If a PSP&trade; receives a bootable binary, but the version of its system software is older than the release version of the package that was used to create the bootable binary, it will not be possible for the binary to be booted.<br>For details, refer to the Precautions chapter of the "External Bootable Binaries" document.<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_2">
<h3>
<a href="#Heading3_4"> 4. </a>2 
<!-- hp1 --><b>Network Errors During Startup of the Game Sharing Utility</b><br>
</a>
</h3>
<div style="margin-left:50px;">Since the game sharing utility displays network errors via the server while game sharing is started up, the game program does not need to display the errors. If an error event occurs while the utility is being started up, be sure to perform network disconnection after the utility call without performing any screen display.<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_3">
<h3>
<a href="#Heading3_4"> 4. </a>3 
<!-- hp1 --><b>Loading Modules From a Buffer</b><br>
</a>
</h3>
<div style="margin-left:50px;">Modules can be loaded from a buffer by using <a href="../kernel/Module_Manager-Reference-English.htm#sceKernelLoadModuleBufferUsbWlan">sceKernelLoadModuleBufferUsbWlan</a>(). However, modules can be loaded only if they are in the devkit/module or devkit/kmodule directories. Note that <a href="../kernel/Module_Manager-Reference-English.htm#sceKernelLoadModuleBufferUsbWlan">sceKernelLoadModuleBufferUsbWlan</a>() can only be used from programs that were created as external bootable binaries.<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_4">
<h3>
<a href="#Heading3_4"> 4. </a>4 
<!-- hp1 --><b>Displaying Debugging Information on the TOOL</b><br>
</a>
</h3>
<div style="margin-left:50px;">When the TOOL receives game sharing data, system file (param.sfo) information that is contained in the external bootable binary that was received is displayed. Since this function is TOOL-specific, this information is not displayed on an actual device.<br>The following information is displayed.<br><br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP">&nbsp;&nbsp;Status&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;If the system file format is correct, "OK" is displayed. If the format does not conform to the official format, "ERROR&quot; is displayed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;DISC_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The product number included in the system file is displayed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;PSP_SYSTEM_VER&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The PSP&trade; system version included in the system file is displayed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;REGION&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The region included in the system file is displayed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SHARING_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The SharingID included in the system file is displayed.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2005 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
