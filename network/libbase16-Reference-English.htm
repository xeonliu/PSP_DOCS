<html lang="en">
<head>
<title>libbase16-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libbase16 Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceBase16Encoder"></a>
<table width="100%"><td width="70%"><font size=6>sceBase16Encoder<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>BASE16 encoding<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libbase16.h&gt;
int <b>sceBase16Encoder </b>(
	unsigned char <i>*pDat</i>,
	const unsigned char <i>*pSrc</i>,
	unsigned int <i>uiSize</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pDat</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to output buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to input byte sequence&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of input bytes&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Number of output bytes<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function BASE16 encodes the input byte sequence specified by <i>pSrc</i> and <i>uiSize</i>, outputs the result to the memory area specified by <i>pDat</i>, and returns the number of output bytes. The application must allocate a memory area for the output in advance with a size of (<i>uiSize</i>*2 + 1) bytes.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Although the data that is output has been NULL-terminated for safety, the extra byte for the NULL is not counted in the number of output bytes that are returned.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceBase16Decoder"></a>
<table width="100%"><td width="70%"><font size=6>sceBase16Decoder<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>BASE16 decoding<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libbase16.h&gt;
int <b>sceBase16Decoder </b>(
	unsigned char *<i>pDat</i>,
	const unsigned char *<i>pSrc</i>,
	unsigned int <i>uiSize</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pDat</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to output buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pSrc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to input byte sequence&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>uiSize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of input bytes&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of output bytes&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function decodes the input byte sequence specified by <i>pSrc</i> and <i>uiSize</i> (BASE16-encoded data) and outputs the result to the memory area specified by <i>pDat</i>. When the function completes normally, the number of output bytes is returned. If an error occurs, -1 is returned. The application must allocate a memory area for the output in advance with a size of (<i>uiSize </i>/ 2 + 1) bytes.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Although the data that is output has been NULL-terminated for safety, the extra byte for the NULL is not counted in the number of output bytes that are returned.<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2008 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
