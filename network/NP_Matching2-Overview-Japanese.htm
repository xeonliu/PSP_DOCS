<html lang="jp">
<head>
<title>NP_Matching2-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
NPマッチング2 概要
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>概要</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">NPマッチング2ユーティリティは、オンライン対戦やチャット等、ネットワーク機能を実装するアプリケーションを支援するライブラリです。アプリケーションはNPマッチング2ユーティリティを用いて、PlayStation&reg;Network（通称NP）が提供するNPマッチング2システムを利用することができます。<br><br>NPマッチング2ユーティリティは、以下の機能を提供します。<br></div>
<div style="margin-left:40px;"><ul>
<li> ルーム検索機能
<li> ルームの動的な作成機能
<li> ルーム内でのチャット機能<br>バルガリティフィルタ（不適切な言葉を隠蔽するフィルタ）を適用可能
<li> ルーム内のユーザ間でのデータの送受信機能
<li> ルームの入室制限機能
<li> チーム対戦のサポート機能
<li> NP IDによるユーザ検索機能
<li> ルームメンバ間のP2Pコネクション確立機能
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>ファイル</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPマッチング2ユーティリティを使用するために必要なファイルは次のとおりです。<br></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;np_matching2.h&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Matching2ヘッダファイル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;pspnet_upnp.h&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;UPnPヘッダファイル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;np_matching2_stub_weak.a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Matching2スタブライブラリファイル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;pspnet_upnp_stub_weak.a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;UPnPスタブライブラリファイル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">NPマッチング2ユーティリティは、PRX形式のモジュールとして提供されます。NPマッチング2モジュールを使用するためには、np_matching2_stub_weak.aを静的にリンクしたうえ、モジュールユーティリティのAPIにてロード・アンロードを行う必要があります。<br>モジュールのロード・アンロードについて詳しくは、「モジュールユーティリティ リファレンス」ドキュメントを参照してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>サンプルプログラム</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPマッチング2ユーティリティと共に以下のサンプルプログラムを提供します。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_2_1">
<div style="margin-left:40px;"><h4><b>np_matching2_allow_block_listサンプル</b><br><br></h4></div></a>

<div style="margin-left:67px;">ルームの入室許可ユーザ、入室拒否ユーザの利用方法を示すサンプルです。このサンプルでは、ユーザのフレンドリストに登録されているユーザを入室許可ユーザに設定し、ブロックリストに登録されているユーザを入室拒否ユーザに設定します。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_2_2">
<div style="margin-left:40px;"><h4><b>np_matching2_room_passwordサンプル</b><br><br></h4></div></a>

<div style="margin-left:67px;">ルームパスワードの使用例を示すサンプルです。パスワードのユーザ入力による入室制限を行います。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_2_3">
<div style="margin-left:40px;"><h4><b>np_matching2_group_roomサンプル</b><br><br></h4></div></a>

<div style="margin-left:67px;">チーム対戦などのための機能や入室制限などをサポートするルームグループの機能と使用例を示すサンプルです。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_2_4">
<div style="margin-left:40px;"><h4><b>np_matching2_team_idサンプル</b><br><br></h4></div></a>

<div style="margin-left:67px;">ルームメンバ基本情報のチームIDの使用例を示すサンプルです。チームIDによるメッセージの宛先指定と更新通知機能の利用方法を示します。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>動作概要と使用方法の特徴</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">本章では、NPマッチング2ユーティリティの動作概要と、いくつかの処理に共通する特徴的な使用方法について説明します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>UPnPライブラリ</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPマッチング2は、UPnPライブラリに依存しています。NPマッチング2の初期化、終了の処理に合わせてUPnPライブラリも初期化、終了、およびUPnPライブラリの内部スレッドの開始、停止を行うようにしてください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>コンテキスト作成</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPマッチング2ユーティリティを使用するには、まずコンテキストを作成する必要があります。コンテキストの作成には、NPおよびNPマッチング2システムの利用申請時に取得した、NPコミュニケーションIDとコミュニケーションパスフレーズが必要です。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_3">
<h3>
<a href="#Heading3_2"> 2. </a>3 
<!-- hp1 --><b>コールバック登録</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPマッチング2ユーティリティでは、サーバーアクセスを伴うマッチング処理を実行した時の実行結果や、セッションへのユーザの出入りやデータ受信などのセッション内で発生する事象は、アプリケーションが登録したコールバック関数にイベントという形で通知されます。コールバック関数には次の4つ種類があり、アプリケーションはそれぞれのコールバック関数を用意する必要があります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_3_1"><h4>
(1)&nbsp;<b>リクエストコールバック</b><br></h4>
</a></div>
<div style="margin-left:67px;">NPマッチング2ユーティリティが提供する関数のうち、サーバーに問い合わせを行う関数をリクエスト関数と呼びます。リクエスト関数の実行結果はリクエストコールバック関数に通知されます。アプリケーションはリクエスト関数実行前にデフォルトのリクエストコールバック関数を登録するか、リクエスト関数を実行するたびにリクエストコールバック関数を指定する必要があります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_3_2"><h4>
(2)&nbsp;<b>ルームイベントコールバック</b><br></h4>
</a></div>
<div style="margin-left:67px;">ルーム参加中にメンバの入退室・ルームオーナー変更・ルーム（メンバ）内部バイナリ属性更新などが発生すると、ルームイベントコールバック関数に通知されます。アプリケーションはルームへの参加前にルームイベントコールバック関数を登録する必要があります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_3_3"><h4>
(3)&nbsp;<b>ルームメッセージコールバック</b><br></h4>
</a></div>
<div style="margin-left:67px;">ルーム参加中にルームメッセージやルームチャットメッセージを受信すると、ルームメッセージコールバック関数に通知されます。アプリケーションはルームへの参加前にルームメッセージコールバック関数を登録する必要があります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_3_4"><h4>
(4)&nbsp;<b>シグナリングコールバック</b><br></h4>
</a></div>
<div style="margin-left:67px;">シグナリングオプションパラメータが設定されたルーム内では、ルームメンバ間でP2Pコネクションの確立処理が実行されます。ルームメンバ間でのP2Pコネクションの確立や破棄が発生すると、シグナリングコールバック関数に通知されます。アプリケーションはルームへの参加前、あるいはシグナリングオプションパラメータの設定前にシグナリングコールバック関数を登録する必要があります。<br></div>
<div style="margin-left:50px;">各コールバック関数の詳細については「NPマッチング2 リファレンス」を参照してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_4">
<h3>
<a href="#Heading3_2"> 2. </a>4 
<!-- hp1 --><b>リクエスト関数</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPマッチング2ユーティリティが提供する関数のうち、サーバーに問い合わせを行う関数をリクエスト関数と呼びます。リクエスト関数には様々なものがありますが、呼び出し手順は共通です。<br>ここでは、サーバー情報を取得するためのリクエスト関数である<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetServerInfo">sceNpMatching2GetServerInfo</a>()を例に、リクエスト関数の呼び出し手順について説明します。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>int
<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetServerInfo">sceNpMatching2GetServerInfo</a>(
	<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2ContextId">SceNpMatching2ContextId</a> <i>ctxId</i>,
	const <a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2GetServerInfoRequest">SceNpMatching2GetServerInfoRequest</a> *<i>reqParam</i>,
	const <a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2RequestOptParam">SceNpMatching2RequestOptParam</a> *<i>optParam</i>,
	<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2RequestId">SceNpMatching2RequestId</a> *<i>assignedReqId</i>
	);

</font></pre></div>
<div style="margin-left:50px;">引数<i>ctxId</i>にはコンテキスト作成の結果取得したコンテキストIDを指定します。<br><br>引数<i>reqParam</i>は、リクエスト関数のパラメータ構造体へのポインタです。リクエスト関数のパラメータ構造体の名前は、&quot;リクエスト関数名 + Request&quot; となっています。例えば、<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetServerInfo">sceNpMatching2GetServerInfo</a>()に対応するリクエストパラメータ構造体は、<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2GetServerInfoRequest">SceNpMatching2GetServerInfoRequest</a>です。<br><br>引数<i>optParam</i>は、オプションパラメータなのでNULLでも構いません。オプションパラメータを指定すると、リクエスト毎にリクエストコールバック関数登録やタイムアウト時間の設定を行ったり、割り当てられるリクエストIDの上位16ビットを指定することができます。<br>オプションパラメータの構造体は次のようになっています。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>typedef struct <a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2RequestOptParam">SceNpMatching2RequestOptParam</a> {
	<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2RequestCallback">SceNpMatching2RequestCallback</a> <i>cbFunc</i>;
	void *<i>cbFuncArg</i>;
	uint32_t <i>timeout</i>;
	uint16_t <i>appReqId</i>;
	uint8_t <i>padding</i>[2];
} <a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2RequestOptParam">SceNpMatching2RequestOptParam</a>;

</font></pre></div>
<div style="margin-left:50px;"><i>cbFunc</i>に実行するリクエスト関数の結果を通知するリクエストコールバック関数を指定し、リクエストコールバック関数の引数に渡される任意のデータを<i>cbFuncArg</i>に指定します。<i>timeout</i>にはタイムアウト時間を設定します。<i>optParam</i>で指定されたリクエストコールバック関数とタイムアウト時間は、デフォルトのリクエストコールバック関数とタイムアウト時間よりも優先的に使用されます。<br><br><i>appReqId</i>には、リクエストIDの上位16ビットを指定することができます。NPマッチング2ユーティリティは下位16ビットを生成し、<i>appReqId</i>で指定された値と合わせた32ビットの値をリクエストIDとします。上位16ビットをアプリケーションが指定することで、イベントなどをキューイングする際など、アプリケーション固有の規則で分類することができます。<br><br>リクエスト関数の呼び出し自体が成功すると、NPマッチング2ユーティリティが上記のようにそのリクエストに割り当てたリクエストIDが、引数<i>assignedReqId</i>で指定した変数に格納されます。リクエストコールバックにはイベントと共にリクエストIDも通知されるので、アプリケーションはどのリクエストに対応するイベントであるかをこのリクエストIDを比較することで判別します。<br><br>各リクエスト関数の詳細は「NPマッチング2 リファレンス」を参照してください。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>処理フローと使用例</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">本章では、NPマッチング2ユーティリティを利用したアプリケーションの、典型的な処理フローと使用例を示します。<br></div>

<div align=center>
<p>
<img src="gif/NP_Matching2-Overview-Japanese001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 1  処理フロー</b><br>
</div>
<br>
<div style="margin-left:50px;">本章のコード例では、関数の返り値を格納する変数として次の宣言がされているものとします。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>int ret;
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>共通開始処理</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPマッチング2ユーティリティを使用するすべてのアプリケーションは、次の処理を必ず最初に実行してください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_1_1"><h4>
(1)&nbsp;<b>NPマッチング2モジュールのロード</b><br></h4>
</a></div>
<div style="margin-left:67px;">NPマッチング2ユーティリティを使用するには、NPマッチング2モジュールをロードします。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
ret = <a href="../utility/Utility-Reference-Japanese.htm#sceUtilityLoadModule">sceUtilityLoadModule</a>(SCE_UTILITY_MODULE_NP_MATCHING2);
if (ret &lt; 0) {
    //J エラー処理
}
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_1_2"><h4>
(2)&nbsp;<b>初期化</b><br></h4>
</a></div>
<div style="margin-left:67px;">NPマッチング2ユーティリティの初期化を行います。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
//J NPマッチング2ユーティリティの初期化
ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2Init">sceNpMatching2Init</a>(NP_MATCHING2_POOL_SIZE, NP_MATCHING2_TPL, NP_MATCHING2_STACKSIZE, NP_SIGNALING_TPL);
if (ret &lt; 0) {
    //J エラー処理
}
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_1_3"><h4>
(3)&nbsp;<b>UPnPライブラリの初期化</b><br></h4>
</a></div>
<div style="margin-left:67px;">UPnPライブラリの初期化を行います。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNetUpnpInit">sceNetUpnpInit</a>(SCE_NET_UPNP_INTERNAL_THREAD_LEAST_STACK_SIZE,1000);
if (ret &lt; 0) {
    //J エラー処理
}
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_1_4"><h4>
(4)&nbsp;<b>UPnPライブラリの開始</b><br></h4>
</a></div>
<div style="margin-left:67px;">UPnPライブラリを開始します。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNetUpnpStart">sceNetUpnpStart</a>();
if (ret &lt; 0) {
    //J エラー処理
}
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_1_5"><h4>
(5)&nbsp;<b>コンテキストの作成と開始</b><br></h4>
</a></div>
<div style="margin-left:67px;">NPマッチング2ユーティリティのコンテキストを作成し、コンテキストの開始処理を実行します。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
//J コンテキスト作成に必要なパラメータ
//  適切な値が格納されているものとする
<a href="../network/NP_Common-Reference-Japanese.htm#SceNpCommunicationId">SceNpCommunicationId</a> commId;
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpCommunicationPassphrase">SceNpCommunicationPassphrase</a> passPhrase;
int option;

//J 作成したコンテキストのIDを格納する変数
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2ContextId">SceNpMatching2ContextId</a> ctxId;

//J コンテキストを作成する
ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2CreateContext">sceNpMatching2CreateContext</a>(
	&amp;commId, &amp;passPhrase, &amp;ctxId, option);
if (ret &lt; 0) {
    //J エラー処理
}

//J コンテキストを開始する
ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2ContextStart">sceNpMatching2ContextStart</a>(ctxId);
if (ret &lt; 0) {
    //J エラー処理
}
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>コールバック登録</b><br>
</a>
</h3>
<div style="margin-left:50px;"><a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2SetDefaultRequestOptParam">sceNpMatching2SetDefaultRequestOptParam</a>(), <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2SetDefaultRoomEventOptParam">sceNpMatching2SetDefaultRoomEventOptParam</a>(), <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2SetDefaultRoomMessageOptParam">sceNpMatching2SetDefaultRoomMessageOptParam</a>(), <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2RegisterSignalingCallback">sceNpMatching2RegisterSignalingCallback</a>()を実行し、リクエストコールバック、ルームイベントコールバック、ルームメッセージコールバック、シグナリングコールバックを登録します。<br><br>各関数の詳細は「NPマッチング2 リファレンス」を参照してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_3">
<h3>
<a href="#Heading3_3"> 3. </a>3 
<!-- hp1 --><b>サーバー情報取得・サーバー選択</b><br>
</a>
</h3>
<div style="margin-left:50px;">アプリケーションが使用することができるサーバーの中から、使用するサーバーを選択します。サーバー一覧を表示しユーザが選択するか、アプリケーションが自動的に選択するかは、アプリケーションに依存します。<br><br>まず、<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetServerIdListLocal">sceNpMatching2GetServerIdListLocal</a>()を実行し、アプリケーションが使用可能なサーバーのサーバーIDリストを取得します。次に、<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetServerInfo">sceNpMatching2GetServerInfo</a>()でそれぞれのサーバーのサーバー情報を取得します。<br><br>使用するサーバーの選択では、サーバーステータスが「使用可能」なサーバーを選択してください。<br>サーバーステータスが「使用可能」なサーバーが1つもない場合、NPマッチング2システムを使用することはできません。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
int i;
int serverIdNum;
//J 適切な値が格納されているものとする
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2ContextId">SceNpMatching2ContextId</a> ctxId;
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2GetServerInfoRequest">SceNpMatching2GetServerInfoRequest</a> reqParam;
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2GetServerInfoResponse">SceNpMatching2GetServerInfoResponse</a> respParam;
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2RequestOptParam">SceNpMatching2RequestOptParam</a> optParam;
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2RequestId">SceNpMatching2RequestId</a> assignedReqId;
//J アプリケーションに割り当てられているサーバーの総数は4以下であると仮定する
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2ServerId">SceNpMatching2ServerId</a>  serverId[4];

ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetServerIdListLocal">sceNpMatching2GetServerIdListLocal</a>(
	ctxId, serverId, 4);
if (ret &lt; 0) {
    //J エラー処理
}
serverIdNum = ret;

for (i = 0; i &lt; serverIdNum; i++) {
    //J リクエストパラメータ
	memset(&amp;reqParam, 0, sizeof(reqParam));
	reqParam.serverId = serverId[i]; //J 取得対象のサーバーのサーバーIDを指定
    
	ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetServerInfo">sceNpMatching2GetServerInfo</a>(
        ctxId, &amp;reqParam, &amp;optParam, &amp;assignedReqId);
	if (ret &lt; 0) {
        /* エラー処理 */
	}

    //J リクエストコールバックに<a href="../network/NP_Matching2-Reference-Japanese.htm#SCE_NP_MATCHING2_REQUEST_EVENT_GetServerInfo">SCE_NP_MATCHING2_REQUEST_EVENT_GetServerInfo</a>が
    //  通知されるのを待機する。

    //J サーバーステータスが使用可能なものを選択する
    if (respParam.server.status == <a href="../network/NP_Matching2-Reference-Japanese.htm#SCE_NP_MATCHING2_SERVER_STATUS_AVAILABLE">SCE_NP_MATCHING2_SERVER_STATUS_AVAILABLE</a>)
        break;
    else
        continue;
}

</font></pre></div>
<div style="margin-left:50px;">各関数の詳細は「NPマッチング2 リファレンス」を参照してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_4">
<h3>
<a href="#Heading3_3"> 3. </a>4 
<!-- hp1 --><b>ワールド選択</b><br>
</a>
</h3>
<div style="margin-left:50px;">使用するサーバーに属するワールドの中から、使用するワールドを選択します。ワールド一覧を表示しユーザが選択するか、アプリケーションが自動的に選択するかは、アプリケーションに依存します。<br><br><a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetWorldInfoList">sceNpMatching2GetWorldInfoList</a>()を実行し、使用するサーバーに属するワールド情報のリストを取得します。ワールド情報に含まれるセッションやセッションメンバの数を、ワールド選択の指標とすることもできます。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
</font></pre></div>
<div style="margin-left:50px;">関数の詳細は「NPマッチング2 リファレンス」を参照してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_5">
<h3>
<a href="#Heading3_3"> 3. </a>5 
<!-- hp1 --><b>ルームの選択・ルームへの参加</b><br>
</a>
</h3>
<div style="margin-left:50px;">サーバー、ワールドの選択後、ルームへ参加するための処理を行います。<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2CreateJoinRoom">sceNpMatching2CreateJoinRoom</a>()で新規にルームを作成するか、<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2SearchRoom">sceNpMatching2SearchRoom</a>()で既存のルームを検索しその中から参加するルームを選択します。<br><br>ルーム選択の指標として、<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetRoomDataExternalList">sceNpMatching2GetRoomDataExternalList</a>()でルーム外部ルーム情報リストを取得したり、<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetRoomMemberDataExternalList">sceNpMatching2GetRoomMemberDataExternalList</a>()でルーム外部ルームメンバ情報リストを取得することもできます。<br><br>各関数の詳細は「NPマッチング2 リファレンス」を参照してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_6">
<h3>
<a href="#Heading3_3"> 3. </a>6 
<!-- hp1 --><b>P2Pコネクションの確立</b><br>
</a>
</h3>
<div style="margin-left:50px;"><a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2CreateJoinRoom">sceNpMatching2CreateJoinRoom</a>()のリクエストパラメータにシグナリングオプションパラメータを指定するか、ルーム作成後に<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2SetSignalingOptParam">sceNpMatching2SetSignalingOptParam</a>()でシグナリングオプションパラメータを設定することで、ルームメンバ間でP2Pコネクションを確立します。<br><br>例えば、ルームオーナーをハブとするスター型のトポロジでP2Pコネクションを確立する場合には、次のようにシグナリングオプションパラメータを設定します。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2SignalingOptParam">SceNpMatching2SignalingOptParam</a> sigOptParam;

memset(&amp;sigOptParam, 0, sizeof(sigOptParam));
sigOptParam.type = <a href="../network/NP_Matching2-Reference-Japanese.htm#SCE_NP_MATCHING2_SIGNALING_TYPE_STAR">SCE_NP_MATCHING2_SIGNALING_TYPE_STAR</a>;
sigOptParam.hubMemberId = 0; //J 0はルームオーナーをハブとすることを示す

</font></pre></div>
<div style="margin-left:50px;">シグナリングオプションパラメータを設定するとただちにP2Pコネクション確立処理が開始されます。P2Pコネクションが確立するか破棄された場合には、シグナリングコールバック関数にイベントが通知されます。シグナリングコールバック関数の登録は、<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2RegisterSignalingCallback">sceNpMatching2RegisterSignalingCallback</a>()を実行することで行います。<br><br>P2Pコネクション確立と破棄のイベントはそれぞれ次のとおりです。<br></div>
<div style="margin-left:40px;"><ul>
<li> P2Pコネクション確立: <a href="../network/NP_Matching2-Reference-Japanese.htm#SCE_NP_MATCHING2_SIGNALING_EVENT_Established">SCE_NP_MATCHING2_SIGNALING_EVENT_Established</a>
<li> P2Pコネクション破棄: <a href="../network/NP_Matching2-Reference-Japanese.htm#SCE_NP_MATCHING2_SIGNALING_EVENT_Dead">SCE_NP_MATCHING2_SIGNALING_EVENT_Dead</a>
</ul></div>
<div style="margin-left:50px;"><br>各関数や定義の詳細は、「NPマッチング2 リファレンス」を参照してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_7">
<h3>
<a href="#Heading3_3"> 3. </a>7 
<!-- hp1 --><b>共通終了処理</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPマッチング2ユーティリティを終了するには、次の処理を実行します。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_7_1"><h4>
(1)&nbsp;<b>UPnPライブラリの停止</b><br></h4>
</a></div>
<div style="margin-left:67px;">UPnPライブラリを停止します。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNetUpnpStop">sceNetUpnpStop</a>();
if (ret &lt; 0) {
    //J エラー処理
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_7_2"><h4>
(2)&nbsp;<b>UPnPライブラリの終了</b><br></h4>
</a></div>
<div style="margin-left:67px;">UPnPライブラリを終了させます<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNetUpnpTerm">sceNetUpnpTerm</a>();
if (ret &lt; 0) {
    //J エラー処理
}
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_7_3"><h4>
(3)&nbsp;<b>コンテキストの停止と削除</b><br></h4>
</a></div>
<div style="margin-left:67px;">コンテキストの停止処理を実行し、削除します。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
//J 適切な値が格納されているものとする。
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2ContextId">SceNpMatching2ContextId</a> ctxId;

//J コンテキストを停止する
ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2ContextStop">sceNpMatching2ContextStop</a>(ctxId);
if (ret &lt; 0) {
    //J エラー処理
}

//J コンテキストを削除する
ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2DestroyContext">sceNpMatching2DestroyContext</a>(ctxId);
if (ret &lt; 0) {
    //J エラー処理
}
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_7_4"><h4>
(4)&nbsp;<b>終了処理</b><br></h4>
</a></div>
<div style="margin-left:67px;">NPマッチング2ユーティリティの終了処理を行います。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
//J NPマッチング2ユーティリティの終了
<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2Term">sceNpMatching2Term</a>();
</font></pre></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_3_7_5"><h4>
(5)&nbsp;<b>NPマッチング2モジュールのアンロード</b><br></h4>
</a></div>
<div style="margin-left:67px;">NPマッチング2モジュールをアンロードします。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
ret = <a href="../utility/Utility-Reference-Japanese.htm#sceUtilityUnloadModule">sceUtilityUnloadModule</a>(SCE_UTILITY_MODULE_NP_MATCHING2);
if (ret &lt; 0) {
    //J エラー処理
}
</font></pre></div>

<!-- sce_hd3 -->
<a name="Heading3_4">
<h2>
 4 <!-- hp --><b>ユースケースと実装</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">本章では、NPマッチング2ユーティリティを使用するアプリケーションのユースケースと、その実装方法について説明します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_1">
<h3>
<a href="#Heading3_4"> 4. </a>1 
<!-- hp1 --><b>サーバー・ワールドの名前を表示する</b><br>
</a>
</h3>
<div style="margin-left:50px;">サーバー・ワールドをユーザに選択させる場合などでそれらの名前を表示するには、サーバーID・ワールド番号と名前をアプリケーション上で静的にバインディングしておきます。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>//J ワールド番号
#define WORLD_NUMBER_1 (1)
#define WORLD_NUMBER_2 (2)

//J ワールド番号とバインドされた名前を返す
char *
get_world_name(
    <a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2WorldId">SceNpMatching2WorldId</a> worldId
    )
{
    switch(<a href="../network/NP_Matching2-Reference-Japanese.htm#SCE_NP_MATCHING2_GET_WORLD_NUMBER">SCE_NP_MATCHING2_GET_WORLD_NUMBER</a>(worldId)) {
    case WORLD_NUMBER_1:
        return(&quot;World Name 1&quot;);
    case WORLD_NUMBER_2:
        return (&quot;World Name 2&quot;);
    default:
        return (&quot;Unknown&quot;);
    }

    return (&quot;Unknown&quot;);
}
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_4_2">
<h3>
<a href="#Heading3_4"> 4. </a>2 
<!-- hp1 --><b>ルームスロットの一部を予約する</b><br>
</a>
</h3>
<div style="margin-left:50px;">ルームスロットの一部を予約するには、ルームグループを設定せずにルームを作成し、ルームパスワードを設定し、予約したいスロットを表すルームパスワードスロットマスクを設定します。<br><br>総スロット数が8のルームを作成し、スロット番号5〜8を予約する例を示します。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3><a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2WorldId">SceNpMatching2WorldId</a> worldId;
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2SessionPassword">SceNpMatching2SessionPassword</a> sessionPassword;
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2RoomPasswordSlotMask">SceNpMatching2RoomPasswordSlotMask</a> roomPasswordSlotMask;

<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2ContextId">SceNpMatching2ContextId</a> ctxId;
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2CreateJoinRoomRequest">SceNpMatching2CreateJoinRoomRequest</a> reqParam;
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2RequestOptParam">SceNpMatching2RequestOptParam</a> optParam;
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2RequestId">SceNpMatching2RequestId</a> assignedReqId;

//J 総スロット数
int maxSlot = 8;

//J ルームパスワード
memset(&amp;sessionPassword, 0, sizeof(sessionPassword));
memcpy(sessionPassword.data, &quot;PASSWORD&quot; strlen(&quot;PASSWORD&quot;));

//J ルームパスワードスロットマスク
memset(&amp;roomPasswordSlotMask, 0, sizeof(roomPasswordSlotMask));
for (int i = 0; i &lt; 4; i++) {
	<a href="../network/NP_Matching2-Reference-Japanese.htm#SCE_NP_MATCHING2_ADD_SLOTNUM_TO_ROOM_PASSWORD_SLOT_MASK">SCE_NP_MATCHING2_ADD_SLOTNUM_TO_ROOM_PASSWORD_SLOT_MASK</a>(
	roomPasswordSlotMask, (maxSlot - i));
}

//J リクエストパラメータ
memset(&amp;reqParam, 0, sizeof(reqParam));
reqParam.worldId = worldId; //J 作成するルームが属するワールドを指定する
//J ルームを作成するためのパラメータ
reqParam.maxSlot = maxSlot;
reqParam.groupConfig = NULL;
reqParam.groupConfigNum = 0;
reqParam.roomPassword = &amp;sessionPassword;
reqParam.passwordSlotMask = &amp;roomPasswordSlotMask;
reqParam.flagAttr = 0;
reqParam.roomSearchableIntAttrExternal = NULL;
reqParam.roomSearchableIntAttrExternalNum = 0;
reqParam.roomBinAttrInternal = NULL;
reqParam.roomBinAttrInternalNum = 0;
reqParam.roomSearchableBinAttrExternal = NULL;
reqParam.roomSearchableBinAttrExternalNum = 0;
reqParam.roomBinAttrExternal = NULL;
reqParam.roomBinAttrExternalNum = 0;
reqParam.allowedUser = NULL;
reqParam.allowedUserNum = 0;
reqParam.blockedUser = NULL;
reqParam.blockedUserNum = 0;
//J ルームに参加するためのパラメータ
reqParam.roomMemberBinAttrInternal = NULL;
reqParam.roomMemberBinAttrInternalNum = 0;
reqParam.teamId = 0;
reqParam.joinRoomGroupLabel = NULL;
//J シグナリングパラメータ
reqParam.sigOptParam = NULL;

//J ctxId, optParamには適切な値が格納されているものとする

ret = <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2CreateJoinRoom">sceNpMatching2CreateJoinRoom</a>(
    ctxId, &amp;reqParam, &amp;optParam, &amp;assignedReqId);
if (ret &lt; 0) {
    /* エラー処理 */
}
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_4_3">
<h3>
<a href="#Heading3_4"> 4. </a>3 
<!-- hp1 --><b>ブロックリストに登録されたユーザのルーム参加を拒否する</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPベーシックユーティリティの関数を用いてブロックリストに登録されているユーザを取得し、ルーム作成時にそのユーザを入室拒否ユーザとして指定します。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>int i;
int count;
<a href="../network/NP_Common-Reference-Japanese.htm#SceNpId">SceNpId</a> blockedUser[SCE_NP_MATCHING2_ROOM_BLOCKED_USER_MAX];
<a href="../network/NP_Matching2-Reference-Japanese.htm#SceNpMatching2CreateJoinRoomRequest">SceNpMatching2CreateJoinRoomRequest</a> reqParam;

memset(blockedUser, 0, sizeof(blockedUser));

ret = <a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterGetBlockListEntryCount">sceNpRosterGetBlockListEntryCount</a>(reqId, NULL);
if (ret &lt; 0) {
    //J エラー処理
}

count = ret;
int total=0, entries_obtained=0;
ret = <a href="../network/NP_Roster-Reference-Japanese.htm#sceNpRosterGetBlockListEntry">sceNpRosterGetBlockListEntry</a>(reqId, count, 0, &amp;total, &amp;entries_obtained, blockedUser, NULL);
if (ret &lt; 0) {
        //J エラー処理
}

//J ルーム作成のリクエストパラメータに設定する
reqParam.blockedUser = blockedUser;
reqParam.blockedUserNum = entries_obtained;
//J その他のリクエストパラメータの記載は省略

</font></pre></div>

<!-- sce_hd3 -->
<a name="Heading3_5">
<h2>
 5 <!-- hp --><b>実装必須項目</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">本章では、NPマッチング2ユーティリティを使用するすべてのアプリケーションで必ず実装する必要がある項目について説明します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_5_1">
<h3>
<a href="#Heading3_5"> 5. </a>1 
<!-- hp1 --><b>NPサインイン状態での利用</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPマッチング2ユーティリティは、NPサインインした状態で利用しなくてはなりません。アプリケーションは、NPマッチング2ユーティリティを使用する状態に遷移する前に、NPモジュールとNPサービスモジュールを起動しNPサインイン状態にしてください。<br>NPモジュールとNPサービスモジュールの詳細は、「NP 概要」「NP リファレンス」を参照してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_5_2">
<h3>
<a href="#Heading3_5"> 5. </a>2 
<!-- hp1 --><b>同時サインインの対応</b><br>
</a>
</h3>
<div style="margin-left:50px;">複数のPSP&reg;を使って同一アカウントで同時にサインインすることを制限していません。しかし、原則として複数のPSP&reg;を使って同一アカウントで同時にサインインしてマッチング2を利用することができず、同一ユーザを検出するまで時間がかかる場合があります（最大約5分）。検出した場合は最後にサインインしたユーザがマッチング2を継続利用することができ、他のユーザのコンテキストが無効になります。無効なコンテキストでマッチング2 APIを呼び出すと、コールバックにて<a href="../network/NP_Matching2-Reference-Japanese.htm#SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_CONTEXT">SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_CONTEXT</a>エラーが通知されます。アプリケーションはこのエラーを受け取ったときに適切なエラーメッセージをユーザに表示しマッチング2ライブラリを終了させるように実装してください。<br><br>なお、コンテキストが無効になるまでマッチング2機能は正常に利用することができます。ただし、その場合でも同一ユーザが同一ルームに存在することは一切ありません。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_5_2_5">
<div style="margin-left:40px;"><h4><b>留意点：</b><br><br></h4></div></a>

<div style="margin-left:67px;">ルームのAPIは基本的に<a href="../network/NP_Matching2-Reference-Japanese.htm#SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_CONTEXT">SCE_NP_MATCHING2_SERVER_ERROR_NO_SUCH_CONTEXT</a>エラーを返すことはありません。そのためコンテキストが無効になってもずっとルームに存続することはできます。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_6">
<h2>
 6 <!-- hp --><b>実装推奨項目・留意点</b>
<hr noshade>
</h2>

<div style="margin-left:50px;">本章では、NPマッチング2ユーティリティを使用するアプリケーションの実装において、推奨する項目や留意点について説明します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_6_1">
<h3>
<a href="#Heading3_6"> 6. </a>1 
<!-- hp1 --><b>sceNpMatching2LeaveRoom()のタイムアウト時間</b><br>
</a>
</h3>
<div style="margin-left:50px;">ルーム退室を行う<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2LeaveRoom">sceNpMatching2LeaveRoom</a>()によるリクエストの完了がリクエストコールバックに通知されるのには、ネットワーク遅延などの影響によって多少の時間がかかる可能性があります。<br><br>リクエスト関数の実行時にリクエストオプションパラメータを設定することで、リクエスト毎にタイムアウト時間を指定することができますが、退室処理に時間がかかることを嫌ってアプリケーションが<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2LeaveRoom">sceNpMatching2LeaveRoom</a>()のタイムアウト時間を短くし過ぎると、セッション状態を管理するサーバーとの同期処理が適切に行われず、サーバー上のセッション状態に不整合が発生する可能性があります。<br><br>アプリケーションは、<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2LeaveRoom">sceNpMatching2LeaveRoom</a>()のタイムアウト時間を短くし過ぎないように注意してください。タイムアウト時間を10秒程度に設定することを推奨します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_6_2">
<h3>
<a href="#Heading3_6"> 6. </a>2 
<!-- hp1 --><b>セッション内部属性と外部属性の使い分け</b><br>
</a>
</h3>
<div style="margin-left:50px;">NPマッチング2システムの構成要素が持つ属性には、セッション内部属性とセッション外部属性があります。セッション内部属性は、セッションに参加しているクライアントからのみアクセス可能な属性です。セッション外部属性は、セッションに参加していないクライアントからもアクセス可能な属性です。<br><br>セッション外部属性はセッション参加しているクライアントからもアクセス可能ですが、セッション外部属性へのアクセスはセッション内部属性へのアクセスに比べサーバー負荷が大きくなるので、アプリケーションがセッション外部属性とセッション内部属性を適切に使い分けることで、NPマッチング2システムは高いパフォーマンスを発揮できます。<br><br>アプリケーションは次の点に注意して実装してください。<br></div>
<div style="margin-left:40px;"><ul>
<li> セッションメンバ間だけで共有するデータを扱う場合はセッション内部属性を使用する。
<li> セッションに参加していないクライアントから参照するデータ（ルーム検索条件として使用するデータ、ゲーム進行状況を示すデータなど）を扱う場合は、セッション外部属性を使用する。
<li> サーバーへの不必要なトランザクションを発生させないよう注意し、特にセッション外部属性へのアクセスは高頻度にならないようにする。
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_6_3">
<h3>
<a href="#Heading3_6"> 6. </a>3 
<!-- hp1 --><b>リクエスト関数実行順序とサーバー実行順序</b><br>
</a>
</h3>
<div style="margin-left:50px;">以下に示すリクエスト関数は、リクエスト関数の実行順序と、そのリクエスト関数によるリクエストがサーバー上で実行される順序が異なる可能性があります。また、リクエストのサーバー上での実行順序とリクエストコールバック関数へのリクエスト完了通知の順序も異なる可能性があります。<br></div>
<div style="margin-left:40px;"><ul>
<li> <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetServerInfo">sceNpMatching2GetServerInfo</a>()
<li> <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetWorldInfoList">sceNpMatching2GetWorldInfoList</a>()
<li> <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2SetUserInfo">sceNpMatching2SetUserInfo</a>()
<li> <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetUserInfoList">sceNpMatching2GetUserInfoList</a>()
<li> <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2SearchRoom">sceNpMatching2SearchRoom</a>()
<li> <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2CreateJoinRoom">sceNpMatching2CreateJoinRoom</a>()
<li> <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2JoinRoom">sceNpMatching2JoinRoom</a>()
<li> <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetRoomDataExternalList">sceNpMatching2GetRoomDataExternalList</a>()
<li> <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2SetRoomDataExternal">sceNpMatching2SetRoomDataExternal</a>()
<li> <a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2GetRoomMemberDataExternalList">sceNpMatching2GetRoomMemberDataExternalList</a>()
</ul></div>
<div style="margin-left:50px;"><br>上記のリクエスト関数以外でも、リクエストの対象セッションが異なる2つ以上のリクエストの場合には、リクエストの実行順序やリクエスト完了通知の順序は保証されません。<br><br>アプリケーションは上記事項に留意し、リクエスト関数の実行順序に依存しない実装をしてください。特に、<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2SetUserInfo">sceNpMatching2SetUserInfo</a>()や<a href="../network/NP_Matching2-Reference-Japanese.htm#sceNpMatching2SetRoomDataExternal">sceNpMatching2SetRoomDataExternal</a>()のように値の設定を行うリクエストでは、1つのリクエストの完了通知を受信してから次のリクエストを実行するなど、同時に複数のリクエストを発行しないように実装することを推奨します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_6_4">
<h3>
<a href="#Heading3_6"> 6. </a>4 
<!-- hp1 --><b>リクエストの頻度制限</b><br>
</a>
</h3>
<div style="margin-left:50px;">「NPマッチング2 リファレンス」にて紹介している「リクエスト関数」は、マッチング2サーバーに問い合わせを行う関数となっています。ゲームアプリケーションが自動的にそれらの関数を呼び続けると、サーバーに多大な負荷をかけることになるため、ユーザ操作以外で定期的にそれらの関数を呼ぶような実装は行わないようにしてください。<br><br>問題となる例として、以下のようなものが挙げられます。<br></div>
<div style="margin-left:40px;"><ul>
<li> ゲームアプリケーションが定期的に検索を行う。
<li> ゲームアプリケーションが定期的にルーム外部ルーム情報を取得する。
<li> ゲームアプリケーションが定期的にルーム外部ルーム情報を変更する。
</ul></div>
<div style="margin-left:50px;"><br>マッチング2サーバーをポーリングしないようにプログラミングしてください。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
