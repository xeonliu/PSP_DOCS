<html lang="en">
<head>
<title>PSPNET_Adhocctl-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
pspnet_adhocctl Reference
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetAdhocctlAdhocId"></a>
<table width="100%"><td width="70%"><font size=6>SceNetAdhocctlAdhocId<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Ad hoc ID structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_ADHOCID_LEN		9
#define SCE_NET_ADHOCCTL_ADHOCTYPE_PRODUCT_ID	0
#define SCE_NET_ADHOCCTL_ADHOCTYPE_RESERVED	1
#define SCE_NET_ADHOCCTL_ADHOCTYPE_SYSTEM	2
struct <b>SceNetAdhocctlAdhocId</b> {
	int <i>type</i>;
	<a href="../kernel/Types-Reference-English.htm#SceChar8">SceChar8</a> <i>data</i>[SCE_NET_ADHOCCTL_ADHOCID_LEN];
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>padding</i>[3];
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>type</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ad hoc ID type&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>data</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ad hoc ID data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>padding</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Padding data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure specifies an ad hoc ID. It is specified as an argument to the library initialization function <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlInit">sceNetAdhocctlInit</a>(). <br>For <i>data</i>, as a rule specify the title product number (four alphabetic characters and five numeric characters). <br>Further, if there is a need to specify a value other than the title's product number, such as for communication between different applications, refer to the PSP&trade; network library.<br>The attributes of the ad hoc ID are indicated by <i>type</i>.<br>For <i>type</i>, specify one of the following values.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_ADHOCCTL_ADHOCTYPE_PRODUCT_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Product ad hoc ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_ADHOCCTL_ADHOCTYPE_RESERVED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ad hoc ID for debugging&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_ADHOCCTL_ADHOCTYPE_SYSTEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ad hoc ID for the PSP&trade; system&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">SCE_NET_ADHOCCTL_ADHOCTYPE_SYSTEM is the ad hoc ID for the PSP&trade; system.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlInit">sceNetAdhocctlInit</a>(), <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetAdhocId">sceNetAdhocctlGetAdhocId</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetAdhocctlGroupName"></a>
<table width="100%"><td width="70%"><font size=6>SceNetAdhocctlGroupName<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Group name structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_GROUPNAME_LEN 8
struct <b>SceNetAdhocctlGroupName</b> {
	<a href="../kernel/Types-Reference-English.htm#SceChar8">SceChar8</a> <i>data</i>[SCE_NET_ADHOCCTL_GROUPNAME_LEN];
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>data</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Group name&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure specifies a group name. <br>Multiple peers can participate in the same ad hoc wireless network (IBSS) by using the same SceNetAdhocctlGroupName.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlConnect">sceNetAdhocctlConnect</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetAdhocctlNickname"></a>
<table width="100%"><td width="70%"><font size=6>SceNetAdhocctlNickname<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Nickname structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_NICKNAME_LEN	128
struct <b>SceNetAdhocctlNickname</b> {
	<a href="../kernel/Types-Reference-English.htm#SceChar8">SceChar8</a> <i>data</i>[SCE_NET_ADHOCCTL_NICKNAME_LEN];
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>data</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Nickname data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure stores the nickname which is specified in the system settings.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetParameter">sceNetAdhocctlGetParameter</a>(),<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetAddrByName">sceNetAdhocctlGetAddrByName</a>(),<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetNameByAddr">sceNetAdhocctlGetNameByAddr</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetAdhocctlPeerInfo"></a>
<table width="100%"><td width="70%"><font size=6>SceNetAdhocctlPeerInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Peer information structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

struct <b>SceNetAdhocctlPeerInfo</b> {
	struct <b>SceNetAdhocctlPeerInfo</b> *<i>next</i>;
	struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlNickname">SceNetAdhocctlNickname</a> <i>nickname</i>;	
	struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> <i>mac_addr</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>padding</i>[6];
	<a href="../kernel/Types-Reference-English.htm#SceUInt64">SceUInt64</a> <i>last_recv</i>;
	};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>next</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Next entry in the list (NULL indicates end)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nickname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Nickname&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mac_addr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;MAC address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>padding</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Padding data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>last_recv</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;System time when last packet was received&nbsp;&nbsp;<br>&nbsp;&nbsp;(value obtained from <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelGetSystemTimeWide">sceKernelGetSystemTimeWide</a>())&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents peer information.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetPeerList">sceNetAdhocctlGetPeerList</a>(), <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetAddrByName">sceNetAdhocctlGetAddrByName</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetAdhocctlParameter"></a>
<table width="100%"><td width="70%"><font size=6>SceNetAdhocctlParameter<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Ad hoc mode information structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

struct <b>SceNetAdhocctlParameter</b> {
	int <i>channel</i>;
	struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a> <i>group_name</i>;
	struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlBSSId">SceNetAdhocctlBSSId</a> <i>bssid</i>;
	struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlNickname">SceNetAdhocctlNickname</a> <i>nickname</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>channel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Channel&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>group_name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Group name&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bssid</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;BSSID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nickname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Nickname&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents the parameters for an ad hoc wireless network (IBSS).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetParameter">sceNetAdhocctlGetParameter</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetAdhocctlBSSId"></a>
<table width="100%"><td width="70%"><font size=6>SceNetAdhocctlBSSId<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>BSS ID structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_BSSID_LEN  6
struct <b>SceNetAdhocctlBSSId</b> {
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>data</i>[SCE_NET_ADHOCCTL_BSSID_LEN];
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>padding</i>[2];
};
</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>data</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;BSS ID data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>padding</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Padding data&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents the BSS ID for an ad hoc wireless network (IBSS).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlParameter">SceNetAdhocctlParameter</a>,<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetParameter">sceNetAdhocctlGetParameter</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetAdhocctlScanInfo"></a>
<table width="100%"><td width="70%"><font size=6>SceNetAdhocctlScanInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>IBSS scan information structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

struct <b>SceNetAdhocctlScanInfo</b>{
	struct SceNetAdhocctlScanInfo *<i>next</i>;
	int <i>channel</i>;
	struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a> <i>group_name</i>;
	struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlBSSId">SceNetAdhocctlBSSId</a> <i>bssid</i>;
	int <i>mode</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>next</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Next entry in list (NULL indicates end)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>channel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Channel&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>group_name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Group name&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>bssid</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;BSSID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;IBSS type&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents information concerning an ad hoc wireless network (IBSS) found as a result of <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlScan">sceNetAdhocctlScan</a>().<br><i>mode</i> indicates whether the IBSS of the scan result is in ad hoc mode or game mode.<br></div>
</ol>
<div style="margin-left:35px;"><ul>
<li> SCE_NET_ADHOCCTL_MODE_ADHOC  :  Ad hoc mode
<li> SCE_NET_ADHOCCTL_MODE_GAMEMODE  :  Game mode
</ul></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlScan">sceNetAdhocctlScan</a>(),<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetScanInfo">sceNetAdhocctlGetScanInfo</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlInit"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlInit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize Ad hoc Network Connection library <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlInit</b>(
	int <i>stacksize</i>,
	int <i>prio</i>,
	const struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlAdhocId">SceNetAdhocctlAdhocId</a> *<i>adhoc_id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>stacksize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Stack size of internal thread&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>prio</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Priority level of internal thread&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>adhoc_id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ad hoc ID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_ALREADY_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_ALREADY_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_STACKSIZE_TOO_SHORT">SCE_ERROR_NET_ADHOCCTL_STACKSIZE_TOO_SHORT</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br>Internal error in pspnet (0x80410180 - 0x804101ff)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs interface set-up and initialization for the Ad hoc Network Connection Library.  <br>It creates an internal thread and starts it. <br>For <i>adhoc_id</i>, specify the designated ad hoc ID.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define ADHOCCTL_ HANDLER_STACK_SIZE	(1 * 1024)	/* 1KB */
#define ADHOCCTL_PRIO		30
int ret;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlAdhocId">SceNetAdhocctlAdhocId</a> adhoc_id;

adhoc_id.type = SCE_NET_ADHOCCTL_ADHOCTYPE_PRODUCT_ID;
memcpy(adhoc_id.data, &quot;123456789&quot;, SCE_NET_ADHOCCTL_ADHOCID_LEN);

ret = sceNetAdhocctlInit( 
		SCE_NET_PSPNET_ADHOCCTL_LEAST_STACK_SIZE
			+ ADHOCCTL_HANDLER_STACK_SIZE,
		ADHOCCTL_PRIO, &amp;adhoc_id);
if(ret &lt; 0){
	// Error handling
}
</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Set the stack size of the internal thread to the sum of SCE_NET_PSPNET_ADHOCCTL _LEAST_STACK_SIZE (3072 bytes) plus the stack size used by the handler function specified with <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlAddHandler">sceNetAdhocctlAddHandler</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlTerm">sceNetAdhocctlTerm</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlTerm"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlTerm<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Terminate Ad hoc Network Connection library<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlTerm</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, the following error code is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_BUSY">SCE_ERROR_NET_ADHOCCTL_BUSY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs termination processing for the Ad hoc Network Connection library. <br>It also brings down the interface at the same time. <br>If this function is called before IBSS functions have completed processing, it waits internally until processing has completed and then it performs IBSS disconnection processing.<br>If this function is called redundantly, <a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_BUSY">SCE_ERROR_NET_ADHOCCTL_BUSY</a> is returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;

ret = sceNetAdhocctlTerm();
if(ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlInit">sceNetAdhocctlInit</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlConnect"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlConnect<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Connect to ad hoc wireless network<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlConnect</b>(
	const struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a> *<i>group_name</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>Group_name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Group name&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_BUSY">SCE_ERROR_NET_ADHOCCTL_BUSY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is only valid in the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_DISCONNECTED">SCE_NET_ADHOCCTL_STATE_DISCONNECTED</a> state. <br>This function is a non-blocking function for reporting events to the internal thread. <br>When the internal thread receives an event, it connects to the ad hoc wireless network (IBSS) specified by <i>group_name</i>. <br>Events such as connection completion, errors, etc. are reported to the event handler. <br>When the connection is completed, an <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_EVENT_CONNECT">SCE_NET_ADHOCCTL_EVENT_CONNECT</a> event is passed to the event handler, and the state changes to <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_CONNECTED">SCE_NET_ADHOCCTL_STATE_CONNECTED</a>. <br><br>The specifications for <i>group_name</i> are as follows.<br></div>
</ul>
<div style="margin-left:60px;"><ul>
<li> Only alphanumeric characters can be used: ('0' - '9'), ('A' - 'Z'), ('a' - 'z')
<li> Null characters are not necessary, but if a null character is present in the string, the string is treated as terminated at that point.<br>If the first byte is a null character, or if null is specified for <i>group_name</i> itself, then <i>group_name</i> is considered to not have been specified, and the SSID is constructed from <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlAdhocId">SceNetAdhocctlAdhocId</a> alone.
</ul></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a> group_name;

memset(&amp;group_name, 0x00, sizeof(struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a>));
memcpy(group_name.data, "test", strlen("test"));
ret = sceNetAdhocctlConnect(&amp;group_name);
if (ret &lt; 0) {
	// Error handling
}
wait_connect();	/* Wait for <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_EVENT_CONNECT">SCE_NET_ADHOCCTL_EVENT_CONNECT</a> */

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlCreate">sceNetAdhocctlCreate</a>() and <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlJoin">sceNetAdhocctlJoin</a>() can also be used instead of this function. Please refer to the &quot;Network Overview&quot; documentation for details on their respective characteristics.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a>, <br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlDisconnect">sceNetAdhocctlDisconnect</a>(),<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlCreate">sceNetAdhocctlCreate</a>(),<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlJoin">sceNetAdhocctlJoin</a>()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlCreate"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlCreate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create ad hoc wireless network<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlCreate</b>(
	const struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a> *<i>group_name</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler <br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>Group_name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Group name&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_BUSY">SCE_ERROR_NET_ADHOCCTL_BUSY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is only valid in the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_DISCONNECTED">SCE_NET_ADHOCCTL_STATE_DISCONNECTED</a> state. It is a non-blocking function intended for reporting events to the internal thread.<br>When the internal thread receives an event, it will create the ad hoc wireless network (IBSS) specified by <i>group_name</i> .<br>Events such as connection complete or errors are reported to the event handler.<br>When the connection is completed, an <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_EVENT_CONNECT">SCE_NET_ADHOCCTL_EVENT_CONNECT</a> event is passed to the event handler, and the state changes to <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_CONNECTED">SCE_NET_ADHOCCTL_STATE_CONNECTED</a>.<br><br>The specifications for <i>group_name</i> are as follows.<br></div>
</ol>
<div style="margin-left:35px;"><ul>
<li> Only alphanumeric characters can be used: ('0' - '9'), ('A' - 'Z'), ('a' - 'z')
<li> Null characters are not necessary, but if a null character is present in the string, the string is treated as terminated at that point.<br>If the first byte is a null character, or if null is specified for <i>group_name</i> itself, then <i>group_name</i> is considered to not have been specified, and the SSID is constructed from the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlAdhocId">SceNetAdhocctlAdhocId</a> alone.
</ul></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a> group_name;

memset(&amp;group_name, 0x00, sizeof(struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a>));
memcpy(group_name.data, "test", strlen("test"));
ret = sceNetAdhocctlCreate(&amp;group_name);
if (ret &lt; 0) {
	// Error handling
}
wait_connect();   /* Wait for <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_EVENT_CONNECT">SCE_NET_ADHOCCTL_EVENT_CONNECT</a> */

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function is called by multiple PSP&trade; peers using the same group name, each peer will create an IBSS having a different BSSID. The phenomenon in which the peers hand off beacon transmission to one another will also be seen.<br><br>Since <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlScan">sceNetAdhocctlScan</a>() checks the beacon to detect an IBSS, even if there exists multiple peers, only one of them will be detected.<br>Since the phenomenon of handing off the beacon is a hardware problem, there is no method of avoiding this through software.<br>To create multiple IBSSs having the same group name, use <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlConnect">sceNetAdhocctlConnect</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a>,<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlDisconnect">sceNetAdhocctlDisconnect</a>(),<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlJoin">sceNetAdhocctlJoin</a>()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlJoin"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlJoin<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Join ad hoc wireless network<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlJoin</b>(
	const struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlScanInfo">SceNetAdhocctlScanInfo</a> *<i>scan_info</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler <br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>scan_info</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Scan information&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_BUSY">SCE_ERROR_NET_ADHOCCTL_BUSY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is only valid in the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_DISCONNECTED">SCE_NET_ADHOCCTL_STATE_DISCONNECTED</a> state. It is a non-blocking function intended for reporting events to the internal thread.<br>When the internal thread receives an event, it joins the ad hoc wireless network (IBSS) specified by <i>scan_info</i>.<br>Events such as connection complete or errors are reported to the event handler.<br>When the connection is completed, an <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_EVENT_CONNECT">SCE_NET_ADHOCCTL_EVENT_CONNECT</a> event is passed to the event handler, and the state changes to <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_CONNECTED">SCE_NET_ADHOCCTL_STATE_CONNECTED</a>.<br><br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlScan">sceNetAdhocctlScan</a>() must first complete its processing before using this function. Be sure to select the IBSS to join based on the results of the scan. Even if the parameters are set directly, without calling <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlScan">sceNetAdhocctlScan</a>() it will not be possible to join the IBSS.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlScanInfo">SceNetAdhocctlScanInfo</a> *buf, *cur;
int buflen;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlGroupName">SceNetAdhocctlGroupName</a> group_name; /* Name of group to join */

/* Scan previously created IBSS */
ret = <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlScan">sceNetAdhocctlScan</a>();
if (ret &lt; 0) {
    // Error handling
}
ret = wait_scan();   /* Wait for <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_EVENT_SCAN">SCE_NET_ADHOCCTL_EVENT_SCAN</a> */
if (ret &lt; 0) {
    // Error handling
}

ret = <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetScanInfo">sceNetAdhocctlGetScanInfo</a>(&amp;buflen, NULL);
if (ret &lt; 0) {
    // Error handling
}
if (buflen == 0) {
    // IBSS does not exist in the area
}

buf = (struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlScanInfo">SceNetAdhocctlScanInfo</a> *)malloc(buflen);
if (buf == NULL ) {
    // Error handling
}

ret = <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetScanInfo">sceNetAdhocctlGetScanInfo</a>(&amp;buflen, buf);
if (ret &lt; 0) {
    // Error handling
}
if (buflen == 0) {
    // Error handling
}


/* Search for the IBSS that should be joined by comparing group names from scan results.*/
/* Note: There is a possibility that multiple IBSSs with the same group name may be 
included in the scan results. These IBSSs are distinguished by their BSSIDs. */
for (cur=buf; cur!=NULL; cur=cur-&gt;next) {
	if (0==strncmp(cur-&gt;group_name.data, group_name.data, 
		sizeof(group_name.data)))
            break;
}

/* The target IBSS was not found in the scan results. */
if (cur == NULL) {
    // Error handling
}

ret = sceNetAdhocctlJoin(cur);
if (ret &lt; 0) {
    // Error handling
}
ret = wait_connect();
if (ret &lt; 0) {
    // Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlScanInfo">SceNetAdhocctlScanInfo</a>,<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlScan">sceNetAdhocctlScan</a>(),<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetScanInfo">sceNetAdhocctlGetScanInfo</a>(),<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlDisconnect">sceNetAdhocctlDisconnect</a>(),<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlCreate">sceNetAdhocctlCreate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlDisconnect"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlDisconnect<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Disconnect from ad hoc wireless network<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlDisconnect</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_BUSY">SCE_ERROR_NET_ADHOCCTL_BUSY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is only valid when in the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_CONNECTED">SCE_NET_ADHOCCTL_STATE_CONNECTED</a> state. <br>This function is a non-blocking function for notifying the internal thread of events. <br>When the internal thread receives an event, it disconnects from the ad hoc wireless network (IBSS). <br>It is notified of events related to disconnection completion, errors, etc. by the event handler. <br><br>When connection is completed, the thread is passed an <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_EVENT_DISCONNECT">SCE_NET_ADHOCCTL_EVENT_DISCONNECT</a> event by the event handler, and it then transitions to the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_DISCONNECTED">SCE_NET_ADHOCCTL_STATE_DISCONNECTED</a> state.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>ret = sceNetAdhocctlDisconnect();
if (ret &lt; 0) {
	// Error handling
}
wait_disconnect();	   /* Wait for <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_EVENT_DISCONNECT">SCE_NET_ADHOCCTL_EVENT_DISCONNECT</a> */

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlConnect">sceNetAdhocctlConnect</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlScan"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlScan<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Scan ad hoc wireless network <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceNetAdhocctlScan</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_BUSY">SCE_ERROR_NET_ADHOCCTL_BUSY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is only valid when in the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_DISCONNECTED">SCE_NET_ADHOCCTL_STATE_DISCONNECTED</a> state. <br>This function is a non-blocking function for notifying the internal thread of events. <br>When the internal thread receives an event, it performs a scan, searching for ad hoc wireless networks which are configured using the same ad hoc ID. <br>While the scan is in progress, the thread enters the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_SCANNING">SCE_NET_ADHOCCTL_STATE_SCANNING</a> state. When the scan has completed, <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_EVENT_SCAN">SCE_NET_ADHOCCTL_EVENT_SCAN</a> is passed by the event handler, and the state changes to <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_STATE_DISCONNECTED">SCE_NET_ADHOCCTL_STATE_DISCONNECTED</a>. <br>Use <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetScanInfo">sceNetAdhocctlGetScanInfo</a>() to retrieve the scan results.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;

ret = sceNetAdhocctlScan();
if (ret &lt; 0) {
	// Error handling
}
wait_scan(); // Wait for <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SCE_NET_ADHOCCTL_EVENT_SCAN">SCE_NET_ADHOCCTL_EVENT_SCAN</a> */

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The channels to be scanned are determined according to the ad hoc mode channel number setting that is set by the system software. When the setting is "automatic," channels 1, 6, and 11 are scanned, and when it is "1ch," "6ch", or "11ch," only the specified channel is scanned.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlScanInfo">SceNetAdhocctlScanInfo</a>,<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetScanInfo">sceNetAdhocctlGetScanInfo</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="adhocctlhandler"></a>
<table width="100%"><td width="70%"><font size=6>adhocctlhandler<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Event handler prototype<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

void <b>adhocctlhandler</b>(
	int <i>event</i>,
	int <i>error_code</i>,
	void *<i>arg</i>
);


</font></pre></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>event</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;event&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>error_code</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;error code&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>arg </i>specified with the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlAddHandler">sceNetAdhocctlAddHandler</a>() function is passed to the handler&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This event handler is called from an internal thread when a state transition occurs. The gp value is set to the gp value of the module where the event handler is defined.<br>All errors (the wireless LAN switch is turned off, the state is switched to suspend state, etc.) that occur before the IBSS manipulation function is called are simply ignored and are not reported to the event handler.<br>If an error occurs after the IBSS manipulation function is called, one of the following values is set for <i>error_code</i>.<br><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_WLAN_SWITCH_OFF">SCE_ERROR_NET_ADHOCCTL_WLAN_SWITCH_OFF</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_DISCONNECTED">SCE_ERROR_NET_ADHOCCTL_DISCONNECTED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_IBSS">SCE_ERROR_NET_ADHOCCTL_INVALID_IBSS</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_WLAN_BEACON_LOST">SCE_ERROR_NET_ADHOCCTL_WLAN_BEACON_LOST</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_WLAN_SUSPENDED">SCE_ERROR_NET_ADHOCCTL_WLAN_SUSPENDED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_CHANNEL_NOT_AVAILABLE">SCE_ERROR_NET_ADHOCCTL_CHANNEL_NOT_AVAILABLE</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_CHANNEL_NOT_MATCH">SCE_ERROR_NET_ADHOCCTL_CHANNEL_NOT_MATCH</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_ALREADY_JOINED">SCE_ERROR_NET_WLAN_ALREADY_JOINED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_TRY_JOIN">SCE_ERROR_NET_WLAN_TRY_JOIN</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_SCANNING">SCE_ERROR_NET_WLAN_SCANNING</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_INVALID_PARAMETER">SCE_ERROR_NET_WLAN_INVALID_PARAMETER</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_NOT_SUPPORTED">SCE_ERROR_NET_WLAN_NOT_SUPPORTED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_NOT_JOIN_BSS">SCE_ERROR_NET_WLAN_NOT_JOIN_BSS</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_ASSOC_TIMEOUT">SCE_ERROR_NET_WLAN_ASSOC_TIMEOUT</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_ASSOC_REFUSED">SCE_ERROR_NET_WLAN_ASSOC_REFUSED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_ASSOC_FAIL">SCE_ERROR_NET_WLAN_ASSOC_FAIL</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_DISASSOC_FAIL">SCE_ERROR_NET_WLAN_DISASSOC_FAIL</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_JOIN_FAIL">SCE_ERROR_NET_WLAN_JOIN_FAIL</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_POWER_OFF">SCE_ERROR_NET_WLAN_POWER_OFF</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_INTERNAL_FAIL">SCE_ERROR_NET_WLAN_INTERNAL_FAIL</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_DEVICE_NOT_READY">SCE_ERROR_NET_WLAN_DEVICE_NOT_READY</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_ALREADY_ATTACHED">SCE_ERROR_NET_WLAN_ALREADY_ATTACHED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_NOT_SET_WEP">SCE_ERROR_NET_WLAN_NOT_SET_WEP</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_TIMEOUT">SCE_ERROR_NET_WLAN_TIMEOUT</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_NO_SPACE">SCE_ERROR_NET_WLAN_NO_SPACE</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_INVALID_ARG">SCE_ERROR_NET_WLAN_INVALID_ARG</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_NOT_IN_GAMEMODE">SCE_ERROR_NET_WLAN_NOT_IN_GAMEMODE</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_LEAVE_FAIL">SCE_ERROR_NET_WLAN_LEAVE_FAIL</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_SUSPENDED">SCE_ERROR_NET_WLAN_SUSPENDED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_WLAN_INHIBITED">SCE_ERROR_NET_WLAN_INHIBITED</a><br>Internal error in pspnet_adhoc_auth (0x80410680 - 0x804106ff)<br>Internal error in libnetcnf (0x80410980 - 0x804109ff)<br>Internal error in pspnet_adhocctl (0x80410b80 - 0x80410bff)<br>Internal error in wlan (0x80410d80 - 0x80410dff)<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Handler which simply displays received events */
void
adhocctl handler(int event, int error_code, void *arg)
{
	printf("event: [%d] error_code = 0x%x\n", event, error_code);
	return;
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Make sure that the event handler and a thread that calls an ad hoc connection library API function will not both be waiting for the same resource (such as <a href="../kernel/Thread_Manager-Reference-English.htm#sceKernelWaitSema">sceKernelWaitSema</a>() waiting for the same semaphore). Otherwise, the thread that called the ad hoc connection library API and the internal thread of the ad hoc connection library may get deadlocked.<br><br>The stack size that can be used within the event handler function is equal to the stack size specified for the internal thread minus SCE_NET_PSPNET_ADHOCCTL_LEAST_STACK_SIZE (3072 bytes).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlAddHandler">sceNetAdhocctlAddHandler</a>(), <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlDelHandler">sceNetAdhocctlDelHandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlAddHandler"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlAddHandler<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Register event handler<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlAddHandler</b>(
	(void) (*<i>handler</i>)(int, int, void *),
	void *<i>arg</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>handler</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Event handler&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;User-specified argument&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, a value greater than 0 representing the handler ID is returned. <br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_HANDLER_MAX">SCE_ERROR_NET_ADHOCCTL_HANDLER_MAX</a><br>Internal error in pspnet_adhocctl (0x80410b80 - 0x80410bff)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function registers an event handler which is called when the internal thread makes a state transition. Up to four event handlers can be registered.<br>As a return value, the handler ID is returned. <br>Specify the handler ID when deleting a handler using <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlDelHandler">sceNetAdhocctlDelHandler</a>().<br>The detection of events that contain errors is started by calling the IBSS manipulation function.<br>All errors (the wireless LAN switch is turned off, the state is switched to suspend state, etc.) that occur before the IBSS manipulation function is called are ignored.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int handlerID;

handlerID = sceNetAdhocctlAddHandler(adhocctl_handler, NULL);
if (handlerID &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlDelHandler">sceNetAdhocctlDelHandler</a>(), <a href="../network/PSPNET_Adhocctl-Reference-English.htm#adhocctlhandler">adhocctlhandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlDelHandler"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlDelHandler<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete event handler <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlDelHandler</b>(
	int <i>id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of event handler to delete&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_ID_NOT_FOUND">SCE_ERROR_NET_ADHOCCTL_ID_NOT_FOUND</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes an event handler which was registered using <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlAddHandler">sceNetAdhocctlAddHandler</a>().<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;

ret = sceNetAdhocctlDelHandler(handlerID);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlAddHandler">sceNetAdhocctlAddHandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlGetState"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlGetState<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get state<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlGetState</b>(
	int *<i>state</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>state</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Current state of the internal thread&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The current state of the internal thread is returned in <i>state</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int state;

sceNetAdhocctlGetState(&amp;state);
</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlGetAdhocId"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlGetAdhocId<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get ad hoc ID <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlGetAdhocId</b>(
	struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlAdhocId">SceNetAdhocctlAdhocId</a> *<i>adhoc_id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>adhoc_id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Location where the retrieved ad hoc ID will be stored&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the ad hoc ID which has been set in the library.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlAdhocId">SceNetAdhocctlAdhocId</a> adhoc_id;

ret = sceNetAdhocctlGetAdhocId(&amp;adhoc_id);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlAdhocId">SceNetAdhocctlAdhocId</a>,<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlInit">sceNetAdhocctlInit</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlGetPeerList"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlGetPeerList<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get list of information about other peers<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlGetPeerList</b> (
	int *<i>buflen</i>,
	void *<i>buf</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buflen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer size of <i>buf </i>(IN), list size (OUT)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to the area where information on other peers will be stored&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br>Internal error in pspnet_adhoc_auth (0x80410680 - 0x804106ff)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets all information on other peers which are present on the ad hoc wireless network (IBSS) to which the library is connected. <br><br>An area of size <i>buflen</i> must be allocated in advance at the location indicated by <i>buf</i>. <br>This function exhibits two types of behavior depending on the value specified by <i>buf</i>.<br></div>
</ul>
<div style="margin-left:50px;"><ol>
<li VALUE=1> If null is specified for <i>buf</i>, then the buffer size necessary in order to retrieve the structure list is returned.</li>
<li VALUE=2> If an address value is specified for <i>buf</i>, then the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a> structure data held in the library is copied into <i>buf</i>, up to the maximum buffer size specified by <i>buflen</i>. The list is linked using the <i>next</i> member, and is terminated with a null.</li>
</ol></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int buflen;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a> *buf, *ptr;

ret = sceNetAdhocctlGetPeerList(&amp;buflen, NULL);
if (ret &lt; 0) {
	// Error handling
	return;
}
else if (buflen == 0) {
	// The data did not exist
	return;
}

buf = (struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a> *)malloc(buflen);
if (buf == NULL) {
	// Memory could not be allocated
	return;
}

ret = sceNetAdhocctlGetPeerList(&amp;buflen, buf);
if (ret &lt; 0) {
	// Error handling
}
else if (buflen == 0) {
	// The data did not exist
}
else {
	for (ptr=buf; ptr != NULL; ptr=ptr-&gt;next) {
		// List processing
	}
}
free(buf);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a>,<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetPeerInfo">sceNetAdhocctlGetPeerInfo</a>(), <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetAddrByName">sceNetAdhocctlGetAddrByName</a>(), <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetNameByAddr">sceNetAdhocctlGetNameByAddr</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlGetPeerInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlGetPeerInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get information about another peer<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlGetPeerInfo</b> (
	const struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> *<i>addr</i>,
	int <i>size</i>,
	struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a> *<i>peer_info</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>addr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;MAC address of peer for which information is to be obtained.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>peer_info</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to structure where peer information will be stored&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOC_NO_ENTRY">SCE_ERROR_NET_ADHOC_NO_ENTRY</a><br>pspnet_adhoc_auth internal error (0x80410680-0x804106ff)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function finds information on each peer connected to the ad hoc wireless network (IBSS) that the library has connected, and obtains information on the peer with the specified MAC address. In <i>size </i>specify the size of the structure for holding information on the peer specified by <i>peer_info </i>(sizeof(struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a>)).<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> addr;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a> peer_info;

// Set desired MAC address in addr
...

ret = sceNetAdhocctlGetPeerInfo(&amp;addr, sizeof(struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a>), &amp;peer_info);
if (ret &lt; 0) {
	// Error-handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a>,<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetPeerList">sceNetAdhocctlGetPeerList</a>(), <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetAddrByName">sceNetAdhocctlGetAddrByName</a>(), <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetNameByAddr">sceNetAdhocctlGetNameByAddr</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlGetAddrByName"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlGetAddrByName<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get MAC addresses corresponding to a nickname<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlGetAddrByName</b> (
	const struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlNickname">SceNetAdhocctlNickname</a> *<i>nickname</i>,
	int *<i>buflen</i>,
	void *<i>buf</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nickname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Nickname&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buflen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer size of <i>buf </i>(IN), list size (OUT)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to the area where information on other peers will be stored&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br>Internal error in pspnet_adhoc_auth (0x80410680 - 0x804106ff)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function searches for information on other peers present on the ad hoc wireless network (IBSS) to which the library is connected, and retrieves the MAC addresses which correspond to a nickname. <br><br>Nicknames can be assigned arbitrarily, so there will not necessarily be only one corresponding MAC address. Consequently, as with <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetPeerList">sceNetAdhocctlGetPeerList</a>(), this information is retrieved in the form of an <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a> structure list. <br><br>An area of size <i>buflen</i> must be allocated in advance at the location indicated by <i>buf</i>. <br><br>This function exhibits two types of behavior depending on the value specified by <i>buf</i>.<br></div>
<div style="margin-left:50px;"><ol>
<li VALUE=1> If null is specified for <i>buf</i>, the buffer size necessary in order to retrieve the structure list is returned.</li>
<li VALUE=2> If an address value is specified for <i>buf</i>, then the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a> structure data held in the library is copied into <i>buf</i>, up to the maximum buffer size specified by <i>buflen</i>. The list is linked using the <i>next</i> member, and is terminated with a null.</li>
</ol></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int buflen;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlNickname">SceNetAdhocctlNickname</a> nickname;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a> *buf, *ptr;

// Specify the user name to retrieve in nickname
...

ret = sceNetAdhocctlGetAddrByName(&amp;nickname, &amp;buflen, NULL);
if (ret &lt; 0) {
	// Error handling
	return;
}
else if (buflen == 0) {
	// The data did not exist
	return;
}

buf = (struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlPeerInfo">SceNetAdhocctlPeerInfo</a> *)malloc(buflen);
if (buf == NULL) {
	// Memory could not be allocated
	return;
}

ret = sceNetAdhocctlGetAddrByName(&amp;nickname, &amp;buflen, buf);
if (ret &lt; 0) {
	// Error handling
}
else if (buflen == 0) {
	// The data did not exist
}
else {
	for (ptr=buf; ptr != NULL; ptr=ptr-&gt;next) {
		// List processing
	}
}

free(buf);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetPeerList">sceNetAdhocctlGetPeerList</a>(), <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetNameByAddr">sceNetAdhocctlGetNameByAddr</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlGetNameByAddr"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlGetNameByAddr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get nickname corresponding to a MAC address<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlGetNameByAddr</b> (
	const struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> *<i>addr</i>,
	struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlNickname">SceNetAdhocctlNickname</a> <i>*nickname</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>addr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;MAC address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nickname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Location where nickname will be stored&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOC_NO_ENTRY">SCE_ERROR_NET_ADHOC_NO_ENTRY</a><br>Internal error in pspnet_adhoc_auth (0x80410680 - 0x804106ff)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function searches for information on other peers present on the ad hoc wireless network (IBSS) to which the library is connected, and retrieves the nickname which corresponds to a MAC address. <br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Core-Reference-English.htm#SceNetEtherAddr">SceNetEtherAddr</a> addr;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlNickname">SceNetAdhocctlNickname</a> nickname;

// Specify the target MAC address in addr
...

ret = sceNetAdhocctlGetNameByAddr(&amp;addr, &amp;nickname);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetPeerList">sceNetAdhocctlGetPeerList</a>(), <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetAddrByName">sceNetAdhocctlGetAddrByName</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlGetParameter"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlGetParameter<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get various ad hoc mode information <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

int <b>sceNetAdhocctlGetParameter</b> (
	struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlParameter">SceNetAdhocctlParameter</a> *<i>parameter</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>parameter</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Ad hoc parameter&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_INVALID_ARG">SCE_ERROR_NET_ADHOCCTL_INVALID_ARG</a><br>Internal error in pspnet_adhoc_auth (0x80410680 - 0x804106ff)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function retrieves various types of information about the ad hoc wireless network (IBSS) to which the library is connected. <br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlParameter">SceNetAdhocctlParameter</a> parameter;

ret = sceNetAdhocctlGetParameter(&amp;parameter);
if (ret &lt; 0) {
	// Error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlParameter">SceNetAdhocctlParameter</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetAdhocctlGetScanInfo"></a>
<table width="100%"><td width="70%"><font size=6>sceNetAdhocctlGetScanInfo<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get scan results<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceNetAdhocctlGetScanInfo</b>(
	int *<i>buflen,</i>
	void *<i>buf</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buflen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer size of <i>buf </i>(IN), list size (OUT)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area where scan results will be stored&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, 0 is returned.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED">SCE_ERROR_NET_ADHOCCTL_NOT_INITIALIZED</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function retrieves the scan results information held in the library. <br>A region of size <i>buflen</i> must be allocated at the location indicated by <i>buf</i>. <br>This function exhibits two types of behavior depending on the value specified by <i>buf</i>.<br></div>
<div style="margin-left:50px;"><ol>
<li VALUE=1> If null is specified for <i>buf</i>, the buffer size necessary in order to retrieve the structure list is returned.</li>
<li VALUE=2> If an address value is specified for <i>buf</i>, then the <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlScanInfo">SceNetAdhocctlScanInfo</a> structure data held in the library is copied into <i>buf</i>, up to the maximum buffer size specified by <i>buflen</i>. The list is linked using the <i>next</i> member, and is terminated with a null.</li>
</ol></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int buflen;
struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlScanInfo">SceNetAdhocctlScanInfo</a> *buf, *ptr;

ret = sceNetAdhocctlGetScanInfo(&amp;buflen, NULL);
if (ret &lt; 0) {
	// Error handling
	return;
}
else if (buflen == 0) {
	// The data did not exist
	return;
}

buf = (struct <a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlScanInfo">SceNetAdhocctlScanInfo</a> *)malloc(buflen);
if (buf == NULL) {
	// Memory could not be allocated
	return;
}

ret = sceNetAdhocctlGetScanInfo(&amp;buflen, buf);
if (ret &lt; 0) {
	// Error handling
}
else if (buflen == 0) {
	// The data did not exist
}
else {
	for (ptr=buf; ptr != NULL; ptr=ptr-&gt;next) {
		// List processing
	}
}
free(buf);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function retrieves the results of the last executed <a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlScan">sceNetAdhocctlScan</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#SceNetAdhocctlScanInfo">SceNetAdhocctlScanInfo</a>,<br><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlScan">sceNetAdhocctlScan</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_EVENT_ERROR"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_EVENT_ERROR<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl error event<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;
SCE_NET_ADHOCCTL_EVENT_ERROR  0
</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Notifies the event handler of an error event.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#adhocctlhandler">adhocctlhandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_EVENT_CONNECT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_EVENT_CONNECT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl connection complete event<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_EVENT_CONNECT  1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Notifies the event handler of a connection complete event.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#adhocctlhandler">adhocctlhandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_EVENT_DISCONNECT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_EVENT_DISCONNECT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl disconnection complete event<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet adhocctl h&gt;

#define SCE_NET_ADHOCCTL_EVENT_DISCONNECT   2

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Notifies the event handler of a disconnection complete event.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#adhocctlhandler">adhocctlhandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_EVENT_SCAN"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_EVENT_SCAN<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl scan complete event<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_EVENT_SCAN		3

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Notifies the event handler of a scan complete event.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#adhocctlhandler">adhocctlhandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_EVENT_HOSTDISCOVER"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_EVENT_HOSTDISCOVER<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl  nearby peer discovery event due to a HostDiscover mode search<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_EVENT_HOSTDISCOVER		6

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Notifies the event handler of a nearby peer discovery event due to a HostDiscover mode search.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#adhocctlhandler">adhocctlhandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_EVENT_WOL"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_EVENT_WOL<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl  nearby peer discovery event due to a WoL mode search<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_EVENT_WOL		7

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Notifies the event handler of a nearby peer discovery event due to a WoL mode search.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#adhocctlhandler">adhocctlhandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_EVENT_WOL_ABORT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_EVENT_WOL_ABORT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl  WoL mode search interruption event<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_EVENT_WOL_ABORT		8

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Notifies the event handler of a WoL mode search interruption event.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#adhocctlhandler">adhocctlhandler</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_STATE_DISCONNECTED"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_STATE_DISCONNECTED<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl disconnected state<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_STATE_DISCONNECTED	0

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Represents the disconnected state<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetState">sceNetAdhocctlGetState</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_STATE_CONNECTED"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_STATE_CONNECTED<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl connected state<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_STATE_CONNECTED	1

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Represents the connected state.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetState">sceNetAdhocctlGetState</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_STATE_SCANNING"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_STATE_SCANNING<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl scanning state<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_STATE_SCANNING		2

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Represents the scanning state.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetState">sceNetAdhocctlGetState</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_STATE_HOSTDISCOVER"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_STATE_HOSTDISCOVER<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl HostDiscover mode search state<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_STATE_HOSTDISCOVER		4

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Represents the state of searching for a nearby peer in HostDiscover mode.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetState">sceNetAdhocctlGetState</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_ADHOCCTL_STATE_WOL"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_ADHOCCTL_STATE_WOL<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pspnet_adhocctl WoL mode search state<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_adhocctl.h&gt;

#define SCE_NET_ADHOCCTL_STATE_WOL		5

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Represents the state of searching for a nearby peer in WoL mode.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Adhocctl-Reference-English.htm#sceNetAdhocctlGetState">sceNetAdhocctlGetState</a>()<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
