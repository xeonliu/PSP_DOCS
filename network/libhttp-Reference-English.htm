<html lang="en">
<head>
<title>libhttp-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libhttp Reference
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="httpMallocFunction"></a>
<table width="100%"><td width="70%"><font size=6>httpMallocFunction<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>User-defined malloc function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

void *<b>httpMallocFunction</b>(
	SceSize size
);

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function specifies the user-defined malloc function which is used by <a href="../network/libhttp-Reference-English.htm#sceHttpSetMallocFunction">sceHttpSetMallocFunction</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSetMallocFunction">sceHttpSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="httpFreeFunction"></a>
<table width="100%"><td width="70%"><font size=6>httpFreeFunction<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>User-defined free function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

void <b>httpFreeFunction</b>(
	void *p
);

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function specifies the user-defined free function which is used by <a href="../network/libhttp-Reference-English.htm#sceHttpSetMallocFunction">sceHttpSetMallocFunction</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSetMallocFunction">sceHttpSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="httpReallocFunction"></a>
<table width="100%"><td width="70%"><font size=6>httpReallocFunction<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>User-defined realloc function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

typedef void *<b>httpReallocFunction</b>(
	void *p, 
	SceSize size
);

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function specifies the user-defined realloc function which is used by <a href="../network/libhttp-Reference-English.htm#sceHttpSetMallocFunction">sceHttpSetMallocFunction</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSetMallocFunction">sceHttpSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="httpAuthInfoCallback"></a>
<table width="100%"><td width="70%"><font size=6>httpAuthInfoCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Callback function to get password during authentication<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>httpAuthInfoCallback</b>(
	int <i>request</i>,
	<a href="../network/libhttp-Reference-English.htm#SceHttpAuthType">SceHttpAuthType</a> <i>auth_type</i>,
	const char *<i>realm</i>,
	char *<i>username</i>,
	char *<i>password,</i>
	<a href="../kernel/Types-Reference-English.htm#SceBool">SceBool</a> <i>need_entity</i>,
	unsigned char **<i>entity_body</i>,
	SceSize *<i>entity_size</i>,
	<a href="../kernel/Types-Reference-English.htm#SceBool">SceBool</a> *<i>save,</i>
<i>	</i>void<i> *user_arg</i>
);

</font></pre></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of request object of caller (IN).&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>auth_type</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Authentication type(IN)&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_HTTP_AUTH_BASIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BASIC authentication&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_HTTP_AUTH_DIGEST&nbsp;&nbsp;&nbsp;&nbsp;DIGEST authentication&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>realm</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;String stored by specified server to identify space to authenticate (IN).&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>username</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Saved username (IN).&nbsp;&nbsp;<br>&nbsp;&nbsp;Memory area for storing entered username (OUT).&nbsp;&nbsp;<br>&nbsp;&nbsp;Must be specified so as not to exceed SCE_HTTP_USERNAME_MAX_SIZE bytes.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>password</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Saved password (IN).&nbsp;&nbsp;<br>&nbsp;&nbsp;Memory area for storing entered password (OUT).&nbsp;&nbsp;<br>&nbsp;&nbsp;Must be specified so as not to exceed SCE_HTTP_PASSWORD _MAX_SIZE bytes.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>need_entity</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flag which specifies whether <i>entity_body </i>is required or not (IN).&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_TRUE &nbsp;&nbsp;&nbsp;&nbsp;entity_body is required&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_FALSE&nbsp;&nbsp;&nbsp;&nbsp;entity_body is not required (ignored if set)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entity_body</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory address for storing pointer to <i>entity_body </i>(OUT)&nbsp;&nbsp;<br>&nbsp;&nbsp;Note that this memory may need to be allocated by the application other than for <i>username</i> and <i>password</i>. Normally need not be specified.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>entity_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to memory area for storing the size of <i>entity_body</i> (OUT)&nbsp;&nbsp;<br>&nbsp;&nbsp;Normally need not be specified.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>save</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flag for saving username and password (OUT). Currently should be set to SCE_FALSE.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>user_arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to user-specified data specified with <a href="../network/libhttp-Reference-English.htm#sceHttpSetAuthInfoCallback">sceHttpSetAuthInfoCallback</a>() (IN).&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">0 or greater: perform authentication<br>Negative value: do not perform authentication<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a type definition for the callback function that is called during basic and digest authentication. Basically, the callback function stores username and password in <i>username </i>and <i>password</i>, and by returning a value of 0 or greater, the header required for authentication is generated and sent. Negative values indicate that authentication is not attempted.<br>If a saved username and password is present, then those values are stored in <i>username </i>and <i>password</i> when the function is called.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When <i>need_entity </i>is set to SCE_TRUE, the <i>entity_body </i>to be sent must be specified. This performs digest authentication using the POST method, and the server will issue only upon receipt of the authentication header for the type used in <i>entity_body</i>. In this case, specify the starting address in memory of the data body to be sent using POST in <i>entity_body</i>, and its size in <i>entity_size</i>. You must not free the specified memory until either <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() has completed for the <i>request</i>, or until this function is called again using the same <i>request</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableAuth">sceHttpEnableAuth</a> (), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableAuth">sceHttpDisableAuth</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="httpRedirectCallback"></a>
<table width="100%"><td width="70%"><font size=6>httpRedirectCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Callback function for redirects<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>httpRedirectCallback</b>(
	int <i>request</i>,
	int <i>status_code</i>,
	int *<i>method</i>,
	const char *<i>location,</i>
<i>	</i>void <i>*user_arg</i>
);

</font></pre></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of request object of caller (IN).&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>status_code</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Redirect status code-.3xx, etc (IN).&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>method</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Method specified by request object (IN/OUT).&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>location</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ASCIZ string representing the location of the redirect destination (IN).&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>user_arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to user-specified data specified by <a href="../network/libhttp-Reference-English.htm#sceHttpSetRedirectCallback">sceHttpSetRedirectCallback</a>(). Can be omitted (IN/OUT).&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">0 or greater	Redirection allowed<br>Negative value	Redirection not allowed<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a type definition for the callback function that is called when a redirect is issued.<br>You should return a positive value if redirection is allowed based on the <i>request</i>, <i>status_code</i>, <i>method</i> and <i>location</i>, and return a negative value if redirection is not allowed. <i>method </i>contains a value as defined in <a href="../network/libhttp-Reference-English.htm#SceHttpMethods">SceHttpMethods</a>. You can change the method to use after redirection by overwriting <i>method</i>. However, note that if you switch from the GET/HEAD method to the POST method, the request body will always be 0 bytes. <br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The memory for <i>location </i>is freed immediately after exiting the callback function. If you need to save <i>location</i>, you must copy it to a separate memory location while in the callback function. Also, if you are using libhttp with multithreading, this function must be multithread safe.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableRedirect">sceHttpEnableRedirect</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableRedirect">sceHttpDisableRedirect</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSetRedirectCallback">sceHttpSetRedirectCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="httpCookieRecvCallback"></a>
<table width="100%"><td width="70%"><font size=6>httpCookieRecvCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Callback function for receiving cookies<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>httpCookieRecvCallback</b>(
	int <i>request</i>,
	const char *<i>url,</i>
	const char *<i>cookie_header,</i>
<i>	</i>SceSize<i> header_len,</i>
<i>	</i>void<i> *user_arg</i>
);

</font></pre></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of request object of caller&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>url</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Receiver's URL, stored as an ASCIZ string&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cookie_header</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The cookie string to receive. Must not be null-terminated.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>header_len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Length of the <i>cookie_header </i>string.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>user_arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Stores the value that was specified with <a href="../network/libhttp-Reference-English.htm#sceHttpSetCookieRecvCallback">sceHttpSetCookieRecvCallback</a>(). Can be omitted.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">0 or greater	Receiving of cookies is allowed<br>Negative value	Receiving of cookies is not allowed<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a type definition for the callback function that is called when receiving cookies.<br>When this function is set using <a href="../network/libhttp-Reference-English.htm#sceHttpSetCookieRecvCallback">sceHttpSetCookieRecvCallback</a>(), it will be called prior to receiving cookies.<br>You should return a positive value if receiving cookies is allowed based on <i>request</i>, <i>url, cookie_header, header_len, </i>and <i>user_arg</i>, and return a negative value if receiving cookies is not allowed. When a negative value is returned, libhttp will ignore the cookie and it will not be stored.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableCookie">sceHttpEnableCookie</a> (), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCookie">sceHttpDisableCookie</a> (), <a href="../network/libhttp-Reference-English.htm#sceHttpSetCookieRecvCallback">sceHttpSetCookieRecvCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="httpCookieSendCallback"></a>
<table width="100%"><td width="70%"><font size=6>httpCookieSendCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Callback for sending cookies<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>httpCookieSendCallback</b>(
	int <i>request</i>,
	const char <i>*url,</i>
	const char *<i>cookie_header</i>
<i>	</i>void<i> *user_arg</i>
);

</font></pre></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of request object of caller&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>url</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sender's URL, stored as an ASCIZ string&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cookie_header</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The ASCIZ cookie string to send.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>user_arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Stores the value that was specified with <a href="../network/libhttp-Reference-English.htm#sceHttpSetCookieSendCallback">sceHttpSetCookieSendCallback</a>(). Can be omitted.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">0 or greater	Sending of cookies is allowed<br>Negative value	Sending of cookies is not allowed<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a typedef for the callback function that is called when sending cookies.<br>When this function is set using <a href="../network/libhttp-Reference-English.htm#sceHttpSetCookieSendCallback">sceHttpSetCookieSendCallback</a>(), this function is called prior to sending cookies.<br>You should return a positive value if sending cookies is allowed based on <i>request</i>, <i>url, cookie_header, </i>and <i>user_arg, </i>and<i> </i>return a negative value if sending cookies is not allowed. If a negative value is returned, libhttp will send the request to the server with the cookie header deleted.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableCookie">sceHttpEnableCookie</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCookie">sceHttpDisableCookie</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSetCookieSendCallback">sceHttpSetCookieSendCallback</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHttpHttpVersion"></a>
<table width="100%"><td width="70%"><font size=6>SceHttpHttpVersion<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>HTTP version constants<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
typedef enum{
	SCE_HTTP_VERSION_1_0,
	SCE_HTTP_VERSION_1_1
} <b>SceHttpHttpVersion</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the HTTP versions. They are used by <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHttpMethods"></a>
<table width="100%"><td width="70%"><font size=6>SceHttpMethods<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>HTTP method constants<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp/http_methods.h&gt;
typedef enum{
	SCE_HTTP_METHOD_GET,
	SCE_HTTP_METHOD_POST,
	SCE_HTTP_METHOD_HEAD,
	SCE_HTTP_METHOD_OPTIONS,
	SCE_HTTP_METHOD_PUT,
	SCE_HTTP_METHOD_DELETE,
	SCE_HTTP_METHOD_TRACE,
	SCE_HTTP_METHOD_CONNECT
} <b>SceHttpMethods</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the options used in <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>() and <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequestWithURL">sceHttpCreateRequestWithURL</a>(). SCE_HTTP_METHOD_GET, SCE_HTTP_METHOD_POST, and SCE_HTTP_METHOD_HEAD are currently supported in libhttp.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequestWithURL">sceHttpCreateRequestWithURL</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHttpProxyMode"></a>
<table width="100%"><td width="70%"><font size=6>SceHttpProxyMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>HTTP proxy setting constants<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
typedef enum{
	SCE_HTTP_PROXY_AUTO,
	SCE_HTTP_PROXY_MANUAL
} <b>SceHttpProxyMode</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the modes for the proxy settings used in <a href="../network/libhttp-Reference-English.htm#sceHttpSetProxy">sceHttpSetProxy</a>() and <a href="../network/libhttp-Reference-English.htm#sceHttpGetProxy">sceHttpGetProxy</a>(). <br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSetProxy">sceHttpSetProxy</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpGetProxy">sceHttpGetProxy</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHttpAddHeaderMode"></a>
<table width="100%"><td width="70%"><font size=6>SceHttpAddHeaderMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>HTTP header addition mode constants<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
typedef enum{
	SCE_HTTP_HEADER_OVERWRITE,
	SCE_HTTP_HEADER_ADD
} <b>SceHttpAddHeaderMode</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants specify whether to append or overwrite when adding a header using <a href="../network/libhttp-Reference-English.htm#sceHttpAddExtraHeader">sceHttpAddExtraHeader</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpAddExtraHeader">sceHttpAddExtraHeader</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceHttpAuthType"></a>
<table width="100%"><td width="70%"><font size=6>SceHttpAuthType<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Constant Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>HTTP authentication type constants<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
typedef enum{
	SCE_HTTP_AUTH_BASIC,
	SCE_HTTP_AUTH_DIGEST
} <b>SceHttpAuthType</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants indicate the HTTP authentication type. They are used by the callback function specified by <a href="../network/libhttp-Reference-English.htm#sceHttpSetAuthInfoCallback">sceHttpSetAuthInfoCallback</a>() to indicate the type of the authentication challenge from the server.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSetAuthInfoCallback">sceHttpSetAuthInfoCallback</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetMallocFunction"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetMallocFunction<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set user-defined memory management functions<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
int <b>sceHttpSetMallocFunction</b>(
	void *(*<i><a href="../network/libhttp-Reference-English.htm#httpMallocFunction">httpMallocFunction</a>)(SceSize)</i>, 
	void *<i>(<a href="../network/libhttp-Reference-English.htm#httpFreeFunction">httpFreeFunction</a>)(void *)</i>,
	void *<i>(<a href="../network/libhttp-Reference-English.htm#httpReallocFunction">httpReallocFunction</a>)(void*,SceSize)</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (must be called in interrupt-enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i><a href="../network/libhttp-Reference-English.htm#httpMallocFunction">httpMallocFunction</a></i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;User-defined malloc function&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i><a href="../network/libhttp-Reference-English.htm#httpFreeFunction">httpFreeFunction</a></i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;User-defined free function&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i><a href="../network/libhttp-Reference-English.htm#httpReallocFunction">httpReallocFunction</a></i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;User-defined realloc function (unused)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Upon normal completion, 0 is returned. If an error occurs, a negative number is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x804311FE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_VALUE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified function pointer is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431021&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is already in use&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">With libhttp, normally a heap is allocated within the library, and memory in this heap is used, but by using this function, an application can use its own memory management functionality. <br>Pointers to user-defined memory management functions malloc, free, and realloc are specified as arguments. <br>However, realloc is not currently used in libhttp, so a dummy function can be specified instead.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function can only be called immediately after <a href="../network/libhttp-Reference-English.htm#sceHttpInit">sceHttpInit</a>(). If the library has already begun to be used, the internal heap will be in use, so it will not be possible to use external memory management functionality. <br>In addition, it must be possible to use the malloc function regardless of whether or not dispatch is enabled. The callback functions that are set are executed in the context of the thread that called the corresponding libhttp function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#httpMallocFunction">httpMallocFunction</a>(), <a href="../network/libhttp-Reference-English.htm#httpFreeFunction">httpFreeFunction</a>(), <a href="../network/libhttp-Reference-English.htm#httpReallocFunction">httpReallocFunction</a>()<br><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpInit"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpInit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize libhttp<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpInit</b>(
	SceSize <i>pool_size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pool_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of memory pool used by library&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient free memory space&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431020&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_ALREADY_INITED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sceHttpInit() was called a second&nbsp;&nbsp;<br>&nbsp;&nbsp;time without calling <a href="../network/libhttp-Reference-English.htm#sceHttpEnd">sceHttpEnd</a>()&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function initializes the libhttp library. This function must be called before using any other functions in libhttp. This function allocates from the system a memory pool of <i>poolsize</i> bytes which is used as a memory pool for this library.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define LIBHTTP_POOLSIZE 	(30 * 1024)

// When <a href="../network/libhttp-Reference-English.htm#sceHttpLoadSystemCookie">sceHttpLoadSystemCookie</a>() is used
//define LIBHTTP_POOLSIZE	SCE_HTTP_LOAD_COOKIE_LEAST_HEAP_SIZE

ret = sceHttpInit(LIBHTTP_POOLSIZE);
if(ret &lt; 0){
	// error handling
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnd">sceHttpEnd</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Terminate libhttp<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpEnd</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled/disabled state)<br>Not multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Before library initialization&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function terminates the libhttp library, and frees memory which it had allocated.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Call this function after using <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteTemplate">sceHttpDeleteTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteConnection">sceHttpDeleteConnection</a>(), and <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>() to delete all objects created with <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), and <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpInit">sceHttpInit</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteTemplate">sceHttpDeleteTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteConnection">sceHttpDeleteConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>()<br><br></div>

<!-- sce_hd2 -->
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpCreateTemplate"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpCreateTemplate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create a template for HTTP settings<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpCreateTemplate</b>(
	const char*<i>user_agent</i>, 
	int <i>http_ver</i>,
	int <i>net_conf </i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled/disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>user_agent</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Contains&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;user&nbsp;agent&nbsp;name,&nbsp;which&nbsp;is&nbsp;stored&nbsp;as&nbsp;an&nbsp;ASCIZ&nbsp;string&nbsp;</td>
</tr>
<tr>
<td rowspan= 2  valign="top">&nbsp;<i>http_ver</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Specifies&nbsp;the&nbsp;HTTP&nbsp;version.&nbsp;HTTP&nbsp;versions&nbsp;are&nbsp;defined&nbsp;as&nbsp;follows&nbsp;</td>
</tr>
<tr>
<td colspan= 2  valign="top">&nbsp;Macro&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Version&nbsp;<br>&nbsp;SCE_HTTP_VERSION_1_0  HTTP&nbsp;1.0&nbsp;<br>&nbsp;SCE_HTTP_VERSION_1_0  HTTP&nbsp;1.1&nbsp;</td>
</tr>
<tr>
<td rowspan= 2  valign="top">&nbsp;<i>net_conf</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Specifies&nbsp;whether&nbsp;or&nbsp;not&nbsp;to&nbsp;use&nbsp;the&nbsp;settings&nbsp;stored&nbsp;in&nbsp;the&nbsp;system.&nbsp;Data&nbsp;for&nbsp;HTTP&nbsp;Proxy&nbsp;is&nbsp;stored&nbsp;in&nbsp;the&nbsp;system.&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;SCE_HTTP_ENABLE&nbsp;<br>&nbsp;SCE_HTTP_DISABLE&nbsp;</td>
<td valign="top">&nbsp;Use&nbsp;system&nbsp;settings&nbsp;<br>&nbsp;Do&nbsp;not&nbsp;use&nbsp;system&nbsp;settings&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, the ID of the created template settings is returned.<br>If an error occurs, a negative value is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient free memory space&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106A&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_VERSION&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The HTTP version is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x804311FE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_VALUE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An invalid value was specified&nbsp;&nbsp;<br>&nbsp;&nbsp;for an argument&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431060&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_TOO_MANY_OBJECT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No more template settings can&nbsp;&nbsp;<br>&nbsp;&nbsp;be created&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The <i>user_agent</i> argument specifies a pointer to the string to be used as the user agent. The <i>http_ver</i> argument specifies the HTTP version. Please note that when SCE_HTTP_VERSION_1_0 is specified, the functionality added starting with Version 1.1 cannot as a rule be used. If <i>net_conf</i> is set to SCE_HTTP_ENABLE, the HTTP(S) proxy server settings will be automatically read in from the network settings stored in the registry of the PSP&trade;. Since, due to the nature of wireless LANs, there is a good chance that the need for a proxy will change based on the connected base station, the SCE_HTTP_ENABLE setting, which automatically determines whether or not a proxy is necessary from the currently utilized network settings, is recommended.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates basic HTTP settings (referred to below as template settings). In the libhttp library, the settings are divided into three stages - template settings, connection settings, and request settings - and are classified respectively as settings for items which do not depend strongly upon the accessed server, settings for each accessed server, and settings for each request. For details, please read the HTTP Library Overview.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpDeleteTemplate">sceHttpDeleteTemplate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpDeleteTemplate"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpDeleteTemplate<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete template settings<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpDeleteTemplate</b>(
	int <i>template_id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled/disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>template_id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of template to delete&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes the template settings having the ID specified by <i>template_id</i>, and frees the memory which had been used for them.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpCreateConnection"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpCreateConnection<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create settings for an individual connected server<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpCreateConnection</b>(
	int <i>template_id</i>, 
	const char *<i>server</i>, 
	const char *<i>scheme</i>, 
	unsigned short <i>port</i>,
	int <i>keepalive</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled, dispatch-enabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>template_id</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;ID&nbsp;of&nbsp;template&nbsp;settings&nbsp;to&nbsp;use&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>server</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Contains&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;host&nbsp;name&nbsp;of&nbsp;the&nbsp;server&nbsp;to&nbsp;access,&nbsp;&nbsp;<br>&nbsp;which&nbsp;is&nbsp;stored&nbsp;as&nbsp;an&nbsp;ASCIZ&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>scheme</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Specifies&nbsp;HTTP&nbsp;or&nbsp;HTTPS.&nbsp;(In&nbsp;the&nbsp;current&nbsp;version,&nbsp;only&nbsp;&nbsp;<br>&nbsp;HTTP&nbsp;can&nbsp;be&nbsp;used.)&nbsp;Contains&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;scheme&nbsp;(e.g.,&nbsp;&nbsp;<br>&nbsp;&quot;http&quot;),&nbsp;which&nbsp;is&nbsp;stored&nbsp;as&nbsp;an&nbsp;ASCIZ&nbsp;string.&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>port</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Contains&nbsp;the&nbsp;port&nbsp;number&nbsp;to&nbsp;access.&nbsp;This&nbsp;need&nbsp;not,&nbsp;and&nbsp;in&nbsp;&nbsp;<br>&nbsp;fact&nbsp;must&nbsp;not,&nbsp;be&nbsp;converted&nbsp;to&nbsp;network&nbsp;byte&nbsp;order.&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>keepalive</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Specifies&nbsp;whether&nbsp;or&nbsp;not&nbsp;to&nbsp;use&nbsp;keep-alive.&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;&nbsp;&nbsp;</td>
<td valign="top">&nbsp;SCE_HTTP_ENABLE&nbsp;<br>&nbsp;SCE_HTTP_DISABLE&nbsp;</td>
<td valign="top">&nbsp;Enable&nbsp;keep-alive&nbsp;<br>&nbsp;Disable&nbsp;keep-alive&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, the ID of the created connection settings is returned.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient free memory space&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified template ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431061&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_UNKNOWN_SCHEME&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A scheme other than http or https was specified for the URI&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates settings for each connected server. Template settings must first be created using <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>().<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The TCP connection with the server is actually established when a request object is created using <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>() and then <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() is called. <br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpDeleteConnection">sceHttpDeleteConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpCreateConnectionWithURL"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpCreateConnectionWithURL<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create settings for an individual connected server<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpCreateConnectionWithURL</b>(
	int <i>template_id</i>, 
	const char *<i>url</i>,
	int <i>keepalive</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled, dispatch-enabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>template_id</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;ID&nbsp;of&nbsp;template&nbsp;settings&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>url</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Contains&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;URL&nbsp;to&nbsp;access,&nbsp;which&nbsp;is&nbsp;stored&nbsp;as&nbsp;an&nbsp;ASCIZ&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>keepalive</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Specifies&nbsp;whether&nbsp;or&nbsp;not&nbsp;to&nbsp;use&nbsp;keep-alive.&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;&nbsp;&nbsp;</td>
<td valign="top">&nbsp;SCE_HTTP_ENABLE&nbsp;<br>&nbsp;SCE_HTTP_DISABLE&nbsp;&nbsp;</td>
<td valign="top">&nbsp;Enable&nbsp;keep-alive&nbsp;<br>&nbsp;Disable&nbsp;keep-alive&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, the ID of the created connection settings is returned.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient free memory space&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified template ID is&nbsp;&nbsp;<br>&nbsp;&nbsp;invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431061&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_UNKNOWN_SCHEME&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A scheme other than http or https&nbsp;&nbsp;<br>&nbsp;&nbsp;was specified in the URI&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is like <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>() with URL parsing capability. Template settings must first be created using <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(). This function parses the string which is specified by <i>url</i>, retrieves the protocol (HTTP, HTTPS), the host name of the server, the port number, the user name to use for authentication, and the password, and creates the connection settings. The memory allocated within the library when the URL is parsed is released when the connection settings are deleted using <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteConnection">sceHttpDeleteConnection</a>().<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Please note that this function does not utilize the path segment of the URL.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteConnection">sceHttpDeleteConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpDeleteConnection"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpDeleteConnection<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete settings for an individual connected server<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpDeleteConnection</b> (
	int <i>connection</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in an interrupt-enabled,dispatch-enabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>connection</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the connection settings to delete&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes the connection settings having the ID specified by <i>connection</i>, and frees the memory which had been used for them.<br>If keep-alive is enabled and a TCP connection is open, it is closed.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnectionWithURL">sceHttpCreateConnectionWithURL</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpCreateRequest"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpCreateRequest<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create a request object<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpCreateRequest</b>(
	int <i>connection</i>, 
	int <i>method</i>,
	const char *<i>path</i>, 
	<a href="../kernel/Types-Reference-English.htm#SceULong64">SceULong64</a><i> content_length</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>connection</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Contains&nbsp;the&nbsp;ID&nbsp;of&nbsp;the&nbsp;connection&nbsp;settings&nbsp;to&nbsp;use&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>method</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Specifies&nbsp;a&nbsp;flag&nbsp;corresponding&nbsp;to&nbsp;the&nbsp;method&nbsp;to&nbsp;use&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;&nbsp;&nbsp;</td>
<td valign="top">&nbsp;SCE_HTTP_METHOD_GET&nbsp;<br>&nbsp;SCE_HTTP_METHOD_HEAD&nbsp;</td>
<td valign="top">&nbsp;GET&nbsp;<br>&nbsp;HEAD&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>path</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Contains&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;path&nbsp;to&nbsp;access,&nbsp;which&nbsp;is&nbsp;<br>&nbsp;stored&nbsp;as&nbsp;an&nbsp;ASCIZ&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>content_length</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;When&nbsp;a&nbsp;method&nbsp;other&nbsp;than&nbsp;POST&nbsp;is&nbsp;used,&nbsp;contains&nbsp;0.&nbsp;<br>&nbsp;When&nbsp;POST&nbsp;is&nbsp;used,&nbsp;contains&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;in&nbsp;its&nbsp;total&nbsp;size.&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, the ID of the created request object is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient free memory space&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106A&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_VERSION&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Using connection settings&nbsp;&nbsp;<br>&nbsp;&nbsp;specifying 1.0 as the HTTP&nbsp;&nbsp;<br>&nbsp;&nbsp;version, <i>method</i> specified PUT or&nbsp;&nbsp;<br>&nbsp;&nbsp;DELETE.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The ID of the connection settings&nbsp;&nbsp;<br>&nbsp;&nbsp;is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106B&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_UNKNOWN_METHOD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The value specified in <i>method</i> is&nbsp;&nbsp;<br>&nbsp;&nbsp;invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates a request to the connection destination specified by <i>connection</i>. Connection settings must first be created using <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>() or <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnectionWithURL">sceHttpCreateConnectionWithURL</a>(). Please note that sending of data is not performed until <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() is called.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnectionWithURL">sceHttpCreateConnectionWithURL</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequestWithURL">sceHttpCreateRequestWithURL</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpCreateRequestWithURL"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpCreateRequestWithURL<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create a request object<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpCreateRequestWithURL</b>(
	int <i>connection</i>, 
	int <i>method</i>,
	const char *<i>url</i>,
	<a href="../kernel/Types-Reference-English.htm#SceULong64">SceULong64</a> <i>content_length</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>connection</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Contains&nbsp;the&nbsp;ID&nbsp;of&nbsp;the&nbsp;connection&nbsp;settings&nbsp;to&nbsp;use&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>method</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Specifies&nbsp;a&nbsp;flag&nbsp;corresponding&nbsp;to&nbsp;the&nbsp;method&nbsp;to&nbsp;use&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;&nbsp;&nbsp;</td>
<td valign="top">&nbsp;SCE_HTTP_METHOD_GET&nbsp;<br>&nbsp;SCE_HTTP_METHOD_HEAD&nbsp;<br>&nbsp;SCE_HTTP_METHOD_POST&nbsp;</td>
<td valign="top">&nbsp;GET&nbsp;<br>&nbsp;HEAD&nbsp;<br>&nbsp;POST&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>url</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Contains&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;URL&nbsp;to&nbsp;access,&nbsp;which&nbsp;is&nbsp;stored&nbsp;as&nbsp;an&nbsp;ASCIZ&nbsp;string&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>content_length</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;When&nbsp;a&nbsp;method&nbsp;other&nbsp;than&nbsp;POST&nbsp;is&nbsp;used,&nbsp;contains&nbsp;0.&nbsp;<br>&nbsp;When&nbsp;POST&nbsp;is&nbsp;used,&nbsp;contains&nbsp;the&nbsp;number&nbsp;of&nbsp;bytes&nbsp;in&nbsp;its&nbsp;total&nbsp;size.&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, the ID of the created request object is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient free memory space&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106A&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_VERSION&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Using connection settings&nbsp;&nbsp;<br>&nbsp;&nbsp;specifying 1.0 as the HTTP&nbsp;&nbsp;<br>&nbsp;&nbsp;version, <i>method</i> specified PUT&nbsp;&nbsp;<br>&nbsp;&nbsp;or DELETE.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The ID of the connection&nbsp;&nbsp;<br>&nbsp;&nbsp;settings is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106B&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_UNKNOWN_METHOD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The value specified in <i>method</i> is&nbsp;&nbsp;<br>&nbsp;&nbsp;invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>() with URL parsing capability. Connection settings must first be created using <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>() or <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnectionWithURL">sceHttpCreateConnectionWithURL</a>(). This function parses the string specified by <i>url</i>, and creates a request object. The memory allocated within the library when the URL is parsed is released when the request object is deleted using <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>()<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Please note that this function does not utilize any portion of the URL other than the path, username and password. <br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnectionWithURL">sceHttpCreateConnectionWithURL</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpDeleteRequest"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpDeleteRequest<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete a request object<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpDeleteRequest</b>(
	int <i>request</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of request object to delete&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes the request object specified by <i>request</i>, and frees the memory which had been allocated for it.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequestWithURL">sceHttpCreateRequestWithURL</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSendRequest"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSendRequest<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Send an HTTP request<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSendRequest</b>(
	int <i>request</i>, 
	const void *<i>post_data</i>,
	unsigned int <i>size</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled, dispatch-enabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of request object to send&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>post_data</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of memory containing data on which to perform POST.&nbsp;&nbsp;<br>&nbsp;&nbsp;For any method other than POST, set this to NULL.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the size of <i>post_data</i>. &nbsp;&nbsp;<br>&nbsp;&nbsp;For any method other than POST, set this to 0.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Not enough free memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431021&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;One of these three has occurred:&nbsp;&nbsp;<br>&nbsp;&nbsp;1. Attempted to send multiple requests &nbsp;&nbsp;<br>&nbsp;&nbsp;simultaneously in a multithreaded &nbsp;&nbsp;<br>&nbsp;&nbsp;environment when using a single &nbsp;&nbsp;<br>&nbsp;&nbsp;connection object.&nbsp;&nbsp;<br>&nbsp;&nbsp;2. Attempted to send the next request &nbsp;&nbsp;<br>&nbsp;&nbsp;before completely receiving the &nbsp;&nbsp;<br>&nbsp;&nbsp;response to the previous request with &nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/libhttp-Reference-English.htm#sceHttpReadData">sceHttpReadData</a>(), when &nbsp;&nbsp;<br>&nbsp;&nbsp;communicating with a server with &nbsp;&nbsp;<br>&nbsp;&nbsp;HTTP-PIPELINE disabled and using a &nbsp;&nbsp;<br>&nbsp;&nbsp;single connection object.&nbsp;&nbsp;<br>&nbsp;&nbsp;3. Attempted to send another request &nbsp;&nbsp;<br>&nbsp;&nbsp;during the sending of multipart POST &nbsp;&nbsp;<br>&nbsp;&nbsp;data.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431068&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_TIMEOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Either the TCP timeout period or the &nbsp;&nbsp;<br>&nbsp;&nbsp;timeout set using &nbsp;&nbsp;<br>&nbsp;&nbsp;sceHttpSetXxxTimeOut() has elapsed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431063&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_NETWORK_ERR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An error was returned by the TCP stack. &nbsp;&nbsp;<br>&nbsp;&nbsp;To retrieve the specific error value, use&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/libhttp-Reference-English.htm#sceHttpGetNetworkErrno">sceHttpGetNetworkErrno</a>().&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431075&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_SSL_ERROR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SSL communication failed.&nbsp;&nbsp;<br>&nbsp;&nbsp;(In the default state, libhttp cannot&nbsp;&nbsp;<br>&nbsp;&nbsp;perform SSL communication.)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sends the request object specified by <i>request</i> to the server. If POST is specified as the method of the request object, specify in <i>post_data</i> the starting address of the memory which contains the data to be used in the request body, and specify in <i>size</i> the size of the specified data. If memory the size of the Content-Length cannot be allocated all at once then call sceHttpSendRequest() multiple times. Content-Length is set when a request object is created using the <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>() function; set it to the total size to be sent using POST.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">With methods other than POST, sceHttpSendRequest() does not return until the request is sent and a response is received from the server. With the POST method, if there is any remaining data to send, then this function returns when that data has been sent, and if the data size specified by Content-Length has already been sent, then this function returns when the response header is received from the server. In addition, with libhttp, chunked encoding is supported for receive only; it is not supported for send. As a result, when sending data using the POST method, Content-Length must be specified. <br>Also, if a DNS error occurs, the error value of the resolver module (SCE_ERROR_NET_MODULE_ID_RESOLVER) is returned, not SCE_HTTP_NETWORK_ERR.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Initialize HTTP library */
ret = <a href="../network/libhttp-Reference-English.htm#sceHttpInit">sceHttpInit</a>(HTTP_POOLSIZE);
if (ret &lt; 0){
	goto http_term;
}

/* Create template configuration */
tmpl = <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(USER_AGENT, SCE_HTTP_VERSION_1_1,
			SCE_HTTP_ENABLE);
if (tmpl &lt; 0){
	goto http_term;
}

/* Create connection configuration */
conn = <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnectionWithURL">sceHttpCreateConnectionWithURL</a>(tmpl, uri,
			SCE_HTTP_ENABLE);
if(conn &lt; 0){
	goto http_term;
}

/* Create request object */
request = <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequestWithURL">sceHttpCreateRequestWithURL</a>(conn, SCE_HTTP_METHOD_POST,
	uri, sizeof(post_data));
if (request &lt; 0){
	goto http_term;
}

/* Send request */
ret = sceHttpSendRequest(request, post_data, sizeof(post_data));
if (ret == (<a href="../kernel/Types-Reference-English.htm#SceInt32">SceInt32</a>)SCE_HTTP_NETWORK_ERR){
	/* Get detailed reason for network error */
	ret = <a href="../network/libhttp-Reference-English.htm#sceHttpGetNetworkPspError">sceHttpGetNetworkPspError</a>(request, &amp;error_num);
	if (ret &lt; 0){
		printf("<a href="../network/libhttp-Reference-English.htm#sceHttpGetNetworkPspError">sceHttpGetNetworkPspError</a>() returns %x\n", ret);
	} else{
		printf("NETWORK error= %x\n", error_num);
	}
	goto http_term;
}
else if( (SCE_ERROR_FACILITY(ret) == SCE_ERROR_FACILITY_NETWORK) &amp;&amp;
  ( ((ret &gt;&gt; 20) &amp; 0xFF) == SCE_ERROR_NET_MODULE_ID_RESOLVER ) )
{
	/* DNS error */
	printf(&quot;DNS error %x\n&quot;, ret);
	goto http_term;
} else if (ret &lt; 0){
	/* Failed due to other error */
	printf("sceHttpSendRequest() returns %x\n", ret);
	goto http_term;
}

---
Example of sending POST data by dividing into multiple transmissions
/* Get size of file to be uploaded  */
ret = sceIoGetstat(upload_file, &amp;fstat);
if (ret &lt; 0){
	goto http_term;
}
request_length = fstat.st_size;

/* Create request using the file size */
request2 = <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequestWithURL">sceHttpCreateRequestWithURL</a>(connection, SCE_HTTP_METHOD_POST,
	uri, request_length);
if (request2 &lt; 0){
	goto http_term;
}

/* Open file to be uploaded */
ret = sceIoOpen(upload_file, SCE_O_RDONLY, 0);
if (ret &lt; 0){
	goto http_term;
}

/* Subdivide file size for transmission */
while (request_length &gt; 0){
	/* Read one subdivided portion  */
	if (request_length &gt; UPLOAD_BLOCKSIZE){
		send_size = UPLOAD_BLOCKSIZE;
	} else {
		send_size = (SceSize) request_length;
	}
	ret = sceIoRead(fd, upload_buf, send_size);
	if (ret &lt; 0){
		goto http_term;
	}
	/* Send one subdivided portion */
	ret = sceHttpSendRequest(request2, upload_buf, send_size);
	if (ret &lt; 0){
		goto http_term;
	}
	/* Subtract transmitted size from total POST size */
	request_length -= send_size;
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpAbortRequest">sceHttpAbortRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpGetNetworkErrno">sceHttpGetNetworkErrno</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSendRequestInCacheFirstMode"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSendRequestInCacheFirstMode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Send an HTTP request in cache priority mode<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSendRequestInCacheFirstMode</b>(
	int <i>request</i>, 
	const void *<i>post_data</i>,
	unsigned int <i>size</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of request object to send&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>post_data</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of memory area for storing data to POST&nbsp;&nbsp;<br>&nbsp;&nbsp;Set to null if using a method other than POST.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of <i>post</i> data. &nbsp;&nbsp;<br>&nbsp;&nbsp;Set to 0 if using a method other than POST.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431063&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_NETWORK_ERR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TCP stack returned an error. Use &nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/libhttp-Reference-English.htm#sceHttpGetNetworkErrno">sceHttpGetNetworkErrno</a>() to get the &nbsp;&nbsp;<br>&nbsp;&nbsp;actual error value.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431075&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_SSL_ERROR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SSL communications failed (by &nbsp;&nbsp;<br>&nbsp;&nbsp;default, libhttp cannot communicate &nbsp;&nbsp;<br>&nbsp;&nbsp;using SSL).&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs a call to <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() in cache priority mode. Normally, even if there is a cache hit, a request will still be sent to the server to check the validity of the cached data. In cache priority mode, this request is skipped. That is, if there is a hit in the cache, the request will complete normally even if the network connection is broken. If there is no hit in the cache, the operation is the same as <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>().<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Currently, because requests using the POST method are not subject to caching, operation is the same as <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() when using the POST method. This is also the case if the cache is no longer valid.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpIsRequestInCache">sceHttpIsRequestInCache</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpIsRequestInCache"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpIsRequestInCache<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Check if cache resident for request<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceBool">SceBool</a> <b>sceHttpIsRequestInCache</b>(
	int <i>request</i>, 
	const void *<i>post_data</i>,
	unsigned int <i>size</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of request object to send.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>post_data</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of memory area where data to be POSTed is stored.&nbsp;&nbsp;<br>&nbsp;&nbsp;Set to NULL if using method other than POST.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of <i>post_data</i>&nbsp;&nbsp;<br>&nbsp;&nbsp;Set to 0 if using method other than POST.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If cache resident, SCE_TRUE is returned.<br>If not cache resident, SCE_FALSE is returned.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Currently, because requests using the POST method are not subject to caching, using the POST method always returns SCE_FALSE. This is also the case if the cache is invalid.<br>Also, even if SCE_TRUE is returned, there is no guarantee that succeeding <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() or <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequestInCacheFirstMode">sceHttpSendRequestInCacheFirstMode</a>() calls will hit the cache.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequestInCacheFirstMode">sceHttpSendRequestInCacheFirstMode</a> ()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpAbortRequest"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpAbortRequest<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Abort transmission of an HTTP request<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpAbortRequest</b>(
	int <i>request</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled/disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of request object to abort&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431070&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_NOT_IN_COM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified request object is not&nbsp;&nbsp;<br>&nbsp;&nbsp;currently involved in communication&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431063&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_NETWORK_ERR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error returned after <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() calls libhttp internally.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function immediately aborts communication with the server involving the request object specified by <i>request</i>, and the corresponding <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() or <a href="../network/libhttp-Reference-English.htm#sceHttpReadData">sceHttpReadData</a>() immediately returns.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Since libhttp does not create internal threads, all functions will block. With methods other than POST, <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() does not return until the request is sent and a response is received from the server. With the POST method, if the amount of data specified by Content-Length has not been sent, then this function returns when the specified data has been sent, and if the data size specified by Content-Length has already been sent, then this function returns when the response header is received from the server.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpReadData">sceHttpReadData</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpReadData"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpReadData<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Read the response body<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpReadData</b>(
	int <i>request</i>, 
	void *<i>data</i>,
	unsigned int <i>size</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled, dispatch-enabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the request object&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>data</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Start address of memory to which to store the data retrieved&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of the memory specified by <i>data</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Upon normal completion, the size of the data which was written into the memory specified by <i>data</i> is returned. When the response body has been received and there is no data to read in, 0 is returned. If an error occurs, a negative number is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;All response data has been&nbsp;&nbsp;<br>&nbsp;&nbsp;received&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431065&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_SEND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified request object&nbsp;&nbsp;<br>&nbsp;&nbsp;has not been sent yet&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431068&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_TIMEOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Either the TCP timeout &nbsp;&nbsp;<br>&nbsp;&nbsp;period or the timeout set &nbsp;&nbsp;<br>&nbsp;&nbsp;using sceHttpSetXxxTimeOut() &nbsp;&nbsp;<br>&nbsp;&nbsp;has elapsed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106F&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_READ_BY_HEAD_METHOD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;This function was called &nbsp;&nbsp;<br>&nbsp;&nbsp;using the HEAD method&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_PIPELINE_BEFORE_YOUR_TURN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;In PIPELINE mode, did not &nbsp;&nbsp;<br>&nbsp;&nbsp;completely receive the &nbsp;&nbsp;<br>&nbsp;&nbsp;previous request that was &nbsp;&nbsp;<br>&nbsp;&nbsp;sent &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_TERMINATED_IN_PRE_REQUEST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;In PIPELINE mode, the &nbsp;&nbsp;<br>&nbsp;&nbsp;previous request that was &nbsp;&nbsp;<br>&nbsp;&nbsp;sent has been interrupted or &nbsp;&nbsp;<br>&nbsp;&nbsp;deleted.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431075&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_SSL_ERROR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SSL communications failed &nbsp;&nbsp;<br>&nbsp;&nbsp;(by default, libhttp cannot &nbsp;&nbsp;<br>&nbsp;&nbsp;communicate using SSL).&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function writes the received response body into the address specified by <i>data</i>.<br>Blocking is released for sceHttpReadData() under the following conditions.<br><br>Condition 1.  Receiving the number of bytes of data specified by <i>size</i> has been completed<br>Condition 2.  Receiving a response body having the size specified by Content-Length (if Content-Length exists) has been completed<br>Condition 3.  When 0 or a negative value is returned by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecv">sceNetInetRecv</a>(), which is called internally within libhttp<br>Condition 4.  Receiving the final chunk has been completed when chunk encoded data is being received<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When using the HEAD method, the response body is not sent from the server, so this function should not be called.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpGetContentLength">sceHttpGetContentLength</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpGetContentLength"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpGetContentLength<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get Content-Length of a response<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpGetContentLength</b>(
	int <i>request</i>, 
	<a href="../kernel/Types-Reference-English.htm#SceULong64">SceULong64</a> *<i>content_length</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled, dispatch-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the request object&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>content_length</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Starting address of the memory which contains the byte count representing the size of the response body&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Upon normal completion, the size of the body of the response from the server corresponding to the specified request object is stored in the memory specified by <i>content_length</i>, and SCE_OK is returned. <br>If an error occurs, a negative number is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431072&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_CHUNK_ENC&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The response is in chunked&nbsp;&nbsp;<br>&nbsp;&nbsp;encoding, so Content-Length &nbsp;&nbsp;<br>&nbsp;&nbsp;cannot be obtained&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431071&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_NO_CONTENT_LENGTH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The response does not include&nbsp;&nbsp;<br>&nbsp;&nbsp;Content-Length, nor is it in&nbsp;&nbsp;<br>&nbsp;&nbsp;chunked encoding&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431065&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_SEND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified request object&nbsp;&nbsp;<br>&nbsp;&nbsp;has not been sent yet&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431068&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_TIMEOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Either the TCP timeout &nbsp;&nbsp;<br>&nbsp;&nbsp;period or the timeout set &nbsp;&nbsp;<br>&nbsp;&nbsp;using sceHttpSetXxxTimeOut() has elapsed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_PIPELINE_BEFORE_YOUR_TURN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;In PIPELINE mode, did not &nbsp;&nbsp;<br>&nbsp;&nbsp;completely receive the &nbsp;&nbsp;<br>&nbsp;&nbsp;previous request that was &nbsp;&nbsp;<br>&nbsp;&nbsp;sent &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_TERMINATED_IN_PRE_REQUEST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;In PIPELINE mode, the &nbsp;&nbsp;<br>&nbsp;&nbsp;previous request that was &nbsp;&nbsp;<br>&nbsp;&nbsp;sent has been interrupted or &nbsp;&nbsp;<br>&nbsp;&nbsp;deleted.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses the request object ID which has already been sent using <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(). Reception of the response headers from the server is complete when <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() returns.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the response from the server is in chunked encoding format, Content-Length cannot be retrieved. In such cases, receive the data by successively calling <a href="../network/libhttp-Reference-English.htm#sceHttpReadData">sceHttpReadData</a>() until the return value is 0. There are also servers which do not send Content-Length even when the data is not in chunked encoding format. Handle these cases as well by successively calling <a href="../network/libhttp-Reference-English.htm#sceHttpReadData">sceHttpReadData</a>() until the return value is 0.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpReadData">sceHttpReadData</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpGetStatusCode"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpGetStatusCode<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get the response status code<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpGetStatusCode</b> (
	int <i>request</i>, 
	int *<i>status_code</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled,dispatch-enabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the request object&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>status_code</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address of memory in which to store the status code&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Upon normal completion, the status code of the response from the server corresponding to the specified request object is stored as an integer value in the memory specified by <i>status_code</i>, and SCE_OK is returned. <br>If an error occurs, a negative number is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431065&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_SEND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified request object has not&nbsp;&nbsp;<br>&nbsp;&nbsp;been sent yet&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431068&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_TIMEOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Either the TCP timeout period or the &nbsp;&nbsp;<br>&nbsp;&nbsp;timeout set using &nbsp;&nbsp;<br>&nbsp;&nbsp;sceHttpSetXxxTimeOut() has elapsed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_PIPELINE_BEFORE_YOUR_TURN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;In PIPELINE mode, did not &nbsp;&nbsp;<br>&nbsp;&nbsp;completely receive the previous &nbsp;&nbsp;<br>&nbsp;&nbsp;request that was sent &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_TERMINATED_IN_PRE_REQUEST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;In PIPELINE mode, the previous &nbsp;&nbsp;<br>&nbsp;&nbsp;request that was sent has been &nbsp;&nbsp;<br>&nbsp;&nbsp;interrupted or deleted.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is used with the ID of a request object which has already been sent using <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(). Reception of the response header from the server is complete when <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() returns.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">With request objects for which the automatic redirection setting has been enabled, when a response of 300, 301, 303, or 307 is returned from the server, a retry to the location of the redirect is automatically generated within libhttp. In such cases, the status code which can be retrieved using sceHttpGetStatusCode() will represent the status code of the response returned by the server at the location of the redirect.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpEnableRedirect">sceHttpEnableRedirect</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableRedirect">sceHttpDisableRedirect</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpGetAllHeader"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpGetAllHeader<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get response headers<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpGetAllHeader</b>(
	int <i>request</i>, 
	char **<i>header</i>,
	unsigned int *<i>header_size</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled,dispatch-enabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the request object for which to get headers&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>header</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address to store the start address of the response headers, which are stored as ASCIZ strings&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>header_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of the headers specified in <i>header</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Upon normal completion, the start address of the response headers, which are stored as ASCIZ strings, is contained in <i>header</i>, the size of the headers is stored in <i>header_size</i>, and SCE_OK is returned.<br>If an error occurs, a negative number is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431065&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_SEND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified request object has not&nbsp;&nbsp;<br>&nbsp;&nbsp;been sent yet&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431068&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_TIMEOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Either the TCP timeout period or &nbsp;&nbsp;<br>&nbsp;&nbsp;the timeout set using &nbsp;&nbsp;<br>&nbsp;&nbsp;sceHttpSetXxxTimeOut() has &nbsp;&nbsp;<br>&nbsp;&nbsp;elapsed.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106E&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_PIPELINE_BEFORE_YOUR_TURN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;In PIPELINE mode, did not &nbsp;&nbsp;<br>&nbsp;&nbsp;completely receive the previous &nbsp;&nbsp;<br>&nbsp;&nbsp;request that was sent &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x8043106C&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_TERMINATED_IN_PRE_REQUEST&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;In PIPELINE mode, the previous &nbsp;&nbsp;<br>&nbsp;&nbsp;request that was sent has been &nbsp;&nbsp;<br>&nbsp;&nbsp;interrupted or deleted.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is used with the ID of a request object which has already been sent using <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(). As long as communication is not being carried out in pipeline mode, reception of the response headers from the server is complete when <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() returns. Further, the data retrieved is released when <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>() is called for the corresponding request object. If there is data which needs to be saved, the application must allocate memory and copy the data prior to calling <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>().<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">To parse the header that was obtained, use the libparse_HTTP library.<br>To get Content-Length and status code, use the dedicated functions <a href="../network/libhttp-Reference-English.htm#sceHttpGetContentLength">sceHttpGetContentLength</a>() and <a href="../network/libhttp-Reference-English.htm#sceHttpGetStatusCode">sceHttpGetStatusCode</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>(), <a href="../network/libparse_HTTP-Reference-English.htm#sceParseHttpStatusLine">sceParseHttpStatusLine</a>(), <a href="../network/libparse_HTTP-Reference-English.htm#sceParseHttpResponseHeader">sceParseHttpResponseHeader</a>()<br><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetResHeaderMaxSize"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetResHeaderMaxSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set the maximum size of memory for storing the response header<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSetResHeaderMaxSize</b> (
	int <i>id, </i>
	unsigned int <i>max_size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of connection setting, target template setting.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum size (in bytes) for the memory for storing the response header.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Store the ID of the target template setting or connection setting in <i>id</i>, and specify the maximum memory size for storing the response header in <i>max_size</i>. The default value is 5000 bytes. In the current version, any value smaller than 1500 bytes is treated as 1500 bytes.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">You cannot specify the request object's ID. Also, each request object is provided with separate memory for storing the response header. This memory is freed when <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>() is called.<br>The priority order for settings is template settings &lt; connection settings. Even if the template settings change, the connection settings that were created after those template settings will not change.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetRecvBlockSize"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetRecvBlockSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set the received block size for HTTP connections<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSetRecvBlockSize</b> (
	int <i>id, </i>
	unsigned int <i>block_size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of target template setting&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>block_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Received block size (in bytes) for HTTP connections.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Store the desired template-setting ID in <i>id</i>, and the received block size for HTTP connections in <i>block_size</i>. The default value is 1500 bytes.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">You cannot specify the ID of the connection object or the request object. Also, each connection object is provided with separate memory to store the received block sizes for the HTTP connection. This memory is freed when <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteConnection">sceHttpDeleteConnection</a>() is called.<br>Even if the template settings change, the connection settings that were created after those template settings will not change.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetResolveTimeOut"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetResolveTimeOut<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set the name resolution timeout<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSetResolveTimeOut</b>(
	int <i>id</i>, 
	unsigned int <i>usec</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the relevant template settings or connection settings&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>usec</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Contains the specified timeout (in microseconds)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The relevant template settings or connection settings are stored in <i>id</i>, and the timeout for name resolution, in microseconds, is specified by <i>usec</i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The ID of a request object cannot be specified. Furthermore, even if the template settings are modified, these template settings will have no effect on connection settings which have already been created. <br>libhttp uses 3 seconds as the default value, with 10 retries as the default number of retries, so the effective default timeout for name resolution is 30 seconds.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSetResolveRetry">sceHttpSetResolveRetry</a>()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetResolveRetry"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetResolveRetry<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set number of send retries for name resolution<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSetResolveRetry</b> (
	int <i>id</i>, 
	int <i>retry</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of target template setting or connection setting&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>retry</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of send retries to be set&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Store the ID of the template setting or connection setting in <i>id</i>, and the retry count setting in <i>retry</i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">You cannot specify the ID of the request object in <i>id</i>. Even if the template setting changes, that change will have no effect on previous connection settings created after the template setting. The default value for this under libhttp is 10 retries.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSetResolveTimeOut">sceHttpSetResolveTimeOut</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetConnectTimeOut"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetConnectTimeOut<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set the connection timeout<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSetConnectTimeOut</b>(
	int <i>id</i>, 
	unsigned int <i>usec</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the relevant template settings, connection settings, or request object&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>usec</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Contains the specified timeout (in microseconds)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The ID of the relevant template settings, connection settings, or request object is stored in <i>id</i>, and the timeout for establishing a TCP connection, in microseconds, is specified by <i>usec</i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The order of precedence for the settings is template settings &lt; connection settings &lt; request object. Furthermore, even if the template settings are modified, these template settings will not modify the connection settings which have already been created.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetSendTimeOut"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetSendTimeOut<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set the send timeout<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSetSendTimeOut</b>(
	int <i>id</i>, 
	unsigned int <i>usec</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the relevant template settings, connection settings, or request object&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>usec</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Contains the specified timeout (in microseconds)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The ID of the relevant template settings, connection settings, or request object is stored in <i>id</i>, and the send timeout, in microseconds, is specified by <i>usec</i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The order of precedence for the settings is template settings &lt; connection settings &lt; request object. Furthermore, even if the template settings are modified, these template settings will not modify the connection settings which have already been created.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetRecvTimeOut"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetRecvTimeOut<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set the receive timeout<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSetRecvTimeOut</b>(
	int <i>id</i>, 
	unsigned int <i>usec</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the relevant template settings, connection settings, &nbsp;&nbsp;<br>&nbsp;&nbsp;or request object&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>usec</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Contains the specified timeout (in microseconds)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The ID of the relevant template settings, connection settings, or request object is stored in <i>id</i>, and the receive timeout, in microseconds, is specified in <i>usec</i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The order of precedence for the settings is template settings &lt; connection settings &lt; request object. Furthermore, even if the template settings are modified, these template settings will not modify the connection settings which have already been created.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpEnableKeepAlive"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpEnableKeepAlive<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Enable keep-alive<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpEnableKeepAlive</b>(
	int <i>id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the template settings or connection settings for which to enable keep-alive&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function enables keep-alive for the template settings or connection settings specified by <i>id</i>. Keep-alive is enabled by default.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If keep-alive is enabled, then when communicating with a web server which supports keep-alive, the connection will be kept open even after a request object is sent. Keep-alive is managed automatically by the HTTP library for each individual set of connection settings.<br>Because different connection settings use different network sockets, keep-alive will not be performed, even if communicating with the same server.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableKeepAlive">sceHttpDisableKeepAlive</a>() <br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpDisableKeepAlive"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpDisableKeepAlive<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Disable keep-alive<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpDisableKeepAlive</b>(
	int <i>id</i>,
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the template settings or connection &nbsp;&nbsp;<br>&nbsp;&nbsp;settings for which to disable keep-alive&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function disables keep-alive for the template settings or connection settings specified by id. When connection settings have been specified, if the connection had been kept alive as a result of those settings, then the connection is closed. Even if used on template settings, this will not have any effect on the connection settings which have already been created. Keep alive is enabled by default.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpEnableKeepAlive">sceHttpEnableKeepAlive</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpEnableRedirect"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpEnableRedirect<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Enable automatic redirection<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpEnableRedirect</b>(
	int <i>id</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the template settings or connection settings for which to enable automatic redirect&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function enables redirection for the template settings or connection settings specified by <i>id</i>. When automatic redirection is enabled, the HTTP library exhibits the following behavior.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Server Status Code</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Library Behavior</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;301&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Automatically redirects to the URI retrieved from the&nbsp;&nbsp;<br>&nbsp;&nbsp;location field in the response. The new URI is cached&nbsp;&nbsp;<br>&nbsp;&nbsp;in the library, and subsequently if the same URI is&nbsp;&nbsp;<br>&nbsp;&nbsp;specified, the new URI is automatically accessed. &nbsp;&nbsp;<br>&nbsp;&nbsp;New connection settings are also created in the HTTP&nbsp;&nbsp;<br>&nbsp;&nbsp;library. These connection settings are automatically&nbsp;&nbsp;<br>&nbsp;&nbsp;deleted when the connection settings which were&nbsp;&nbsp;<br>&nbsp;&nbsp;used when the redirect occurred have been deleted&nbsp;&nbsp;<br>&nbsp;&nbsp;Using <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteConnection">sceHttpDeleteConnection</a>().&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;302&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Automatically redirects to the URI retrieved from the&nbsp;&nbsp;<br>&nbsp;&nbsp;location field in the response. The new URI is not&nbsp;&nbsp;<br>&nbsp;&nbsp;cached in the library.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;303&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Automatically redirects to the URI retrieved from the&nbsp;&nbsp;<br>&nbsp;&nbsp;location field in the response. The method utilized &nbsp;&nbsp;<br>&nbsp;&nbsp;after the redirection automatically becomes GET, and&nbsp;&nbsp;<br>&nbsp;&nbsp;even if the method was originally POST, the request&nbsp;&nbsp;<br>&nbsp;&nbsp;body is not used. Furthermore, the new URI is not&nbsp;&nbsp;<br>&nbsp;&nbsp;cached in the library.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;305&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;If 305 is returned when a proxy is not being used, the&nbsp;&nbsp;<br>&nbsp;&nbsp;library utilizes the proxy which is specified in the&nbsp;&nbsp;<br>&nbsp;&nbsp;location field, and again accesses the target URL.&nbsp;&nbsp;<br>&nbsp;&nbsp;This information is not cached in the library.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;307&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Behaves in the same manner as when 302 is returned&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">Redirection is enabled by default.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If redirection is enabled and a response of 301, 302, 303, 305, or 307 is returned from the server, and if another access is performed using the information in the response, then <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() will return when the response headers for that access are received. If redirection is disabled, then <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() will return when a redirection is specified by the server, and thus, in order to access the target URL of the redirection, the application must analyze the redirection using <a href="../network/libhttp-Reference-English.htm#sceHttpGetStatusCode">sceHttpGetStatusCode</a>() and <a href="../network/libhttp-Reference-English.htm#sceHttpGetAllHeader">sceHttpGetAllHeader</a>(), and then explicitly create connection settings and request settings and resend the request. <br>Redirection is managed automatically by the HTTP library for each individual set of connection settings. This functionality will cease to be in effect when redirection is disabled using <a href="../network/libhttp-Reference-English.htm#sceHttpDisableRedirect">sceHttpDisableRedirect</a>(), or when the cache of target URIs is deleted due to automatic garbage collection in the library.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpDisableRedirect">sceHttpDisableRedirect</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(),<br><a href="../network/libhttp-Reference-English.htm#sceHttpGetStatusCode">sceHttpGetStatusCode</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpGetAllHeader">sceHttpGetAllHeader</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpDisableRedirect"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpDisableRedirect<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Disable automatic redirect<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpDisableRedirect</b>(
	int <i>id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled/disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the template settings or connection settings for which to disable automatic redirect&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function disables redirection for the template settings or connection settings specified by <i>id</i>. For details, please refer to <a href="../network/libhttp-Reference-English.htm#sceHttpEnableRedirect">sceHttpEnableRedirect</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableRedirect">sceHttpEnableRedirect</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpGetStatusCode">sceHttpGetStatusCode</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpGetAllHeader">sceHttpGetAllHeader</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpEnableCache"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpEnableCache<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Enable HTTP cache<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpEnableCache</b>(
	int <i>id</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the template settings, connection settings, or request object for which the cache functionality is to be enabled&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library or cache has not been initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function enables the cache for the template settings, connection settings, or request object specified by <i>id</i>. The memory to be used for the cache must be specified using <a href="../network/libhttp-Reference-English.htm#sceHttpInitCache">sceHttpInitCache</a>() before calling this function. If the cache is enabled, a response body that contains a Content-Length header is cached to the extent allowed by the memory specified by <a href="../network/libhttp-Reference-English.htm#sceHttpInitCache">sceHttpInitCache</a>(). If there is already an entry in the cache for the requested URL, an If-Modified-Since header is generated for the request based on the time that the cache was created. If the response to that request is 304, the cache is used.<br>By default, the cache is disabled.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpDisableCache">sceHttpDisableCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpInitCache">sceHttpInitCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpEndCache">sceHttpEndCache</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpDisableCache"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpDisableCache<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Disable HTTP cache<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpDisableCache</b>(
	int <i>id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -diabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the template settings, connection settings, or redirect object for which the cache is to be disabled&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library or cache has not been&nbsp;&nbsp;<br>&nbsp;&nbsp;initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function disables the cache for the template settings, connection settings, or redirect object specified by <i>id</i>. For details, see <a href="../network/libhttp-Reference-English.htm#sceHttpEnableCache">sceHttpEnableCache</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableCache">sceHttpEnableCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpInitCache">sceHttpInitCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpEndCache">sceHttpEndCache</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpInitCache"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpInitCache<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Start HTTP cache<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpInitCache</b>(
	SceSize <i>max_size</i> 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Not multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the maximum amount of memory to be used for the cache&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If processing completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431020&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_ALREADY_INITED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;sceHttpInitCache() was called twice&nbsp;&nbsp;<br>&nbsp;&nbsp;without calling <a href="../network/libhttp-Reference-English.htm#sceHttpEndCache">sceHttpEndCache</a>()&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library has not been initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function causes memory having the size specified by <i>max_size</i> to be used for the cache. The memory to be used for the cache comes from the memory specified by <a href="../network/libhttp-Reference-English.htm#sceHttpInit">sceHttpInit</a>(), and thus when the cache is used, the memory specified by <a href="../network/libhttp-Reference-English.htm#sceHttpInit">sceHttpInit</a>() must be increased sufficiently to accommodate the cache. Furthermore, if there is not enough memory in the HTTP library itself, it may not be possible to use the amount of memory specified by max_size for the cache.<br>By default, the cache is disabled.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableCache">sceHttpEnableCache</a> (), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCache">sceHttpDisableCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpEndCache">sceHttpEndCache</a> ()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpFlushCache"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpFlushCache<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Invalidate all cache data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpFlushCache</b>(
	void 
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function invalidates all data in the cache.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpInitCache">sceHttpInitCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpEndCache">sceHttpEndCache</a> ()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpEndCache"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpEndCache<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Terminate the HTTP cache function<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpEndCache</b> (
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library or cache not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function terminates the cache function and releases its resources. It must be called after <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>() is used to delete all request objects for which the cache was enabled. By default, the cache is disabled.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableCache">sceHttpEnableCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCache">sceHttpDisableCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpInitCache">sceHttpInitCache</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetCacheContentLengthMaxSize"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetCacheContentLengthMaxSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set the maximum size for a response body that should be cached<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSetCacheContentLengthMaxSize</b> (
	int <i>id, </i>
	unsigned int<i> max_size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the target template setting, connection setting, or request object.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>max_size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum size of response body that will be stored in the cache.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Store the ID of the template setting, connection setting, or request object in <i>id</i>, and the maximum size of a response body that will be cached in <i>max_size</i>; The default value for this is the cache size.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Priority order for settings is template settings &lt; connection settings &lt; request object. Even if the template settings change, the request objects and connection settings that were previously created after those template settings will not change.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnection">sceHttpCreateConnection</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequest">sceHttpCreateRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpInitCache">sceHttpInitCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpEndCache">sceHttpEndCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpEnableCache">sceHttpEnableCache</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCache">sceHttpDisableCache</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpEnableAuth"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpEnableAuth<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Enable basic / digest authentication<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpEnableAuth</b> (
	int <i>id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the template settings or connection &nbsp;&nbsp;<br>&nbsp;&nbsp;settings for which to enable basic/digest authentication&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function enables basic/digest authentication for the template settings, connection settings, or request object specified by <i>id</i>. Basic/digest authentication is enabled by default.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">With basic/digest authentication enabled, when the web server returns a 401 response, if a username and password are included in the URL, then these are used to automatically perform authentication. If the user information is not included in the URL, then the callback function specified by <a href="../network/libhttp-Reference-English.htm#sceHttpSetAuthInfoCallback">sceHttpSetAuthInfoCallback</a>() is called to obtain the username and password.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpDisableAuth">sceHttpDisableAuth</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSetAuthInfoCallback">sceHttpSetAuthInfoCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpDisableAuth"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpDisableAuth<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Disable basic / digest authentication<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpDisableAuth</b>(
	int <i>id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the template settings or connection &nbsp;&nbsp;<br>&nbsp;&nbsp;settings for which to disable basic/digest authentication&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function disables basic/digest authentication for the template settings, connection settings, or request object specified by <i>id</i>. Basic/digest authentication is enabled by default.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableAuth">sceHttpEnableAuth</a>(),<a href="../network/libhttp-Reference-English.htm#sceHttpSetAuthInfoCallback">sceHttpSetAuthInfoCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpFlushAuthList"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpFlushAuthList<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete username and password information for basic/digest authentication<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpFlushAuthList</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes the username and password information passed by the callback function that has been saved within the library.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableAuth">sceHttpEnableAuth</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSetAuthInfoCallback">sceHttpSetAuthInfoCallback</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableAuth">sceHttpDisableAuth</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpEnableCookie"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpEnableCookie<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Enable cookies<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpEnableCookie</b> (
	int <i>id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the template settings or connection &nbsp;&nbsp;<br>&nbsp;&nbsp;settings for which to enable cookies&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function enables cookies for the template settings, connection settings, or request object specified by <i>id</i>. Cookies are enabled by default.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">With cookie functionality enabled, when a web server sends a cookie, the library stores it and automatically appends it to the cookie header in subsequent transmissions.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpDisableCookie">sceHttpDisableCookie</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpDisableCookie"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpDisableCookie<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Disable cookies<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpDisableCookie</b>(
	int <i>id</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specifies the ID of the template settings or connection &nbsp;&nbsp;<br>&nbsp;&nbsp;settings for which to disable cookies&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return value -->
<div style="margin-left:10px;"><b>Return value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes successfully, SCE_OK is returned<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Successful completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function disables cookies for the template settings, connection settings, or request object specified by <i>id</i>. Cookies are enabled by default.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableCookie">sceHttpEnableCookie</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpGetCookie"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpGetCookie<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get cookie<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpGetCookie</b>(
	const char <i>*url</i>,
	char *<i>cookie</i>,
	unsigned int *<i>required</i>,
	unsigned int <i>prepared</i>,
	int <i>secure</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>url</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to URL for getting cookie stored as an ASCIZ string&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cookie</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address for storing ASCIZ string of cookie data associated with <i>url</i>. The application must allocate memory in advance.&nbsp;&nbsp;<br>&nbsp;&nbsp;You can find out only the required memory size in advance by specifying NULL here.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>required</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Required memory size for storing cookie&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>prepared</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory size prepared for cookie&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>secure</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flag for specifying whether or not connection for using cookie data obtained by using the relevant API is secure. Specify either SCE_TRUE or SCE_FALSE.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library has not been initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x804311FE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_VALUE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL was specified for <i>url</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431104&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cookie is too big for the size specified for <i>prepare_size</i> and cannot be stored.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient free space in memory&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the cookie specified in <i>cookie</i> from the cookie list managed by libhttp. Since libhttp can automatically process a normal cookie that is specified in the response header, this function should be used when you wish to manually obtain a cookie in javascript, etc.<br>Make sure that cookie handling is not detrimental to the user.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceSize malloc_size = 0;
<a href="../kernel/Types-Reference-English.htm#SceChar8">SceChar8</a> *cookie;
/* Get memory size for storing cookie */
ret = sceHttpGetCookie(http://foo.com/bar/, NULL, &amp;malloc_size, 0, SCE_FALSE);
if (ret &lt; 0){
	ERROR;
}
/* Allocate memory  */
cookie = malloc(malloc_size);
if (cookie == NULL){
	ERROR;
}
/* Get cookie */
ret = sceHttpGetCookie(http://foo.com/bar/, cookie, NULL, malloc_size, SCE_FALSE);
if (ret &lt; 0){
	ERROR;
}
printf(&quot;cookie: %s\n&quot;, cookie);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpAddCookie">sceHttpAddCookie</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpEnableCookie">sceHttpEnableCookie</a> (), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCookie">sceHttpDisableCookie</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpAddCookie"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpAddCookie<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Add cookie<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpAddCookie</b>(
	const char <i>*url</i>,
	const char *<i>cookie</i>,
	unsigned int *<i>cookie_len</i>,
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread<br>Multithread safe (does not depend on interrupt-enabled state)<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>url</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to URL of sender of cookie stored as ASCIZ string&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cookie</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Stores starting address of cookie data sent from server at <i>url</i>. Not necessary that this be in ASCIZ.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cookie_len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Length of cookie data string stored in <i>cookie</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When processing completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library has not been initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x804311FE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_VALUE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL was specified for <i>url</i> or <i>cookie</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431104&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Cookie size is too big&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431067&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_IN_USE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified cookie is being referenced and cannot be deleted&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Insufficient free space in memory&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function adds the cookie that is specified in <i>cookie</i> to the cookie list managed by libhttp. Since libhttp can automatically process a normal cookie that is specified in the response header, this function is used when you wish to manually add a cookie that is specified in javascript, etc.<br>The format of the string that is specified in <i>cooki</i>e is as follows. No double-quotation is necessary.<br>Only NAME and VALUE are required in the following format. <br>	NAME=VALUE; expires=DATE; path=PATH; domain=DOMAIN_NAME; secure<br>To specify multiple cookies, use ";" as the delimiter. For details about the standard cookie specifications, refer to the following.<br><br>RESISTENT CLIENT STATE HTTP COOKIES<br>http://wp.netscape.com/newsref/std/cookie_spec.html<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Although this function must be called in a multithread-safe environment, note that cookie overwriting will fail if it is performed at the same instant that an <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() or <a href="../network/libhttp-Reference-English.htm#sceHttpGetCookie">sceHttpGetCookie</a>() function that was called by another thread references the respective cookie.<br>Make sure that cookie handling is not detrimental to the user. Also, a cookie that was set can be deleted by the user.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpGetCookie">sceHttpGetCookie</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpEnableCookie">sceHttpEnableCookie</a> (), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCookie">sceHttpDisableCookie</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSaveSystemCookie"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSaveSystemCookie<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Save cookie in internal PSP&trade; storage<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSaveSystemCookie</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in dispatch-enabled, interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;This function was called before calling <a href="../network/libhttp-Reference-English.htm#sceHttpInit">sceHttpInit</a>().&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431078&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_COOKIE_LOAD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;This function was called before calling <a href="../network/libhttp-Reference-English.htm#sceHttpLoadSystemCookie">sceHttpLoadSystemCookie</a>().&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Not enough free memory&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function saves the currently-saved cookie list in PSP&trade; internal storage. To avoid deleting previously saved user cookies, do not call <a href="../network/libhttp-Reference-English.htm#sceHttpLoadSystemCookie">sceHttpLoadSystemCookie</a>(), but rather call sceHttpSaveSystemCookie(), which will return SCE_HTTP_BEFORE_COOKIE_LOAD. Cookies saved to internal storage are shared among Web browsers. <br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If there is not enough internal storage capacity, the oldest cookies will be deleted. This means that any data that must be persistent should not be stored as a cookie. Users can also clear out all cookies.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableCookie">sceHttpEnableCookie</a> (), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCookie">sceHttpDisableCookie</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpLoadSystemCookie"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpLoadSystemCookie<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Read cookie from internal PSP&trade; storage<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpLoadSystemCookie</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in dispatch-enabled, interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431020&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_ALREADY_INITED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Called sceHttpLoadSystemCookie() twice without calling <a href="../network/libhttp-Reference-English.htm#sceHttpEnd">sceHttpEnd</a>(),&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431022&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Not enough free memory&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431077&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INSUFFICIENT_HEAPSIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;This function was called with size &nbsp;&nbsp;<br>&nbsp;&nbsp;specified by <a href="../network/libhttp-Reference-English.htm#sceHttpInit">sceHttpInit</a>() less than &nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_HTTP_LOAD_COOKIE_LEAST_HEAP_SIZE (130 KB).&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function clears the currently saved cookie list and loads the cookie list saved in the internal storage of the PSP&trade;. The user cookie list saved in the system uses up to 100 KB of memory in the http library.<br>When using either sceHttpLoadSystemCookie() or <a href="../network/libhttp-Reference-English.htm#sceHttpSaveSystemCookie">sceHttpSaveSystemCookie</a>(), you should add at least 100 KB to the memory size specified with <a href="../network/libhttp-Reference-English.htm#sceHttpInit">sceHttpInit</a>().<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">You do not need to call this function when using the browser; there is also no need to add an extra 100 KB to the memory size in <a href="../network/libhttp-Reference-English.htm#sceHttpInit">sceHttpInit</a>() for cookie storage, although you will no longer be able to load user cookies. If there's no particular reason to do otherwise, we recommend calling this function when using the browser.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableCookie">sceHttpEnableCookie</a> (), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCookie">sceHttpDisableCookie</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetProxy"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetProxy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set HTTP proxy server settings<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int <b>sceHttpSetProxy</b>(
	int <i>id</i>,
	int <i>activate_flag</i>,
	int <i>mode</i>,
	const char *<i>new_proxy_host</i>,
	unsigned short <i>new_proxy_port</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>id</i>&nbsp;</td>
<td valign="top">&nbsp;ID&nbsp;of&nbsp;the&nbsp;relevant&nbsp;template&nbsp;settings&nbsp;or&nbsp;connection&nbsp;settings&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>activate_flag</i>&nbsp;</td>
<td valign="top">&nbsp;Flag&nbsp;indicating&nbsp;whether&nbsp;or&nbsp;not&nbsp;to&nbsp;use&nbsp;a&nbsp;proxy&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;&nbsp;&nbsp;</td>
<td valign="top">&nbsp;SCE_HTTP_ENABLE&nbsp;&nbsp;&nbsp;Use&nbsp;a&nbsp;proxy&nbsp;server&nbsp;<br>&nbsp;SCE_HTTP_DISABLE&nbsp;&nbsp;&nbsp;Do&nbsp;not&nbsp;use&nbsp;a&nbsp;proxy&nbsp;server&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>mode</i>&nbsp;</td>
<td valign="top">&nbsp;Type&nbsp;of&nbsp;proxy&nbsp;server&nbsp;settings&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;&nbsp;&nbsp;</td>
<td valign="top">&nbsp;SCE_HTTP_PROXY_MANUAL&nbsp;&nbsp;&nbsp;Use&nbsp;manually&nbsp;specified&nbsp;proxy&nbsp;<br>&nbsp;SCE_HTTP_PROXY_AUTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reference&nbsp;the&nbsp;proxy&nbsp;settings&nbsp;in&nbsp;the&nbsp;PSP&trade;&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>new_proxy_host</i>&nbsp;</td>
<td valign="top">&nbsp;Contains&nbsp;a&nbsp;pointer&nbsp;to&nbsp;the&nbsp;host&nbsp;name&nbsp;of&nbsp;the&nbsp;proxy&nbsp;server,&nbsp;which&nbsp;is&nbsp;&nbsp;<br>&nbsp;stored&nbsp;as&nbsp;an&nbsp;ASCIZ&nbsp;string.&nbsp;If&nbsp;a&nbsp;value&nbsp;other&nbsp;than&nbsp;&nbsp;<br>&nbsp;SCE_HTTP_PROXY_MANUAL&nbsp;is&nbsp;specified&nbsp;in&nbsp;<i>mode</i>,&nbsp;then&nbsp;this&nbsp;&nbsp;<br>&nbsp;value&nbsp;will&nbsp;be&nbsp;ignored.&nbsp;The&nbsp;maximum&nbsp;length&nbsp;of&nbsp;the&nbsp;host&nbsp;name&nbsp;is&nbsp;&nbsp;<br>&nbsp;specified&nbsp;by&nbsp;SCE_UTILITY_NET_PARAM_HOSTNAME_LEN&nbsp;in&nbsp;&nbsp;<br>&nbsp;utility/utility_netparam.h.&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>&nbsp;new_proxy_port</i>&nbsp;</td>
<td valign="top">&nbsp;Contains&nbsp;the&nbsp;port&nbsp;number&nbsp;used&nbsp;by&nbsp;the&nbsp;proxy&nbsp;server.&nbsp;If&nbsp;a&nbsp;value&nbsp;&nbsp;<br>&nbsp;other&nbsp;than&nbsp;SCE_HTTP_PROXY_MANUAL&nbsp;is&nbsp;specified&nbsp;in&nbsp;<i>mode</i>,&nbsp;&nbsp;<br>&nbsp;then&nbsp;this&nbsp;value&nbsp;will&nbsp;be&nbsp;ignored.&nbsp;&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431104&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The host name specified in&nbsp;&nbsp;<br>&nbsp;&nbsp;<i>new_proxy_host</i> is too long&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function specifies the relevant template settings or connection settings in <i>id</i>, and stores the values to be used as settings in <i>activate_flag</i>, <i>mode</i>, <i>new_proxy_host</i>, and <i>new_proxy_port</i>. The setting representing the enabled/disabled status of the proxy server is specified in <i>activate_flag</i>. If this is set to disabled, then the values of <i>mode</i>, <i>new_proxy_host</i>, and <i>new_proxy_port</i> are ignored. The proxy server settings which are to be referenced are specified in <i>mode</i>. If SCE_HTTP_PROXY_AUTO is specified by <i>mode</i>, then whether or not to use a proxy is retrieved from the network settings currently in use, and if a proxy is to be used, then the information for that proxy server is retrieved . In this case, <i>new_proxy_host</i> and <i>new_proxy_port</i> are ignored. If SCE_HTTP_PROXY_MANUAL is specified in <i>mode</i>, then a proxy server which differs from that in the network settings can be specified. Specify the host name of the proxy as an ASCIZ string in <i>new_proxy_host</i>, and specify the port number to be used by the proxy server in <i>new_proxy_port</i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Since, due to the nature of wireless LANs, there is a good chance that the need for a proxy will change based on the connected base station, the SCE_HTTP_PROXY_AUTO setting, which automatically determines whether or not a proxy is necessary from the currently utilized network settings, is recommended. Moreover, if in this case SCE_HTTP_ENABLE is specified in the <i>enable_system_conf</i> argument to <a href="../network/libhttp-Reference-English.htm#sceHttpCreateTemplate">sceHttpCreateTemplate</a>(), then this function is not necessary.<br></div>

<!-- sce_title -->
<a Name ="HeadingT_15_1">
<div style="margin-left:40px;"><h4><b>Precautions</b><br><br></h4></div></a>

<div style="margin-left:50px;">If this function is used on template settings, it will not have any effect on the settings of connections which have already been created.<br>Even if SCE_HTTP_ENABLE is specified in <i>activate_flag</i>, if SCE_HTTP_PROXY_AUTO is specified in <i>mode</i>, and the network settings specify to not use a proxy, then the settings specifying not to use a proxy will take precedence. <br>In addition, the proxy server which is manually specified by this function has no effect on the settings in the PSP&trade;.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpGetProxy"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpGetProxy<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get HTTP proxy server settings<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;

int<b> sceHttpGetProxy</b>(
	int <i>id</i>,
	int *<i>activate_flag</i>,
	int *<i>mode,</i>
	char *<i>proxy_host,</i>
	SceSize <i>len,</i>
	unsigned short <i>*proxy_port</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>id</i>&nbsp;</td>
<td valign="top">&nbsp;ID&nbsp;of&nbsp;the&nbsp;relevant&nbsp;template&nbsp;settings,&nbsp;connection&nbsp;settings,&nbsp;or&nbsp;request&nbsp;settings&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>activate_flag</i>&nbsp;</td>
<td valign="top">&nbsp;Pointer&nbsp;to&nbsp;memory&nbsp;storing&nbsp;the&nbsp;status&nbsp;of&nbsp;the&nbsp;flag&nbsp;indicating&nbsp;whether&nbsp;or&nbsp;not&nbsp;use&nbsp;a&nbsp;proxy.&nbsp;&nbsp;<br>&nbsp;The&nbsp;following&nbsp;values&nbsp;are&nbsp;stored&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;&nbsp;&nbsp;</td>
<td valign="top">&nbsp;SCE_HTTP_ENABLE&nbsp;&nbsp;&nbsp;&nbsp;Use&nbsp;a&nbsp;proxy&nbsp;<br>&nbsp;SCE_HTTP_DISABLE&nbsp;&nbsp;&nbsp;&nbsp;Do&nbsp;not&nbsp;use&nbsp;a&nbsp;proxy&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>mode</i>&nbsp;</td>
<td valign="top">&nbsp;Pointer&nbsp;to&nbsp;memory&nbsp;storing&nbsp;the&nbsp;status&nbsp;of&nbsp;the&nbsp;proxy&nbsp;settings.&nbsp;&nbsp;<br>&nbsp;The&nbsp;following&nbsp;values&nbsp;are&nbsp;stored&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;&nbsp;&nbsp;</td>
<td valign="top">&nbsp;SCE_HTTP_PROXY_MANUAL&nbsp;&nbsp;&nbsp;Use&nbsp;manually&nbsp;specified&nbsp;proxy&nbsp;<br>&nbsp;SCE_HTTP_PROXY_AUTO&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reference&nbsp;the&nbsp;proxy&nbsp;settings&nbsp;in&nbsp;the&nbsp;PSP&trade;&nbsp;unit&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>proxy_host</i>&nbsp;</td>
<td valign="top">&nbsp;Pointer&nbsp;to&nbsp;memory&nbsp;for&nbsp;storing&nbsp;the&nbsp;host&nbsp;name&nbsp;of&nbsp;the&nbsp;specified&nbsp;proxy&nbsp;server.&nbsp;The&nbsp;maximum&nbsp;length&nbsp;of&nbsp;the&nbsp;host&nbsp;name&nbsp;is&nbsp;specified&nbsp;by&nbsp;SCE_UTILITY_NET_PARAM_HOSTNAME_LEN&nbsp;in&nbsp;utility/utility_netparam.h.&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>len</i>&nbsp;</td>
<td valign="top">&nbsp;Size&nbsp;of&nbsp;the&nbsp;memory&nbsp;provided&nbsp;to&nbsp;store&nbsp;the&nbsp;host&nbsp;name&nbsp;of&nbsp;the&nbsp;proxy&nbsp;server&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>proxy_port</i>&nbsp;</td>
<td valign="top">&nbsp;Pointer&nbsp;to&nbsp;memory&nbsp;storing&nbsp;the&nbsp;port&nbsp;number&nbsp;used&nbsp;by&nbsp;the&nbsp;proxy&nbsp;server&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431104&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_OUT_OF_SIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The host name of the proxy server is&nbsp;&nbsp;<br>&nbsp;&nbsp;longer than the size specified by <i>len</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function specifies, in <i>id</i>, the ID of the relevant template settings, connection settings, or request settings, and specifies, in <i>activate_flag</i>, <i>mode</i>, <i>proxy_host</i>, and <i>proxy_port</i>, the starting addresses of the memory areas storing the respective values. The size of the memory provided for proxy_host is specified by <i>len</i>. The status of the flag indicating whether or not to use a proxy is stored in <i>activate_flag</i>. Provided that <i>activate_flag</i> is SCE_HTTP_ENABLE, the host name of the proxy server is stored as an ASCIZ string in <i>proxy_host</i>, and the port number used by the proxy is stored in <i>proxy_port</i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function is used with a request object ID, the current state of the connection settings which were used when the request object was created is returned. In addition, if this function is called when the proxy settings indicate that a proxy is not to be used, then only <i>activate_flag</i> and <i>mode</i> are set, and nothing is written to the memory specified by <i>proxy_host</i> and <i>proxy_port</i>.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpAddExtraHeader"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpAddExtraHeader<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Add a request header<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
int <b>sceHttpAddExtraHeader</b>(
	int <i>id</i>,
	const char *<i>name</i>,
	const char *<i>value</i>,
	int <i>mode</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>id</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;The&nbsp;relevant&nbsp;template&nbsp;settings,&nbsp;connection&nbsp;settings,&nbsp;&nbsp;<br>&nbsp;or&nbsp;request&nbsp;object&nbsp;ID&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>name</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;The&nbsp;name&nbsp;portion&nbsp;of&nbsp;the&nbsp;header&nbsp;to&nbsp;be&nbsp;added&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>value</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;The&nbsp;value&nbsp;portion&nbsp;of&nbsp;the&nbsp;header&nbsp;to&nbsp;be&nbsp;added&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>mode</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;The&nbsp;behavior&nbsp;if&nbsp;the&nbsp;same&nbsp;header&nbsp;already&nbsp;exists&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;&nbsp;&nbsp;</td>
<td valign="top">&nbsp;SCE_HTTP_HEADER_OVERWRITE&nbsp;<br>&nbsp;SCE_HTTP_HEADER_ADD&nbsp;</td>
<td valign="top">&nbsp;Overwrite&nbsp;the&nbsp;existing&nbsp;header&nbsp;<br>&nbsp;Leave&nbsp;the&nbsp;existing&nbsp;header,&nbsp;and&nbsp;add&nbsp;the&nbsp;new&nbsp;one&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x804311FE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_VALUE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;NULL is specified in <i>name</i>, or the&nbsp;&nbsp;<br>&nbsp;&nbsp;value specified in <i>mode</i> is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function adds the new elements specified by <i>name</i> and <i>value</i> to the request headers of the template settings, connection settings, or request object specified by <i>id</i>. If an element with the same name already exists, then if SCE_HTTP_HEADER_OVERWRITE is specified in <i>mode</i>, the existing element will be overwritten, and if SCE_HTTP_HEADER_ADD is specified, the existing element will be left alone and the new one added. The <i>name</i> and <i>value</i> strings are copied within the library, so there is no need to store them after calling this function.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Please note that when SCE_HTTP_HEADER_ADD is specified in <i>mode</i>, the library does not perform any checks as to whether it is acceptable, in terms of HTTP, to have multiple elements with that name.<br>Also, since the header resources that are added are released by <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteRequest">sceHttpDeleteRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteConnection">sceHttpDeleteConnection</a>(), or <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteTemplate">sceHttpDeleteTemplate</a>(), this function does not need to be paired with <a href="../network/libhttp-Reference-English.htm#sceHttpDeleteHeader">sceHttpDeleteHeader</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpDeleteHeader">sceHttpDeleteHeader</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpDeleteHeader"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpDeleteHeader<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Delete a request header<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
int <b>sceHttpDeleteHeader</b>(
	int<i> id,</i>
	const char *<i>name</i>,
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The relevant template settings, connection settings, &nbsp;&nbsp;<br>&nbsp;&nbsp;or request object ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The name portion of the header to be deleted&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431025&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_NOT_FOUND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified element does not exist&nbsp;&nbsp;<br>&nbsp;&nbsp;in the headers&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function deletes the element specified by <i>name</i> from the request headers of the template settings, connection settings, or request object specified by <i>id</i>. If there are multiple elements with the same name, all of these elements will be deleted.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpAddExtraHeader">sceHttpAddExtraHeader</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpGetNetworkErrno"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpGetNetworkErrno<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get the socket error code<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHttpGetNetworkErrn<i></b>o</i>(
	int <i>request</i>,
	int *<i>errno</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe <br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the request object for which to get the error code&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>errno</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address of memory for storing the socket layer error code&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If this function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified ID is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The library is not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When a socket layer function called within libhttp fails, SCE_HTTP_NETWORK_ERR is returned, and at that point, the precise error code returned by the socket layer can be obtained by calling this function. Can be used to get the value returned in the format of <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() when using sceHttpGetNetworkErrno() , or the value returned in the format of <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>() when using <a href="../network/libhttp-Reference-English.htm#sceHttpGetNetworkPspError">sceHttpGetNetworkPspError</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpReadData">sceHttpReadData</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpGetNetworkPspError">sceHttpGetNetworkPspError</a>()<br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpGetNetworkPspError"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpGetNetworkPspError<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get socket error code in psperror.h format<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>int <b>sceHttpGetNetworkPspError</b>(
	int <i>request</i>,
	int *<i>err_num</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>request</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of the request object whose error code is to obtained.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>err_num</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address of memory where the error code will be stored.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When there is a failure of the socket-layer functions called internally by libhttp, SCE_HTTP_NETWORK_ERR is returned. At that time, you can use this function to get a detailed error code returned by the socket layer. While <a href="../network/libhttp-Reference-English.htm#sceHttpGetNetworkErrno">sceHttpGetNetworkErrno</a>() gets the value returned by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>(), this function gets the error code in the format returned by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpReadData">sceHttpReadData</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpGetNetworkErrno">sceHttpGetNetworkErrno</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetAuthInfoCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetAuthInfoCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set callback function for dynamic password input<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
int <b>sceHttpSetAuthInfoCallback</b>(
	int <i>id</i>,
	int <i>(*<a href="../network/libhttp-Reference-English.htm#httpAuthInfoCallback">httpAuthInfoCallback</a>)(</i>
<i>		int,<a href="../network/libhttp-Reference-English.htm#SceHttpAuthType">SceHttpAuthType</a>, const char*,char*,char*,<a href="../kernel/Types-Reference-English.htm#SceBool">SceBool</a>,</i>
<i>		unsigned char**,SceSize*,<a href="../kernel/Types-Reference-English.htm#SceBool">SceBool</a>*,void*),</i>
<i>	</i>void<i> *user_arg</i>
);
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of target template setting, connection setting, or request object.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i><a href="../network/libhttp-Reference-English.htm#httpAuthInfoCallback">httpAuthInfoCallback</a></i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to callback function.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>user_arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Any user-defined value. Used for argument to the callback function when it is called.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the callback function that will be called when a username and password need to be entered. If no callback function is set, processing will continue as if the authentication failed.<br>If the URL contains a username and password when using either <a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnectionWithURL">sceHttpCreateConnectionWithURL</a>() or <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequestWithURL">sceHttpCreateRequestWithURL</a>(), those values will take priority.<br>The callback function can be returned to an unset state by specifying NULL for <i><a href="../network/libhttp-Reference-English.htm#httpAuthInfoCallback">httpAuthInfoCallback</a></i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The callback function that is set is executed in the context of the thread that called the HTTP communication processing function. As long as communication is not performed in HTTP Pipeline mode, the callback function will be executed in the context of the thread that called <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() or <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequestInCacheFirstMode">sceHttpSendRequestInCacheFirstMode</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnectionWithURL">sceHttpCreateConnectionWithURL</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequestWithURL">sceHttpCreateRequestWithURL</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequestInCacheFirstMode">sceHttpSendRequestInCacheFirstMode</a>(), <a href="../network/libhttp-Reference-English.htm#httpAuthInfoCallback">httpAuthInfoCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetRedirectCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetRedirectCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set callback function to be called when redirection occurs<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
int <b>sceHttpSetRedirectCallback</b>(
	int <i>id</i>,
	int (*<i><a href="../network/libhttp-Reference-English.htm#httpRedirectCallback">httpRedirectCallback</a>)(int, int, int*,const char* void*),</i>
<i>	void *user_arg</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of target template setting, connection setting, or request object.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i><a href="../network/libhttp-Reference-English.htm#httpRedirectCallback">httpRedirectCallback</a></i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to callback function.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>user_arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Any user-defined value. Used for argument to the callback function when it is called.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is used to set a callback function to be called when a redirection occurs. If no callback function is set, whether to redirect will be automatically decided based on the values set for <a href="../network/libhttp-Reference-English.htm#sceHttpEnableRedirect">sceHttpEnableRedirect</a>() and <a href="../network/libhttp-Reference-English.htm#sceHttpDisableRedirect">sceHttpDisableRedirect</a>(). The default is to perform redirection automatically.<br>The callback function can be returned to an unset state by specifying NULL for <i><a href="../network/libhttp-Reference-English.htm#httpRedirectCallback">httpRedirectCallback</a></i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The callback function that was set is executed in the context of the thread that called the HTTP communication processing function. As long as communication is not performed in HTTP Pipeline mode, the callback function will be executed in the context of the thread that called <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() or <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequestInCacheFirstMode">sceHttpSendRequestInCacheFirstMode</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpCreateConnectionWithURL">sceHttpCreateConnectionWithURL</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpCreateRequestWithURL">sceHttpCreateRequestWithURL</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequestInCacheFirstMode">sceHttpSendRequestInCacheFirstMode</a>(),<br><a href="../network/libhttp-Reference-English.htm#httpRedirectCallback">httpRedirectCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetCookieSendCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetCookieSendCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set callback function to be called before sending cookies<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
int <b>sceHttpSetCookieSendCallback</b>(
	int <i>id</i>,
	int (*<i><a href="../network/libhttp-Reference-English.htm#httpCookieSendCallback">httpCookieSendCallback</a>)(int, const char*,const char*, void*),</i>
<i>	</i>void<i> *user_arg</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled/disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of target template setting, connection setting, or request object.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i><a href="../network/libhttp-Reference-English.htm#httpCookieSendCallback">httpCookieSendCallback</a></i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to callback function.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>user_arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Any user-defined value. Used for argument to the callback function when it is called.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is used to set a callback function to be called before a cookie is sent. If no callback function is set, cookies are processed automatically.<br>The callback function can be returned to an unset state by specifying NULL for <i><a href="../network/libhttp-Reference-English.htm#httpCookieSendCallback">httpCookieSendCallback</a></i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The callback function that was set is executed in the context of the thread that called the HTTP communication processing function. As long as communication is not performed in HTTP Pipeline mode, the callback function will be executed in the context of the thread that called <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() or <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequestInCacheFirstMode">sceHttpSendRequestInCacheFirstMode</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableCookie">sceHttpEnableCookie</a> (), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCookie">sceHttpDisableCookie</a> (),<a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequestInCacheFirstMode">sceHttpSendRequestInCacheFirstMode</a>(),<br><a href="../network/libhttp-Reference-English.htm#httpCookieSendCallback">httpCookieSendCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceHttpSetCookieRecvCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceHttpSetCookieRecvCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set callback function to be called before receiving cookies<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libhttp.h&gt;
int <b>sceHttpSetCookieRecvCallback</b>(
	int <i>id</i>,
	int <i>(*<a href="../network/libhttp-Reference-English.htm#httpCookieRecvCallback">httpCookieRecvCallback</a>)(int, const char*,const char*, SceSize, void*),</i>
<i>	</i>void<i> *user_arg</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on interrupt-enabled or -disabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>id</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ID of target template setting, connection setting, or request object.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i><a href="../network/libhttp-Reference-English.htm#httpCookieRecvCallback">httpCookieRecvCallback</a></i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to callback function.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>user_arg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Any user-defined value. Used for argument to the callback function when it is called.&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If the function completes normally, SCE_OK is returned.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_OK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431100&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_INVALID_ID&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid ID specified&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0x80431001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SCE_HTTP_BEFORE_INIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Library not initialized&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is used to set a callback function to be called before a cookie is received. If no callback function is set, cookies are processed automatically.<br>The callback function can be returned to an unset state by specifying NULL for <i><a href="../network/libhttp-Reference-English.htm#httpCookieRecvCallback">httpCookieRecvCallback</a></i>.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The callback function that was set is executed in the context of the thread that called the HTTP communication processing function. As long as communication is not performed in HTTP Pipeline mode, the callback function will be executed in the context of the thread that called <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>() or <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequestInCacheFirstMode">sceHttpSendRequestInCacheFirstMode</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/libhttp-Reference-English.htm#sceHttpEnableCookie">sceHttpEnableCookie</a> (), <a href="../network/libhttp-Reference-English.htm#sceHttpDisableCookie">sceHttpDisableCookie</a> (),<a href="../network/libhttp-Reference-English.htm#sceHttpSendRequest">sceHttpSendRequest</a>(), <a href="../network/libhttp-Reference-English.htm#sceHttpSendRequestInCacheFirstMode">sceHttpSendRequestInCacheFirstMode</a>(),<br><a href="../network/libhttp-Reference-English.htm#httpCookieRecvCallback">httpCookieRecvCallback</a>()<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
