<html lang="en">
<head>
<title>PSPNET_Inet-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
TCP/IP Library Reference
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetSockaddr"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetSockaddr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Socket address structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/socket.h&gt;

struct <b>SceNetInetSockaddr</b> {
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>sa_len</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>sa_family</i>;
	<a href="../kernel/Types-Reference-English.htm#SceChar8">SceChar8</a> <i>sa_data</i>[14];
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sa_len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Structure size (bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sa_family</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address family&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sa_data</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents an address to be used by the pspnet_inet socket APIs.<br>It is a generic structure that can be used independently of address family. In most cases, it is referenced as a pointer. In actuality, the <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddrIn">SceNetInetSockaddrIn</a> structure is used for IPv4.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddrIn">SceNetInetSockaddrIn</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetSockaddrIn"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetSockaddrIn<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>IPv4 socket address structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/netinet/in.h&gt;

struct <b>SceNetInetSockaddrIn</b> {
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>sin_len</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>sin_family</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <i>sin_port</i>;
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> <i>sin_addr</i>;
	<a href="../kernel/Types-Reference-English.htm#SceChar8">SceChar8</a> <i>sin_zero</i>[8];
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sin_len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Structure size (16 bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sin_family</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address family (SCE_NET_INET_AF_INET)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sin_port</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Port number&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sin_addr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;IPv4 address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sin_zero</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Reserved area&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents a socket address for IPv4.<br><i>sin_port</i> is in network byte order.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetSockaddrInP2p"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetSockaddrInP2p<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>IPv4 socket address structure (UDPP2P, TCP over UDPP2P)<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/netinet/in.h&gt;

struct <b>SceNetInetSockaddrInP2p</b> {
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>sin_len</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUChar8">SceUChar8</a> <i>sin_family</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <i>sin_port</i>;
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> <i>sin_addr</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <i>sin_vport</i>;
	<a href="../kernel/Types-Reference-English.htm#SceChar8">SceChar8</a> <i>sin_zero</i>[6];
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="top">&nbsp;<i>sin_len</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Structure&nbsp;size&nbsp;(16&nbsp;bytes)&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>sin_family</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Address&nbsp;family&nbsp;(SCE_NET_INET_AF_INET)&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>sin_port</i>&nbsp;</td>
<td valign="top">&nbsp;UDPP2P&nbsp;<br>&nbsp;TCP&nbsp;over&nbsp;UDPP2P&nbsp;</td>
<td valign="top">&nbsp;:&nbsp;UDP&nbsp;port&nbsp;number&nbsp;<br>&nbsp;:&nbsp;TCP&nbsp;port&nbsp;number&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>sin_addr</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;IPv4&nbsp;address&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>sin_vport</i>&nbsp;</td>
<td valign="top">&nbsp;UDPP2P&nbsp;<br>&nbsp;TCP&nbsp;over&nbsp;UDPP2P&nbsp;</td>
<td valign="top">&nbsp;:&nbsp;Virtual&nbsp;port&nbsp;number&nbsp;<br>&nbsp;:&nbsp;UDP&nbsp;port&nbsp;number&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<i>sin_zero</i>&nbsp;</td>
<td colspan= 2  valign="top">&nbsp;Reserved&nbsp;area&nbsp;</td>
</tr></table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents a socket address for IPv4. It is used by the UDPP2P and TCP over UDPP2P protocols.<br><i>sin_port</i> and <i>sin_vport</i> are in network byte order.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetInAddr"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetInAddr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>IPv4 address structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/netinet/in.h&gt;

struct <b>SceNetInetInAddr</b> {
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>s_addr</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s_addr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;32-bit IPv4 address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents a 32-bit IPv4 address.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetLinger"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetLinger<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Linger structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/socket.h&gt;

struct <b>SceNetInetLinger</b> {
	int <i>l_onoff</i>;
	int <i>l_linger</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>l_onoff</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ON/OFF flag&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>l_linger</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Linger time&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is a linger structure specified in controlling TCP connection termination processing.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetIpMreq"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetIpMreq<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Multicast group structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/netinet/in.h&gt;

struct <b>SceNetInetIpMreq</b> {
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> <i>imr_multiaddr</i>;
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> <i>imr_interface</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>imr_multiaddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Multicast group address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>imr_interface</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Interface address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is specified when participating in or leaving a multicast group.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetTimeval"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetTimeval<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Time interval structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/time.h&gt;

struct <b>SceNetInetTimeval</b> {
	unsigned int <i>tv_sec</i>;
	unsigned int <i>tv_usec</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>tv_sec</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Seconds&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>tv_usec</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Microseconds&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure specifies a time interval.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetFdSet"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetFdSet<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>fdset structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/select.h&gt;

struct <b>SceNetInetFdSet</b> {
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFdMask">SceNetInetFdMask</a> <i>fds_bits</i>[8 /*howmany(SCE_NET_INET_FD_SETSIZE,
SCE_NET_INET_NFDBITS)*/];
} ;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fds_bits</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Bits describing a set of socket descriptors&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>() to specify a socket descriptor set. <i>fds_bits</i>  indicates the set of socket descriptors to be examined. Normally, the SceNetInetFD_XXX() macros are used to set, clear, check the bits of, and initialize values.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_SET">SceNetInetFD_SET</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_CLR">SceNetInetFD_CLR</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ISSET">SceNetInetFD_ISSET</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ZERO">SceNetInetFD_ZERO</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetPollfd"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetPollfd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>pollfd structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/poll.h&gt;

struct <b>SceNetInetPollfd</b> {
	int <i>fd</i>;
	short <i>events</i>;
	short <i>revents</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>events</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;I/O events that are checked&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>revents</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;I/O events in ready state&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>(). It specifies a combination of a socket descriptor to be checked and an I/O event mask. An I/O event mask indicating which events were found to be in ready state is returned in <i>revents</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetMsghdr"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetMsghdr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Message header structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/socket.h&gt;

struct <b>SceNetInetMsghdr</b> {
	void *<i>msg_name</i>;
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> <i>msg_namelen</i>;
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetIovec">SceNetIovec</a> *<i>msg_iov</i>;
	int <i>msg_iovlen</i>;
	void *<i>msg_control</i>;
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> <i>msg_controllen</i>;
	int <i>msg_flags</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg_name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to address structure&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg_namelen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address structure size&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg_iov</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to scatter/gather array&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg_iovlen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of <i>msg_iov</i> array elements&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg_control</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;(Not supported)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg_controllen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;(Not supported)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg_flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecvmsg">sceNetInetRecvmsg</a>() and <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSendmsg">sceNetInetSendmsg</a>() to send and receive data.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetIovec">SceNetIovec</a>, <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecvmsg">sceNetInetRecvmsg</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSendmsg">sceNetInetSendmsg</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetIovec"></a>
<table width="100%"><td width="70%"><font size=6>SceNetIovec<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>iovec structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/uio.h&gt;

struct <b>SceNetIovec</b> {
	void *<i>iov_base</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <i>iov_len</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iov_base</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Base address (pointer)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>iov_len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of area indicated by <i>iov_base </i>(in bytes)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used for the message header structure's scatter/gather array.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetMsghdr">SceNetInetMsghdr</a>, <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecvmsg">sceNetInetRecvmsg</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSendmsg">sceNetInetSendmsg</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetTcpcbstat"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetTcpcbstat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>TCP control block structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/netinet/tcp_var.h&gt;

struct <b>SceNetInetTcpcbstat</b> {
	struct SceNetInetTcpcbstat *<i>next</i>;
	unsigned int <i>ts_so_snd_sb_cc</i>;
	unsigned int <i>ts_so_rcv_sb_cc</i>;
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> <i>ts_inp_laddr</i>;
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> <i>ts_inp_faddr</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <i>ts_inp_lport</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <i>ts_inp_fport</i>;
	short <i>ts_t_state</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>next</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Next entry in the list (NULL indicates end)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ts_so_snd_sb_cc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data size (bytes) in send buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ts_so_rcv_sb_cc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data size (bytes) in receive buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ts_inp_laddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Local address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ts_inp_faddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ts_inp_lport</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Local port number (network byte order)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ts_inp_fport</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination port number (network byte order)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>ts_t_state</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection state&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used to get the state of each socket that is using TCP.<br>The possible values of the <i>ts_t_state</i> member, along with their respective meanings, are shown below.<br>The macros are defined in tcp_fsm.h.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Meaning</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_CLOSED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;CLOSED state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_LISTEN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LISTEN state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_SYN_SENT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SYN_SENT state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_SYN_RECEIVED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;SYN_RECEIVED state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_ESTABLISHED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ESTABLISHED state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_CLOSE_WAIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;5&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;CLOSE_WAIT state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_FIN_WAIT_1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;6&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;FIN_WAIT_1 state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_CLOSING&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;7&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;CLOSING state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_LAST_ACK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;8&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;LAST_ACK state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_FIN_WAIT_2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;9&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;FIN_WAIT_2 state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_TCPS_TIME_WAIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;10&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TIME_WAIT state&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetTcpcbstat">sceNetInetGetTcpcbstat</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetUdpcbstat"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetUdpcbstat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Structure]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>UDP control block structure<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/netinet/udp_var.h&gt;

struct <b>SceNetInetUdpcbstat</b> {
	struct SceNetInetUdpcbstat *<i>next</i>;
	unsigned int <i>us_so_snd_sb_cc</i>;
	unsigned int <i>us_so_rcv_sb_cc</i>;
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> <i>us_inp_laddr</i>;
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> <i>us_inp_faddr</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <i>us_inp_lport</i>;
	<a href="../kernel/Types-Reference-English.htm#SceUShort16">SceUShort16</a> <i>us_inp_fport</i>;
};

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>next</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Next entry in the list (NULL indicates end)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>us_so_snd_sb_cc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data size (bytes) in send buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>us_so_rcv_sb_cc</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Data size (bytes) in receive buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>us_inp_laddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Local address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>us_inp_faddr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>us_inp_lport</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Local port number (network byte order)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>us_inp_fport</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination port number (network byte order)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure is used to get the state of each socket that is using UDP.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetUdpcbstat">sceNetInetGetUdpcbstat</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetFdMask"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetFdMask<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Type Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Socket descriptor set<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/select.h&gt;

typedef unsigned int <b>SceNetInetFdMask</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This type represents a socket descriptor set and is used by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFdSet">SceNetInetFdSet</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetNfds_t"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetNfds_t<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Type Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Number of socket descriptors<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/poll.h&gt;

typedef unsigned int <b>SceNetInetNfds_t</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This type represents the number of socket descriptors and is used by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetSocklen_t"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetSocklen_t<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Type Definitions]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Socket address structure length<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/socket.h&gt;

typedef unsigned int <b>SceNetInetSocklen_t</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This type represents the size of a socket address structure.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetAccept">sceNetInetAccept</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetBind">sceNetInetBind</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetConnect">sceNetInetConnect</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetpeername">sceNetInetGetpeername</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetsockname">sceNetInetGetsockname</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetsockopt">sceNetInetGetsockopt</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecvfrom">sceNetInetRecvfrom</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSendto">sceNetInetSendto</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSetsockopt">sceNetInetSetsockopt</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetInit"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetInit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize the TCP/IP network library <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;

int <b>sceNetInetInit</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 on normal completion.<br>If an error occurs, one of the following error codes is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_INET_NOT_TERMINATED">SCE_ERROR_NET_INET_NOT_TERMINATED</a><br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_INET_SET_IFADDR">SCE_ERROR_NET_INET_SET_IFADDR</a><br>pspnet_inet internal error (0x80410280 - 0x804102ff)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function initializes the TCP/IP network library.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>ret = sceNetInetInit();
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetTerm">sceNetInetTerm</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetTerm"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetTerm<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Terminate the TCP/IP network library <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;

int <b>sceNetInetTerm</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 on normal completion.<br>If an error occurs, the following error code is returned.<br><a href="../network/PSPNET_Error-Reference-English.htm#SCE_ERROR_NET_INET_SOCKET_BUSY">SCE_ERROR_NET_INET_SOCKET_BUSY</a><br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function terminates the TCP/IP network library.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>ret = sceNetInetTerm();
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInit">sceNetInetInit</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetAccept"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetAccept<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get socket for which TCP connection was established<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetAccept</b>(
	int <i>s</i>,
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *<i>addr</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> *<i>addrlen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>addr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area where address structure for connection destination is stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>addrlen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area where size of address structure <i>addr </i>is stored&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;New socket descriptor for which the connection was established&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When a TCP connection is established for socket <i>s</i>, sceNetInetAccept() is used to get the new socket descriptor.<br>Before calling this function, store the size of the area pointed to by <i>addr</i> in <i>addrlen</i>.<br>If the function completes normally, the address structure for the connection destination is stored in <i>addr</i>, and the size of this address structure is stored in <i>addrlen</i>.<br>If the socket is not non-blocking, sceNetInetAccept() blocks until the connection is established.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddrIn">SceNetInetSockaddrIn</a> sin;
<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> sockaddr_len;

/* Create TCP socket */
sid = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>(SCE_NET_INET_AF_INET, SCE_NET_INET_SOCK_STREAM, 0);
if(sid &lt; 0){
	/* Error handling */
}

/* ... Set bind information for the destination in sin ... */

/* Bind socket sid using the information in sin */
ret = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetBind">sceNetInetBind</a>(sid, (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *)&amp;sin, sizeof(sin));
if(ret &lt; 0){
	/* Error handling */
}

/* Put socket sid in state for accepting the connection; backlog is 5 */
ret = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetListen">sceNetInetListen</a>(sid, 5);
if(ret &lt; 0){
	/* Error handling */
}

while(1){
	/* Wait for new connection */
	sockaddr_len = sizeof(sin);
	new_sid = sceNetInetAccept(sid, (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *)&amp;sin, &amp;sockaddr_len);
	if(new_sid &lt; 0){
		/* Error handling */
	}

	/* ... Process new connection new_sid ... */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket is not ready to accept a connection (not in LISTEN state)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EOPNOTSUPP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EOPNOTSUPP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The specified socket was not of type SCE_NET_INET_SOCK_STREAM&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Established connection does not exist (for non-blocking mode)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() or <a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetListen">sceNetInetListen</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>()<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>(), <a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetBind"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetBind<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Bind address to socket<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetBind</b>(
	int <i>s</i>,
	const struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *<i>name</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> <i>namelen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to address structure to bind&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>namelen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of address structure indicated by <i>name</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function binds the local address (IP address/port number) indicated by <i>name </i>to socket <i>s</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define LISTEN_PORT 80
struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddrIn">SceNetInetSockaddrIn</a> sin;

/* Create TCP socket */
sid = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>(SCE_NET_INET_AF_INET, SCE_NET_INET_SOCK_STREAM, 0);
if(sid &lt; 0){
	/* Error handling */
}

/* Place information for the bind target in sin */
memset(&amp;sin, 0, sizeof(sin));
sin.sin_family = SCE_NET_INET_AF_INET;
sin.sin_addr.s_addr = SCE_NET_INET_INADDR_ANY;
sin.sin_port = <a href="../network/PSPNET_Core-Reference-English.htm#sceNetHtons">sceNetHtons</a>(LISTEN_PORT);

/* Bind socket sid using the information in sin */
ret = sceNetInetBind(sid, (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *)&amp;sin, sizeof(sin));
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EADDRNOTAVAIL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EADDRNOTAVAIL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address is not local address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EADDRINUSE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EADDRINUSE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified address is in use&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The address family previously specified for the socket does not&nbsp;&nbsp;<br>&nbsp;&nbsp;match <i>name</i>-&gt;sa_family&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory allocation failed&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetListen">sceNetInetListen</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetsockname">sceNetInetGetsockname</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetConnect"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetConnect<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Establish connection or bind sending destination address<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetConnect</b>(
	int <i>s</i>,
	const struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *<i>name</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> <i>namelen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to address structure for connection target&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>namelen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of address structure indicated by <i>name</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses socket <i>s</i> to make a connection to the address indicated by <i>name</i>. For TCP, this function establishes a TCP connection, and for UDP, the specific sending destination is bound to the socket.<br><br>This function blocks until either the connection is established or an error occurs.<br><br>If the socket has been marked as non-blocking, this function returns immediately after it is called.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define SERVER_ADDR "192.168.0.1"
#define SERVER_PORT 80
struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddrIn">SceNetInetSockaddrIn</a> sin;

/* Create TCP socket */
sid = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>(SCE_NET_INET_AF_INET, SCE_NET_INET_SOCK_STREAM, 0);
if(sid &lt; 0){
	/* Error handling */
}

/* Place information for the connection target in sin */
memset(&amp;sin, 0, sizeof(sin));
sin.sin_family = SCE_NET_INET_AF_INET;
sin.sin_addr.s_addr = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetAddr">sceNetInetInetAddr</a>(SERVER_ADDR);
sin.sin_port = <a href="../network/PSPNET_Core-Reference-English.htm#sceNetHtons">sceNetHtons</a>(SERVER_PORT);

/* Connect */
ret = sceNetInetConnect(sid, (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *)&amp;sin, sizeof(sin));
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EADDRNOTAVAIL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EADDRNOTAVAIL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EAFNOSUPPORT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EAFNOSUPPORT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address family of specified address is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EISCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EISCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection has already been established&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ETIMEDOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ETIMEDOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timeout occurred while trying to make the connection&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ECONNREFUSED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ECONNREFUSED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection was refused by connection target&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENETUNREACH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENETUNREACH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection target could not be reached&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EADDRINUSE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EADDRINUSE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specified address is in use&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINPROGRESS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINPROGRESS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection is being established (Successfully called when non-blocking mode connection)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EALREADY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EALREADY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;A non-blocking connection for the specified socket is already being established (for non-blocking mode)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EACCESS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EACCES&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;An attempt was made to connect to an invalid address (such as a&nbsp;&nbsp;<br>&nbsp;&nbsp;broadcast address)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() or&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory allocation failed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENETDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENETDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Interface is down&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EHOSTDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EHOSTDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Host is down (for example, no response to ARP)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetGetpeername"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetGetpeername<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get address of peer connected to socket<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetGetpeername</b>(
	int <i>s</i>,
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *<i>name</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> *<i>namelen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area where address structure is stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>namelen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of area where address structure indicated by <i>name </i>is stored (IN), size of address structure (OUT)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the address structure for the peer connected to socket <i>s</i>.<br>Before calling this function, store the size of the area pointed to by <i>name</i> in <i>namelen</i>.<br>If the function completes normally, the address structure for the connected peer is stored in <i>name</i> and its actual size is stored in <i>namelen</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddrIn">SceNetInetSockaddrIn</a> sin;
<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> sockaddr_len;
char buf[sizeof("XXX.XXX.XXX.XXX")];
const char *str;

/* Get connection information for socket sid and store it in sin */
ret = sceNetInetGetpeername(sid, (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *)&amp;sin, &amp;sockaddr_len);
if(ret &lt; 0){
	/* Error handling */
}

/* Display the address and port number */
printf("peer is %s:%d\n", <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetNtop">sceNetInetInetNtop</a>(SCE_NET_INET_AF_INET, &amp;sin.sin_addr,
buf, sizeof(buf)), <a href="../network/PSPNET_Core-Reference-English.htm#sceNetNtohs">sceNetNtohs</a>(sin.sin_port));

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOTCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOTCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket is not connected&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetAccept">sceNetInetAccept</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetsockname">sceNetInetGetsockname</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetGetsockname"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetGetsockname<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get local address of socket<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetGetsockname</b>(
	int <i>s</i>,
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *<i>name</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> *<i>namelen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>name</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area where address structure is stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>namelen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of area where address structure indicated by <i>name </i>is stored (IN), size of address structure (OUT)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the local address structure for socket <i>s</i>.<br>Before calling this function, store the size of the area pointed to by <i>name</i> in <i>namelen</i>.<br>If the function completes normally, the address structure for the connected peer is stored in <i>name</i> and its actual size is stored in <i>namelen</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddrIn">SceNetInetSockaddrIn</a> sin;
<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> sockaddr_len;
char buf[sizeof("XXX.XXX.XXX.XXX")];
const char *str;

/* Get local address of socket sid and store it in sin */
ret = sceNetInetGetsockname(sid, (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *)&amp;sin, &amp;sockaddr_len);
if(ret &lt; 0){
	/* Error handling */
}

/* Display the address and port number */
printf("sock is %s:%d\n", <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetNtop">sceNetInetInetNtop</a>(SCE_NET_INET_AF_INET, &amp;sin.sin_addr,
buf, sizeof(buf)), <a href="../network/PSPNET_Core-Reference-English.htm#sceNetNtohs">sceNetNtohs</a>(sin.sin_port));

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetBind">sceNetInetBind</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetpeername">sceNetInetGetpeername</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetGetsockopt"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetGetsockopt<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get socket option<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetGetsockopt</b>(
	int <i>s</i>,
	int <i>level</i>,
	int <i>optname</i>,
	void *<i>optval</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> *<i>optlen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket level to be manipulated&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Option name&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optval</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area where option value is stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optlen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of area where option value indicated by <i>optval </i>is stored (IN), size of option value (OUT)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the option value indicated by <i>optname</i> at the socket level indicated by <i>level</i> for socket <i>s</i>.<br>Before calling this function, store the size of the area pointed to by <i>optval</i> in <i>optlen</i>.<br>If the function completes normally, the option value is stored in <i>optval</i>, and its actual size is stored in <i>optlen</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> timeout;

/* Get setting for <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a> option and store it in timeout */
ret = sceNetInetGetsockopt(sid, SCE_NET_INET_SOL_SOCKET,
<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a>, &amp;timeout, sizeof(timeout));
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOPROTOOPT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOPROTOOPT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Option name is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">For socket levels and option names, see the <a href="../network/PSPNET_Inet-Reference-English.htm#List of Socket Options">List of Socket Options</a>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSetsockopt">sceNetInetSetsockopt</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetListen"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetListen<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Enable socket to accept TCP connections<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetListen</b>(
	int <i>s</i>,
	int <i>backlog</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>backlog</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of queue for accepting connections&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function puts socket <i>s</i> into a state (the LISTEN state) in which it can accept TCP connections.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Create TCP socket */
sid = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>(SCE_NET_INET_AF_INET, SCE_NET_INET_SOCK_STREAM, 0);
if(sid &lt; 0){
	/* Error handling */
}

/* ... Place information about the bind destination in sin ... */

/* Bind socket sid using the information in sin */
ret = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetBind">sceNetInetBind</a>(sid, (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *)&amp;sin, sizeof(sin));
if(ret &lt; 0){
	/* Error handling */
}

/* Put socket sid in a state where it can accept connections; backlog is 5 */
ret = sceNetInetListen(sid, 5);
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EOPNOTSUPP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EOPNOTSUPP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket is not of a type that can accept connections&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetBind">sceNetInetBind</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetAccept">sceNetInetAccept</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetRecv"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetRecv<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Receive data from a connection <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetRecv</b>(
	int <i>s</i>,
	void *<i>buf</i>,
	SceSize <i>len</i>,
	int <i>flags</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to buffer area where data will be stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of area indicated by <i>buf</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of received data (in bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection terminated (for TCP, FIN was received)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function receives <i>len</i> bytes of data from socket <i>s</i>, which has an active connection.<br>Received data is stored in the area specified by <i>buf</i>.<br><br>This function blocks until one or more bytes of data are received, or until the received data size indicated by the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVLOWAT">SCE_NET_INET_SO_RCVLOWAT</a> socket option is reached, or if the timeout interval indicated by the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVTIMEO">SCE_NET_INET_SO_RCVTIMEO</a> socket option occurs.<br><br>If the socket has been set to non-blocking mode and a blocking condition occurs, an error will be generated immediately and EAGAIN will be returned by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>().<br><br>The values for <i>flags</i> are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_DONTWAIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Call as non-blocking&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_OOB&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Process out-of-band data (normally not used)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_PEEK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Leave receive data in receive buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_WAITALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Block until specified buffer size is received&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUF_SIZE 1024
char recv_buf[BUF_SIZE];

/* Receive data from socket sid and store data in recv_buf */
ret = sceNetInetRecv(sid, recv_buf, sizeof(recv_buf), 0);
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ECONNREFUSED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ECONNREFUSED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection is closed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOTCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOTCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection not established&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket is in blocking state (when non-blocking mode was set) or timed out (when <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVTIMEO">SCE_NET_INET_SO_RCVTIMEO</a> option is specified)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() or&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecvfrom">sceNetInetRecvfrom</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecvmsg">sceNetInetRecvmsg</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetRecvfrom"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetRecvfrom<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Receive data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetRecvfrom</b>(
	int <i>s</i>,
	void *<i>buf</i>,
	SceSize <i>len</i>,
	int <i>flags</i>,
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *<i>from</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> *<i>fromlen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to buffer area where data will be stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of area indicated by <i>buf</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flags&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>from</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area where address structure of host sending data is stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fromlen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of area where <i>from</i> address structure is stored (IN), size of address structure (OUT)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Received data size (in bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function receives <i>len</i> bytes of data from socket <i>s</i>. The received data is stored in the area specified by <i>buf</i>.<br>Before calling this function, store the size of the area pointed to by <i>from</i> in <i>fromlen</i>.<br>When data is received, the address structure of the sending host is stored in <i>from</i>, and its actual size is stored in <i>fromlen</i>.<br><br>This function blocks until one or more bytes of data are received (TCP) or until one or more datagrams are received (UDP).<br>When the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVLOWAT">SCE_NET_INET_SO_RCVLOWAT</a> socket option is set, the function blocks until the specified amount of data has been received.<br>When the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVTIMEO">SCE_NET_INET_SO_RCVTIMEO</a> socket option is set, the function blocks until the specified timeout interval occurs.<br><br>If the socket has been set to non-blocking mode and a blocking condition occurs, an error will be generated immediately and EAGAIN will be returned by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>().<br><br>The values for <i>flags</i> are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>flags</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_DONTWAIT &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Call as non-blocking&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_OOB&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Process out-of-band data (normally not used)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_PEEK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Leave receive data in receive buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_WAITALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Block until specified buffer size is received&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUF_SIZE 1024
char recv_buf[BUF_SIZE];
struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddrIn">SceNetInetSockaddrIn</a> sin;
<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> sockaddr_len;

/* Receive data from socket sid and store in recv_buf; store sender information in sin */
ret = sceNetInetRecvfrom(sid, recv_buf, sizeof(recv_buf), 0, (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> 
*)sin, &amp;sockaddr_len);
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOTCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOTCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection not established (for TCP)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket is in blocking state (when non-blocking mode was set) or timed out (when <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVTIMEO">SCE_NET_INET_SO_RCVTIMEO</a> option is specified)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() or <a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecv">sceNetInetRecv</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecvmsg">sceNetInetRecvmsg</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetRecvmsg"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetRecvmsg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Receive data using message header structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetRecvmsg</b>(
	int <i>s</i>,
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetMsghdr">SceNetInetMsghdr</a> *<i>msg</i>,
	int <i>flags</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to message header structure where data will be stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Received data size (in bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function receives data from socket <i>s</i>, and stores the data and the address structure for the sender in the message header structure indicated by <i>msg</i>.<br>To obtain the address structure of the host which sent the data that was received, specify a pointer to the area where the address structure will be stored in <i>msg</i>-&gt;msg_name, and specify its size in <i>msg</i>-&gt;msg_namelen.<br>The received data is stored sequentially starting at the beginning of the scatter/gather structure array. The maximum number of array elements that can be specified using <i>msg</i>-&gt;msg_iov is 1024.<br><br>This function blocks until one or more bytes of data are received (TCP) or until one or more datagrams are received (UDP).<br>When the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVLOWAT">SCE_NET_INET_SO_RCVLOWAT</a> socket option is set, the function blocks until the specified amount of data has been received.<br>When the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVTIMEO">SCE_NET_INET_SO_RCVTIMEO</a> socket option is set, the function blocks until the specified timeout interval occurs.<br><br>If the socket has been set to non-blocking mode and a blocking condition occurs, an error will be generated immediately and EAGAIN will be returned by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>().<br><br>The values for <i>flags</i> are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<i><b>flags</b></i>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_DONTWAIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Call as non-blocking&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_OOB&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Process out-of-band data (normally not used)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_PEEK&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Leave receive data in receive buffer&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_WAITALL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Block until specified buffer size is received&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Could not allocate memory to receive data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOTCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOTCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection not established (for TCP)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket is in blocking state (when non-blocking mode was set) or timed out (when <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVTIMEO">SCE_NET_INET_SO_RCVTIMEO</a> option is specified)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() or&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EMSGSIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EMSGSIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>msg_iovlen</i> is too large&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecv">sceNetInetRecv</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecvfrom">sceNetInetRecvfrom</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetSelect"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetSelect<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Synchronous I/O operation for multiple sockets<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/select.h&gt;

int <b>sceNetInetSelect</b>(
	int <i>nfds</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFdSet">SceNetInetFdSet</a> *<i>readfds</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFdSet">SceNetInetFdSet</a> *<i>writefds</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFdSet">SceNetInetFdSet</a> *<i>exceptfds</i>,
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetTimeval">SceNetInetTimeval</a> *<i>timeout</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nfds</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum number of socket descriptor to be checked +1&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>readfds</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to socket descriptor set to check if ready to read (receive)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>writefds</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to socket descriptor set to check if ready to write (send)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>exceptfds</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to socket descriptor set to check if out-of-band data has arrived&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>timeout</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to timeval structure for specifying timeout interval&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of descriptors that are in ready state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timeout&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function checks the socket descriptor sets <i>readfds</i>, <i>writefds</i>, and <i>exceptfds</i> to determine whether the respective socket descriptors are ready to read (receive), ready to write (send), or if out-of-band data has arrived. The function returns the number of socket descriptors that are in ready state.<br><br>A socket descriptor set is created by using the following macros.<br><br></div>
        <div style="margin-left:50px;"><pre><font size=3><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFdSet">SceNetInetFdSet</a> fds;	/* fdset structure */
int s;		/* Socket descriptor */

<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ZERO">SceNetInetFD_ZERO</a>(&amp;fds);	/* Initialize fds */

<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_SET">SceNetInetFD_SET</a>(s, &amp;fds);	/* Set s in fds */
<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_CLR">SceNetInetFD_CLR</a>(s, &amp;fds);	/* Clear s from fds */
</font></pre></div>
<div style="margin-left:50px;"><br>This function blocks until one or more socket descriptors are in ready state or until the interval specified by <i>timeout</i> elapses.<br>If <i>timeout</i> is set to NULL, no timeout will occur.<br>If <i>timeout</i> is set to 0, the function returns immediately without blocking.<br><br>If the return value is greater than or equal to 1, <i>readfds</i>, <i>writefds</i>, and <i>exceptfds</i> are set to reflect which socket descriptors were found to be in ready state. The socket descriptor sets  can be tested with the <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ISSET">SceNetInetFD_ISSET</a>() macro to determine which socket descriptors are in ready state.<br><br></div>
        <div style="margin-left:50px;"><pre><font size=3><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ISSET">SceNetInetFD_ISSET</a>(s, &amp;fds); 	/* If s is set in fds, a non-zero value is returned; 
				otherwise 0 is returned. */
</font></pre></div>
<div style="margin-left:50px;"><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int nfds;
<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFdSet">SceNetInetFdSet</a> readfds;
struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetTimeval">SceNetInetTimeval</a> timeout;

/* Initialize readfds */
<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ZERO">SceNetInetFD_ZERO</a>(&amp;readfds);
/* Set sid1 and sid2 in readfds */
<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_SET">SceNetInetFD_SET</a>(sid1, &amp;readfds);
<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_SET">SceNetInetFD_SET</a>(sid2, &amp;readfds);

/* ... Set nfds to the maximum number of socket descriptors to check + 1 ... */

/* Set the timeout value for sceNetInetSelect(); 10 seconds is assumed here */
timeout.tv_sec  = 10;
timeout.tv_usec = 0;

/* Wait until sid1 or sid2 is ready for reading; timeout is 10 seconds */
ret = sceNetInetSelect(nfds, &amp;readfds, 0, 0, &amp;timeout);
if(ret &lt; 0){
	/* Error handling */
}
if(ret == 0){
	/* Timeout processing */
}

/* Either sid1 or sid2 is ready for reading */
if(<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ISSET">SceNetInetFD_ISSET</a>(sid1, &amp;readfds)){
	/* sid1 is ready for reading */
}
else if(<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ISSET">SceNetInetFD_ISSET</a>(sid2, &amp;readfds)){
	/* sid2 is ready for reading */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">After calling sceNetInetSelect(), <i>readfds</i>, <i>writefds</i>, and <i>exceptfds</i> must be set appropriately again before calling the function again.<br><br>When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;One of the socket descriptor sets is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() or <a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timeout specified is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_SET">SceNetInetFD_SET</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_CLR">SceNetInetFD_CLR</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ISSET">SceNetInetFD_ISSET</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ZERO">SceNetInetFD_ZERO</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetPoll"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetPoll<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Synchronous I/O operation for multiple sockets<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/poll.h&gt;

int <b>sceNetInetPoll</b>(
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetPollfd">SceNetInetPollfd</a> *<i>fds</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetNfds_t">SceNetInetNfds_t</a> <i>nfds</i>,
	int <i>timeout</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>fds</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to array of pollfd structures&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>nfds</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of elements in <i>fds</i> &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>timeout</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timeout interval (milliseconds)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of descriptors that are in ready state&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timeout&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function checks whether the I/O events specified in the <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetPollfd">SceNetInetPollfd</a> structure array <i>fds</i> are ready for the respective socket descriptors. The function returns the number of socket descriptors that are ready for the specified I/O events.<br><br>The <i>revents</i> member of the <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetPollfd">SceNetInetPollfd</a> structure is referenced to determine which socket descriptors are ready for which I/O events.<br><br>The I/O event bits used by the <i>events</i> and <i>revents</i> members are defined as follows.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Bit</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_POLLIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal data or out-of-band data can be read&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_POLLRDNORM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal data can be read&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_POLLRDBAND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Out-of-band data can be read&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_POLLOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal data can be written&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_POLLWRNORM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal data can be written&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_POLLWRBAND&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Out-of-band data can be written&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">The following bit is used only by <i>revents</i>.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Bit</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_POLLNVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Invalid socket descriptor&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">This function blocks until one or more socket descriptors specified in <i>fds</i> are in ready state or until the interval specified by <i>timeout</i> elapses.<br>If <i>timeout</i> is set to SCE_NET_INET_INFTIM (-1), no timeout will occur.<br>If <i>timeout</i> is set to 0, the function returns immediately without blocking.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetPollfd">SceNetInetPollfd</a> pollfd[2];

/* Initialize pollfd */
memset(&amp;pollfd, 0, sizeof(pollfd));
/* Set the ready-for-reading condition for sid1 and sid2 in pollfd */
pollfd[0].fd = sid1;
pollfd[0].events |= SCE_NET_INET_POLLIN;
pollfd[1].fd = sid2;
pollfd[1].events |= SCE_NET_INET_POLLIN;

/* Wait until sid1 or sid2 is ready for reading; timeout is 10 seconds */
ret = sceNetInetPoll(pollfd, 2, &amp;timeout, 1000 * 10);
if(ret &lt; 0){
	/* Error handling */
}
if(ret == 0){
	/* Timeout processing */
}

/* Either sid1 or sid2 is ready for reading */
if(pollfd[0].revents &amp; SCE_NET_INET_POLLIN){
	/* sid1 is ready for reading */
}
else if(pollfd[1].revents &amp; SCE_NET_INET_POLLIN){
	/* sid2 is ready for reading */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() or <a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timeout specified is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetSend"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetSend<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Send data to a connection<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetSend</b>(
	int <i>s</i>,
	const void *<i>msg</i>,
	SceSize <i>len</i>,
	int <i>flags</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to send data area&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of area indicated by <i>msg</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of sent data (in bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sends <i>len</i> bytes of data from the area indicated by <i>msg</i> to socket <i>s</i> which has an active connection.<br><br>This function blocks until the amount of free space in the send buffer is equal to the send data size, or until the send data size indicated by the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDLOWAT">SCE_NET_INET_SO_SNDLOWAT</a> socket option is reached, or if the timeout interval specified by the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a> socket option occurs.<br><br>If the socket has been set to non-blocking mode and a blocking condition occurs, the number of bytes that were sent up to that point, or an error (if no bytes have been sent), is returned.<br><br>The values for <i>flags</i> are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<i><b>flags</b></i>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_DONTROUTE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Do not reference the route table (normally not&nbsp;&nbsp;<br>&nbsp;&nbsp;used)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_DONTWAIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Call as non-blocking&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_OOB&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Send as out-of-band data (normally not used)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_USECRYPTO&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Encrypt send data (enabled only when socket type is SOCK_DGRAM_P2P)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_USESIGNATURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Assign signature to send data (enabled only when socket type is SOCK_DGRAM_P2P)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUF_SIZE 1024
char send_buf[BUF_SIZE];

/* ... Place send data in send_buf ... */

/* Send data in send_buf to socket sid */
ret = sceNetInetSend(sid, send_buf, sizeof(send_buf), 0);
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_&nbsp;&nbsp;<br>&nbsp;&nbsp;EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket is in blocking state (when non-blocking mode was set) or timed out (when <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a> option is specified)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_&nbsp;&nbsp;<br>&nbsp;&nbsp;ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_ERROR_ERRNO_&nbsp;&nbsp;<br>&nbsp;&nbsp;ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory needed to send data could not be allocated or there is no space in the send queue.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_&nbsp;&nbsp;<br>&nbsp;&nbsp;EHOSTUNREACH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EHOSTUNREACH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination is unreachable&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() or&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EPIPE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EPIPE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket being written to has already been closed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_&nbsp;&nbsp;<br>&nbsp;&nbsp;ENETDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENETDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Interface is down&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_&nbsp;&nbsp;<br>&nbsp;&nbsp;EHOSTDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EHOSTDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Host is down (for example, no response to ARP)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSendto">sceNetInetSendto</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSendmsg">sceNetInetSendmsg</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetSendto"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetSendto<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Send data<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetSendto</b>(
	int <i>s</i>,
	const void *<i>msg</i>,
	SceSize <i>len</i>,
	int <i>flags</i>,
	const struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> *<i>to</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> <i>tolen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to send data area&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>len</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of area indicated by <i>msg</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flags&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>to</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area where address structure of host receiving data is to be stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>tolen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of <i>to</i> address structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sent data size (in bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sends <i>len</i> bytes of data from the buffer indicated by <i>msg</i> to socket <i>s</i>. The receiving host's address structure and its size are specified by <i>to</i> and <i>tolen</i>.<br><br>For TCP, this function blocks until the amount of free space in the send buffer is equal to the send data size, or until the send data size indicated by the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDLOWAT">SCE_NET_INET_SO_SNDLOWAT</a> socket option is reached, or if the timeout interval specified by the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a> socket option elapses.<br>With UDP, the function does not block.<br><br>If the socket has been set to non-blocking mode and a blocking condition occurs, the number of bytes that were sent up to that point, or an error (when no bytes have been sent), is immediately returned.<br><br>The values for <i>flags</i> are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<i><b>flags</b></i>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_DONTROUTE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Do not reference the routing table (normally not used)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_DONTWAIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Call as non-blocking&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_OOB&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Send as out-of-band data (normally not used)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_USECRYPTO&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Encrypt send data (enabled only when socket type is SOCK_DGRAM_P2P)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_USESIGNATURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Assign signature to send data (enabled only when socket type is SOCK_DGRAM_P2P)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUF_SIZE 1024
char send_buf[BUF_SIZE];
struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddrIn">SceNetInetSockaddrIn</a> sin;

/* ... Place data to send in send_buf ... */

/* ... Place destination address and port number in sin ... */

/* Send data in send_buf to socket sid; the send destination is specified in sin */
ret = sceNetInetSendto(sid, send_buf, sizeof(send_buf), 0, (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSockaddr">SceNetInetSockaddr</a> 
*)&amp;sin, sizeof(sin));
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EMSGSIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EMSGSIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Too much send data (when UDP is used)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket is in blocking state (when non-blocking mode was set) or timed out (when <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a> option is specified)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory needed to send data could not be allocated or there is no space in the send queue.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EACCESS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EACCES&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Tried to send to a broadcast address without specifying the&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_BROADCAST">SCE_NET_INET_SO_BROADCAST</a> socket option &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENETUNREACH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENETUNREACH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Tried to send by specifying <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_DONTROUTE">SCE_NET_INET_SO_DONTROUTE</a> socket option or SCE_NET_INET_MSG_DONTROUTE but the send interface could not be determined &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EHOSTUNREACH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EHOSTUNREACH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination is unreachable&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EAFNOSUPPORT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EAFNOSUPPORT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address family is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() or&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EPIPE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EPIPE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket being written to has already been closed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENETDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENETDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Interface is down&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EHOSTDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EHOSTDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination host is down (for example, no response to ARP)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSend">sceNetInetSend</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSendmsg">sceNetInetSendmsg</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetSendmsg"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetSendmsg<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Send data using message header structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetSendmsg</b>(
	int <i>s</i>,
	const struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetMsghdr">SceNetInetMsghdr</a> *<i>msg</i>,
	int <i>flags</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>msg</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to message header structure of send data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>flags</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Flags&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sent data size (in bytes)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sends data contained in the message header structure indicated by <i>msg</i> to socket <i>s</i>.<br><br>Specify the receiving host in the <i>msg</i>-&gt;msg_name member of the host's address structure and its length in <i>msg</i>-&gt;msg_namelen.<br><br>Data is sent sequentially starting at the beginning of the scatter/gather structure array. The maximum number of array elements that can be specified by using <i>msg</i>-&gt;msg_iov is 1024.<br><br>For TCP, this function blocks until the amount of free space in the send buffer is equal to the send data size, or until the send data size indicated by the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDLOWAT">SCE_NET_INET_SO_SNDLOWAT</a> socket option is reached, or if the timeout interval specified by the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a> socket option elapses.<br>With UDP, the function does not block.<br><br>If the socket has been set to non-blocking mode and a blocking condition occurs, the number of bytes that were sent up to that point, or an error (when no bytes have been sent), is immediately returned.<br><br>The values for <i>flags</i> are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<i><b>flags</b></i>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_DONTROUTE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Do not reference the routing table (normally not used)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_DONTWAIT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Call as non-blocking&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_OOB&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Send as out-of-band data (normally not used)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_USECRYPTO&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Encrypt send data (enabled only when socket type is SOCK_DGRAM_P2P)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_MSG_USESIGNATURE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Assign signature to send data (enabled only when socket type is SOCK_DGRAM_P2P)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EMSGSIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EMSGSIZE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Too much send data (when UDP is used) or msg_iovlen is too large&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EAGAIN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket is in blocking state (when non-blocking mode was set) or timed out (when <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a> option is specified)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory needed to send data could not be allocated or there is no space in the send queue.&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EACCESS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EACCES&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Tried to send to a broadcast address without specifying the&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_BROADCAST">SCE_NET_INET_SO_BROADCAST</a> socket option&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EHOSTUNREACH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EHOSTUNREACH&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination is unreachable&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EAFNOSUPPORT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EAFNOSUPPORT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address family is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocketAbort">sceNetInetSocketAbort</a>() or&nbsp;&nbsp;<br>&nbsp;&nbsp;<a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EPIPE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EPIPE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;The socket being written to has already been closed&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENETDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENETDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Interface is down&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EHOSTDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EHOSTDOWN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Destination host is down (Example: No reply to ARP)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSend">sceNetInetSend</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSendto">sceNetInetSendto</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetPoll">sceNetInetPoll</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetSetsockopt"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetSetsockopt<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set socket option<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetSetsockopt</b>(
	int <i>s</i>,
	int <i>level</i>,
	int <i>optname</i>,
	const void *<i>optval</i>,
	<a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetSocklen_t">SceNetInetSocklen_t</a> <i>optlen</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>level</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Target socket level&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optname</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Option name&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optval</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to option value&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>optlen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of option value indicated by <i>optval</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the value of the option indicated by <i>optname</i> at the socket level indicated by <i>level</i> for socket <i>s</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> timeout;

/* Place specifed send timeout value in tv; value is set to 1 second */
timeout = 1000 * 1000;

/* Set timeout for <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a> option */
ret = sceNetInetSetsockopt(sid, SCE_NET_INET_SOL_SOCKET, 
<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a>, &amp;timeout, sizeof(timeout));
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For socket levels and option names, see the <a href="../network/PSPNET_Inet-Reference-English.htm#List of Socket Options">List of Socket Options</a>.<br><br>When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()..<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOPROTOOPT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOPROTOOPT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Option name is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetsockopt">sceNetInetGetsockopt</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetShutdown"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetShutdown<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Detailed close operation for TCP connections<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetShutdown</b>(
	int <i>s</i>,
	int <i>how</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>how</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Specification for close target&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs operations for closing the TCP connection on socket <i>s</i>.<br><br>Once SCE_NET_INET_SHUT_RD is used to close the receiving side of the connection, it will no longer be possible to read from the socket, and any data in the receive buffer will be discarded. Subsequently, if data continues to arrive on the connection, ACK will be returned, but the data will be discarded.<br><br>If SCE_NET_INET_SHUT_WR is used to close the sending side of the connection, the TCP connection switches to a half-closed state. In this state, data that remains in the send buffer will be sent, after which FIN will be sent and termination processing will be performed.<br><br>Specifying SCE_NET_INET_SHUT_RDWR is equivalent to calling sceNetInetShutdown() with SCE_NET_INET_SHUT_RD specified, followed by another call to sceNetInetShutdown() with SCE_NET_INET_SHUT_WR specified.<br><br>The values for <i>how</i> are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<i><b>how</b></i>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_SHUT_RD&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Close the reading side&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_SHUT_WR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Close the writing side&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_SHUT_RDWR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Close both the reading and writing sides&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Close both the reading and writing of socket sid */
ret = sceNetInetShutdown(sid, SCE_NET_INET_SHUT_RDWR);
if(ret &lt; 0){
	/* Error handling */
}

/* Release the socket descriptor */
ret = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetClose">sceNetInetClose</a>(sid);
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>how</i> is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOTCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOTCONN&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Connection not established&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetClose">sceNetInetClose</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetSocket"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetSocket<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Create a socket<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

int <b>sceNetInetSocket</b>(
	int <i>domain</i>,
	int <i>type</i>,
	int <i>protocol</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>domain</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Protocol family (SCE_NET_INET_AF_INET only)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>type</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket type&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>protocol</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Protocol (normally 0)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Descriptor of newly created socket&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function creates a socket corresponding to the specified protocol family and socket type, and returns the socket descriptor.<br><br>The only valid <i>domain</i> type is SCE_NET_INET_AF_INET, which indicates IPv4.<br><br>The values for <i>type</i> are as follows.<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<i><b>type</b></i>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_SOCK_STREAM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TCP&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_SOCK_DGRAM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;UDP&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_SOCK_RAW&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;RAW&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_SOCK_DGRAM_P2P&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;UDPP2P&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_SOCK_STREAM_P2P&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;TCP over UDPP2P&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Create TCP socket */
sid = sceNetInetSocket(SCE_NET_INET_AF_INET, SCE_NET_INET_SOCK_STREAM, 0);
if(sid &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">A maximum of 255 socket descriptors can be created by the entire library. Descriptors can range from 1 to 255.<br><br>When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EPROTONOSUPPORT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EPROTONOSUPPORT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Protocol family or socket type is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EMFILE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EMFILE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;No empty space in socket table&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;SCE_ERROR_ERRNO_ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ENOBUFS&nbsp;&nbsp;<br>&nbsp;&nbsp;ENOMEM&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Memory allocation failed during socket creation&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetClose"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetClose<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Close a socket<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;

int <b>sceNetInetClose</b>(
	int <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function closes socket <i>s</i> and releases associated resources.<br><br>If a TCP connection is active, termination processing is performed for that connection.<br><br>If the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_LINGER">SCE_NET_INET_SO_LINGER</a> socket option has been specified, the value of the option controls how termination processing will be performed. For details, see the description of <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_LINGER">SCE_NET_INET_SO_LINGER</a> in the <a href="../network/PSPNET_Inet-Reference-English.htm#List of Socket Options">List of Socket Options</a>.<br><br>Otherwise, the function returns immediately.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Close socket sid */
ret = sceNetInetClose(sid);
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetShutdown">sceNetInetShutdown</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetCloseWithRST"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetCloseWithRST<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Close a socket and simultaneously send TCP RST<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;

int <b>sceNetInetCloseWithRST</b>(
	int <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function closes socket <i>s</i>, releases associated resources, and simultaneously sends a TCP RST.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Close socket sid and reset the connection at the same time */
ret = sceNetInetCloseWithRST(sid);
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function is only valid for a socket having socket type SCE_NET_INET_SOCK_STREAM.<br><br>When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetShutdown">sceNetInetShutdown</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetSocketAbort"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetSocketAbort<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Abort blocking of a socket <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;

int <b>sceNetInetSocketAbort</b>(
	int <i>s</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>s</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor whose blocking will be aborted&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">The error code can be obtained by calling <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function aborts the blocking of threads that are performing operations (function calls) for socket <i>s</i>. When a blocked function is aborted, the function returns an error and EINTR is returned by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>().<br>If no threads are being blocked when sceNetInetSocketAbort() is called, the next time that socket blocks, it is aborted immediately, and EINTR will be returned.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Abort blocking of socket sid */
ret = sceNetInetSocketAbort(sid);
if(ret &lt; 0){
	/* Error handling */
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function only aborts the blocking state for the socket.<br>It will not close the connection or perform related operations at the same time.<br>If <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetClose">sceNetInetClose</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetCloseWithRST">sceNetInetCloseWithRST</a>() are blocking because of the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_LINGER">SCE_NET_INET_SO_LINGER</a> option, those functions cannot be aborted by calling sceNetInetSocketAbort(); use <a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>() instead.<br><br>When an error occurs, the values shown below can be obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>() or <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>().<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>()</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EBADF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_ERROR_ERRNO_EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;EINTR&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking was aborted by <a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetClose">sceNetInetClose</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetCloseWithRST">sceNetInetCloseWithRST</a>(), <a href="../network/PSPNET_Core-Reference-English.htm#sceNetThreadAbort">sceNetThreadAbort</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetGetErrno"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetGetErrno<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get error code for local thread<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;

int <b>sceNetInetGetErrno</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets the error code for the local thread.<br>This indicates the socket API error code.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>ret = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>(SCE_NET_INET_AF_INET, SCE_NET_INET_SOCK_STREAM, 0);
if(ret &lt; 0){
	printf("<a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>() failed. (errno = %d)\n", sceNetInetGetErrno());
	/* Error handling */
}

</font></pre></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetGetPspError"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetGetPspError<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get error code for local thread in psperror.h format<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;

int <b>sceNetInetGetPspError</b>(
	void
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler.<br>Can be called from a thread (must be in interrupt-enabled state).<br>Multthread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the thread-local error code.<br>It represents the error code of the socket API.<br>The error codes that are returned are as defined in psperror.h, not the normal errno.h.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>ret = <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>(SCE_NET_INET_AF_INET, SCE_NET_INET_SOCK_STREAM, 0);
if(ret &lt; 0){
	printf("<a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSocket">sceNetInetSocket</a>() failed. (errno = 0x%x)\n", sceNetInetGetPspError());
	/* Error handling */
}

</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetGetTcpcbstat"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetGetTcpcbstat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get TCP socket information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/netinet/tcp_var.h&gt;

int <b>sceNetInetGetTcpcbstat</b>(
	int *<i>buflen</i>,
	void *<i>buf</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buflen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer size of <i>buf</i> (IN), list size (OUT)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to buffer&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 on normal completion.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets information about TCP sockets as a list of <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetTcpcbstat">SceNetInetTcpcbstat</a> structures.<br>If this function is called with <i>buf</i> == NULL, the size of the buffer needed to store the list is placed in <i>buflen</i>.<br>If this function is called with <i>buf</i> != NULL, the list of TCP socket information is written starting at <i>buf</i> and with a size of <i>buflen</i>, and <i>buf</i> will point to the first entry on the list.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetTcpcbstat">SceNetInetTcpcbstat</a> *statbuf, *entry;
int num;

/* Get size of buffer needed */
ret = sceNetInetGetTcpcbstat(&amp;num, NULL);

/* Allocate area having a size of num bytes */
statbuf = (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetTcpcbstat">SceNetInetTcpcbstat</a> *)my_alloc(num);

/* Get the list of socket information */
ret = sceNetInetGetTcpcbstat(&amp;num, statbuf);

/* Process each entry */
for(entry = statbuf; entry != NULL; entry = entry-&gt;next){
	printf("TCP State: %d\n", entry-&gt;ts_t_state);
	...
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetTcpcbstat">SceNetInetTcpcbstat</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetGetUdpcbstat"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetGetUdpcbstat<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get UDP socket information<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/netinet/udp_var.h&gt;

int <b>sceNetInetGetUdpcbstat</b>(
	int *<i>buflen</i>,
	void *<i>buf</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buflen</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Buffer size of <i>buf</i> (IN), list size (OUT)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to buffer&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns 0 on normal completion.<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function gets information about UDP sockets as a list of <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetUdpcbstat">SceNetInetUdpcbstat</a> structures.<br>If this function is called with <i>buf</i> == NULL, the size of the buffer needed to store the list is placed in <i>buflen</i>.<br>If this function is called with <i>buf</i> != NULL, the list of UDP socket information is written starting at <i>buf</i> and with a size of <i>buflen</i>, and <i>buf</i> will point to the first entry on the list.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetUdpcbstat">SceNetInetUdpcbstat</a> *statbuf, *entry;
int num;

/* Get size of buffer needed */
ret = sceNetInetGetUdpcbstat(&amp;num, NULL);

/* Allocate an area having a size of num bytes */
statbuf = (struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetUdpcbstat">SceNetInetUdpcbstat</a> *)my_alloc(num);

/* Get the list of socket information */
ret = sceNetInetGetUdpcbstat(&amp;num, statbuf);

/* Process each entry */
for(entry = statbuf; entry != NULL; entry = entry-&gt;next){
	printf("UDP Local Port: %d\n", <a href="../network/PSPNET_Core-Reference-English.htm#sceNetNtohs">sceNetNtohs</a>(entry-&gt;us_inp_lport));
	...
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetUdpcbstat">SceNetInetUdpcbstat</a><br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetInetAddr"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetInetAddr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert a dot format IPv4 address to a 32-bit IPv4 address <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;

<a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> <b>sceNetInetInetAddr</b>(
	const char *<i>cp</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to dot format IPv4 address string&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">32-bit IPv4 address (network byte order)<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_INADDR_NONE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>cp</i> is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a dot format IPv4 address (such as aaa.bbb.ccc.ddd) to a 32-bit IPv4 address.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define TARGET_IP_ADDR "192.168.0.10"

struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> addr;
addr.s_addr = sceNetInetInetAddr(TARGET_IP_ADDR);
if(addr.s_addr == SCE_NET_INET_INADDR_NONE){
	/* Error handling */
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetAton">sceNetInetInetAton</a>()<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetPton">sceNetInetInetPton</a>()<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetNtop">sceNetInetInetNtop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetInetAton"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetInetAton<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert a dot format IPv4 address to a 32-bit IPv4 address<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/netinet/in.h&gt;

int <b>sceNetInetInetAton</b>(
	const char *<i>cp</i>,
	struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> *<i>addr</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cp</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to dot format IPv4 address string&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>addr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area for storing 32-bit IPv4 address (network byte order)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address string is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts a dot format IPv4 address (such as aaa.bbb.ccc.ddd) to a 32-bit IPv4 address.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define TARGET_IP_ADDR "192.168.0.10"

struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> addr;
ret = sceNetInetInetAton(TARGET_IP_ADDR, &amp;addr);
if(ret == 0){
	/* Error handling */
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetAddr">sceNetInetInetAddr</a>()<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetPton">sceNetInetInetPton</a>()<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetNtop">sceNetInetInetNtop</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetInetNtop"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetInetNtop<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert address structure to numeric string address <br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/netinet/in.h&gt;
#include &lt;pspnet/sys/socket.h&gt;

const char * <b>sceNetInetInetNtop</b>(
	int <i>af</i>,
	const void *<i>src</i>,
	char *<i>dst</i>,
	SceSize <i>size</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>af</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address family (SCE_NET_INET_AF_INET)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>src</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area where network format address is stored&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area for storing numeric string address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Size of pointer area indicated by <i>dst</i>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;NULL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts address structure <i>src</i> to a numeric string based on address family <i>af</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> addr = XXX; /* Assume an IP address is placed in addr */
char buf[sizeof("XXX.XXX.XXX.XXX")];
const char *str;

str = sceNetInetInetNtop(SCE_NET_INET_AF_INET, &amp;addr, buf, sizeof(buf));
if(str == NULL){
	/* Error handling */
}
printf("addr = %s\n", str);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetAddr">sceNetInetInetAddr</a>()<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetAton">sceNetInetInetAton</a>()<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetPton">sceNetInetInetPton</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceNetInetInetPton"></a>
<table width="100%"><td width="70%"><font size=6>sceNetInetInetPton<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Function]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Convert numeric string address to address structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet_inet.h&gt;
#include &lt;pspnet/netinet/in.h&gt;

int <b>sceNetInetInetPton</b>(
	int <i>af</i>,
	const char *<i>src</i>,
	void *<i>dst</i>
);

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Cannot be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>af</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address family (SCE_NET_INET_AF_INET)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>src</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address expressed as a string&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>dst</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to area for storing network format address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Normal completion&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address string is invalid&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;-1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Error&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function converts <i>src</i>, which is an address expressed as a string, to a network format address based on address family <i>af</i>. Before calling this function, the area pointed to by <i>dst</i> must be allocated with a size large enough to store the <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> structure.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define TARGET_IP_ADDR "192.168.0.10"
struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> addr;
int ret;

ret = sceNetInetInetPton(SCE_NET_INET_AF_INET, TARGET_IP_ADDR, &amp;addr);
if(ret &lt;= 0){
	/* Error handling */
}

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetAddr">sceNetInetInetAddr</a>()<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetAton">sceNetInetInetAton</a>()<br><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetInetNtop">sceNetInetInetNtop</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetFD_SET"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetFD_SET<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set socket descriptor in fdset structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/select.h&gt;

<b>SceNetInetFD_SET</b>(<i>n</i>, <i>p</i>)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>p</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to fdset structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro sets the bit of the socket descriptor specified by <i>n</i> to 1 in the fdset structure <i>p</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_CLR">SceNetInetFD_CLR</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ISSET">SceNetInetFD_ISSET</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ZERO">SceNetInetFD_ZERO</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetFD_CLR"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetFD_CLR<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Clear socket descriptor from fdset structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/select.h&gt;

<b>SceNetInetFD_CLR</b>(<i>n</i>, <i>p</i>)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>p</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to fdset structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro sets the bit of the socket descriptor specified by <i>n</i> to 0 in the fdset structure <i>p</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_SET">SceNetInetFD_SET</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ISSET">SceNetInetFD_ISSET</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ZERO">SceNetInetFD_ZERO</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetFD_ISSET"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetFD_ISSET<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Test socket descriptor in fdset structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/select.h&gt;

<b>SceNetInetFD_ISSET</b>(<i>n</i>, <i>p</i>)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>n</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>p</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to fdset structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Result</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Not 0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor <i>n</i> is set (bit is 1)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Socket descriptor <i>n</i> is not set (bit is 0)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro determines whether the bit of the socket descriptor specified by <i>n</i> is 1 or 0 in fdset structure <i>p</i>.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_SET">SceNetInetFD_SET</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_CLR">SceNetInetFD_CLR</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ZERO">SceNetInetFD_ZERO</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceNetInetFD_ZERO"></a>
<table width="100%"><td width="70%"><font size=6>SceNetInetFD_ZERO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Macros]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Initialize socket descriptors of fdset structure<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;pspnet/sys/select.h&gt;

<b>SceNetInetFD_ZERO</b>(<i>p</i>)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (must be called in interrupt-enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>p</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to fdset structure&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This macro initializes fdset structure <i>p</i> (by setting all bits to 0).<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_SET">SceNetInetFD_SET</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_CLR">SceNetInetFD_CLR</a>(),<br><a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetFD_ISSET">SceNetInetFD_ISSET</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Socket Options"></a>
<table width="100%"><td width="70%"><font size=6>List of Socket Options<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>List of socket options<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Socket&nbsp;Level</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Option&nbsp;Name</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>get</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>set</b>&nbsp;</td>
</tr>
<tr>
<td rowspan= 19  valign="top">&nbsp;SCE_NET_INET_SOL_SOCKET&nbsp;</td>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_BROADCAST">SCE_NET_INET_SO_BROADCAST</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_DONTROUTE">SCE_NET_INET_SO_DONTROUTE</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_ERROR">SCE_NET_INET_SO_ERROR</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_KEEPALIVE">SCE_NET_INET_SO_KEEPALIVE</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_LINGER">SCE_NET_INET_SO_LINGER</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_OOBINLINE">SCE_NET_INET_SO_OOBINLINE</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVBUF">SCE_NET_INET_SO_RCVBUF</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDBUF">SCE_NET_INET_SO_SNDBUF</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVLOWAT">SCE_NET_INET_SO_RCVLOWAT</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDLOWAT">SCE_NET_INET_SO_SNDLOWAT</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_RCVTIMEO">SCE_NET_INET_SO_RCVTIMEO</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_SNDTIMEO">SCE_NET_INET_SO_SNDTIMEO</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_REUSEADDR">SCE_NET_INET_SO_REUSEADDR</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_REUSEPORT">SCE_NET_INET_SO_REUSEPORT</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_TYPE">SCE_NET_INET_SO_TYPE</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_NBIO">SCE_NET_INET_SO_NBIO</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_ONESBCAST">SCE_NET_INET_SO_ONESBCAST</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_USECRYPTO">SCE_NET_INET_SO_USECRYPTO</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_USESIGNATURE">SCE_NET_INET_SO_USESIGNATURE</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td rowspan= 5  valign="top">&nbsp;SCE_NET_INET_IPPROTO_IP&nbsp;</td>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_IP_MULTICAST_IF">SCE_NET_INET_IP_MULTICAST_IF</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_IP_MULTICAST_TTL">SCE_NET_INET_IP_MULTICAST_TTL</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_IP_MULTICAST_LOOP">SCE_NET_INET_IP_MULTICAST_LOOP</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_IP_ADD_MEMBERSHIP">SCE_NET_INET_IP_ADD_MEMBERSHIP</a>&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_IP_DROP_MEMBERSHIP">SCE_NET_INET_IP_DROP_MEMBERSHIP</a>&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td rowspan= 2  valign="top">&nbsp;SCE_NET_INET_IPPROTO_TCP&nbsp;</td>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_TCP_NODELAY">SCE_NET_INET_TCP_NODELAY</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;<a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_TCP_MAXSEG">SCE_NET_INET_TCP_MAXSEG</a>&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr></table>
</div>
<br>
<br>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_BROADCAST"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_BROADCAST<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Allow sending of broadcast datagrams<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (allow)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option allows a socket to send broadcast datagrams. It is only valid when the socket type is SCE_NET_INET_SOCK_DGRAM.<br>If an attempt is made to send to a broadcast address when this option is disabled, an error will occur and EACCES will be returned by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>().<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_DONTROUTE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_DONTROUTE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Bypass route control mechanism<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (bypass)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option enables data to be sent without referencing the route control table. If the sending interface cannot be determined from the destination address (i.e., it is not a point-to-point destination address or an address on the local network), an error occurs and ENETUNREACH is returned by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>().<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_ERROR"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_ERROR<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get pending error<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Pending error value<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option enables a pending error to be obtained for the socket. Normally, this error is obtained from <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetPspError">sceNetInetGetPspError</a>() after <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSend">sceNetInetSend</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecv">sceNetInetRecv</a>(), or other functions have been executed for a socket.<br>If the socket was set to readable or writable (or both) by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSelect">sceNetInetSelect</a>(), the pending error value can be obtained by using the SCE_NET_INET_SO_ERROR option before executing the relevant function.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If there is no pending error, the value obtained is 0.<br>After an error value has been obtained using this option, the error is cleared for that socket.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_KEEPALIVE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_KEEPALIVE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Send TCP keep-alive probe<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (send keep-alive probe)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option enables a keep-alive probe to be sent. It is only valid when the socket type is SCE_NET_INET_SOCK_STREAM or SCE_NET_INET_SOCK_STREAM_P2P. If this option is enabled and no data is sent or received on the socket for at least two hours, TCP will automatically send a keep-alive probe to the destination.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_LINGER"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_LINGER<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Control TCP connection termination processing<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetLinger">SceNetInetLinger</a> {<br>int l_onoff;<br>int l_linger;<br>}<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">l_onoff<br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (use l_linger)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;"><br>l_linger<br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Abort&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt; 0      &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Linger interval (10 millisecond units)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option controls termination processing for a TCP connection. It is only valid when the socket type is SCE_NET_INET_SOCK_STREAM or SCE_NET_INET_SOCK_STREAM_P2P.<br><br>If l_onoff is 1 (enabled), and l_linger is 0, TCP immediately aborts a closed connection. In other words, it discards any data that is in the send buffer and sends RST.<br><br>If l_onoff is 1 (enabled) and l_linger is a positive number, TCP performs linger operations for a closed connection. In other words, it sends all data that is in the send buffer and waits (blocks) until an ACK is received from the destination or the linger interval elapses. If waiting (blocking) is required by a non-blocking socket, an error occurs and EWOULDBLOCK (same value as EAGAIN) is returned by <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetGetErrno">sceNetInetGetErrno</a>().<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The linger interval must be less than or equal to 32767 (327.67 seconds).<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_OOBINLINE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_OOBINLINE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Control out-of-band data<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (handle out-of-band data as normal data)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option controls the handling of out-of-band data. It is only valid when the socket type is SCE_NET_INET_SOCK_STREAM or SCE_NET_INET_SOCK_STREAM_P2P.<br><br>When this option is enabled, out-of-band data is handled as normal data. In other words, out-of-band data can no longer be read by setting the SCE_NET_INET_MSG_OOB flag in the receive functions.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_RCVBUF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_RCVBUF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set receive buffer size<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Receive buffer size (bytes)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option sets the receive buffer size of a socket.<br>The default sizes are given below.<br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;TCP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;16384&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;UDP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;41600&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;RAW&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;8192&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The maximum size is 256K (262144) bytes.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_SNDBUF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_SNDBUF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set send buffer size<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Send buffer size (bytes)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option sets the send buffer size of a socket.<br>The default sizes are given below.<br></div>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;TCP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;16384&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;UDP&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;9216&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;RAW&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;8192&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The maximum size is 256K (262144) bytes.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_RCVLOWAT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_RCVLOWAT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set low water mark for receive<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Receive low water mark (bytes) [default = 1]<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option sets the receive low water mark for a socket. The receive low water mark is the smallest amount of data that can be in the receive buffer for the socket to be in a readable (receivable) state.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_SNDLOWAT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_SNDLOWAT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set low water mark for send<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Send low water mark (bytes) [default = 2048]<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option sets the send low water mark for a socket. The send low water mark is the smallest empty area that can be in the send buffer for the socket to be in a writable (sendable) state.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For UDP, a socket is always in a writable (sendable) state because no send buffer is used.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_RCVTIMEO"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_RCVTIMEO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set receive timeout interval<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a><br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timeout interval&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option sets the receive timeout interval for a blocking socket.<br>Units are in microseconds.<br>Receive timeouts are enabled for <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecv">sceNetInetRecv</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecvfrom">sceNetInetRecvfrom</a>(), and <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetRecvmsg">sceNetInetRecvmsg</a>().<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Timeouts are implemented by an alarm function in the library.<br>Therefore, the accuracy of the timeout interval cannot be guaranteed. Also, values less than 10 milliseconds are rounded up to 10 milliseconds.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_SNDTIMEO"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_SNDTIMEO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set send timeout interval<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a><br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;&gt;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Timeout interval&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option sets the send timeout interval for a blocking socket.<br>Units are in microseconds.<br>Send timeouts are enabled for <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSend">sceNetInetSend</a>(), <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSendto">sceNetInetSendto</a>(), and <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetSendmsg">sceNetInetSendmsg</a>().<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Timeouts are implemented by an alarm function in the library.<br>Therefore, the accuracy of the timeout interval cannot be guaranteed. Also, values less than 10 milliseconds are rounded up to 10 milliseconds.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_REUSEADDR"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_REUSEADDR<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Allow duplicate bindings for the same port<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero        &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (allow)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option determines the behavior when <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetBind">sceNetInetBind</a>() is executed to bind a port to a socket, when that port is already bound to another socket.<br><br>When SCE_NET_INET_SO_REUSEADDR is enabled, the execution of duplicate bindings of local IP addresses and wildcards is allowed. The duplicate binding of multiple sockets to the same multicast address or same port is also allowed.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Existing&nbsp;Socket</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>New&nbsp;Socket</b>&nbsp;</td>
<td colspan= 2  bgcolor="#cccccc" valign="top">&nbsp;<b>SCE_NET_INET_SO_REUSEADDR</b>&nbsp;</td>
</tr>
<tr>
<td bgcolor="#cccccc" valign="top">&nbsp;&nbsp;&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>(<a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetBind">sceNetInetBind</a>()&nbsp;Execution)</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Disabled</b>&nbsp;</td>
<td bgcolor="#cccccc" valign="top">&nbsp;<b>Enabled</b>&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;LocalIP1&nbsp;</td>
<td valign="top">&nbsp;LocalIP1&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;LocalIP1&nbsp;</td>
<td valign="top">&nbsp;LocalIP2&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;LocalIP1&nbsp;</td>
<td valign="top">&nbsp;*&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;*&nbsp;</td>
<td valign="top">&nbsp;LocalIP1&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;*&nbsp;</td>
<td valign="top">&nbsp;*&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
</tr>
<tr>
<td valign="top">&nbsp;McastIP1&nbsp;</td>
<td valign="top">&nbsp;McastIP1&nbsp;</td>
<td valign="top">&nbsp;x&nbsp;</td>
<td valign="top">&nbsp;o&nbsp;</td>
</tr></table>
</div>
<br>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;LocalIP1, &nbsp;&nbsp;<br>&nbsp;&nbsp;LocalIP2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;= Local IP address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;= Wildcard (SCE_NET_INET_INADDR_ANY)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;McastIP1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;= Multicast address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For a server that is waiting for a TCP connection, enabling the SCE_NET_INET_SO_REUSEADDR option before executing <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetBind">sceNetInetBind</a>() for a waiting socket is recommended.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_REUSEPORT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_REUSEPORT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Allow duplicate bindings to the same address and same port<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero        &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (allow)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option allows a socket to be bound to the same address and port that are already bound to an existing socket, when <a href="../network/PSPNET_Inet-Reference-English.htm#sceNetInetBind">sceNetInetBind</a>() is executed. However, for this to work, this option must be enabled for all target sockets.<br><br>This option is used to receive UDP broadcast or multicast datagrams on multiple sockets.<br><br></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When the target address to be bound is a multicast address, enabling the <a href="../network/PSPNET_Inet-Reference-English.htm#SCE_NET_INET_SO_REUSEADDR">SCE_NET_INET_SO_REUSEADDR</a> option accomplishes exactly the same thing as enabling the SCE_NET_INET_SO_REUSEPORT option.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_TYPE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_TYPE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Get socket type<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Socket type (SCE_NET_INET_SOCK_STREAM, SCE_NET_INET_SOCK_DGRAM, SCE_NET_INET_SOCK_RAW, SCE_NET_INET_SOCK_STREAM_P2P or SCE_NET_INET_SOCK_DGRAM_P2P)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option gets the socket type. It cannot be used to set the socket type.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_NBIO"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_NBIO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set non-blocking<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero        &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (non-blocking)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option sets non-blocking mode for a socket. If a socket is set to non-blocking mode, it will not block even if a blocking socket API is called. In this case, calling a function that attempts to block will cause the function to return immediately with an error.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_ONESBCAST"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_ONESBCAST<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set broadcast transmission to 255.255.255.255<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero        &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (perform broadcast transmission to 255.255.255.255)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">When this option is disabled and a send function is used to send data to address 255.255.255.255, the addess is converted to the broadcast address that was set for the interface.<br>To explicitly send data to the address 255.255.255.255, enable this option.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_USECRYPTO"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_USECRYPTO<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Encrypt and decrypt data<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero        &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (encrypt and decrypt)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option is set to encrypt data when sending and to decrypt data when receiving.<br>It is only valid when the socket type is SCE_NET_INET_SOCK_DGRAM_P2P or SCE_NET_INET_SOCK_STREAM_P2P. <br>When the option is enabled, an 8-byte initial vector is assigned to each packet.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_SO_USESIGNATURE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_SO_USESIGNATURE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Generate and verify data signatures<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero        &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (generate and verify signature)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option is set to generate a signature for data when sending and to verify a signature for data when receiving. It is only valid when the socket type is SCE_NET_INET_SOCK_DGRAM_P2P or SCE_NET_INET_SOCK_STREAM_P2P.<br>When the option is enabled, an 8-byte signature is assigned to each packet.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_IP_HDRINCL"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_IP_HDRINCL<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Transmission IP header specification when using a RAW socket<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero        &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option is set so that a transmission IP header is also specified when a RAW socket is used. It is supported only when the socket type is SCE_NET_INET_SOCK_RAW. When the setting is enabled, transmission data to the socket must start with an IP header.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_IP_MULTICAST_IF"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_IP_MULTICAST_IF<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set IPv4 multicast datagram sending interface<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> {<br><a href="../kernel/Types-Reference-English.htm#SceUInt32">SceUInt32</a> s_addr;<br>};<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_NET_INET_INADDR_ANY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;IPv4 address&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Address of sending interface &nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option sets an interface for sending IPv4 multicast datagrams. It is supported only when the socket type is SCE_NET_INET_SOCK_DGRAM. If this setting is disabled, the sending interface is determined by referencing the route control table.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_IP_MULTICAST_TTL"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_IP_MULTICAST_TTL<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set IPv4 multicast datagram TTL<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">u_char<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">TTL [default = 1]<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option sets the TTL when sending an IPv4 multicast datagram.<br>The default is 1, and the arrival range is limited to the local network.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_IP_MULTICAST_LOOP"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_IP_MULTICAST_LOOP<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set IPv4 multicast datagram local loopback<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Unsigned char<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Disable [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;1        &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Enable (default)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option sets whether or not to enable local loopback for an outgoing IPv4 multicast datagram. If this option is enabled, when the sending interface references the destination multicast group for the data to be sent, the outgoing datagram is copied and processed as a receive datagram as well.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_IP_ADD_MEMBERSHIP"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_IP_ADD_MEMBERSHIP<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Participate in IPv4 multicast group<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetIpMreq">SceNetInetIpMreq</a> {<br>struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> imr_multiaddr;<br>struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> imr_interface;<br>};<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;imr_multiaddr&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Multicast group address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;imr_interface&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Interface address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option is set to participate in an IPv4 multicast group via the specified interface.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_IP_DROP_MEMBERSHIP"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_IP_DROP_MEMBERSHIP<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Leave IPv4 multicast group<br></div><br>
<div style="margin-left:50px;"><br></div>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetIpMreq">SceNetInetIpMreq</a> {<br>struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> imr_multiaddr;<br>struct <a href="../network/PSPNET_Inet-Reference-English.htm#SceNetInetInAddr">SceNetInetInAddr</a> imr_interface;<br>};<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;imr_multiaddr&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Multicast group address&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;imr_interface&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Interface address&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option is set to leave an IPv4 multicast group via the specified interface.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_TCP_NODELAY"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_TCP_NODELAY<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Prohibit use of TCP Nagle algorithm<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Use Nagle algorithm [default]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;Non-zero        &nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Prohibit use&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option determines whether or not to prohibit use of the TCP Nagle algorithm. This option is only valid when the socket type is SCE_NET_INET_SOCK_STREAM or SCE_NET_INET_SOCK_STREAM_P2P.<br><br>The Nagle algorithm prevents a sender from sending data smaller than the maximum segment size (MSS) if no ACK has been received from the receiver.<br>In addition, when an ACK is sent to the receiver, a delayed ACK will be sent after waiting a maximum of 200 milliseconds.<br>One consequence of using the Nagle algorithm is that the response time may appear to get worse if the application continuously sends or receives small packets over short periods of time.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_TCP_MAXSEG"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_TCP_MAXSEG<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set maximum segment size (MSS)<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">int<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Maximum segment size (bytes)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option gets and sets the maximum segment size (MSS) of a TCP connection. This option is only valid when the socket type is SCE_NET_INET_SOCK_STREAM or SCE_NET_INET_SOCK_STREAM_P2P.<br><br>The maximum segment size is the size of the largest TCP segment that can be sent.<br>The maximum segment size for a TCP connection is set to the size that the target connection reported via SYN when the connection was established. This option can only set a value that is smaller than the reported size.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_NET_INET_TCP_MSS_TO_ADVERTISE"></a>
<table width="100%"><td width="70%"><font size=6>SCE_NET_INET_TCP_MSS_TO_ADVERTISE<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Socket Options]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set maximum segment size (MSS) to be reported to connection destination<br></div><br>

<!-- Data Type -->
<div style="margin-left:10px;"><b>Data Type</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">unsigned short<br><br></div>

<!-- Value -->
<div style="margin-left:10px;"><b>Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Maximum segment size for reporting (bytes)<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This option gets and sets the value of the maximum segment size (MSS) option that is contained in a SYN packet when a TCP connection is established. It is only valid when the socket type is SCE_NET_INET_SOCK_STREAM or SCE_NET_INET_SOCK_STREAM_P2P.<br><br>The maximum segment size is the largest TCP segment that can be sent.<br>The maximum segment size for a TCP connection is set to the size reported by the connection destination using SYN when the connection was established. This option can set the maximum segment size when this peer reports to the connection destination. If this option is not set, an appropriate value for the MSS is selected from the MTU. Consequently, this option is usually not set.<br>Since the maximum segment size is reported when the connection is established, this option must be set before the connection is established. Also, if a larger value is specified than the MTU of the interface, it is ignored.<br>To invalidate a value that had been previously set, reset it to zero.<br><br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
