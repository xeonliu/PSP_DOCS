<html lang="jp">
<head>
<title>libpsmfplayer-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libpsmfplayer
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>ライブラリ概要</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>ライブラリの概要</b><br>
</a>
</h3>
<div style="margin-left:50px;">libpsmfplayerはPSMFストリーム再生を容易に実現するためのライブラリです。<br>libpsmfplayerでは動画再生時に問題になるファイルの読み込み、デコード、AV同期などをライブラリで管理することで、プログラム側で描画部分以外を特に意識することなく通常再生や、ネットワークストリーミング、トリックプレイ、PCM再生などといったことを実現することができます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>表示部分とライブラリの関係</b><br>
</a>
</h3>
<div style="margin-left:50px;">libpsmfplayerと表示部分は以下の図のような関係になっています。<br><br></div>

<div align=center>
<p>
<img src="gif/libpsmfplayer-Overview-Japanese001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 1  表示部分とライブラリの関係</b><br>
</div>
<br>
<div style="margin-left:50px;"><br>図 1のように、libpsmfplayerは与えられたPSMFデータをデコードし、AV同期を行う部分までを管理します。したがってプログラムはデコードやAV同期といった処理を描画部分と切り離すことができ、トリックプレイ時やメディアの違いなどを特に意識せずに再生させることができます。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
</font></pre></div>
<div style="margin-left:50px;">描画プログラムでは1V毎、Audioプログラムでは音が途切れないようにlibpsmfplayerにデコードデータを要求し、それを出力しつづけることでPSMFデータの再生を実現することができます。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_3">
<h3>
<a href="#Heading3_1"> 1. </a>3 
<!-- hp1 --><b>関連ファイル</b><br>
</a>
</h3>
<div style="margin-left:50px;">libpsmfplayerを利用する際に必要なファイルは、次のとおりです。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
</font></pre></div>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>カテゴリ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;ヘッダファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libpsmfplayer.h&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;モジュールファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libpsmfplayer.prx&nbsp;&nbsp;<br>&nbsp;&nbsp;psmf.prx&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;スタブライブラリファイル&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;libpsmfplayer_stub.a&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">また、libmpegモジュール、libatrac3plusモジュールおよびその下請けとなる処理を行うモジュールをロードするために、utility機能を用いる必要があります。詳しくは、utility概要をご覧ください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_1_4">
<h3>
<a href="#Heading3_1"> 1. </a>4 
<!-- hp1 --><b>関連ドキュメント</b><br>
</a>
</h3>
</ol>
<div style="margin-left:40px;"><ul>
<li> 動画データの作成と再生処理の概要<br>PSMFデータを作成するための素材データおよび作成方法の概要と、PSMFデータをlibmpegを用いて再生する方法の概要を解説したドキュメントです。
<li> UMD&reg; Stream Composer(for Game Movie) User's Manual<br>PSMFデータを作成するツールの使用方法を解説したドキュメントです。
<li> PSMF Composer User's manual<br>PSMFデータを作成するツールの使用方法を解説したドキュメントです。
<li> libpsmfplayer-Reference<br>libpsmfplayerの関数リファレンスです。
<li> libmpeg-Overview<br>libmpegの概要を解説したドキュメントです。
<li> libmpeg-Reference<br>libmpegの関数リファレンスです。
<li> libpsmf-Reference<br>libpsmfの関数リファレンスです。
<li> libpsmf-Overview<br>libpsmfの概要を解説したドキュメントです。
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_1_5">
<h3>
<a href="#Heading3_1"> 1. </a>5 
<!-- hp1 --><b>サンプルプログラム</b><br>
</a>
</h3>

<!-- sce_title -->
<a Name ="HeadingT_1_5_1">
<div style="margin-left:40px;"><h4><b>devkit/sample/player/psmf/simplePlayer</b><br><br></h4></div></a>

<div style="margin-left:67px;">libpsmfplayerを使って通常再生を行うサンプルです。UMD&reg;/DVD, Memory Stick&trade;およびネットワークからの再生に対応しています。揮発性メモリを利用した使用方法、バイリニア補間を利用した色変換の利用についても提示します。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_5_2">
<div style="margin-left:40px;"><h4><b>devkit/sample/player/psmf/psmfPlayer/</b><br><br></h4></div></a>

<div style="margin-left:67px;">libpsmfplayerの全機能を利用したサンプルです。通常再生に加え、早送り、巻き戻し、一時停止、コマ送り、スロー再生、Video/Audio切り替え、途中再生を行うことができます。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>PsmfPlayerの状態遷移</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>libpsmfplayerの状態遷移</b><br>
</a>
</h3>
<div style="margin-left:50px;">libpsmfplayerは以下のように状態遷移します<br><br></div>

<div style="margin-left:67px;">
<p>
<img src="gif/libpsmfplayer-Overview-Japanese002.gif">
</div>
<div style="margin-left:50px;"><br>libpsmfplayerを利用する際は、ステータスがSCE_PSMFPLAYER_STATUS_PLAYからSCE_PSMFPLAYER_STATUS_DORMANTになるまで、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>()を呼び続ける必要があります。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>Video, Audioデータの取得</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>Videoデータの取得</b><br>
</a>
</h3>
<div style="margin-left:50px;">libpsmfplayerでは<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetVideoData">scePsmfPlayerGetVideoData</a>()を呼ぶことで、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerVideoData">ScePsmfPlayerVideoData</a>構造体に書かれたアドレス内にデータがセットされます。データは指定されたpixel formatの形で、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerVideoData">ScePsmfPlayerVideoData</a>構造体にあるframeWidthの幅で出力されます。<br><br>libpsmfplayerは内部でVideoデータを管理しているため、一時停止や、早送りなどといったトリックプレイの際も適切な画像をV毎に提供します。libpsmfplayerを利用するプログラムは、V単位で<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetVideoData">scePsmfPlayerGetVideoData</a>()を呼び続けることで、正しく再生することができ、プログラム側でVideoデータを管理する必要はありません。たとえば一時停止を行っている場合は、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetVideoData">scePsmfPlayerGetVideoData</a>()でV毎に常に同じVideoデータが返されます。したがってそのデータを表示し続けることで一時停止を行うことができます。<br><br>Videoデータを取得する際には、必ず取得するよりも前に<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>()を呼ばなければなりません。<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>()がV単位で呼ばれない場合はlibpsmfplayer内部のバッファ管理がおかしくなり、正しく再生することができなくなります。また<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>()をVideoデータ取得より後に呼んだ際も同様に正しく再生できなくなります。<br><br>返り値が<a href="../movie/libpsmfplayer-Reference-Japanese.htm#SCE_MPEG_ERROR_PSMFPLAYER_NODATA">SCE_MPEG_ERROR_PSMFPLAYER_NODATA</a>であった場合は、取得できるデータが存在しません。これは再生開始前にデータをバッファリングしている途中、もしくは再生が終了している場合などで発生します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>Audioデータの取得</b><br>
</a>
</h3>
<div style="margin-left:50px;">Audioデータは<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetAudioData">scePsmfPlayerGetAudioData</a>()で取得します。取得するAudioデータはすべて2048サンプルで返されます。コーデックがPCMの場合も2048サンプルに合わせて出力されます。libpsmfplayerを利用するプログラムではAudioの出力を切らさないようにAudioデータを取得するよう設計してください。<br><br>返り値が<a href="../movie/libpsmfplayer-Reference-Japanese.htm#SCE_MPEG_ERROR_PSMFPLAYER_NODATA">SCE_MPEG_ERROR_PSMFPLAYER_NODATA</a>であった場合は、取得できるデータが存在しません。これは一時停止、スロー再生、コマ送り、早送り、巻き戻しなどトリックプレイ中や、音声が存在しないPSMFデータ、Audioデータを出力しないようにした場合に返されます。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_4">
<h2>
 4 <!-- hp --><b>使用手順</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_4_1">
<h3>
<a href="#Heading3_4"> 4. </a>1 
<!-- hp1 --><b>libpsmfplayerの使用手順</b><br>
</a>
</h3>
<div style="margin-left:50px;">libpsmfplayerは以下のような手順で使用します。<br></div>
</ul>
<div style="margin-left:55px;"><ol>
<li VALUE=1> <a href="../movie/libmpeg-Reference-Japanese.htm#sceMpegInit">sceMpegInit</a>()、UMD&reg;を使う場合は<a href="../peripheral/UMD-Reference-Japanese.htm#sceUmdActivate">sceUmdActivate</a>()、ネットワークを行う際はネットワークの初期化をあらかじめ実行しておきます。</li>
<li VALUE=2> <a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerParam">ScePsmfPlayerParam</a>用にメモリを確保し、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerParam">ScePsmfPlayerParam</a>に必要な値を設定します。</li>
<li VALUE=3> <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerCreate">scePsmfPlayerCreate</a>()を呼び出し、PsmfPlayerを作成します。</li>
<li VALUE=4> <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSetPsmf">scePsmfPlayerSetPsmf</a>()を呼び出し、再生するPSMFデータを指定します。</li>
<li VALUE=5> PsmfPlayerの設定を変更する場合は<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerConfigPlayer">scePsmfPlayerConfigPlayer</a>()を呼び出し、繰り返し再生やVideoデータのpixel formatなどを変更します。</li>
<li VALUE=6> <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerStart">scePsmfPlayerStart</a>()を呼び出し、PsmfPlayerをスタートさせます。</li>
<li VALUE=7> <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>()でPsmfPlayerを更新した後、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetVideoData">scePsmfPlayerGetVideoData</a>()でデコードデータを取得し、描画処理を行います。同時にAudioも<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetAudioData">scePsmfPlayerGetAudioData</a>()でAudioの出力データを取得し、出力することでPSMFの再生を行います。</li>
<li VALUE=8> トリックプレイを行う際は、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerChangePlayMode">scePsmfPlayerChangePlayMode</a>()を呼び出してPsmfPlayerのmodeを変更してください。</li>
<li VALUE=9> <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerStop">scePsmfPlayerStop</a>()を呼び出し再生を終了します。</li>
<li VALUE=10> <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerReleasePsmf">scePsmfPlayerReleasePsmf</a>()で再生するPSMFデータの指定を解除します。続けて他のPSMFデータを再生する場合は(4)からのフローを再び実行します。</li>
<li VALUE=11> <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerDelete">scePsmfPlayerDelete</a>()でプレーヤーを削除、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerParam">ScePsmfPlayerParam</a>用に確保したメモリを開放し、すべてが終了となります。</li>
</ol></div>

<!-- sce_hd4 -->
<a name="Heading4_4_2">
<h3>
<a href="#Heading3_4"> 4. </a>2 
<!-- hp1 --><b>初期化処理</b><br>
</a>
</h3>
<div style="margin-left:50px;">libpsmfplayerを使用するためには、あらかじめライブラリ用のメモリを確保しておく必要があります。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>例)
/* 初期化処理 */
<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayer">ScePsmfPlayer</a>         player;
<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerParam">ScePsmfPlayerParam</a>    param;
<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerPlayInfo">ScePsmfPlayerPlayInfo</a> info;

/* Video用のバッファ確保 */
param.bufAddr = (<a href="../kernel/Types-Reference-Japanese.htm#SceUChar8">SceUChar8</a>*)malloc((size_t)<a href="../movie/libpsmfplayer-Reference-Japanese.htm#SCE_PSMFPLAYER_BUF_SIZE">SCE_PSMFPLAYER_BUF_SIZE</a>);

if (param.bufAddr == NULL) {
	/* エラー処理 */
}

param.bufSize = <a href="../movie/libpsmfplayer-Reference-Japanese.htm#SCE_PSMFPLAYER_BUF_SIZE">SCE_PSMFPLAYER_BUF_SIZE</a>;

/* threadの優先度を設定 */
param.threadPriority = 32;

/* PsmfPlayerの作成 */
<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerCreate">scePsmfPlayerCreate</a>( &amp;player, &amp;param );

/* 再生用のパラメータ設定 */
info.videoCodecType        = SCE_PSMFPLAYER_STREAM_M4AVC;
info.playVideoStreamNumber = 0;
info.audioCodecType        = SCE_PSMFPLAYER_STREAM_AUDIO;
info.playAudioStreamNumber = 0;
info.playMode              = SCE_PSMFPLAYER_MODE_PLAY;
info.speed                 = SCE_PSMFPLAYER_SPEED_1;

/* PsmfPlayerに再生するPSMFを設定 */
<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSetPsmf">scePsmfPlayerSetPsmf</a>( &amp;player, &quot;disc0:/PSP_GAME/USRDIR/demo01.pmf&quot; );

/* 再生開始 */
<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerStart">scePsmfPlayerStart</a>(&amp;player, &amp;info, 0);
</font></pre></div>
<div style="margin-left:50px;"><br>libpsmfplayerを使用するには、必ず事前に<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerParam">ScePsmfPlayerParam</a>に設定するメモリを確保しておく必要があります。また、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerParam">ScePsmfPlayerParam</a>に設定するスレッド優先度は、アプリケーションが指定した優先度から2つ低いところまでをライブラリが使用します。例であげたものは32を指定していますので、PsmPlayerで使用するライブラリのスレッド優先度は32、33、34となります。<br>描画スレッドの優先度はライブラリの優先度より高くなければなりません。<br><br>AudioのstreamTypeNumberはAudioが存在しない場合負の値を設定することで再生することができます。Audioが存在しないPSMFデータで0以上の値が設定された場合はプレーヤー内部で負の値に訂正されます。<br><br><a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerStart">scePsmfPlayerStart</a>()の第三引数に指定する開始時間は90kHz系でVideoの1フレーム目を0としたものになります。PSMFヘッダなどに書かれた値は0が開始となっていない可能性がある点に注意してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_3">
<h3>
<a href="#Heading3_4"> 4. </a>3 
<!-- hp1 --><b>描画の流れ</b><br>
</a>
</h3>
<div style="margin-left:50px;">libpsmfplayerでは以下のようにすることで描画を行います。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>例)
<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayer">ScePsmfPlayer</a> player;
<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerVideoData">ScePsmfPlayerVideoData</a> videoData;
<a href="../kernel/Types-Reference-Japanese.htm#SceUChar8">SceUChar8</a>* workBuf;
<a href="../kernel/Types-Reference-Japanese.htm#SceInt32">SceInt32</a> ret;

/* 描画の初期化処理 */

/* 描画用のworkBufを指定 */
workBuf = (<a href="../kernel/Types-Reference-Japanese.htm#SceUChar8">SceUChar8</a>*)( (<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a>)<a href="../graphics/GE-Reference-Japanese.htm#sceGeEdramGetAddr">sceGeEdramGetAddr</a>() + 
(<a href="../kernel/Types-Reference-Japanese.htm#SceUInt32">SceUInt32</a>)SCEGU_VRAM_BP32_2 + SCEGU_VRAM_WIDTH * SCEGU_SCR_HEIGHT * 2 );

videoData.frameWidth = 512;
videoData.buf = workBuf;

for (;;) {
	if(<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetCurrentStatus">scePsmfPlayerGetCurrentStatus</a> ( &amp;player ) ==
		SCE_PSMFPLAYER_STATUS_DORMANT ) {
		/* 再生終了 */
		break;
	}

	/* 描画データの更新 */
	<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>( &amp;player );

	/* デコードデータの取得 */
	ret = <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetVideoData">scePsmfPlayerGetVideoData</a>( &amp;player, &amp;videoData );

	/* 描画処理 */
	if ( ret == <a href="../movie/libpsmfplayer-Reference-Japanese.htm#SCE_MPEG_ERROR_PSMFPLAYER_NODATA">SCE_MPEG_ERROR_PSMFPLAYER_NODATA</a> ) {
		/* 描画データがない */
	} else if ( ret == 0 ){
		/*J Videoの描画 */
	} else {
		/*J エラー処理 */
	}

	/* 次のVBlankまで待つ */
	<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankStart">sceDisplayWaitVblankStart</a>();
	
	/* バッファの切り替え */
	<a href="../graphics/libgu-Reference-Japanese.htm#sceGuSwapBuffers">sceGuSwapBuffers</a>();
}
</font></pre></div>
<div style="margin-left:50px;"><br>libpsmfplayerを利用したVideo再生は上記のようなフローをV毎に行うことで実現します。PsmfPlayerのステータスを確認し、SCE_PSMFPLAYER_STATUS_DORMANTでなければ<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>()で描画部分を更新。<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetVideoData">scePsmfPlayerGetVideoData</a>()でデコードデータを取得し、描画します。<br>再生を終了させたい場合は、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerStop">scePsmfPlayerStop</a>()を呼ぶことでSCE_PSMFPLAYER_STATUS_DORMANTとなり、再生を終了させることができます。この際、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerStop">scePsmfPlayerStop</a>()は必ず<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>()とは別のスレッドで呼ばれなければなりません。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_4_4">
<h3>
<a href="#Heading3_4"> 4. </a>4 
<!-- hp1 --><b>トリックプレイ</b><br>
</a>
</h3>
<div style="margin-left:50px;">トリックプレイを行う際は、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerChangePlayMode">scePsmfPlayerChangePlayMode</a>()の第二引数に希望する操作を設定するか、もしくは<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectVideo">scePsmfPlayerSelectVideo</a>()、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectAudio">scePsmfPlayerSelectAudio</a>()、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectSpecificVideo">scePsmfPlayerSelectSpecificVideo</a>()、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectSpecificAudio">scePsmfPlayerSelectSpecificAudio</a>()を呼ぶことで実現することができます。<br>現在は以下の動作に対応しています。<br></div>
</ol>
<div style="margin-left:40px;"><ul>
<li> <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerChangePlayMode">scePsmfPlayerChangePlayMode</a>()で可能な操作
</ul></div>
<div style="margin-left:70px;"><ul>
<li> 早送り
<li> 巻き戻し
<li> スロー再生
<li> コマ送り
<li> 一時停止
<li> 途中再生
</ul></div>
</ul>
<div style="margin-left:50px;"><br></div>
</ol>
<div style="margin-left:40px;"><ul>
<li> <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectVideo">scePsmfPlayerSelectVideo</a>(), <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectAudio">scePsmfPlayerSelectAudio</a>(),<br><a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectSpecificVideo">scePsmfPlayerSelectSpecificVideo</a>(), <a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectSpecificAudio">scePsmfPlayerSelectSpecificAudio</a>()で可能な操作
</ul></div>
<div style="margin-left:70px;"><ul>
<li> Videoストリーム切り替え
<li> Audioストリーム切り替え（ATRAC3Plus&trade;/PCM）
</ul></div>
</ul>
<div style="margin-left:50px;"><br></div>
<div style="margin-left:67px;">ただし、EP_mapが存在しないストリームを持つPSMFデータ、Range指定ができないHTTPでのストリーミング再生の場合は以下のトリックプレイのみに制限されます。<br></div>
<div style="margin-left:70px;"><ul>
<li> スロー再生
<li> コマ送り
<li> 一時停止
</ul></div>
<div style="margin-left:67px;">Range指定ができないHTTPストリーミングの場合はさらにリピートモードが有効に働きません。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_5">
<h2>
 5 <!-- hp --><b>注意事項</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_5_1">
<h3>
<a href="#Heading3_5"> 5. </a>1 
<!-- hp1 --><b>重要な注意事項</b><br>
</a>
</h3>
<div style="margin-left:50px;">libpsmfplayerを使用する際は、必ずライブラリ内で使用するメモリを確保しておく必要があります。またライブラリ自体が256kByteのメモリを使用するため、256kByte以上のメモリをシステム上にあけておく必要があります。<br><br>加えて、libpsmfplayerはバッファ管理などで3MByteのメモリを使用するため、あらかじめメモリを確保した上で<a href="../movie/libpsmfplayer-Reference-Japanese.htm#ScePsmfPlayerParam">ScePsmfPlayerParam</a>に設定しておく必要があります。<br><br>バッファ管理などで使用するメモリに揮発性メモリを指定する場合、POWERコールバックのチェックを適切に行い、スリープまでに<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerDelete">scePsmfPlayerDelete</a>()までのすべての処理を完了しておくこと、PsmfPlayerのソース内にある、<a href="../movie/libmpeg-Reference-Japanese.htm#sceMpegRingbufferConstruct">sceMpegRingbufferConstruct</a>()で設定するコールバック（devkit/src/psmfplayer/libpsmfplayer.cの_ringBufCallback()が相当）内で直接揮発性メモリへデータを読み込むことがないように<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSetTempBuf">scePsmfPlayerSetTempBuf</a>()で一次読み込みバッファを別途設定するなどを行う必要がある点に注意してください。<br><br>バイリニア補間を利用する場合、それ以外のモードとは色変換の式が異なります。したがって出力される絵についても異なるものとなる可能性がある点にご注意ください。この場合はバイリニア補間用にエンコード設定を調整し、再度エンコードを行ってください。詳細は「libmpeg」概要ドキュメントおよび<a href="../still/JPEGDEC-Reference-Japanese.htm#sceJpegCsc">sceJpegCsc</a>()のドキュメントをご覧ください。<br><br>バイリニア補間を利用する場合、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetVideoData">scePsmfPlayerGetVideoData</a>()に時間がかかる可能性があります。データを取得してから描画するまでの処理が同一VSYNC内に処理が収まらなかった場合、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>()を余計に呼ぶことでlibpsmfplayer内部のタイマを調整する必要があります。<br><br>libpsmfplayerは内部で3つのスレッドを持ち、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerCreate">scePsmfPlayerCreate</a>()時に指定された優先度から低いほうに3つ分の連続した優先度を利用します。描画スレッド、Audio用スレッドはプレーヤーの優先度より高く設定してください。libpsmfplayerのスレッドpriorityとして指定できる値はSCE_KERNEL_USER_HIGHEST_PRIORITY &lt;= thread priority &lt;= SCE_KERNEL_USER_LOWEST_PRIORITYの値となります。<br><br><a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>()はプレーヤーのステータスがSCE_PSMFPLAYER_STATUS_DORMANTになるまで必ずV毎に呼ばれる必要があります。V毎に呼ばれない場合はAV同期部分が正しく処理されず、また正常に終了しなくなる場合があります。<br><br>再生中に<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerStart">scePsmfPlayerStart</a>()、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerStop">scePsmfPlayerStop</a>()、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerChangePlayMode">scePsmfPlayerChangePlayMode</a>()、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectVideo">scePsmfPlayerSelectVideo</a>()、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectSpecificVideo">scePsmfPlayerSelectSpecificVideo</a>()、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectAudio">scePsmfPlayerSelectAudio</a>()、<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSelectSpecificAudio">scePsmfPlayerSelectSpecificAudio</a>()を呼ぶ際は<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerUpdate">scePsmfPlayerUpdate</a>()とは別スレッドでなければなりません。同じスレッドで呼ばれた場合は正常に終了しない、描画のコマ落ち、音声の出力落ちなどが発生する可能性があります。<br><br>libpsmfplayerがデフォルトでサポートしているPSMFヘッダのサイズは最大で512kByteです。512kByte以上のヘッダを持つPSMFデータはデフォルトではエラーとなります。<br><br><a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerStart">scePsmfPlayerStart</a>()で指定する引数、および<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerGetVideoData">scePsmfPlayerGetVideoData</a>()で取得できるVideoデータのptsはPSMFデータの1枚目のVideoデータを0として計算しています。<br>PSMFデータでは通常90000からスタートするため、その点を考慮に入れておく必要があります。<br>libpsmfplayerとPSMFデータのstartのtimestampの差分は<a href="../movie/libpsmf-Reference-Japanese.htm#scePsmfGetPresentationStartTime">scePsmfGetPresentationStartTime</a>()で求めることができます。<br><br><a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerSetPsmf">scePsmfPlayerSetPsmf</a>()およびステータスがSCE_PSMFPLAYER_STATUS_DORMANT, SCE_PSMFPLAYER_STATUS_PLAY, SCE_PSMFPLAYER_STATUS_ERRの状態の時は、UMD&reg;の際は無限リトライ、ネットワークの際はtimeoutまでファイルを読み続けている可能性があります。中断する際は<a href="../movie/libpsmfplayer-Reference-Japanese.htm#scePsmfPlayerBreak">scePsmfPlayerBreak</a>()を呼ぶことで、ファイル読み込みを終了させてから、終了処理を行ってください。<br><br>ライブラリのソースを変更する事で使用するUSER_AGENT名を変更する事ができますが、特に理由がない限りデフォルト設定の"PsmfPlayer/1.0.0 libhttp/1.0.0"をそのままご使用ください。<br><br>Memory Stick&trade;からの読み込みにおいて、指定されたファイルの拡張子が".edat"である場合、ライブラリは指定されたファイルをNPDRMファイルと判定します。この場合、事前にNPDRMモジュールのロードを行い、必要な場合は<a href="../network/NPDRM-Reference-Japanese.htm#sceNpDrmSetLicenseeKey">sceNpDrmSetLicenseeKey</a>()を用いて鍵データを設定しておく必要があります。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_5_2">
<h3>
<a href="#Heading3_5"> 5. </a>2 
<!-- hp1 --><b>HTTPサーバーについて</b><br>
</a>
</h3>
<div style="margin-left:50px;">使用するHTTPサーバーはHTTP/1.0プロトコルに対応している必要があります。使用するトリックプレイ等によっては、他に下記の機能のサポートが必要、推奨となります。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_5_2_3">
<div style="margin-left:40px;"><h4><b>要求事項</b><br><br></h4></div></a>


<!-- sce_hd6 -->
<a name="Heading6_5_2_1">
<div style="margin-left:63px;"><h4><b>"Partial GET"メソッド</b><br><br></h4></a></div>
<div style="margin-left:80px;">下記のトリックプレイを使用する場合、"部分的GET"メソッドに対応している必要があります。詳細はRFC[2616]section9.3を参照してください。また"部分的GET"メソッドに対応していない場合、リピート再生が有効に働きません。<br></div>
<div style="margin-left:70px;"><ul>
<li> 早送り
<li> 巻き戻し
<li> 途中再生
</ul></div>

<!-- sce_title -->
<a Name ="HeadingT_5_2_1_4">
<div style="margin-left:40px;"><h4><b>推奨事項</b><br><br></h4></div></a>


<!-- sce_hd6 -->
<a name="Heading6_5_2_2">
<div style="margin-left:63px;"><h4><b>HEADメソッド</b><br><br></h4></a></div>
<div style="margin-left:80px;">サーバーの負荷の観点から"HEAD"メソッドに対応していることが推奨されます。詳細はRFC[2616]section9.4を参照してください。HEADメソッドに対応していない場合、クライアント側からTCPソケットを切断する機会が多くなります。<br></div>

<!-- sce_hd6 -->
<a name="Heading6_5_2_3">
<div style="margin-left:63px;"><h4><b>Keep-Alive</b><br><br></h4></a></div>
<div style="margin-left:80px;">サーバーの負荷の観点から"持続的接続"に対応していることが推奨されます。詳細はRFC[2616]section8.1.1を参照してください。早送り、巻き戻しのトリックプレイを使用する場合は特に効果的です。<br><br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2010 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
