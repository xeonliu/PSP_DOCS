<html lang="jp">
<head>
<title>USB_Serial-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
USBシリアルドライバ
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="オープンモード"></a>
<table width="100%"><td width="70%"><font size=6>オープンモード<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>ポートを開く際のモードを表す定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_OPEN_MODE_CHECK_DTR">SCE_USBSER_OPEN_MODE_CHECK_DTR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRをチェックするモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_OPEN_MODE_IGNORE_DTR">SCE_USBSER_OPEN_MODE_IGNORE_DTR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRを無視するモード&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerOpen">sceUsbSerOpen</a>()でポートを開く際に指定するモードを表す定数です。<br>USBホスト側が通信準備ができたことを表すDTR(Data Terminal Ready)のON/OFFをチェックするか、無視するかを指定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerOpen">sceUsbSerOpen</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="リード"></a><a name="ライトモード"></a>
<a name="リード / ライトモード"></a>
<table width="100%"><td width="70%"><font size=6>リード / ライトモード<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>読み込み/書き込みの際のモードを表す定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blockingモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_OP_MODE_B_NB">SCE_USBSER_OP_MODE_B_NB</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking/Non-Blockingモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_OP_MODE_NONBLOCKING">SCE_USBSER_OP_MODE_NONBLOCKING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Non-Blockingモード&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRead">sceUsbSerRead</a>()や<a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>()で読み込み/書き込みを行う際に指定するモードを表す定数です。<br>Blockingモードは指定したサイズを処理するまで待ちます。<br>Blocking/Non-Blockingモードは初めから処理できない場合のみ処理ができるようになるまで待ち、処理ができるようになった時点で、待たずに処理可能なサイズのみ処理します。<br>Non-Blockingモードは待たずに処理可能なサイズのみ処理します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRead">sceUsbSerRead</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="キャンセルモード"></a>
<table width="100%"><td width="70%"><font size=6>キャンセルモード<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>キャンセルする際のモードを表す定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_CANCEL_MODE_READ">SCE_USBSER_CANCEL_MODE_READ</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x01&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込み処理をキャンセルするモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_CANCEL_MODE_WRITE">SCE_USBSER_CANCEL_MODE_WRITE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x02&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;書き込み処理をキャンセルするモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_CANCEL_MODE_FLUSH">SCE_USBSER_CANCEL_MODE_FLUSH</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x04&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フラッシュ処理をキャンセルするモード&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerCancel">sceUsbSerCancel</a>()で実行中の読み込み/書き込み/フラッシュ処理をキャンセルする際に指定するモードを表す定数です。<br>論理和をとることで複数のモードを同時に指定することができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerCancel">sceUsbSerCancel</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="クリアモード"></a>
<table width="100%"><td width="70%"><font size=6>クリアモード<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>内部バッファをクリアする際のモードを表す定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_CLEAR_MODE_READ">SCE_USBSER_CLEAR_MODE_READ</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x01&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込み用の内部バッファを&nbsp;&nbsp;<br>&nbsp;&nbsp;クリアするモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_CLEAR_MODE_WRITE">SCE_USBSER_CLEAR_MODE_WRITE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x02&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;書き込み用の内部バッファを&nbsp;&nbsp;<br>&nbsp;&nbsp;クリアするモード&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerClear">sceUsbSerClear</a>()でUSBシリアルドライバの内部バッファをクリアする際に指定するモードを表す定数です。<br>論理和をとることで複数のモードを同時に指定することができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerClear">sceUsbSerClear</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="DTR状態"></a>
<table width="100%"><td width="70%"><font size=6>DTR状態<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[定数定義]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>DTRの状態を表す定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;

</font></pre></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_DTR_OFF">SCE_USBSER_DTR_OFF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRがOFF&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_DTR_ON">SCE_USBSER_DTR_ON</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRがON&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBホスト側が通信準備ができたことを表すDTR(Data Terminal Ready)のON/OFF表す定数です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerGetDTR">sceUsbSerGetDTR</a>()<br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRegisterDTRCallback">sceUsbSerRegisterDTRCallback</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceUsbSerInitParam"></a>
<table width="100%"><td width="70%"><font size=6>SceUsbSerInitParam<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[構造体]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>初期化パラメータ<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
typedef struct SceUsbSerInitParam {
	SceSize <i>size</i>;
	SceUChar *<i>pReadBuf</i>;
	SceSize <i>sizeReadBuf</i>;
	SceUChar *<i>pWriteBuf</i>;
	SceSize <i>sizeWriteBuf</i>;
} <b>SceUsbSerInitParam</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;構造体のサイズ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pReadBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込み用のバッファへのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sizeReadBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込み用のバッファのサイズ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pWriteBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;書き込み用のバッファへのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>sizeWriteBuf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;書き込み用のバッファのサイズ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerInit">sceUsbSerInit</a>()で初期化する際に指定する初期化パラメータを表す構造体です。<br>USBシリアルドライバが読み込み/書き込みの際に使用する内部バッファとして、この構造体で指定されたバッファが使用されます。バッファを指定しなかった場合には、カーネル空間から各バッファにつき4KiBずつメモリが確保され、内部バッファとして使用されます。<br><i>size</i>には必ずこの構造体のサイズを設定してください。<br><br></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">バッファのサイズは512Byte以上にする必要があります。<br></div>
<br>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerInit">sceUsbSerInit</a>()<br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerInit"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerInit<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USBシリアルドライバの初期化<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerInit</b>(
	const <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SceUsbSerInitParam">SceUsbSerInitParam</a> *<i>pParam</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pParam</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SceUsbSerInitParam">SceUsbSerInitParam</a>構造体へのポインタもしくはNULL&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合はusbser.hに定義された以下のエラーコード、もしくはkerror.hやpsperror.hに定義されたエラーコードを返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244403&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既に初期化されている、もしくは&nbsp;&nbsp;<br>&nbsp;&nbsp;他のUSBドライバが使用されている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBシリアルドライバを初期化する関数です。USBシリアルドライバを初期化した場合、USBケーブルを接続するとUSBホストに認識されるようになります。<br>初期化していない場合には、USBケーブルを接続してもUSBホストには認識されません。<br><br>引数<i>pParam</i>に<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SceUsbSerInitParam">SceUsbSerInitParam</a>構造体へのポインタを指定することで、構造体のメンバで指定したバッファを、USBシリアルドライバが読み込み/書き込みの際に使用する内部バッファとして使用させることができます。構造体のメンバ<i>size</i>には、必ず構造体のサイズを設定してください。<br>引数<i>pParam</i>にNULLを指定した場合や、構造体のメンバ<i>pReadBuf</i>, <i>pWriteBuf</i>にNULLを指定した場合には、カーネル空間から各バッファにつき4KiBのメモリが確保され、内部バッファとして使用されます。<br><br>USBシリアルドライバは他のUSBドライバと同時に使用することはできないため、USBバスドライバが提供するsceUsbStart()を使用して始動したUSBドライバが存在する場合には<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_ERROR_BUSY">SCE_USBSER_ERROR_BUSY</a>のエラーが返ります。<br>USBシリアルドライバを使用する場合には、必ず全てのUSBドライバを停止してから、USBシリアルドライバを初期化してください。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define READ_BUF_SIZE (8 * 1024)
static char readBuf[READ_BUF_SIZE];

<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SceUsbSerInitParam">SceUsbSerInitParam</a> param;
int ret;

// sizeフィールドに構造体のサイズを設定
param.size = sizeof(<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SceUsbSerInitParam">SceUsbSerInitParam</a>);

// 読み込み用バッファとしてreadBufを使用する
param.pReadBuf = readBuf;
param.sizeReadBuf = READ_BUF_SIZE;

// 書き込み用バッファは指定せず、ドライバが確保する4KiBのバッファを使用する
param.pWriteBuf = NULL;
param.sizeWriteBuf = 0;

// USBシリアルドライバの初期化
ret = sceUsbSerInit(&amp;param);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#SceUsbSerInitParam">SceUsbSerInitParam</a><br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerEnd">sceUsbSerEnd</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerEnd"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerEnd<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USBシリアルドライバの終了<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerEnd</b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合はusbser.hに定義された以下のエラーコード、もしくはkerror.hやpsperror.hに定義されたエラーコードを返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBシリアルドライバを終了する関数です。<br>USBシリアルドライバを終了すると、USBホストからはUSBケーブルが抜かれた場合と同じ状態に見えます。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;

// USBシリアルドライバの終了
ret = sceUsbSerEnd();
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerInit">sceUsbSerInit</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerOpen"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerOpen<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USBシリアルのポートを開く<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerOpen</b>(
	int <i>mode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#オープンモード">オープンモード</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">引数<i>mode</i>には以下のいずれかの値を指定してください。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OPEN_MODE_CHECK_DTR">SCE_USBSER_OPEN_MODE_CHECK_DTR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRをチェックするモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OPEN_MODE_IGNORE_DTR">SCE_USBSER_OPEN_MODE_IGNORE_DTR</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRを無視するモード&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244403&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既にポートが開かれている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBシリアルのポートを開く関数です。同時に複数回ポートを開くことはできません。<br><br>ポートを開くと、USBシリアルドライバがDCD(Data Carrier Detect)とDSR(Data Set Ready)をONにし、USBホストへ通信準備ができたことを通知します。ポートが開き、かつUSBホスト側の通信準備ができたことを表すDTR(Data Terminal Ready)がONになると、USBホストと通信することができます。<br><br>USBシリアルドライバの内部バッファは、通信可能な状態（ポートが開き、かつDTRがONになっている状態）のみデータを保持し、それ以外の場合には内部バッファはクリアされます。<br><br>引数<i>mode</i>に指定する値によって、DTRがOFFの場合の挙動が異なります。<br><br></div>
</ol>
<div style="margin-left:35px;"><ul>
<li> DTRをチェックするモードの場合（<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OPEN_MODE_CHECK_DTR">SCE_USBSER_OPEN_MODE_CHECK_DTR</a>）<br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRead">sceUsbSerRead</a>() / <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>() / <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerFlush">sceUsbSerFlush</a>()を実行中、もしくは新たに実行した場合に、これらの関数で<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_ERROR_DTR_OFF">SCE_USBSER_ERROR_DTR_OFF</a>のエラーが返ります。
<li> DTRを無視するモードの場合（<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OPEN_MODE_IGNORE_DTR">SCE_USBSER_OPEN_MODE_IGNORE_DTR</a>）<br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRead">sceUsbSerRead</a>() / <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>() / <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerFlush">sceUsbSerFlush</a>()で<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_ERROR_DTR_OFF">SCE_USBSER_ERROR_DTR_OFF</a>のエラーは返りません。
</ul></div>
<div style="margin-left:50px;"><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;

// DTRをチェックするモードでポートを開く
ret = sceUsbSerOpen(<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OPEN_MODE_CHECK_DTR">SCE_USBSER_OPEN_MODE_CHECK_DTR</a>);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OPEN_MODE_CHECK_DTR">SCE_USBSER_OPEN_MODE_CHECK_DTR</a>, <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OPEN_MODE_IGNORE_DTR">SCE_USBSER_OPEN_MODE_IGNORE_DTR</a><br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerClose">sceUsbSerClose</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRead">sceUsbSerRead</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerFlush">sceUsbSerFlush</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerClose"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerClose<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USBシリアルのポートを閉じる<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerClose</b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_ALREADY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244404&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既にポートが閉じている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBシリアルのポートを閉じる関数です。<br><br>ポートを閉じると、USBシリアルドライバがDCDとDSRをOFFにすることで、USBホストへ通信できないことを通知し、USBシリアルドライバの内部バッファをクリアします。ポートが閉じている間にUSBホストから送られたデータは破棄されます。<br><br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRead">sceUsbSerRead</a>() / <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>() / <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerFlush">sceUsbSerFlush</a>()を実行中にポートを閉じた場合には、実行中の関数は<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_ERROR_CLOSED">SCE_USBSER_ERROR_CLOSED</a>のエラーが返ります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;

ret = sceUsbSerClose();
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerOpen">sceUsbSerOpen</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRead">sceUsbSerRead</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerFlush">sceUsbSerFlush</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerRead"></a><a name="sceUsbSerReadCB"></a>
<a name="sceUsbSerRead / sceUsbSerReadCB"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerRead / sceUsbSerReadCB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>データの読み込み<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerRead</b>(
	void *<i>buf</i>,
	SceSize <i>size</i>,
	int <i>mode</i>,
	int <i>timeout</i>
);
int <b>sceUsbSerReadCB</b>(
	void *<i>buf</i>,
	SceSize <i>size</i>,
	int <i>mode</i>,
	int <i>timeout</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>

<!-- sce_title -->
<a Name ="HeadingT_4_1">
<div style="margin-left:40px;"><h4><b>Blockingモード（SCE_USBSER_OP_MODE_BLOCKING）</b><br><b>Blocking/Non-Blockingモード（SCE_USBSER_OP_MODE_B_NB）</b><br><br></h4></div></a>

<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_2">
<div style="margin-left:40px;"><h4><b>Non-Blockingモード（SCE_USBSER_OP_MODE_NONBLOCKING）</b><br><br></h4></div></a>

<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込んだデータを格納するバッファ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込むサイズ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#リード">リード</a>モード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>timeout</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;無通信タイムアウト時間(μs)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">sceUsbSerRead()の引数<i>mode</i>には以下のいずれかの値を指定してください。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blockingモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_B_NB">SCE_USBSER_OP_MODE_B_NB</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking/Non-Blockingモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_NONBLOCKING">SCE_USBSER_OP_MODE_NONBLOCKING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Non-Blockingモード&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">sceUsbSerReadCB()の引数<i>mode</i>には以下のいずれかの値を指定してください。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blockingモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_B_NB">SCE_USBSER_OP_MODE_B_NB</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking/Non-Blockingモード&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は読み込んだサイズ（非負値）を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244403&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込み中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_CLOSED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244405&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ポートが閉じている&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_DTR_OFF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244406&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRがOFF&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_TIMEOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244407&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;タイムアウトした&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_CANCELED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244408&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キャンセルされた&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceUsbSerRead()はUSBホストから受信したデータを読み込む関数です。<br>複数の読み込みを同時に実行することはできません。<br><br>USBホストから受信したデータは、一旦USBシリアルドライバの読み込み用内部バッファに格納され、sceUsbSerRead()を実行すると内部バッファから引数<i>buf</i>で指定したバッファへデータがコピーされます。<br><br>引数<i>mode</i>で以下の3つのモードを指定することができます。<br></div>
<div style="margin-left:35px;"><ul>
<li> Blockingモード（<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>）<br>引数<i>size</i>で指定したサイズのデータを読み込むまで待ち状態になります。
<li> Blocking/Non-Blockingモード（<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_B_NB">SCE_USBSER_OP_MODE_B_NB</a>）<br>内部バッファにデータがない場合のみ、データを受信するまで待ち状態になります。データを受信して内部バッファに格納されると、内部バッファにあるデータのみを読み込み、終了します。
<li> Non-Blockingモード（<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_NONBLOCKING">SCE_USBSER_OP_MODE_NONBLOCKING</a>）<br>内部バッファにあるデータのみを読み込み、終了します。内部バッファにデータがない場合には、データは読み込まれず0が返ります。<br>待ち状態になることはないため、引数<i>timeout</i>は無視されます。
</ul></div>
<div style="margin-left:50px;"><br>BlockingモードとBlocking/Non-Blockingモードの場合には、引数<i>timeout</i>にμs単位の時間を指定することで、指定した時間の間USBホストからデータを受信しなかった場合にタイムアウトさせることができます。<i>timeout</i>はsceUsbSerRead()を実行してからの時間ではない点に注意してください。タイムアウトさせたくない場合には<i>timeout</i>に負の値を指定してください。<br><br>DTRをチェックするモードでポートを開いている場合には、DTRがOFFの場合に<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_ERROR_DTR_OFF">SCE_USBSER_ERROR_DTR_OFF</a>のエラーが返ります。<br>DTRを無視するモードでポートを開いている場合には、DTRがOFFの場合でもエラーにはなりませんが、DTRがONになるまでUSBホストからデータを受信することがないため、DTRがOFFの間はBlockingモードとBlocking/Non-Blockingモードはブロックし続け、Non-Blockingモードは0が返ります。<br><br>sceUsbSerReadCB()は待ち状態に入っている間にコールバック通知の有無を確認する機能を追加した関数です。待ち状態の間に自スレッドのコールバックに対して通知が行われると、一旦待ち状態から抜けてコールバック関数を実行した後、再び待ち状態に入ります。<br>待ち状態になることがないNon-BlockingモードはsceUsbSerReadCB()では使用できません。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUF_SIZE  (8 * 1024)
char buf[BUF_SIZE];
int ret;

// Blockingモード、コールバック通知の確認あり、タイムアウトなしでデータを読み込む
ret = sceUsbSerReadCB(buf, BUF_SIZE, <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>, -1);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>, <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_B_NB">SCE_USBSER_OP_MODE_B_NB</a>, <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_NONBLOCKING">SCE_USBSER_OP_MODE_NONBLOCKING</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerWrite"></a><a name="sceUsbSerWriteCB"></a>
<a name="sceUsbSerWrite / sceUsbSerWriteCB"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerWrite / sceUsbSerWriteCB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>データの書き込み<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerWrite</b>(
	void *<i>buf</i>,
	SceSize <i>size</i>,
	int <i>mode</i>,
	int <i>timeout</i>
);
int <b>sceUsbSerWriteCB</b>(
	void *<i>buf</i>,
	SceSize <i>size</i>,
	int <i>mode</i>,
	int <i>timeout</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>

<!-- sce_title -->
<a Name ="HeadingT_4_3">
<div style="margin-left:40px;"><h4><b>Blockingモード（SCE_USBSER_OP_MODE_BLOCKING）</b><br><b>Blocking/Non-Blockingモード（SCE_USBSER_OP_MODE_B_NB）</b><br><br></h4></div></a>

<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br></div>

<!-- sce_title -->
<a Name ="HeadingT_4_4">
<div style="margin-left:40px;"><h4><b>Non-Blockingモード（SCE_USBSER_OP_MODE_NONBLOCKING）</b><br><br></h4></div></a>

<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>buf</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;書き込むデータを格納したバッファ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>size</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;書き込むサイズ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#ライトモード">ライトモード</a>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>timeout</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;無通信タイムアウト時間(μs)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">sceUsbSerWrite()の引数<i>mode</i>には以下のいずれかの値を指定してください。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blockingモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_B_NB">SCE_USBSER_OP_MODE_B_NB</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking/Non-Blockingモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_NONBLOCKING">SCE_USBSER_OP_MODE_NONBLOCKING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Non-Blockingモード&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">sceUsbSerWriteCB()の引数<i>mode</i>には以下のいずれかの値を指定してください。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blockingモード&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_B_NB">SCE_USBSER_OP_MODE_B_NB</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Blocking/Non-Blockingモード&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は読み込んだサイズ（非負値）を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244403&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;書き込み中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_CLOSED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244405&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ポートが閉じている&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_DTR_OFF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244406&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRがOFF&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_TIMEOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244407&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;タイムアウトした&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_CANCELED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244408&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キャンセルされた&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceUsbSerWrite()はUSBホストへ送信するデータを書き込む関数です。<br>複数の書き込みを同時に実行することはできません。<br><br>sceUsbSerWrite()を実行すると、データは一旦引数<i>buf</i>で指定したバッファからUSBシリアルドライバの書き込み用内部バッファに格納され、順次USBホストへ送信されます。sceUsbSerWrite()が終了しても、まだUSBホストへ送信されず、内部バッファにデータが残っている可能性がある点に注意してください。全てのデータがUSBホストへ送信されたことを保証したい場合には、<a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerFlush">sceUsbSerFlush</a>()を実行してください。<br><br>引数<i>mode</i>で以下の3つのモードを指定することができます。<br></div>
<div style="margin-left:35px;"><ul>
<li> Blockingモード（<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>）<br>引数<i>size</i>で指定したサイズのデータを書き込むまで待ち状態になります。
<li> Blocking/Non-Blockingモード（<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_B_NB">SCE_USBSER_OP_MODE_B_NB</a>）<br>内部バッファに空きがない場合のみ、空きができるまで待ち状態になります。データを送信して内部バッファに空きができると、内部バッファの空きサイズ分だけデータを書き込み、終了します。
<li> Non-Blockingモード（<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_NONBLOCKING">SCE_USBSER_OP_MODE_NONBLOCKING</a>）<br>内部バッファの空きサイズ分だけデータを書き込み、終了します。内部バッファに空きがない場合には、データは書き込まれず0が返ります。<br>待ち状態になることはないため、引数<i>timeout</i>は無視されます。
</ul></div>
<div style="margin-left:50px;"><br>BlockingモードとBlocking/Non-Blockingモードの場合には、引数<i>timeout</i>にμs単位の時間を指定することで、指定した時間の間USBホストへデータを送信できなかった場合にタイムアウトさせることができます。<i>timeout</i>はsceUsbSerWrite()を実行してからの時間ではない点に注意してください。タイムアウトさせたくない場合には<i>timeout</i>に負の値を指定してください。<br><br>DTRをチェックするモードでポートを開いている場合には、DTRがOFFの場合に<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_ERROR_DTR_OFF">SCE_USBSER_ERROR_DTR_OFF</a>のエラーが返ります。<br>DTRを無視するモードでポートを開いている場合には、DTRがOFFの場合でもエラーにはならず、全てのデータを書き込んだことになり、引数<i>size</i>に指定した値が返ります。しかし、DTRがOFFの間はUSBホストへデータを送信することができないため、書き込んだデータは送信されることなく破棄されます。<br><br>sceUsbSerWriteCB()は待ち状態に入っている間にコールバック通知の有無を確認する機能を追加した関数です。待ち状態の間に自スレッドのコールバックに対して通知が行われると、一旦待ち状態から抜けてコールバック関数を実行した後、再び待ち状態に入ります。<br>待ち状態になることがないNon-BlockingモードはsceUsbSerWriteCB()では使用できません。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUF_SIZE  (8 * 1024)
char buf[BUF_SIZE];
int ret;

memset(buf, 0xFF, BUF_SIZE);

// Non-Blockingモードでデータを書き込む
ret = sceUsbSerWrite(buf, BUF_SIZE, <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_NONBLOCKING">SCE_USBSER_OP_MODE_NONBLOCKING</a>, 0);
if (ret &lt; 0) {
	// エラー処理
} else {
	printf(&quot;Wrote 0x%08x bytes\n&quot;, ret);
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>, <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_B_NB">SCE_USBSER_OP_MODE_B_NB</a>, <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_NONBLOCKING">SCE_USBSER_OP_MODE_NONBLOCKING</a><br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerFlush">sceUsbSerFlush</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerFlush"></a><a name="sceUsbSerFlushCB"></a>
<a name="sceUsbSerFlush / sceUsbSerFlushCB"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerFlush / sceUsbSerFlushCB<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>書き込んだデータのフラッシュ<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerFlush</b>(
	int <i>timeout</i>
);
int <b>sceUsbSerFlushCB</b>(
	int <i>timeout</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し不可<br>スレッドから呼び出し可能（割り込み許可状態で呼ぶこと）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>timeout</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;タイムアウト時間(μs)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244403&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フラッシュ中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_CLOSED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244405&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ポートが閉じている&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_DTR_OFF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244406&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRがOFF&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_TIMEOUT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244407&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;タイムアウトした&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_CANCELED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244408&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キャンセルされた&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">sceUsbSerFlush()は<a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>()で書き込んだデータが、USBホストへ送信されたことを保証するための関数です。<br>複数のフラッシュ操作を同時に実行することはできません。<br><br>sceUsbSerFlush()を実行すると、USBシリアルドライバの書き込み用内部バッファのデータが全てUSBホストへ送信されるまで待ち状態になります。<br>待ち状態にせずに送信されたことを保証したい場合には、<a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerGetWriteDataSize">sceUsbSerGetWriteDataSize</a>()で書き込み用内部バッファのデータサイズが0になるまでポーリングする方法や、<a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRegisterSentCallback">sceUsbSerRegisterSentCallback</a>()で空き容量が最大になった場合に通知されるようにコールバックを設定する方法があります。<br><br>引数<i>timeout</i>にμs単位の時間を指定することで、指定した時間内にフラッシュできなかった場合にタイムアウトさせることができます。タイムアウトさせたくない場合には<i>timeout</i>に負の値を指定してください。<br><br>DTRをチェックするモードでポートを開いている場合には、DTRがOFFの場合に<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_ERROR_DTR_OFF">SCE_USBSER_ERROR_DTR_OFF</a>のエラーが返ります。<br>DTRを無視するモードでポートを開いている場合には、DTRがOFFの場合でもエラーにはならず、DTRがOFFの間は<a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>()で書き込んだデータは破棄されるため、すぐに正常終了します。<br><br>sceUsbSerFlushCB()は待ち状態に入っている間にコールバック通知の有無を確認する機能を追加した関数です。待ち状態の間に自スレッドのコールバックに対して通知が行われると、一旦待ち状態から抜けてコールバック関数を実行した後、再び待ち状態に入ります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define BUF_SIZE  (8 * 1024)
char buf[BUF_SIZE];
int ret;

memset(buf, 0xFF, BUF_SIZE);

// Blockingモード、コールバック通知の確認あり、タイムアウトなしでデータを書き込む
ret = <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWriteCB">sceUsbSerWriteCB</a>(buf, BUF_SIZE, <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_OP_MODE_BLOCKING">SCE_USBSER_OP_MODE_BLOCKING</a>, -1);
if (ret &lt; 0) {
	// エラー処理
}

// コールバック通知の確認あり、タイムアウトなしでデータが全て送信されるまで待つ
ret = sceUsbSerFlushCB(-1);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerGetWriteDataSize">sceUsbSerGetWriteDataSize</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRegisterSentCallback">sceUsbSerRegisterSentCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerCancel"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerCancel<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>実行中の処理のキャンセル<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerCancel</b>(
	SceUInt <i>mode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#キャンセルモード">キャンセルモード</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">引数<i>mode</i>には以下の値の論理和を指定してください。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CANCEL_MODE_READ">SCE_USBSER_CANCEL_MODE_READ</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x01&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込み処理のキャンセル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CANCEL_MODE_WRITE">SCE_USBSER_CANCEL_MODE_WRITE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x02&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;書き込み処理のキャンセル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CANCEL_MODE_FLUSH">SCE_USBSER_CANCEL_MODE_FLUSH</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x04&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;フラッシュ処理のキャンセル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_CLOSED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244405&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ポートが閉じている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">実行中の読み込み、書き込み、フラッシュ処理をキャンセルする関数です。<br><br>引数<i>mode</i>でキャンセルする処理を指定します。論理和で指定することで、複数の処理を同時にキャンセルすることができます。<br>キャンセルされた処理は<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_ERROR_CANCELED">SCE_USBSER_ERROR_CANCELED</a>のエラーを返して終了します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;

// 読み込み、書き込み、フラッシュ処理をキャンセル
ret = sceUsbSerCancel(<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CANCEL_MODE_READ">SCE_USBSER_CANCEL_MODE_READ</a> |
			<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CANCEL_MODE_WRITE">SCE_USBSER_CANCEL_MODE_WRITE</a> |
			<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CANCEL_MODE_FLUSH">SCE_USBSER_CANCEL_MODE_FLUSH</a>);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CANCEL_MODE_READ">SCE_USBSER_CANCEL_MODE_READ</a><br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CANCEL_MODE_WRITE">SCE_USBSER_CANCEL_MODE_WRITE</a><br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CANCEL_MODE_FLUSH">SCE_USBSER_CANCEL_MODE_FLUSH</a><br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRead">sceUsbSerRead</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerFlush">sceUsbSerFlush</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerClear"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerClear<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>内部バッファのクリア<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerClear</b>(
	SceUInt <i>mode</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>mode</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#クリアモード">クリアモード</a>&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<div style="margin-left:50px;">引数<i>mode</i>には以下の値の論理和を指定してください。<br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CLEAR_MODE_READ">SCE_USBSER_CLEAR_MODE_READ</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x01&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;読み込み用内部バッファのクリア&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CLEAR_MODE_WRITE">SCE_USBSER_CLEAR_MODE_WRITE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x02&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;書き込み用内部バッファのクリア&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_CLOSED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244405&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ポートが閉じている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBシリアルドライバの内部バッファをクリアする関数です。<br><br>引数<i>mode</i>でクリアするバッファを指定します。論理和を指定することで、読み込み用と書き込み用の両方の内部バッファをクリアすることができます。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>int ret;

// 読み込み用と書き込み用の両方の内部バッファをクリア
ret = sceUsbSerClear(<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CLEAR_MODE_READ">SCE_USBSER_CLEAR_MODE_READ</a> |
			<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CLEAR_MODE_WRITE">SCE_USBSER_CLEAR_MODE_WRITE</a>);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CLEAR_MODE_READ">SCE_USBSER_CLEAR_MODE_READ</a>, <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_CLEAR_MODE_WRITE">SCE_USBSER_CLEAR_MODE_WRITE</a><br><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRead">sceUsbSerRead</a>(), <a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerGetReadDataSize"></a><a name="sceUsbSerGetReadFreeSize"></a>
<a name="sceUsbSerGetReadDataSize / sceUsbSerGetReadFreeSize"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerGetReadDataSize / sceUsbSerGetReadFreeSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>読み込み用内部バッファ内のデータサイズ / 空きサイズを取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
SceSize <b>sceUsbSerGetReadDataSize</b>(
	void
);
SceSize <b>sceUsbSerGetReadFreeSize</b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">データサイズもしくは空きサイズを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBシリアルドライバの読み込み用内部バッファ内のデータサイズ / 空きサイズを取得する関数です。sceUsbSerGetReadDataSize()でデータサイズ、sceUsbSerGetReadFreeSize()で空きサイズが取得できます。<br><br>USBシリアルドライバを始動していない場合には、データサイズ、空きサイズ共に0が返ります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>printf(&quot;Read buffer : Data = 0x%08x, Free = 0x%08x\n&quot;,
	sceUsbSerGetReadDataSize(), sceUsbSerGetReadFreeSize());

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRead">sceUsbSerRead</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerGetWriteDataSize"></a><a name="sceUsbSerGetWriteFreeSize"></a>
<a name="sceUsbSerGetWriteDataSize / sceUsbSerGetWriteFreeSize"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerGetWriteDataSize / sceUsbSerGetWriteFreeSize<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>書き込み用内部バッファ内のデータサイズ / 空きサイズを取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
SceSize <b>sceUsbSerGetWriteDataSize</b>(
	void
);
SceSize <b>sceUsbSerGetWriteFreeSize</b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">データサイズもしくは空きサイズを返します。<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBシリアルドライバの書き込み用内部バッファ内のデータサイズ / 空きサイズを取得する関数です。sceUsbSerGetWriteDataSize()でデータサイズ、sceUsbSerGetWriteFreeSize()で空きサイズが取得できます。<br><br>USBシリアルドライバを始動していない場合には、データサイズ、空きサイズ共に0が返ります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>printf(&quot;Write buffer : Data = 0x%08x, Free = 0x%08x\n&quot;,
	sceUsbSerGetWriteDataSize(), sceUsbSerGetWriteFreeSize());

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerWrite">sceUsbSerWrite</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerGetDTR"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerGetDTR<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>DTRの状態を取得<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerGetDTR</b>(
	void
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">DTRの状態を表す以下の値を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_DTR_OFF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRがOFF&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_DTR_ON&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRがON&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">ホスト側の通信準備ができたことを表すDTR(Data Terminal Ready)の状態を取得する関数です。DTRがOFFの場合にはUSBホストと通信することはできません。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>printf(&quot;DTR %s\n&quot;, sceUsbSerGetDTR() ? &quot;ON&quot; : &quot;OFF&quot;);
</font></pre></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerRegisterDTRCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerRegisterDTRCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>DTRの変化を通知するコールバックの登録<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerRegisterDTRCallback</b>(
	SceUID <i>cbId</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cbId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244403&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既に登録されている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">DTRの変化を通知するコールバックを登録する関数です。同時に登録できるコールバックの数は1つです。<br><br>USBホストがDTRのON/OFFを切り替えた時にコールバックを通知します。コールバック関数の引数<i>arg</i>には、DTRの状態を表す以下の値が渡されます。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_DTR_OFF">SCE_USBSER_DTR_OFF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRがOFF&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_DTR_ON">SCE_USBSER_DTR_ON</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRがON&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>// コールバック関数
static int DtrCallback(int count, int arg, void *common)
{
	printf(&quot;DTR %s\n&quot;, (arg == <a href="../debug_support/USB_Serial-Reference-Japanese.htm#SCE_USBSER_DTR_ON">SCE_USBSER_DTR_ON</a>) ? &quot;ON&quot; : &quot;OFF&quot;);
	return 0;
}


SceUID cbId;
int ret;

// コールバックを生成
ret = <a href="../kernel/Thread_Manager-Reference-Japanese.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>(&quot;DTRCallback&quot;, DtrCallback, NULL);
if (ret &lt; 0) {
	// エラー処理
}
cbId = ret;

// コールバックを登録
ret = sceUsbSerRegisterDTRCallback(cbId);
if (ret &lt; 0) {
	// エラー処理
}

while (1) {
	// CBつきAPIでコールバック通知の有無をチェック
	<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankCB">sceDisplayWaitVblankCB</a>();
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerUnregisterDTRCallback">sceUsbSerUnregisterDTRCallback</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerUnregisterDTRCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerUnregisterDTRCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>DTRの変化を通知するコールバックの登録解除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerUnregisterDTRCallback</b>(
	SceUID <i>cbId</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cbId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_ALREADY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244404&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既に登録が解除されている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">DTRの変化を通知するコールバックの登録を解除する関数です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceUID cbId;  // 登録済みのコールバックID
int ret;

// コールバックの登録を解除
ret = sceUsbSerUnregisterDTRCallback(cbId);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRegisterDTRCallback">sceUsbSerRegisterDTRCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerRegisterRecvCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerRegisterRecvCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>データ受信コールバックの登録<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerRegisterRecvCallback</b>(
	SceUID <i>cbId</i>,
	SceSize <i>threshold</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cbId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>threshold</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックを通知する閾値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244403&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既に登録されている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBホストからデータを受信したことを通知するコールバックを登録する関数です。同時に登録できるコールバックの数は1つです。<br></div>
<br>
<div style="margin-left:50px;">引数<i>threshold</i>で指定したサイズ以上のデータが読み込み用内部バッファへ格納された時にコールバックを通知します。コールバック関数の引数<i>arg</i>には、内部バッファ内のデータサイズが渡されます。<br>一度コールバックを通知すると、一旦内部バッファ内のデータサイズが<i>threshold</i>より小さくなるまでは、<i>threshold</i>を超えていてもコールバックを通知しません。<br><br><i>threshold</i>には、0もしくは内部バッファのサイズより大きな値を指定することはできません。sceUsbStart()でUSBシリアルドライバを始動する際に、読み込み用内部バッファを指定していない場合は、内部バッファのサイズは4KiBとなります。<br></div>
<br>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define RECV_THRESHOLD  4  // 4バイト以上受信した時にコールバック通知する

// コールバック関数
static int ReceivedCallback(int count, int arg, void *common)
{
	printf(&quot;Data size : %d bytes\n&quot;, arg);
	return 0;
}


SceUID cbId;
int ret;

// コールバックを生成
ret = <a href="../kernel/Thread_Manager-Reference-Japanese.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>(&quot;ReceivedCallback&quot;, ReceivedCallback, NULL);
if (ret &lt; 0) {
	// エラー処理
}
cbId = ret;

// コールバックを登録
ret = sceUsbSerRegisterRecvCallback(cbId, RECV_THRESHOLD);
if (ret &lt; 0) {
	// エラー処理
}

while (1) {
	// CBつきAPIでコールバック通知の有無をチェック
	<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankCB">sceDisplayWaitVblankCB</a>();
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerUnregisterRecvCallback">sceUsbSerUnregisterRecvCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerUnregisterRecvCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerUnregisterRecvCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>データ受信コールバックの登録解除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerUnregisterRecvCallback</b>(
	SceUID <i>cbId</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cbId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_ALREADY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244404&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既に登録が解除されている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBホストからデータを受信したことを通知するコールバックの登録を解除する関数です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceUID cbId;  // 登録済みのコールバックID
int ret;

// コールバックの登録を解除
ret = sceUsbSerUnregisterRecvCallback(cbId);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRegisterRecvCallback">sceUsbSerRegisterRecvCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerSetRecvCBThreshold"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerSetRecvCBThreshold<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>データ受信コールバックの閾値設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerSetRecvCBThreshold</b>(
	SceSize <i>threshold</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>threshold</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックを通知する閾値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">データ受信コールバックを通知する閾値を設定する関数です。<br>先に<a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRegisterRecvCallback">sceUsbSerRegisterRecvCallback</a>()でデータ受信コールバックを登録しておく必要があります。<br><br><i>threshold</i>には、0もしくは内部バッファのサイズより大きな値を指定することはできません。sceUsbStart()でUSBシリアルドライバを始動する際に、読み込み用内部バッファを指定していない場合は、内部バッファのサイズは4KiBとなります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>// 1バイト以上受信した時にコールバック通知されるようにコールバックの閾値を変更
ret = sceUsbSerSetRecvCBThreshold(1);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRegisterRecvCallback">sceUsbSerRegisterRecvCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerRegisterSentCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerRegisterSentCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>データ送信コールバックの登録<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerRegisterSentCallback</b>(
	SceUID <i>cbId</i>,
	SceSize <i>threshold</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cbId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>threshold</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックを通知する閾値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_BUSY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244403&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既に登録されている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBホストへデータを送信したことを通知するコールバックを登録する関数です。同時に登録できるコールバックの数は1つです。<br></div>
<br>
<div style="margin-left:50px;">引数<i>threshold</i>で指定したサイズ以上の空きが書き込み用内部バッファにできた時にコールバックを通知します。コールバック関数の引数<i>arg</i>には、内部バッファ内の空きサイズが渡されます。<br>一度コールバックを通知すると、一旦内部バッファ内の空きサイズが<i>threshold</i>より小さくなるまでは、<i>threshold</i>を超えていてもコールバックを通知しません。<br><br><i>threshold</i>には、0もしくは内部バッファのサイズより大きな値を指定することはできません。sceUsbStart()でUSBシリアルドライバを始動する際に、書き込み用内部バッファを指定していない場合は、内部バッファのサイズは4KiBとなります。<br></div>
<br>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>#define SENT_THRESHOLD  4  // 4バイト以上空きができた時にコールバック通知する

// コールバック関数
static int SentCallback(int count, int arg, void *common)
{
	printf(&quot;Free space size : %d bytes\n&quot;, arg);
	return 0;
}


SceUID cbId;
int ret;

// コールバックを生成
ret = <a href="../kernel/Thread_Manager-Reference-Japanese.htm#sceKernelCreateCallback">sceKernelCreateCallback</a>(&quot;SentCallback&quot;, SentCallback, NULL);
if (ret &lt; 0) {
	// エラー処理
}
cbId = ret;

// コールバックを登録
ret = sceUsbSerRegisterSentCallback(cbId, SENT_THRESHOLD);
if (ret &lt; 0) {
	// エラー処理
}

while (1) {
	// CBつきAPIでコールバック通知の有無をチェック
	<a href="../peripheral/Display-Reference-Japanese.htm#sceDisplayWaitVblankCB">sceDisplayWaitVblankCB</a>();
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerUnregisterSentCallback">sceUsbSerUnregisterSentCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerUnregisterSentCallback"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerUnregisterSentCallback<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>データ送信コールバックの登録解除<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerUnregisterSentCallback</b>(
	SceUID <i>cbId</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>cbId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックID&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_ALREADY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244404&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既に登録が解除されている&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">USBホストへデータを送信したことを通知するコールバックの登録を解除する関数です。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>SceUID cbId;  // 登録済みのコールバックID
int ret;

// コールバックの登録を解除
ret = sceUsbSerUnregisterSentCallback(cbId);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRegisterSentCallback">sceUsbSerRegisterSentCallback</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceUsbSerSetSentCBThreshold"></a>
<table width="100%"><td width="70%"><font size=6>sceUsbSerSetSentCBThreshold<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[関数]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>データ送信コールバックの閾値設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;usbser.h&gt;
int <b>sceUsbSerSetSentCBThreshold</b>(
	SceSize <i>threshold</i>
);

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>threshold</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;コールバックを通知する閾値&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合は0を返します。<br>エラーの場合は以下のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_NOT_INITIALIZED&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_USBSER_ERROR_INVAL&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">データ送信コールバックを通知する閾値を設定する関数です。<br>先に<a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRegisterSentCallback">sceUsbSerRegisterSentCallback</a>()でデータ送信コールバックを登録しておく必要があります。<br><br><i>threshold</i>には、0もしくは内部バッファのサイズより大きな値を指定することはできません。sceUsbStart()でUSBシリアルドライバを始動する際に、書き込み用内部バッファを指定していない場合は、内部バッファのサイズは4KiBとなります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>// 1バイト以上空きができた時にコールバック通知されるようにコールバックの閾値を変更
ret = sceUsbSerSetSentCBThreshold(1);
if (ret &lt; 0) {
	// エラー処理
}

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../debug_support/USB_Serial-Reference-Japanese.htm#sceUsbSerRegisterSentCallback">sceUsbSerRegisterSentCallback</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="エラーコード一覧"></a>
<table width="100%"><td width="70%"><font size=6>エラーコード一覧<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[エラーコード]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>USBシリアルドライバが返すエラーコード<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_ERROR_NOT_INITIALIZED">SCE_USBSER_ERROR_NOT_INITIALIZED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244401&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;USBシリアルドライバが&nbsp;&nbsp;<br>&nbsp;&nbsp;初期化されていない&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_ERROR_INVAL">SCE_USBSER_ERROR_INVAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244402&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;引数が不正&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_ERROR_BUSY">SCE_USBSER_ERROR_BUSY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244403&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;使用中&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_ERROR_ALREADY">SCE_USBSER_ERROR_ALREADY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244404&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;既に処理されている&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_ERROR_CLOSED">SCE_USBSER_ERROR_CLOSED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244405&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ポートが閉じている&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_ERROR_DTR_OFF">SCE_USBSER_ERROR_DTR_OFF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244406&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;DTRがOFF&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_ERROR_TIMEOUT">SCE_USBSER_ERROR_TIMEOUT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244407&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;タイムアウトした&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_USBSER_ERROR_CANCELED">SCE_USBSER_ERROR_CANCELED</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80244408&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;キャンセルされた&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
