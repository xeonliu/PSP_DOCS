<html lang="jp">
<head>
<title>libface-Overview</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libface 概要
</h1></center>
</a>
<!-- sce_hd1 -->

<!-- sce_hd3 -->
<a name="Heading3_1">
<h2>
 1 <!-- hp --><b>ライブラリ概要</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_1_1">
<h3>
<a href="#Heading3_1"> 1. </a>1 
<!-- hp1 --><b>機能の概要と特徴</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfaceは、グレースケール画像を解析してそこに写っている人間の顔を認識するライブラリです。libfaceでは以下のような機能が提供されます。<br></div>
</ol>
<div style="margin-left:40px;"><ul>
<li> グレースケール画像中からの顔（複数可）の検出
<li> 検出された顔について目、鼻、口の検出
<li> 検出された顔について笑顔度合いの判別
</ul></div>
<div style="margin-left:50px;">libfaceでは、以下の用語を共通して使用します。<br></div>
<div style="margin-left:40px;"><ul>
<li> 顔認識：<br>顔に関する画像認識全般を表します。libfaceでは顔検出、パーツ検出、顔属性判別を統合して顔認識と呼びます。
<li> 顔検出：<br>画像中から顔領域を検出することを表します。
<li> パーツ検出：<br>検出された顔領域から目・鼻・口を検出することを表します。
<li> 顔属性判別：<br>検出された顔領域から笑顔度合いを判別することを表します。
</ul></div>

<!-- sce_hd4 -->
<a name="Heading4_1_2">
<h3>
<a href="#Heading3_1"> 1. </a>2 
<!-- hp1 --><b>関連ファイル</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfaceを使用するために必要なファイルは次のとおりです。<br></div>
<br>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;libface.h&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;ヘッダファイル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;libface_stub.a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;スタブライブラリファイル&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;libface_stub_weak.a&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;weakインポートスタブライブラリファイル&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">libfaceで使用する顔認識辞書データファイルは次のとおりです。<br>これらはdevkit/data/or_dict/face/にあります。<br></div>
<br>
<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>ファイル名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;face_detect_frontal.fdt&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データファイル（正面顔専用）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;face_detect_frontal_fast.fdt&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データファイル（正面顔専用高速版）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;face_detect_roll.fdt&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データファイル（傾き対応）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;face_detect_roll_yaw.fdt&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データファイル（傾き横向き対応）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;face_detect_roll_yaw_pitch.fdt&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データファイル（傾き横向き上下向き対応）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;face_parts_frontal_roll.pdt&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出用辞書データファイル（正面顔・傾き対応）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;face_parts_roll_yaw.pdt&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出用辞書データファイル（傾き横向き対応）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;face_attrib_smile.adt&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;属性判別用辞書データファイル（笑顔度合い）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_1_3">
<h3>
<a href="#Heading3_1"> 1. </a>3 
<!-- hp1 --><b>サンプルプログラム</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfaceのサンプルプログラムとして、以下のものがありますので参照してください。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_3_1">
<div style="margin-left:40px;"><h4><b>devkit/sample/face/face_tracking</b><br><br></h4></div></a>

<div style="margin-left:67px;">libfaceを用いたアプリケーションのサンプルです。カメラ入力画像に対してリアルタイムで顔検出を行いその結果を応用した画面表示を行います。前フレームの顔検出結果を用いて高速に顔を検出します。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_3_2">
<div style="margin-left:40px;"><h4><b>devkit/sample/face/simple_face</b><br><br></h4></div></a>

<div style="margin-left:67px;">libfaceの顔検出・パーツ検出・属性判別の機能説明のためのサンプルです。カメラ入力画像に対して一連の顔認識処理を行い、顔認識結果を画面に表示します。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_3_3">
<div style="margin-left:40px;"><h4><b>devkit/sample/face/simple_face_my_malloc</b><br><br></h4></div></a>

<div style="margin-left:67px;">libfaceのメモリ管理APIの使いかたのサンプルです。libfaceライブラリ内部からユーザ定義のメモリ管理関数を呼び出してsimple_faceサンプルと同じ処理を行います。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_1_3_4">
<div style="margin-left:40px;"><h4><b>サンプルの注意点</b><br><br></h4></div></a>

<div style="margin-left:67px;">各サンプルは自分撮り状態のPSP&reg;専用USBカメラの入力画像（モーションJPEG）に対して顔認識を行うサンプルですので、PSP&reg;操作者自身を撮影する方向にカメラの向きをセットして動作させてください。<br><br>カメラ入力画像を顔認識のみに使う想定で極力高速化を図るために、カメラ解像度は最低解像度のQQVGA（160x120）に設定しています。画像サイズが小さいほど顔認識を含むプログラム全体でデータキャッシュミスが発生しにくく高速に動作します。<br>もし高解像度に設定すると、画像サイズが大きくなりメモリ消費量と処理時間が増加します。<br><br>顔認識に必要な画像フォーマットは輝度画像であるため、<a href="../still/JPEGDEC-Reference-Japanese.htm#sceJpegDecodeMJpegYCbCr">sceJpegDecodeMJpegYCbCr</a>()を用いてカメラから入力されるJPEG形式のデータをYCbCr形式の画像データに変換し、その先頭部分にあるY画像部分を直接libfaceで用いることで処理の高速化を図っています。各サンプル中の<a href="../still/JPEGDEC-Reference-Japanese.htm#sceJpegMJpegCsc">sceJpegMJpegCsc</a>()は画面表示用のRGBA画像を得るために呼び出しているだけで顔認識には使用していません。<br>もし<a href="../still/JPEGDEC-Reference-Japanese.htm#sceJpegDecodeMJpeg">sceJpegDecodeMJpeg</a>()を用いてJPEG形式のデータから直接RGBA形式の画像データにデコードした場合には、顔認識処理用の輝度画像を得るためにRGBA&rarr;Yの変換処理が必要となります。<br><br>自分撮り画像の特徴として、画像の中心付近に顔がひとつ大きめに撮影されている状態を想定しています。各サンプルの顔認識実行関数のパラメータはその画像条件で高速に動作する設定になっていますので、画像中の大きな顔しか検出しません。もし小さな顔まで検出する設定にした場合には顔検出時間が長くなります。<br><br></div>

<!-- sce_hd3 -->
<a name="Heading3_2">
<h2>
 2 <!-- hp --><b>使用手順の概略</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_2_1">
<h3>
<a href="#Heading3_2"> 2. </a>1 
<!-- hp1 --><b>初期化処理</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfaceを使用する際には、初期化処理として必ず<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()を呼び出して、メモリ管理関数を設定してください。<br>また、顔認識処理の実行には顔認識辞書データが必要ですので、初期化処理としてあらかじめ必要な顔認識辞書データファイルの読み込みを行っておくことを推奨します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_2">
<h3>
<a href="#Heading3_2"> 2. </a>2 
<!-- hp1 --><b>終了処理</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfaceには終了処理関数はありません。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_3">
<h3>
<a href="#Heading3_2"> 2. </a>3 
<!-- hp1 --><b>メモリ管理の処理手順</b><br>
</a>
</h3>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()を用いてlibfaceライブラリ内部で使用する動的メモリ確保・解放関数を自由に設定することができます。顔認識処理実行前に必ず一度呼び出してください。<br></div>

<div align=center>
<p>
<img src="gif/libface-Overview-Japanese001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 1  メモリ管理の処理手順例</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_3_1"><h4>
(1)&nbsp;<b>メモリ管理関数を設定する</b><br></h4>
</a></div>
<div style="margin-left:67px;">アプリケーション内で顔認識処理を実行する前に必ず<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()を一度呼び出してください。<br>標準ライブラリのmalloc(), free()を用いる場合でも、引数にmalloc, freeを設定して呼び出す必要があります。ユーザ定義のmalloc, free関数を設定することもできます。<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()は関数ポインタを設定しているだけですので、同じ引数で何度も呼び出しても問題はありませんが意味はありません。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_3_2"><h4>
(2)&nbsp;<b>顔認識処理を実行する</b><br></h4>
</a></div>
<div style="margin-left:67px;">顔認識処理を実行してください。<br>顔検出、パーツ検出、属性判別などの実行関数を呼び出すと、(1)で設定されたメモリ確保関数を呼び出して必要なメモリを確保してから認識処理を行い、認識処理を終了すると(1)で設定されたメモリ解放関数を呼び出して確保したメモリを解放してから関数から抜けます。<br>(1)のメモリ管理関数の設定を行わないまま、顔検出、パーツ検出、属性判別などの顔認識処理実行関数を呼び出すと返り値に<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>が返り、顔認識処理は実行されません。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_4">
<h3>
<a href="#Heading3_2"> 2. </a>4 
<!-- hp1 --><b>顔検出の処理手順</b><br>
</a>
</h3>
<div style="margin-left:50px;">顔検出処理には、入力データとしてグレースケール画像が必要です。<br>顔検出処理を実行する際にはアプリケーションの用途に適した顔検出用辞書を選んでそのポインタを引数に渡してください。顔検出用辞書はあらかじめ顔検出用辞書データファイルからメモリ上に読み込んでおく必要があります。<br></div>

<div align=center>
<p>
<img src="gif/libface-Overview-Japanese002.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 2  顔検出の処理手順例</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_4_1"><h4>
(1)&nbsp;<b>入力画像を用意する</b><br></h4>
</a></div>
<div style="margin-left:67px;">顔検出を行う際の入力画像は、8bitグレースケール画像です。<br><br></div>

<div align=center>
<p>
<img src="gif/libface-Overview-Japanese003.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 3  入力画像の幅とデータ幅</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_4_2"><h4>
(2)&nbsp;<b>顔検出結果の出力領域を用意する</b><br></h4>
</a></div>
<div style="margin-left:67px;">顔検出結果の出力先として、<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>構造体の配列を用意してください。この配列の要素数は検出したい顔の個数に合わせて任意に設定できます。たとえば、ひとつの画像から最大10人の顔を検出すれば十分という場合は、10個の要素を持つ<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>構造体の配列を用意してください。<br></div>

<!-- sce_hd6 -->
<a name="Heading6_2_4_2_1">
<div style="margin-left:63px;"><h4><b>注意</b><br><br></h4></a></div>
<div style="margin-left:80px;">検出する顔の個数を少なく制限するとメモリの節約にはなりますが顔検出に要する時間は変わりません。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_4_3"><h4>
(3)&nbsp;<b>顔検出を実行する</b><br></h4>
</a></div>
<div style="margin-left:67px;">顔検出用辞書データのアドレス、入力画像の情報、顔検出結果の出力領域のアドレス、顔検出結果出力用配列の要素数、その他の顔検出用パラメータを引数で設定して、<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()を実行してください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_4_4"><h4>
(4)&nbsp;<b>顔検出結果を受け取る</b><br></h4>
</a></div>
<div style="margin-left:67px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()が正常終了すると検出された顔の個数が<i>numResultFace</i>に返ります。また、(2)で用意して引数<i>resultFaceArray</i>にアドレスを設定した<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>構造体の配列の各要素に、個々の顔検出結果が格納されます。<br>顔検出の結果として、顔領域の位置（<i>faceX</i>, <i>faceY</i>）と大きさ（<i>faceW</i>, <i>faceH</i>）、そして傾き（<i>faceRoll</i>, <i>facePitch</i>, <i>faceYaw</i>）を得ることができます。位置と大きさは入力画像の横幅および高さをそれぞれ1.0とした座標系で表現されています。<br><br></div>

<div align=center>
<p>
<img src="gif/libface-Overview-Japanese004.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 4  顔検出結果</b><br>
</div>
<br>
<div style="margin-left:67px;">以下のコードにより、顔検出結果の顔領域を入力画像上の座標に変換することができます。<br><br></div>
        <div style="margin-left:80px;"><pre><font size=3>void rotate(int* ox, int *oy, int ix, int iy, int cx, int cy, float radian)
{
    const float c = cosf(radian);
    const float s = sinf(radian);
    ix -= cx;
    iy -= cy;
    *ox = (int)(ix * c - iy * s + cx);
    *oy = (int)(ix * s + iy * c + cy);
}

<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> face;
const int x1 = (int)( face.faceX * image_width);
const int y1 = (int)( face.faceY * image_height);
const int x2 = (int)((face.faceX + face.faceW) * image_width);
const int y2 = (int)((face.faceY + face.faceH) * image_height);
const int cx = (int)((face.faceX + face.faceW / 2) * image_width);
const int cy = (int)((face.faceY + face.faceH / 2) * image_height);
int face_top_left_x, face_top_left_y;  // pixel position
int face_top_right_x, face_top_right_y;  // pixel position
int face_bottom_left_x, face_bottom_left_y;  // pixel position
int face_bottom_right_x, face_bottom_right_y;  // pixel position

rotate(&amp;face_top_left_x, &amp;face_top_left_y, x1, y1, cx, cy, -face.faceRoll);
rotate(&amp;face_top_right_x, &amp; face_top_right_x, x2, y1, cx, cy, -face.faceRoll);
rotate(&amp;face_bottom_left_x, &amp;face_bottom_left_y, x1, y2, cx, cy, -face.faceRoll);
rotate(&amp;face_bottom_right_x, &amp;face_bottom_right_y, x2, y2, cx, cy, -face.faceRoll);
</font></pre></div>

<!-- sce_hd4 -->
<a name="Heading4_2_5">
<h3>
<a href="#Heading3_2"> 2. </a>5 
<!-- hp1 --><b>パーツ検出の処理手順</b><br>
</a>
</h3>
<div style="margin-left:50px;">パーツ検出処理には、入力データとして顔検出結果とそれに用いた入力画像が必要です。<br>処理の概要としては、まず顔検出処理を実行し、その結果のひとつひとつの顔についてパーツ検出処理を実行するという流れになります。<br>パーツ検出処理を実行する際にはアプリケーションの用途に適したパーツ検出用辞書を選んでそのポインタを引数に渡してください。パーツ検出用辞書はあらかじめパーツ検出用辞書データファイルからメモリ上に読み込んでおく必要があります。<br></div>

<div align=center>
<p>
<img src="gif/libface-Overview-Japanese005.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 5  パーツ検出の処理手順例</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_5_1"><h4>
(1)&nbsp;<b>顔検出を実行する</b><br></h4>
</a></div>
<div style="margin-left:67px;">入力画像、顔検出結果の出力用領域を用意し、顔検出パラメータを引数で設定して、顔検出を実行してください。手順の詳細は「顔検出の処理手順」節を参照してください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_5_2"><h4>
(2)&nbsp;<b>パーツ検出結果の出力領域を用意する</b><br></h4>
</a></div>
<div style="margin-left:67px;">パーツ検出結果の出力先として、<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>構造体の配列を用意してください。この配列には<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>(4)個の要素が必要です。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_5_3"><h4>
(3)&nbsp;<b>パーツ検出を実行する</b><br></h4>
</a></div>
<div style="margin-left:67px;">パーツ検出用辞書データのアドレス、入力画像の情報、(1)で得られた顔検出結果、パーツ検出結果の出力領域のアドレス、パーツ検出結果用配列の要素数、その他のパーツ検出用パラメータを引数で設定して<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()を実行してください。<br>入力画像は、顔検出処理で使用したものをそのまま使用してください。この画像領域はパーツ検出処理がすべて終わるまでクリアしてはいけません。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_5_4"><h4>
(4)&nbsp;<b>パーツ検出結果を受け取る</b><br></h4>
</a></div>
<div style="margin-left:67px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()が正常終了すると検出されたパーツの個数が<i>numResultParts</i>に返ります。また、(2)で用意して引数<i>resultPartsArray</i>にアドレスを設定した<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>構造体の配列の各要素に、検出された右目・左目・鼻・口の位置が格納されます。<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>構造体の<i>partsId</i>には検出されたパーツの種類が、<i>partsX</i>, <i>partsY</i>にはパーツの位置が格納されます。<i>partsX</i>, <i>partsY</i>は、顔検出結果の顔領域の左上を(0.0, 0.0)、右下を(1.0, 1.0)とした座標系で表現されています。<br><br></div>

<div align=center>
<p>
<img src="gif/libface-Overview-Japanese006.gif">
</div>
<br>
<div style="margin-left:67px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 6  パーツ検出結果</b><br>
</div>
<br>
<div style="margin-left:67px;">以下のコードにより、パーツ検出結果のパーツ位置を入力画像上の座標に変換することができます。<br></div>
        <div style="margin-left:80px;"><pre><font size=3>
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> face;
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a> parts;
int parts_x_of_image = (face.faceX + face.faceW * parts.partsX) * image_width;
int parts_y_of_image = (face.faceY + face.faceH * parts.partsY) * image_height;
</font></pre></div>

<!-- sce_hd6 -->
<a name="Heading6_2_5_4_1">
<div style="margin-left:63px;"><h4><b>注意</b><br><br></h4></a></div>
<div style="margin-left:80px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>構造体の<i>partsId</i>に格納されている値が<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ID_UNDEF">SCE_FACE_PARTS_ID_UNDEF</a>の場合は、パーツ検出/詳細パーツ検出に失敗したことを表します。<br><br></div>
<div style="margin-left:67px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()で右目・左目・鼻・口をすべて検出できた場合は、そのパーツ検出結果を引数に設定して<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>()を実行することにより、パーツ位置から顔角度（ロール、ピッチ、ヨー）を推定することが可能です。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_5_5"><h4>
(5)&nbsp;<b>すべての顔について繰り返す</b><br></h4>
</a></div>
<div style="margin-left:67px;">(3)以降の処理を、(1)で検出したすべての顔について繰り返してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_6">
<h3>
<a href="#Heading3_2"> 2. </a>6 
<!-- hp1 --><b>属性判別の処理手順</b><br>
</a>
</h3>
<div style="margin-left:50px;">属性判別処理には、入力データとして顔検出結果とパーツ検出結果とそれに用いた入力画像が必要です。<br>処理の概要としては、まず顔検出処理を実行し、その結果のひとつひとつの顔についてパーツ検出処理を実行し、さらにその顔に対して属性判別処理を実行するという流れになります。<br>属性判別処理を実行する際には属性判別用辞書のポインタを引数に渡してください。属性判別用辞書はあらかじめ属性判別用辞書データファイルからメモリ上に読み込んでおく必要があります。<br>なお、判別可能な属性の数は現在ひとつだけですが、将来の拡張のため複数の属性に対応可能なAPIになっています。<br><br></div>

<div align=center>
<p>
<img src="gif/libface-Overview-Japanese007.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 7  属性判別の処理手順例</b><br>
</div>
<br>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_6_1"><h4>
(1)&nbsp;<b>顔検出を実行する</b><br></h4>
</a></div>
<div style="margin-left:67px;">入力画像、顔検出結果の出力用領域を用意し、顔検出パラメータを引数で設定して、顔検出を実行してください。手順の詳細は「顔検出の処理手順」節を参照してください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_6_2"><h4>
(2)&nbsp;<b>パーツ検出を実行する</b><br></h4>
</a></div>
<div style="margin-left:67px;">パーツ検出結果の出力用領域を用意し、パーツ検出パラメータを引数で設定して、パーツ検出を実行してください。手順の詳細は「パーツ検出の処理手順」節を参照してください。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_6_3"><h4>
(3)&nbsp;<b>属性判別結果の出力領域を用意する</b><br></h4>
</a></div>
<div style="margin-left:67px;">属性判別の結果を出力するための領域として<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribResult">SceFaceAttribResult</a>構造体の配列を用意してください。この配列には<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>(1)個の要素が必要です。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_6_4"><h4>
(4)&nbsp;<b>属性判別を実行する</b><br></h4>
</a></div>
<div style="margin-left:67px;">属性判別用の辞書データのアドレス、入力画像の情報、(1)で得られた顔検出結果、(2)で得られたパーツ検出結果、属性判別結果の出力領域のアドレス、属性判別結果用配列の要素数を引数で設定して<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()を実行してください。<br>入力画像は、顔検出処理とパーツ検出処理で使用したものをそのまま使用します。この画像領域は属性判別処理がすべて終わるまでクリアしてはいけません。<br>また、パーツ検出結果は、右目・左目・鼻・口の4つのパーツがすべて検出されている必要があります。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_6_5"><h4>
(5)&nbsp;<b>属性判別の結果を受け取る</b><br></h4>
</a></div>
<div style="margin-left:67px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()が正常終了すると判別された属性の数が<i>numResultAttrib</i>に返ります。また、(3)で用意して引数<i>resultAttribArray</i>にアドレスを設定した<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribResult">SceFaceAttribResult</a>構造体の配列の各要素に、属性判別の結果が格納されます。<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribResult">SceFaceAttribResult</a>構造体の<i>attribId</i>に属性の種類、<i>score</i>に判別結果のスコアが格納されます。<br>笑顔属性のスコアは、笑顔度合いに連動して0.0〜100.0に正規化された値で出力されます。20.0が無表情で、100.0に近いほど大笑いの顔、0.0に近いほど悲しい顔または辛い顔と判定することができます。<br></div>

<!-- sce_hd5 -->
<div style="margin-left:40px;"><a name="Heading5_2_6_6"><h4>
(6)&nbsp;<b>すべての顔について繰り返す</b><br></h4>
</a></div>
<div style="margin-left:67px;">(4)以降の処理を、(1)で検出したすべての顔について繰り返してください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_2_7">
<h3>
<a href="#Heading3_2"> 2. </a>7 
<!-- hp1 --><b>関数一覧</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfaceの関数は、機能ごとにメモリ管理用、顔検出用、パーツ検出用、属性判別用の4つに分けることができます。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_7_5">
<div style="margin-left:40px;"><h4><b>メモリ管理に関する関数</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>関数名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メモリ管理関数の設定&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_title -->
<a Name ="HeadingT_2_7_6">
<div style="margin-left:40px;"><h4><b>顔検出に関する関数</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>関数名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出の実行&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;局所サーチによる高速顔検出の実行&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_title -->
<a Name ="HeadingT_2_7_7">
<div style="margin-left:40px;"><h4><b>パーツ検出に関する関数</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>関数名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出の実行&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>()&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出されたパーツ位置による顔角度の推定&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_title -->
<a Name ="HeadingT_2_7_8">
<div style="margin-left:40px;"><h4><b>属性判別に関する関数</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>関数名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;属性判別の実行&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_hd4 -->
<a name="Heading4_2_8">
<h3>
<a href="#Heading3_2"> 2. </a>8 
<!-- hp1 --><b>顔認識辞書一覧</b><br>
</a>
</h3>
<div style="margin-left:50px;">libfaceでは、メモリ消費量の最小化のため、顔認識辞書データを複数のファイルに分割して提供し、アプリケーションで必要な辞書のみを読み込んで使用するようにしています。<br>顔検出用、パーツ検出用には複数の認識処理用辞書が用意されていますが、これらの辞書の違いは主に顔角度の対応範囲の違いです。対応する顔角度が広いほどメモリ消費量や処理時間が増える傾向がありますので、アプリケーションの要求仕様に応じて使い分けてください。<br></div>

<!-- sce_title -->
<a Name ="HeadingT_2_8_9">
<div style="margin-left:40px;"><h4><b>顔検出用辞書</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロとファイル名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;"face_detect_frontal.fdt"&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データファイル&nbsp;&nbsp;<br>&nbsp;&nbsp;（正面顔専用）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;"face_detect_frontal_fast.fdt"&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データファイル&nbsp;&nbsp;<br>&nbsp;&nbsp;（正面顔専用高速版）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;"face_detect_roll.fdt"&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データファイル&nbsp;&nbsp;<br>&nbsp;&nbsp;（傾き対応）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;"face_detect_roll_yaw.fdt"&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データファイル&nbsp;&nbsp;<br>&nbsp;&nbsp;（傾き横向き対応）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;"face_detect_roll_yaw_pitch.fdt"&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データファイル&nbsp;&nbsp;<br>&nbsp;&nbsp;（傾き横向き上下向き対応）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_title -->
<a Name ="HeadingT_2_8_10">
<div style="margin-left:40px;"><h4><b>パーツ検出用辞書</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロとファイル名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;"face_parts_frontal_roll.pdt"&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出用辞書データファイル&nbsp;&nbsp;<br>&nbsp;&nbsp;（正面顔・傾き対応）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ROLL_YAW_DICT">SCE_FACE_PARTS_ROLL_YAW_DICT</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;"face_parts_roll_yaw.pdt"&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出用辞書データファイル&nbsp;&nbsp;<br>&nbsp;&nbsp;（傾き横向き対応）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- sce_title -->
<a Name ="HeadingT_2_8_11">
<div style="margin-left:40px;"><h4><b>属性判別用辞書</b><br><br></h4></div></a>

<div style="margin-left:90px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロとファイル名</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a>&nbsp;&nbsp;<br>&nbsp;&nbsp;"face_attrib_smile.adt"&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;属性判別用辞書データファイル&nbsp;&nbsp;<br>&nbsp;&nbsp;（笑顔度合い）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- sce_hd3 -->
<a name="Heading3_3">
<h2>
 3 <!-- hp --><b>注意事項</b>
<hr noshade>
</h2>


<!-- sce_hd4 -->
<a name="Heading4_3_1">
<h3>
<a href="#Heading3_3"> 3. </a>1 
<!-- hp1 --><b>処理時間および消費メモリ量について</b><br>
</a>
</h3>
<div style="margin-left:50px;">消費メモリ量や処理時間は、画像サイズや辞書の種類、設定パラメータによって大きく異なるものになりますが、これらの最適値はアプリケーションの用途などによって変わってくるものですので、ライブラリとしては最適な固定値に決めることはできません。処理時間や消費メモリ量が問題になる場合には、必ずアプリケーションの要求仕様に合わせてこれらのパラメータを最適な値に調整した状態で、実際の使用状況における入力画像になるべく近い画像を用いて動作確認するようにしてください。<br>サンプルsimple_face_my_mallocにおいてメモリ消費量を確認することができますが、簡易的なものと考えてください。顔検出においては処理途中の顔候補数によって消費メモリ量が変動する可能性があり、パーツ検出や属性判別においては検出された顔のサイズによって消費メモリ量が変動する可能性がありますので、消費メモリ量の変動に備えて充分な余裕をみるようにしてください。<br>また、設定パラメータが全て同じでも画像の内容によって処理時間は変動する場合がありますので、処理時間の厳密な保証が必要な使い方はなるべく避けるようにしてください。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_2">
<h3>
<a href="#Heading3_3"> 3. </a>2 
<!-- hp1 --><b>誤認識について</b><br>
</a>
</h3>
<div style="margin-left:50px;">画像状態や顔の撮影状況によっては、顔検出やパーツ検出における検出もれや誤検出、属性判別の誤判別の発生の可能性があります。画像認識の特性として、入力画像の調整やパラメータの調整によってこれらの誤認識の発生確率を低減できるとしてもゼロにすることは原理的には不可能ですので、アプリケーションにおいては多少の誤認識が生じても問題のないよう工夫を加えた使い方を推奨します。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_3">
<h3>
<a href="#Heading3_3"> 3. </a>3 
<!-- hp1 --><b>ライブラリ内部の実装について</b><br>
</a>
</h3>
<div style="margin-left:50px;">現在の実装においてはlibfaceライブラリ内部では、VFPUやスクラッチパッド、eDRAM、Graphics Engine、DMACなどの特殊なハードウェアリソースは使っていません。<br></div>

<!-- sce_hd4 -->
<a name="Heading4_3_4">
<h3>
<a href="#Heading3_3"> 3. </a>4 
<!-- hp1 --><b>顔認識辞書データのファイル化について</b><br>
</a>
</h3>
<div style="margin-left:50px;">以前のlibface.prxには全ての顔認識辞書データが含まれ比較的大きなサイズとなっていたため、小さな辞書しか使わない場合には無駄にメモリを消費する形になっていました。このため辞書データを個別ファイルとしてPRXモジュールから分離させることによりlibface.prxの縮小化を図るとともに、必要な辞書ファイルのみを選択的に読み込むことで消費メモリ量削減を可能にしました。<br></div>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
