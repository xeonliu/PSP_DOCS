<html lang="en">
<head>
<title>libface-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=iso-8859-1>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&trade; Programmer Tool Runtime Library Release 6.3.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libface Reference
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceMallocFunction"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceMallocFunction<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Memory Management APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>malloc function pointer type<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef void *(*<b>SceFaceMallocFunction</b>)(SceSize <i>size</i>);

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This pointer type is used for the memory allocation function that is called internally from the libface library.<br>Its interface is compatible with that of the malloc() function.<br>It is used for an argument of <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceFreeFunction"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceFreeFunction<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Memory Management APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>free function pointer type<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef void (*<b>SceFaceFreeFunction</b>)(void *<i>p</i>);

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This pointer type is used for the memory free function that is called internally from the libface library.<br>Its interface is compatible with that of the free() function.<br>It is used for an argument of <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceSetMallocFunction"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceSetMallocFunction<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Memory Management APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Set memory management functions<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
void <b>sceFaceSetMallocFunction</b>(
	<a href="../image_recognition/libface-Reference-English.htm#SceFaceMallocFunction">SceFaceMallocFunction</a> <i>malloc_func</i>,
	<a href="../image_recognition/libface-Reference-English.htm#SceFaceFreeFunction">SceFaceFreeFunction</a> <i>free_func</i>
)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>malloc_func</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to memory allocation function having compatible interface&nbsp;&nbsp;<br>&nbsp;&nbsp;with malloc() function&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>free_func</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to memory free function having compatible interface with &nbsp;&nbsp;<br>&nbsp;&nbsp;free() function&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">None<br><br></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function sets the memory allocation and free functions that will be used internally by the libface library.<br>This function must be called first before using libface.<br><br>libface handles dynamic allocation and freeing of memory from the heap for work areas used internally by library functions, however, the memory management functions are not hardwired so the library is able to allow applications to perform these functions freely. <br><br>After loading the libface.prx module, you must call sceFaceSetMallocFunction() before executing face recognition processing. This will set pointers to the memory management functions that will be used internally by libface. If an attempt is made to execute face recognition processing and no memory management functions have been set, an <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a> (0x80580001) error code indicating that memory allocation failed will be returned by the face recognition processing execution function, and no face recognition processing will be executed.<br><br>Even when the standard library functions malloc() and free() are to be used, this function must be called to set them. See the example below. Also, when setting user-defined memory management functions, make sure that their syntax is compatible with that of the malloc() and free() functions as shown in the example.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>General initialization example (when using the standard library malloc and free functions)
SceUID mid = <a href="../kernel/Module_Manager-Reference-English.htm#sceKernelLoadModule">sceKernelLoadModule</a>("host0:../../../module/libface.prx", 0, NULL);
if (mid &lt; 0) { printf("error!\n"); return; }
int ret = <a href="../kernel/Module_Manager-Reference-English.htm#sceKernelStartModule">sceKernelStartModule</a>(mid, 0, NULL, NULL, NULL);
if (ret &lt; 0) { printf("error!\n"); return; }
sceFaceSetMallocFunction(malloc, free);

Example of setting user-defined memory management functions
void *my_malloc(size_t size) { return malloc(size); }
void my_free(void *ptr) { free(ptr); }

sceFaceSetMallocFunction(my_malloc, my_free);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">The following libface functions dynamically allocate and free memory: the face detection execution functions, <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() and <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>(); the parts detection execution function, <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>(); and the face attribute discrimination execution function, <a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>(). Face recognition processing begins after memory for the work area required internally by these functions is dynamically allocated, and processing returns from each function after all allocated memory is freed. Dynamic memory allocation, such as allocating memory from the heap as is done by these functions, is not performed internally by any other functions.<br><br>The amount of memory that is dynamically allocated internally by each function is mainly affected by the image size, but is also affected by the type of dictionary, size of the detected faces, and parameters that are used to adjust the detection precision.<br>When determining the amount of memory needed, first calculate the amount of memory that will actually be consumed by performing execution tests matching the actual usage conditions, and then estimate an additional amount as a reserve. The sample program simple_face_my_malloc performs a simple check of the amount of memory consumed and is provided for your reference.<br><br>This function only overwrites the address values in the function pointers (global variables) that are used internally by the libface library to dynamically allocate and free memory. Since it does not perform any error handling itself, be sure not to set invalid addresses for these values. Also, once this function is called by the application, the settings will remain in effect from then on.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceMallocFunction">SceFaceMallocFunction</a>, <a href="../image_recognition/libface-Reference-English.htm#SceFaceFreeFunction">SceFaceFreeFunction</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(),<br><a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceDetectDictPtr"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceDetectDictPtr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Face detection dictionary data pointer type<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef void *<b>SceFaceDetectDictPtr</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This defined type is used as a pointer to dictionary data used in face detection.<br>It is used for an argument type of the face detection execution functions <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() and <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>()<br><a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceDetectionResult"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceDetectionResult<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Face detection results (detected face region)<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef struct{
	float <i>faceX</i>;
	float <i>faceY</i>;
	float <i>faceW</i>;
	float <i>faceH</i>;
	float <i>faceRoll</i>;
	float <i>facePitch</i>;
	float <i>faceYaw</i>;
	unsigned int <i>angleLabel</i>;
	int <i>score</i>;
	int <i>averageScore</i>;
	unsigned int <i>numDetect</i>;
} <b>SceFaceDetectionResult</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceX</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;x-coordinate of upper left corner of detected face region&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceY</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;y-coordinate of upper left corner of detected face region&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceW</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Width of detected face region&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceH</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Height of detected face region&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceRoll</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Planar (roll axis) rotation angle of detected face region in radians&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>facePitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Upward or vertical (pitch axis) rotation angle of detected face region in &nbsp;&nbsp;<br>&nbsp;&nbsp;radians&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceYaw</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sideways or horizontal (yaw axis) rotation angle of detected face region in &nbsp;&nbsp;<br>&nbsp;&nbsp;radians&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>angleLabel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Angle label representation of detected face region (used internally by &nbsp;&nbsp;<br>&nbsp;&nbsp;libface)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>score</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum score (fixed-point representation) of detected face region (used &nbsp;&nbsp;<br>&nbsp;&nbsp;internally by libface)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>averageScore</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Average score (fixed-point representation) of detected face region (used &nbsp;&nbsp;<br>&nbsp;&nbsp;internally by libface)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>numDetect</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of detections when face detection results are merged (used &nbsp;&nbsp;<br>&nbsp;&nbsp;internally by libface)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the data type that represents face detection results. When a face detection execution function is called (<a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() or <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()), data for the number of faces that were detected is written to the memory area (SceFaceDetectionResult array) pointed to by the pointer that was set in the <i>resultFaceArray</i> argument of these functions.<br><br>Also, since these face detection results are used in the processing of <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>(), and <a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>(), a pointer to detected face data (SceFaceDetectionResult) is set in the <i>detectedFace</i> argument of these functions.<br><br><i>faceX</i>, <i>faceY</i>, <i>faceW</i>, and <i>faceH</i> are represented in a coordinate system that is normalized by the width and height of the input image.<br></div>

<div align=center>
<p>
<img src="gif/libface-Reference-English001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 1  Face Detection Results</b><br>
</div>
<br>
<div style="margin-left:50px;"><br><i>faceRoll</i>, <i>facePitch</i>, and <i>faceYaw</i> are defined in a right-handed coordinate system as shown in Figure 2.<br><br></div>

<div align=center>
<p>
<img src="gif/libface-Reference-English002.jpg">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<br><b>Figure 2  Rotation Angles (Roll, Pitch, and Yaw) in Face Detection Results and Associated Directions</b><br>
</div>
<br>
<div style="margin-left:50px;">The following code can be used to convert the face region (<i>faceX</i>, <i>faceY</i>, <i>faceW</i>, <i>faceH</i>, <i>faceRoll</i>, <i>facePitch</i>, and <i>faceYaw</i>) to coordinates in the input image.<br><br></div>
        <div style="margin-left:50px;"><pre><font size=3>void rotate(int* ox, int *oy, int ix, int iy, int cx, int cy, float radian)
{
    const float c = cosf(radian);
    const float s = sinf(radian);
    ix -= cx;
    iy -= cy;
    *ox = (int)(ix * c - iy * s + cx);
    *oy = (int)(ix * s + iy * c + cy);
}

SceFaceDetectionResult face;
const int x1 = (int)( face.faceX * image_width);
const int y1 = (int)( face.faceY * image_height);
const int x2 = (int)((face.faceX + face.faceW) * image_width);
const int y2 = (int)((face.faceY + face.faceH) * image_height);
const int cx = (int)((face.faceX + face.faceW / 2) * image_width);
const int cy = (int)((face.faceY + face.faceH / 2) * image_height);
int face_top_left_x, face_top_left_y;  // pixel position
int face_top_right_x, face_top_right_y;  // pixel position
int face_bottom_left_x, face_bottom_left_y;  // pixel position
int face_bottom_right_x, face_bottom_right_y;  // pixel position

rotate(&amp;face_top_left_x, &amp;face_top_left_y, x1, y1, cx, cy, -face.faceRoll);
rotate(&amp;face_top_right_x, &amp;face_top_right_x, x2, y1, cx, cy, -face.faceRoll);
rotate(&amp;face_bottom_left_x, &amp;face_bottom_left_y, x1, y2, cx, cy, -face.faceRoll);
rotate(&amp;face_bottom_right_x, &amp;face_bottom_right_y, x2, y2, cx, cy, -face.faceRoll);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceDetection"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceDetection<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Execute face detection<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
int <b>sceFaceDetection</b>(
	<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> <i>pDetectDict</i>,
	const unsigned char *<i>imgPtr</i>,
	int <i>width</i>,
	int <i>height</i>,
	int <i>rowstride</i>,
	float <i>magBegin</i>,
	float <i>magStep</i>,
	float <i>magEnd</i>
	int <i>xScanStep</i>,
	int <i>yScanStep</i>,
	float <i>thresholdBias</i>,
	int <i>resultPrecision</i>,
	<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> <i>resultFaceArray[]</i>,
	int <i>resultFaceArraySize</i>,
	int *<i>numResultFace</i>
)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pDetectDict</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to face detection dictionary data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>imgPtr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to input image (8-bit grayscale)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image width [pixels]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image height [pixels]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rowstride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image data width&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>magBegin</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image scaling starting magnification&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>magStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image scaling rate (recommended value: 0.841f)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>magEnd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image scaling ending magnification (recommended &nbsp;&nbsp;<br>&nbsp;&nbsp;value: 0.0f)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>xScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection window horizontal shift amount [pixels] &nbsp;&nbsp;<br>&nbsp;&nbsp;(recommended value: 2)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>yScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection window vertical shift amount [pixels] &nbsp;&nbsp;<br>&nbsp;&nbsp;(recommended value: 2)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>thresholdBias</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection rate adjustment value (recommended value: &nbsp;&nbsp;<br>&nbsp;&nbsp;1.0f)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultPrecision</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection result position precision setting&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultFaceArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to face detection result output area&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultFaceArraySize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of elements in <i>resultFaceArray</i> &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>numResultFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of detected faces&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns SCE_OK(0) if processing is successful.	<br>Returns the following error code (negative value) if an error occurs.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_NO_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Failed to allocate memory&nbsp;&nbsp;<br>&nbsp;&nbsp;Memory management &nbsp;&nbsp;<br>&nbsp;&nbsp;functions have not been set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_INVALID_DICT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection dictionary data is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function performs face detection.<br><br>For <i>pDetectDict</i>, set a pointer to the memory area where any of the face detection dictionary data files <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a>, or <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a> were read according to the requirements of the application.<br>The main difference in these face detection dictionaries is in the tradeoff between the supported range of detectable face angles and processing time.<br>For <i>magBegin</i>, set a value not exceeding 1.0f as the starting magnification for input image scaling. The value 20/<i>magBegin</i> is the minimum face detection size [pixels] for the input image. Setting <i>magBegin</i> to the smallest possible value will shorten the processing time, but if it is too small, only large faces in the input image will be able to be detected. Since the <i>magBegin</i> value has a relatively large effect on processing time, be sure to adjust it to a suitable value to match the application use and image size.<br>For <i>magEnd</i>, set a value of at least 0.0f as the ending magnification for input image scaling. The value 20/<i>magEnd</i> is the maximum face detection size [pixels] in the input image. However, since the processing time generally does not change by very much by changes in the <i>magEnd</i> setting, the recommended value is 0.0f, which can always detect a large face in one image regardless of the image size.<br>The recommended value for <i>magStep</i> is 0.841f. Faces of various sizes can be detected by searching for faces while multiplying <i>magBegin</i> by <i>magStep</i> until <i>magEnd</i> is reached. Although a reduction in the number of intermediate magnifications and the total processing time can be achieved by setting <i>magStep</i> to a smaller value (such as 0.75f), the detection precision will drop since face detection will become coarser according to the size.<br>The recommended value for <i>xScanStep</i> and <i>yScanStep</i> is 2 [pixels]. These arguments represent the positional coarseness of face detection processing, and although detection precision will increase if they are set to 1 [pixel], processing time will also increase. On the other hand, if they are set to 3 [pixels], processing time will decrease, but detection omissions may occur. <i>xScanStep</i> and <i>yScanStep</i> may also be set to different values.<br><br></div>


<div align=center>
<p>
<img src="gif/libface-Reference-English003.gif">
</div>
<br>
<br>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 3  Input Image Scaling</b><br>
</div>
<br>
<div style="margin-left:50px;"><br>For <i>resultPrecision</i>, select either <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_PRECISE">SCE_FACE_RESULT_PRECISE</a>, or <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_FAST">SCE_FACE_RESULT_FAST</a> to suit the application use.<br>Since there is a tradeoff between detection precision and processing time as described above, adjust these parameters to set the optimum balance to suit the application use. To adjust the parameters, it is recommended that you perform test runs under conditions that are close to the actual application usage conditions.<br><br><i>thresholdBias</i> can be used to fine-tune the detection rate. Set a value from 0.0f to 1.0f. Although 1.0f is normally set, you should set a smaller value when it is better to have fewer detection omissions even if it means invalid detections will increase somewhat (non-face locations judged to be faces). The processing time is not affected even if this parameter is changed.<br><br>For <i>resultFaceArray</i>, set a pointer to the <a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> array for storing face detection results.<br>For <i>resultFaceArraySize</i>, set the number of array elements in <i>resultFaceArray</i>. The number of face detection results that are output will not exceed <i>resultFaceArraySize</i> so that a buffer overrun will not occur.<br>The number of detected faces is returned in <i>numResultFace</i>.<br>When an <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a> error occurs, 0 is always returned in <i>numResultFace</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Read face detection dictionary data file */
unsigned char detectDict[SCE_FACE_DETECT_FRONTAL_DICT_SIZE];
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, detectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);

unsigned char y_img[320*240];
<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult[16];
int i, num_face, ret;

/* Execute face detection */
ret = sceFaceDetection(		detectDict,
				y_img, 320, 240, 320,
				0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
				<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>,
				detectResult, 16, &amp;num_face);
if (ret != SCE_OK) { printf("error!\n"); return; }
for (i = 0; i &lt; num_face; i++) {
	printf("face[%d] x = %f y = %f w = %f h = %f\n", i,
			detectResult[i].faceX, detectResult[i].faceY,
			detectResult[i].faceW, detectResult[i].faceH);
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>() has not been called before this function is executed, an <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a> error will be returned. Be sure to call <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>() once to set the memory management functions before executing this function.<br><br>Since this function dynamically allocates, uses, and frees heap memory internally, the following phenomena may occur if the heap memory size is set too small.<br>If dynamic memory allocation of a large amount of memory fails during the initial stage of face detection processing, face detection processing will not be executed and processing will return from the function immediately with the return value of <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>. <br>However, if the start of face detection processing was successful, but later, the temporary storage area used internally for intermediate results was not large enough, the detection precision that is output may end up getting slightly worse.<br><br>If the input image shooting conditions were not ideal and the face parts are dark due to backlighting or insufficient light or if, on the other hand, the face is overexposed and is whited out, or if the image contains a lot of noise, the face detection rate may worsen even if processing is performed normally by the program. Adjust the input image quality as needed before calling this function.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>,<br><a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a>,<br><a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a>,<br><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceDetectionLocal"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceDetectionLocal<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Execute fast face detection using local search<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
int <b>sceFaceDetectionLocal</b>(
	<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> <i>pDetectDict</i>,
	const unsigned char *<i>imgPtr</i>,
	int <i>width</i>,
	int <i>height</i>,
	int <i>rowstride</i>,
	float <i>magExpandFaceRegion</i>,
	float <i>magStep</i>,
	int <i>xScanStep</i>,
	int <i>yScanStep</i>,
	float <i>thresholdBias</i>,
	<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> <i>referenceFaceArray[]</i>,
	int <i>numReferenceFace</i>,
	<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> <i>resultFaceArray[]</i>,
	int <i>resultFaceArraySize</i>,
	int *<i>numResultFace</i>
)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Not multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pDetectDict</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to face detection dictionary data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>imgPtr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to input image (8-bit grayscale)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image width [pixels]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image height [pixels]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rowstride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image data width&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>magExpandFaceRegion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Magnification rate of face region to reference (search range &nbsp;&nbsp;<br>&nbsp;&nbsp;adjustment)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>magStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image scaling rate (recommended value: 0.841f)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>xScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection window horizontal shift amount [pixels] &nbsp;&nbsp;<br>&nbsp;&nbsp;(recommended value: 1)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>yScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection window vertical shift amount [pixels] &nbsp;&nbsp;<br>&nbsp;&nbsp;(recommended value: 1)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>thresholdBias</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection rate adjustment value (recommended value: &nbsp;&nbsp;<br>&nbsp;&nbsp;1.0f)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>referenceFaceArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to face detection result array to reference&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>numReferenceFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of faces in face detection results to reference&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultFaceArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to face detection result output area&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultFaceArraySize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of elements in <i>resultFaceArray</i> &nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>numResultFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of detected faces&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns SCE_OK(0) if processing is successful.	<br>Returns the following error code (negative value) if an error occurs.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_NO_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Failed to allocate memory&nbsp;&nbsp;<br>&nbsp;&nbsp;Memory management &nbsp;&nbsp;<br>&nbsp;&nbsp;functions have not been &nbsp;&nbsp;<br>&nbsp;&nbsp;set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_INVALID_DICT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection dictionary data is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses local search to perform fast face detection.<br>When face detection is performed on time-sequenced images such as video signals, the detection speed can be increased by executing the face search processing only in the vicinity of face regions detected in the previous frame (i.e. performing a local search).<br><br>The descriptions of arguments that are the same as those of <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() have been omitted. See the description of <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>().<br><br>For <i>referenceFaceArray</i>, specify the <a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> array in which the results of face detection processing performed for the entire image by <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() are saved, or specify the <a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> array in which the face detection results of the local search of the previous frame performed by sceFaceDetectionLocal() are saved. For <i>numReferenceFace</i>, specify the number of faces.<br>Referencing the face region positions and sizes specified in<i> referenceFaceArray</i> to narrow the range for the scaling and scanning operations used in face detection processing can significantly reduce the processing time compared with searching the entire image.<br><br>For <i>magExpandFaceRegion</i>, specify a value of at least 1.0f as the magnification rate of the face region to reference. The smaller this value is, the narrower the search range will be, which can significantly reduce the processing time. However, if this value is too small, processing may not be able to deal with cases when faces move quickly which means they are more likely to be missed.<br>The roles of <i>xScanStep</i> and <i>yScanStep</i> are the same as for <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(), but since detection errors are less likely to occur for 1 [pixel] and the position accuracy also increases, 1 [pixel] is the recommended value because the overall processing time is not that long. However, if faster processing is required, set one or both of the values for <i>xScanStep</i> and <i>yScanStep</i> to 2 [pixels]. In that case, detection errors may be more likely to occur.<br><br>The role of <i>magStep</i> is also the same as for <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() and the recommended value is 0.841f, but the number of scaling steps is limited internally to 3 centered on the size of the face region to be referenced. If faster processing is required and the face size will hardly change at all, setting 1.0f or 0.0f will cause processing to be performed by scaling in only one step, which will increase speed but in this case, changes in face size will no longer be able to be handled.<br><br>Since there is a tradeoff between the search range and processing time as described above, adjust these parameters to set the optimum balance to suit the application use. To adjust the parameters, it is recommended that you perform test runs under conditions that are close to the actual application usage conditions.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Read face detection dictionary data file */
unsigned char detectDict[SCE_FACE_DETECT_FRONTAL_DICT_SIZE];
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, detectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);

unsigned char y_img[320*240];
<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult[16];
<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult2[16];
int i, num_face, ret;

/* Execute face detection */
ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>( 		detectDict,
				y_img, 320, 240, 320,
				0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
				<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>,
				detectResult, 16, &amp;num_face);
if (ret != SCE_OK) { printf("error!\n"); return; }
/* Execute local search face detection */
ret = sceFaceDetectionLocal( 	detectDict,
				y_img, 320, 240, 320,
				1.1f, 0.841f, 1, 1, 1.0f,
				detectResult, num_face,
				detectResult2, 16, &amp;num_face2);
if (ret != SCE_OK) { printf("error!\n"); return; }
for (i = 0; i &lt; num_face2; i++) {
	printf("face[%d] x = %f y = %f w = %f h = %f\n", i,
			detectResult2[i].faceX, detectResult2[i].faceY,
			detectResult2[i].faceW, detectResult2[i].faceH);
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These notes are omitted since they are the same as the notes for <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(). See the notes for <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>,<br><a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a>,<br><a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a>,<br><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_FRONTAL_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_FRONTAL_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Face detection dictionary data file (for frontal face)<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_FRONTAL_DICT</b> "face_detect_frontal.fdt"
#define <b>SCE_FACE_DETECT_FRONTAL_DICT_SIZE</b> 25180

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the filename and size (in bytes) of dictionary data used in face detection.<br>The <i>pDetectDict</i> argument of the face detection execution functions <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() and <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>() should be set with a pointer to the memory area where this file was read.<br>This dictionary only detects frontal faces.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> pDetectDict = (<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>)malloc(
					SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face"
				SCE_FACE_DETECT_FRONTAL_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pDetectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(pDetectDict, y_img, 320, 240, 320, 0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
			<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, detectResult, 16, &amp;num_face);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Although this dictionary can only detect faces that are for the most part facing forward without any tilt, the processing time is shorter compared to other face detection dictionaries.<br><br>Choose the type of face detection dictionary that is best suited for the application.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_FRONTAL_FAST_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_FRONTAL_FAST_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Face detection dictionary data file (fast version for frontal face)<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_FRONTAL_FAST_DICT</b> "face_detect_frontal_fast.fdt"
#define <b>SCE_FACE_DETECT_FRONTAL_FAST_DICT_SIZE</b> 23132

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the filename and size (in bytes) of dictionary data used in face detection.<br>The <i>pDetectDict</i> argument of the face detection execution functions <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() and <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>() should be set with a pointer to the memory area where this file was read.<br>This dictionary only detects frontal faces and is slightly faster than <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> pDetectDict = (<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>)malloc(
					SCE_FACE_DETECT_FRONTAL_FAST_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
			SCE_FACE_DETECT_FRONTAL_FAST_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pDetectDict, SCE_FACE_DETECT_FRONTAL_FAST_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(pDetectDict, y_img, 320, 240, 320, 0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
			<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, detectResult, 16, &amp;num_face);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This dictionary contains the same data for frontal faces as <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a> but achieves a faster processing speed. The difference is that the internal implementation was redone to increase the instruction cache usage rate, which enables it to run 10% to 15% faster than <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a> if there is hardly any other processing at the same time. However, since side effects that increase the number of instruction cache misses may also occur depending on other processing performed by the application, be careful to use this dictionary properly according to the situation.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_ROLL_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_ROLL_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Face detection dictionary data file (roll support)<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_ROLL_DICT</b> "face_detect_roll.fdt"
#define <b>SCE_FACE_DETECT_ROLL_DICT_SIZE</b> 78368

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the filename and size (in bytes) of dictionary data used in face detection.<br>The <i>pDetectDict</i> argument of the face detection execution functions <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() and <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>() should be set with a pointer to the memory area where this file was read.<br>This dictionary also supports faces that are tilted (faces with a roll angle).<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> pDetectDict = (<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>)malloc(
					SCE_FACE_DETECT_ROLL_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
			SCE_FACE_DETECT_ROLL_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pDetectDict, SCE_FACE_DETECT_ROLL_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(pDetectDict, y_img, 320, 240, 320, 0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
			<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, detectResult, 16, &amp;num_face);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Although this dictionary can detect faces that are tilted (with a roll angle), it cannot detect faces that are turned sideways (with a yaw angle). The processing time is medium fast.<br><br>Choose the type of face detection dictionary that is best suited for the application.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_ROLL_YAW_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_ROLL_YAW_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Face detection dictionary data file (roll and yaw support)<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_ROLL_YAW_DICT</b> "face_detect_roll_yaw.fdt"
#define <b>SCE_FACE_DETECT_ROLL_YAW_DICT_SIZE</b> 170876

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the filename and size (in bytes) of dictionary data used in face detection.<br>The <i>pDetectDict</i> argument of the face detection execution functions <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() and <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>() should be set with a pointer to the memory area where this file was read.<br>This dictionary also supports faces that are tilted or are turned sideways (faces with a roll angle or yaw angle).<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> pDetectDict = (<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>)malloc(
				SCE_FACE_DETECT_ROLL_YAW_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
			SCE_FACE_DETECT_ROLL_YAW_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pDetectDict, SCE_FACE_DETECT_ROLL_YAW_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(pDetectDict, y_img, 320, 240, 320, 0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
			<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, detectResult, 16, &amp;num_face);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Although this dictionary can detect faces that are positioned over a wide range of angles, the processing time is longer than for the other dictionaries described earlier. It does not support detection of faces turned at a large upward or downward angle and cannot output an accurate pitch angle.<br><br>Choose the type of face detection dictionary that is best suited for the application.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Face detection dictionary data file (roll, yaw, and pitch support)<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</b> "face_detect_roll_yaw_pitch.fdt"
#define <b>SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT_SIZE</b> 100832

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the filename and size (in bytes) of dictionary data used in face detection.<br>The <i>pDetectDict</i> argument of the face detection execution functions <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>() and <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>() should be set with a pointer to the memory area where this file was read.<br>This dictionary also supports faces that are tilted, turned sideways or facing upward or downward (faces with a roll angle or a yaw angle or a pitch angle).<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> pDetectDict = (<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>)malloc(
			SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
		SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pDetectDict, SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(pDetectDict, y_img, 320, 240, 320, 0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
			<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, detectResult, 16, &amp;num_face);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Although this dictionary can detect faces that are positioned over a widest range of angles, the processing time is the longest. It also supports the output of the pitch angle.<br><br>Choose the type of face detection dictionary that is best suited for the application.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_DICT_SIZE_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_DICT_SIZE_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum size of face detection dictionary data file<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_DICT_SIZE_MAX</b> 170876

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum size of a dictionary data file to be used in face detection.<br>It can be used as the buffer size when the same data buffer will be used with different types of face detection dictionary data.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a><br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="Face Detection Macros"></a>
<table width="100%"><td width="70%"><font size=6>Face Detection Macros<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Face Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constants used for setting the precision of the face detection result position <br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection result position precision &nbsp;&nbsp;<br>&nbsp;&nbsp;setting for normal use&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_RESULT_PRECISE">SCE_FACE_RESULT_PRECISE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Precision setting in which position &nbsp;&nbsp;<br>&nbsp;&nbsp;accuracy takes precedence over &nbsp;&nbsp;<br>&nbsp;&nbsp;processing time&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_RESULT_FAST">SCE_FACE_RESULT_FAST</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Precision setting in which speed takes &nbsp;&nbsp;<br>&nbsp;&nbsp;precedence over position accuracy&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants are used for setting the precision of the face detection result position.<br>They can be specified for the <i>resultPrecision</i> argument of <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFacePartsDictPtr"></a>
<table width="100%"><td width="70%"><font size=6>SceFacePartsDictPtr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Parts Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Parts detection dictionary data pointer type<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef void *<b>SceFacePartsDictPtr</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This defined type is used as a pointer to dictionary data used in parts detection.<br>It is used for the argument type of <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFacePartsResult"></a>
<table width="100%"><td width="70%"><font size=6>SceFacePartsResult<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Parts Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Parts detection results<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef struct{
	unsigned int <i>partsId</i>;
	float <i>partsX</i>;
	float <i>partsY</i>;
	float <i>score</i>;
} <b>SceFacePartsResult</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>partsId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Type of detected part&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>partsX</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;x position of detected part&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>partsY</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;y position of detected part&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>score</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Score of detected part (used internally by libface)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This data type is output as parts detection results.<br>When <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>() is called, detected parts information is written as an array of these structures in the area that was set in the <i>resultPartsArray</i> argument.<br><br>For <i>partsId</i> enter any of the following values.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_ID_UNDEF">SCE_FACE_PARTS_ID_UNDEF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Undefined part (detection failed)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_ID_R_EYE_CENTER">SCE_FACE_PARTS_ID_R_EYE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Center of right eye&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_ID_L_EYE_CENTER">SCE_FACE_PARTS_ID_L_EYE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Center of left eye&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_ID_NOSE_CENTER">SCE_FACE_PARTS_ID_NOSE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Center of nose&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_ID_MOUTH_CENTER">SCE_FACE_PARTS_ID_MOUTH_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Center of mouth&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><i>partsX</i> and <i>partsY</i> are represented in a coordinate system in which the upper left corner of the face region is set to (0.0, 0.0) and the lower right corner is set to (1.0, 1.0).<br><br>The following code can be used to convert to coordinates in the input image.<br><br></div>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> face;
SceFacePartsResult parts;
int parts_x_of_image = (face.faceX + face.faceW * parts.partsX) * image_width;
int parts_y_of_image = (face.faceY + face.faceH * parts.partsY) * image_height;
</font></pre></div>
<div style="margin-left:50px;"><br></div>

<div align=center>
<p>
<img src="gif/libface-Reference-English004.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>Figure 4  Parts Detection Result</b><br>
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceAngle"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceAngle<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Parts Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Face angle based on parts detection result<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef struct{
	float <i>faceRoll</i>;
	float <i>facePitch</i>;
	float <i>faceYaw</i>;
} <b>SceFaceAngle</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceRoll</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Planar (roll axis) rotation angle of face in radians&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>facePitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Upward or vertical (pitch axis) rotation angle of face in radians&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceYaw</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Sideways or horizontal (yaw axis) rotation angle of face in radians&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This structure represents the rotation angle of the face, which is calculated based on the positions of the right eye, left eye, nose and mouth.<br>When all parts (right eye, left eye, nose and mouth) are detected by <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>(), and the parts detection results are entered in <a href="../image_recognition/libface-Reference-English.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>(), then the face rotation angle will be calculated and data with this structure type will be written to the area set by the <i>resultFaceAngle</i> argument of <a href="../image_recognition/libface-Reference-English.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>(), <a href="../image_recognition/libface-Reference-English.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceParts"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceParts<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Parts Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Execute parts detection<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
int <b>sceFaceParts</b>(
	<a href="../image_recognition/libface-Reference-English.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a> <i>pPartsDict</i>,
	const unsigned char *<i>imgPtr</i>,
	int <i>width</i>,
	int <i>height</i>,
	int <i>rowstride</i>,
	int <i>xScanStep</i>,
	int <i>yScanStep</i>,
	const <a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> *<i>detectedFace</i>,
	<a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a> <i>resultPartsArray[]</i>,
	int <i>resultPartsArraySize</i>,
	int *<i>numResultParts</i>
)
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Not multithread safe<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pPartsDict</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to parts detection dictionary data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>imgPtr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to input image (8-bit grayscale)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image width [pixels]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image height [pixels]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rowstride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image data width&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>xScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Parts detection window horizontal shift amount [pixels] &nbsp;&nbsp;<br>&nbsp;&nbsp;(recommended value: 1)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>yScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Parts detection window vertical shift amount [pixels] &nbsp;&nbsp;<br>&nbsp;&nbsp;(recommended value: 1)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>detectedFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to face detection result&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultPartsArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to parts detection result output area&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultPartsArraySize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of array elements in <i>resultPartsArray</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>numResultParts</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of detected parts&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns SCE_OK(0) if processing is successful.	<br>Returns the following error code (negative value) if an error occurs.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_NO_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Failed to allocate memory&nbsp;&nbsp;<br>&nbsp;&nbsp;Memory management &nbsp;&nbsp;<br>&nbsp;&nbsp;functions have not been set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_INVALID_DICT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection dictionary data is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function detects the eyes, nose, and mouth parts from the face region that was obtained by face detection.<br><br>For <i>pPartsDict</i>, set a pointer to the memory area where the parts detection dictionary data files <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a> or <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_ROLL_YAW_DICT">SCE_FACE_PARTS_ROLL_YAW_DICT</a> were read.<br>Except for when a lightweight dictionary is selected to give precedence to faster speed over detection precision, these dictionaries should basically be matched with the face detection dictionary type.<br><br>Generally, the input image that was used in face detection processing should be used directly for the input image that is set for <i>imgPtr</i>, and the image should not be updated or cleared until parts detection processing is completely finished and this function returns.<br>As long as the image does not change significantly such as in a movie, it does not necessarily have to be completely the same. However, since search processing is only performed over a limited range using the face regions and face angles that were obtained from the face detection results, the likelihood of detection errors occurring will increase for greater variations in image content.<br>For <i>detectedFace</i>, set a pointer to the data for a single face from the face detection results.<br>For <i>resultPartsArray</i>, set a pointer to the <a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a> array for storing the parts detection results. Normally, the number of elements in this <a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a> array is <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>(4) and <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>(4) should be set for <i>resultPartsArraySize</i>.<br>If parts detection is executed normally, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>(4) sets of parts detection result data will be output to the memory area set for <i>resultPartsArray</i> and the number of detected parts will be returned in <i>numResultParts</i>.<br>If an <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a> error occurs, 0 is always returned in <i>numResultParts</i>.<br><br>For any parts that could not be detected normally, the <i>partsId</i> member of the <a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a> structure of the detection results will be <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_ID_UNDEF">SCE_FACE_PARTS_ID_UNDEF</a>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Read face detection dictionary data file */
unsigned char detectDict[SCE_FACE_DETECT_FRONTAL_DICT_SIZE];
unsigned char partsDict[SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE];
SceUID fd;
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, detectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, partsDict, SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE);
sceIoClose(fd);

unsigned char y_img[320*240];
<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult[16];
<a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a> resultPartsArray[<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>];
int i, j, num_face, num_parts, ret;

/* Execute face detection */
ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(  		detectDict,
				y_img, 320, 240, 320,
				0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
				<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>,
				detectResult, 16, &amp;num_face);
if (ret != SCE_OK) { printf("error!\n"); return; }
for (i = 0; i &lt; num_face; i++) {
	/* Execute parts detection */
	ret = sceFaceParts(	partsDict,
				y_img, 320, 240, 320,
				1, 1, &amp;detectResult[i],
				resultPartsArray, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>,
				&amp;num_parts);
	if (ret != SCE_OK) { printf("error!\n"); return; }
	for (j = 0; j &lt; num_parts; j++) {
		printf("parts[%d] id = %d x = %f y = %f\n", j,
				resultPartsArray[j].partsId,
				resultPartsArray[j].partsX,
				resultPartsArray[j].partsY);
	}
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>() has not been called before this function is executed, an <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a> error will be returned. Be sure to call <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>() once to set the memory management functions before executing this function.<br><br>Since this function dynamically allocates, uses, and frees heap memory internally, the following phenomena may occur if the heap memory size is set too small.<br>If dynamic memory allocation of a large amount of memory fails during the initial stage of face detection processing, face detection processing will not be executed and processing will return from the function immediately with the return value of <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>. <br>However, if the start of face detection processing was successful, but later, the temporary storage area used internally for intermediate results was not large enough, the detection precision that is output may end up getting slightly worse.<br><br>If the input image shooting conditions were not ideal and the face parts are dark due to backlighting or insufficient light or if, on the other hand, the face is overexposed and is whited out, or if the image contains a lot of noise, the face detection rate may worsen even if processing is performed normally by the program. Adjust the input image quality as needed before calling this function.<br><br>Parts detection may also fail even if the causes mentioned above do not occur. This can happen when the face angle is large such as when the face is turned almost sideways so that one eye is barely visible or when part of the face is hidden by hair, eyeglasses or something else.<br><br>Note that in some situations, a program that runs normally may end up detecting an invalid position, and in that case, it will be impossible to determine whether it was an invalid detection from the return value, the number of parts detected, or the contents of the <i>partsId</i> member of the <a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a> structure in the detection results.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>,<br><a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_ROLL_YAW_DICT">SCE_FACE_PARTS_ROLL_YAW_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>, <a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a>,<br><a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceEstimateAngle"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceEstimateAngle<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Parts Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Estimate face angle from the position of detected parts<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
int <b>sceFaceEstimateAngle</b>(
	int <i>width</i>,
	int <i>height</i>,
	const <a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> *<i>detectedFace</i>,
	<a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a> <i>detectedPartsArray[]</i>,
	int <i>numDetectedParts</i>,
	<a href="../image_recognition/libface-Reference-English.htm#SceFaceAngle">SceFaceAngle</a> *<i>resultFaceAngle</i>
)

</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Multithread safe<br><br></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image width [pixels]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image height [pixels]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>detectedFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to face detection results&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>detectedPartsArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to parts detection result array&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>numDetectedParts</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of detected parts&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>resultFaceAngle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to angle estimation result output area&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns SCE_OK(0) if processing is successful.	<br>Returns the following error code (negative value) if an error occurs.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_IMPERF_PARTS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Parts are incomplete&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function calculates the face rotation angle based on the positions of the right eye, left eye, nose and mouth.<br>The calculation is performed from only the face and parts detection results without performing any image recognition.<br><br>The <i>faceRoll</i>, <i>facePitch</i>, and <i>faceYaw</i> members of the <a href="../image_recognition/libface-Reference-English.htm#SceFaceAngle">SceFaceAngle</a> structure, which are output in <i>resultFaceAngle</i> are defined in a right-handed coordinate system as shown in Figure 2.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Read face detection dictionary data file */
unsigned char detectDict[SCE_FACE_DETECT_FRONTAL_DICT_SIZE];
unsigned char partsDict[SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE];
SceUID fd;
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, detectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, partsDict, SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE);
sceIoClose(fd);

unsigned char y_img[320*240];
<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult[16];
<a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a> resultPartsArray[<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>];
int i, num_face, num_parts, ret;

/* Execute face detection */
ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>( 		detectDict,
				y_img, 320, 240, 320,
				0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
				<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>,
				detectResult, 16, &amp;num_face);
if (ret != SCE_OK) { printf("error!\n"); return; }
for (i = 0; i &lt; num_face; i++) {
	/* Execute parts detection */
	ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>( 	partsDict,
				y_img, 320, 240, 320,
				1, 1, &amp;detectResult[i],
				resultPartsArray, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>,
				&amp;num_parts);
	if (ret != SCE_OK) { printf("error!\n"); return; }
	/* Estimate face angle according to parts positions */
	ret = sceFaceEstimateAngle(320, 240, &amp;detectResult[i],
				resultPartsArray, num_parts,
				&amp;resultFaceAngle);
	if (ret != SCE_OK) { printf("error!\n"); return; }
	printf("roll = %f pitch = %f yaw = %f\n",
				resultFaceAngle.faceRoll,
				resultFaceAngle.facePitch,
				resultFaceAngle.faceYaw);
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">For this function to work, the input parts information must contain normal detection results of all four parts (left and right eyes, nose and mouth). Otherwise, the face angle cannot be calculated and an <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_IMPERF_PARTS">SCE_FACE_ERROR_IMPERF_PARTS</a> error will be returned.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>, <a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a>, <a href="../image_recognition/libface-Reference-English.htm#SceFaceAngle">SceFaceAngle</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_PARTS_FRONTAL_ROLL_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_PARTS_FRONTAL_ROLL_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Parts Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Parts detection dictionary data file (frontal face with roll support)<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_PARTS_FRONTAL_ROLL_DICT</b> "face_parts_frontal_roll.pdt"
#define <b>SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE </b>40592

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the filename and size (in bytes) of dictionary data used in parts detection.<br>The <i>pPartsDict</i> argument of the parts detection execution function <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>() should be set with a pointer to the memory area where this file was read.<br>This dictionary supports frontal faces or tilted faces (faces with a roll angle).<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-English.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a> pPartsDict = (<a href="../image_recognition/libface-Reference-English.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a>)malloc(
				SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
		SCE_FACE_PARTS_FRONTAL_ROLL_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pPartsDict, SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>(pPartsDict, y_img, 320, 240, 320, 1, 1, &amp;detectResult[i],
		resultPartsArray, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>, &amp;num_parts);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Although the processing time for this dictionary is less than that for <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_ROLL_YAW_DICT">SCE_FACE_PARTS_ROLL_YAW_DICT</a>, it will have more parts detection errors for a face that is turned sideways (face with a large yaw angle).<br><br>This dictionary is suitable when <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>, or <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a> was used as the face detection dictionary. Although it can also be used for face detection results that were obtained using another face detection dictionary, there may be more parts detection errors when the yaw angle of the detected face is large.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_PARTS_ROLL_YAW_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_PARTS_ROLL_YAW_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Parts Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Parts detection dictionary data file (roll and yaw support)<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_PARTS_ROLL_YAW_DICT</b> "face_parts_roll_yaw.pdt"
#define <b>SCE_FACE_PARTS_ROLL_YAW_DICT_SIZE </b>125324

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the filename and size (in bytes) of dictionary data used in parts detection.<br>The <i>pPartsDict</i> argument of the parts detection execution function <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>() should be set with a pointer to the memory area where this file was read.<br>This dictionary data supports tilted faces or faces turned sideways (faces with a roll angle or a yaw angle).<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-English.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a> pPartsDict = (<a href="../image_recognition/libface-Reference-English.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a>)malloc(
				SCE_FACE_PARTS_ROLL_YAW_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
			SCE_FACE_PARTS_ROLL_YAW_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pPartsDict, SCE_FACE_PARTS_ROLL_YAW_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>(pPartsDict, y_img, 320, 240, 320, 1, 1, &amp;detectResult[i],
		resultPartsArray, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>, &amp;num_parts);

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Compared to <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>, there will be fewer parts detection errors in a face that is turned sideways (face with a large yaw angle) for this dictionary, however, the processing time will be greater.<br><br>This dictionary is suitable when <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a> or <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a> was used as the face detection dictionary. Although it can also be used for face detection results that were obtained by using another face detection dictionary, unnecessary redundant processing will be performed internally in that case and processing time will be wasted.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_PARTS_DICT_SIZE_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_PARTS_DICT_SIZE_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Parts Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum size of parts detection dictionary data file<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_PARTS_DICT_SIZE_MAX</b> 125324

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum size of a dictionary data file to be used in parts detection.<br>It can be used as the buffer size when the same data buffer will be used with different types of parts detection dictionary data.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_ROLL_YAW_DICT">SCE_FACE_PARTS_ROLL_YAW_DICT</a><br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="Parts Detection Macro"></a>
<table width="100%"><td width="70%"><font size=6>Parts Detection Macro<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Parts Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant used in parts detection<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum number of parts detected&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant is used in parts detection.<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="Parts Detection Parts ID Macros"></a>
<table width="100%"><td width="70%"><font size=6>Parts Detection Parts ID Macros<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Parts Detection APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Parts ID constants used in parts detection<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_ID_UNDEF">SCE_FACE_PARTS_ID_UNDEF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Undefined&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_ID_R_EYE_CENTER">SCE_FACE_PARTS_ID_R_EYE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Center of right eye&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_ID_L_EYE_CENTER">SCE_FACE_PARTS_ID_L_EYE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Center of left eye&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_ID_NOSE_CENTER">SCE_FACE_PARTS_ID_NOSE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Center of nose&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_ID_MOUTH_CENTER">SCE_FACE_PARTS_ID_MOUTH_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Center of mouth&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><pre><font size=3></font></pre></div>

<div style="margin-left:50px;">
<p>
<img src="gif/libface-Reference-English005.jpg">
</div>
<div style="margin-left:50px;"><pre><font size=3>

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These parts ID constants are used in parts detection.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceAttribDictPtr"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceAttribDictPtr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Attribute Discrimination APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Attribute discrimination dictionary data pointer type<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef void *<b>SceFaceAttribDictPtr</b>;

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This defined type is used as a pointer to dictionary data used in attribute discrimination.<br>It is used for an argument type of <a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>().<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceAttribResult"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceAttribResult<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Attribute Discrimination APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Attribute discrimination result<br></div><br>

<!-- Structure -->
<div style="margin-left:10px;"><b>Structure</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef struct{
	unsigned int <i>attribId</i>;
	float <i>score</i>;
} <b>SceFaceAttribResult</b>;

</font></pre></div>

<!-- Members -->
<div style="margin-left:10px;"><b>Members</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>attribId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Attribute ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>score</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Attribute score&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This data type is output for attribute discrimination results. When <a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>() is called, the discriminated result is written as an array of these structures in the area set in the <i>resultAttribArray</i> argument.<br><br>For <i>attributeId</i> enter any of the following values.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ATTRIB_ID_UNDEF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Undefined attribute&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ATTRIB_ID_SMILE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Smiling face (0.0: Sorrowful, 20.0: &nbsp;&nbsp;<br>&nbsp;&nbsp;Expressionless, 100.0: Big smile)&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;">When <i>attribId</i> is SCE_FACE_ATTRIB_ID_SMILE, the value entered in <i>score</i>, which is associated with the degree of a smile, is output as a normalized value ranging from 0.0 to 100.0.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceAttribute"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceAttribute<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Attribute Discrimination APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Execute attribute discrimination<br></div><br>

<!-- Syntax -->
<div style="margin-left:10px;"><b>Syntax</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
int <b>sceFaceAttribute</b>(
	<a href="../image_recognition/libface-Reference-English.htm#SceFaceAttribDictPtr">SceFaceAttribDictPtr</a> <i>pAttribDict</i>,
	const unsigned char *<i>imgPtr</i>,
	int <i>width</i>,
	int <i>height</i>,
	int <i>rowstride</i>,
	const <a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> *<i>detectedFace</i>,
	const <a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a> <i>detectedPartsArray[]</i>,
	int <i>numDetectedParts</i>,
	<a href="../image_recognition/libface-Reference-English.htm#SceFaceAttribResult">SceFaceAttribResult</a> <i>resultAttribArray[]</i>,
	int <i>resultAttribArraySize</i>,
	int *<i>numResultAttrib</i>
)
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Calling Conditions -->
<div style="margin-left:10px;"><b>Calling Conditions</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Can be called from an interrupt handler<br>Can be called from a thread (does not depend on an interrupt-disabled or -enabled state)<br>Not multithread safe<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- Arguments -->
<div style="margin-left:10px;"><b>Arguments</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pAttribDict</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to attribute discrimination dictionary data&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>imgPtr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to input image (8-bit grayscale)&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image width [pixels]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image height [pixels]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rowstride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Input image data width&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>detectedFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to face detection results&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>detectedPartsArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to parts detection results&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>numDetectedParts</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of detected parts&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultAttribArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Pointer to attribute discrimination result output area&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultAttribArraySize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of array elements in <i>resultAttribArray</i>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>numResultAttrib</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Number of discriminated attributes&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- Return Value -->
<div style="margin-left:10px;"><b>Return Value</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">Returns SCE_OK(0) if processing is successful.	<br>Returns one of the following error codes (negative values) if an error occurs.<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_NO_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Failed to allocate memory&nbsp;&nbsp;<br>&nbsp;&nbsp;Memory management &nbsp;&nbsp;<br>&nbsp;&nbsp;functions have not been &nbsp;&nbsp;<br>&nbsp;&nbsp;set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_IMPERF_PARTS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Parts are incomplete&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_INVALID_DICT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection dictionary data is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This function uses face detection results and parts detection results for the eyes, nose and mouth to perform attribute discrimination.<br><br>For <i>pAttribDict</i>, set a pointer to the memory area where the attribute discrimination dictionary data file <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a> was read.<br>The input image that is set in <i>imgPtr</i> must be the same as the one used in parts detection.<br>The face detection results that are set in <i>detectedFace</i> must be the same results as those used as input to parts detection.<br>The parts detection results that are set in <i>detectedPartsArray</i> must be results for which the eyes, nose and mouth are all detected normally, and <i>numDetectedParts</i> must be <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>(4).<br>If the parts detection results that were set do not satisfy these conditions and attribute discrimination cannot be performed, an <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_IMPERF_PARTS">SCE_FACE_ERROR_IMPERF_PARTS</a> error will be returned.<br><br>For <i>resultAttribArray</i>, set a pointer to an array of <a href="../image_recognition/libface-Reference-English.htm#SceFaceAttribResult">SceFaceAttribResult</a> structures having <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>(1) elements, and for <i>resultAttribArraySize</i>, set <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>(1).<br>When attribute discrimination processing is performed normally, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>(1) is returned in <i>numResultAttrib</i>, and the attribute discrimination results are output as an SceFaceAttribResults array of  <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>(1) elements to the area specified by <i>resultAttribArray</i>.<br>If an <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a> or <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_IMPERF_PARTS">SCE_FACE_ERROR_IMPERF_PARTS</a> error occurs, 0 is always returned in <i>numResultAttrib</i>.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* Read face detection dictionary data file */
unsigned char detectDict[SCE_FACE_DETECT_FRONTAL_DICT_SIZE];
unsigned char partsDict[SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE];
unsigned char attribDict[SCE_FACE_ATTRIB_SMILE_DICT_SIZE];
SceUID fd;
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, detectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, partsDict, SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE);
sceIoClose(fd);
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, attribDict, SCE_FACE_ATTRIB_SMILE_DICT_SIZE);
sceIoClose(fd);

unsigned char y_img[320*240];
<a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult[16];
<a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a> resultPartsArray[<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>];
<a href="../image_recognition/libface-Reference-English.htm#SceFaceAttribResult">SceFaceAttribResult</a> resultAttribArray[<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>];
int i, j, num_face, num_parts, num_attrib, ret;

/* Execute face detection */
ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceDetection">sceFaceDetection</a>(  		detectDict,
				y_img, 320, 240, 320,
				0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
				<a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>,
				detectResult, 16, &amp;num_face);
if (ret != SCE_OK) { printf("error!\n"); return; }
for (i = 0; i &lt; num_face; i++) {
	/* Execute parts detection */
	ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceParts">sceFaceParts</a>( 	partsDict,
				y_img, 320, 240, 320,
				1, 1, &amp;detectResult[i],
				resultPartsArray, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>,
				&amp;num_parts);
	if (ret != SCE_OK) { printf("error!\n"); return; }
	/* Execute attribute discrimination */
	ret = sceFaceAttribute( 	attribDict,
				y_img, 320, 240, 320, &amp;detectResult[i],
				resultPartsArray, num_parts,
				resultAttribArray, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>,
				&amp;num_attrib);
	if (ret != SCE_OK) { printf("error!\n"); return; }
	for (j = 0; j &lt; num_attrib; j++) {
		printf("facial attribute:   id = %d score = %f\n",
			resultAttribArray[j].attribId, resultAttribArray[j].score);
	}
}

</font></pre></div>

<!-- Notes -->
<div style="margin-left:10px;"><b>Notes</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">If <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>() has not been called before this function is executed, an <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a> error will be returned. Be sure to call <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>() once to set the memory management functions before executing this function.<br><br>Since this function dynamically allocates, uses, and frees heap memory internally, dynamic memory allocation in the initial stage of attribute discrimination processing may fail if the heap memory size is set too small. In this case, processing will not be executed and an <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a> error will be returned.<br><br>If the input image shooting conditions were not ideal and the face parts are dark due to backlighting or insufficient light or if, on the other hand, the face is overexposed and is whited out, or if the image contains a lot of noise, attribute discrimination performance may worsen even if processing is performed normally by the program. Adjust the input image quality as needed before calling this function.<br><br>Attribute discrimination performance tends to get worse the more the face is offset from the frontal direction (as the face angle increases).<br>Also, due to a cause other than image quality, an offset from a real part position may end up being incorrectly recognized as the actual part position without an error occurring in the program, and the attribute discrimination result in that case may also differ from the true result. <br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceAttribDictPtr">SceFaceAttribDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a>, <a href="../image_recognition/libface-Reference-English.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>,<br><a href="../image_recognition/libface-Reference-English.htm#SceFacePartsResult">SceFacePartsResult</a>, <a href="../image_recognition/libface-Reference-English.htm#SceFaceAttribResult">SceFaceAttribResult</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_ATTRIB_SMILE_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_ATTRIB_SMILE_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Attribute Discrimination APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Attribute discrimination dictionary data file (degree of smile)<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_ATTRIB_SMILE_DICT</b> "face_attrib_smile.adt"
#define <b>SCE_FACE_ATTRIB_SMILE_DICT_SIZE</b> 6568

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">These constants represent the filename and size (in bytes) of dictionary data used in attribute discrimination.<br>The <i>pAttribDict</i> argument of the attribute discrimination execution function <a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>() should be set with a pointer to the memory area where this file was read.<br>Using this dictionary enables discrimination processing to be performed to determine the degree of a smile.<br><br></div>

<!-- Example -->
<div style="margin-left:10px;"><b>Example</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-English.htm#SceFaceAttribDictPtr">SceFaceAttribDictPtr</a> pAttribDict = (<a href="../image_recognition/libface-Reference-English.htm#SceFaceAttribDictPtr">SceFaceAttribDictPtr</a>)malloc(
					SCE_FACE_ATTRIB_SMILE_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
				SCE_FACE_ATTRIB_SMILE_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pAttribDict, SCE_FACE_ATTRIB_SMILE_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>(pAttribDict, y_img, 320, 240, 320, &amp;detectResult[i],
		resultPartsArray, num_parts,
		resultAttribArray, <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>, &amp;num_attrib);

</font></pre></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SceFaceAttribDictPtr">SceFaceAttribDictPtr</a>, <a href="../image_recognition/libface-Reference-English.htm#sceFaceAttribute">sceFaceAttribute</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_ATTRIB_DICT_SIZE_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_ATTRIB_DICT_SIZE_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Attribute Discrimination APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Maximum size of attribute discrimination dictionary data file<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_ATTRIB_DICT_SIZE_MAX</b> 6568

</font></pre></div>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This is the maximum size of a dictionary data file to be used in attribute discrimination.<br>Since the only attribute discrimination dictionary data file currently is <a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a>, this is the same value as SCE_FACE_ATTRIB_SMILE_DICT_SIZE.<br><br></div>

<!-- See Also -->
<div style="margin-left:10px;"><b>See Also</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-English.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a><br><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="Attribute Discrimination Macro"></a>
<table width="100%"><td width="70%"><font size=6>Attribute Discrimination Macro<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Attribute Discrimination APIs]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Constant used in attribute discrimination<br></div><br>

<!-- Definition -->
<div style="margin-left:10px;"><b>Definition</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Maximum number of attributes &nbsp;&nbsp;<br>&nbsp;&nbsp;discriminated&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- Description -->
<div style="margin-left:10px;"><b>Description</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">This constant is used in attribute discrimination.<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="List of Error Codes"></a>
<table width="100%"><td width="70%"><font size=6>List of Error Codes<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[Error Codes]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>Error codes returned by libface<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Macro</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Value</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>Description</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_OK">SCE_OK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Processing completed &nbsp;&nbsp;<br>&nbsp;&nbsp;successfully&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Failed to allocate memory&nbsp;&nbsp;<br>&nbsp;&nbsp;Memory management functions &nbsp;&nbsp;<br>&nbsp;&nbsp;have not been set&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_ERROR_IMPERF_PARTS">SCE_FACE_ERROR_IMPERF_PARTS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Parts are incomplete&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_ERROR_INVALID_DICT">SCE_FACE_ERROR_INVALID_DICT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;Face detection dictionary data is invalid&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
