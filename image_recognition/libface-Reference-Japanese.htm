<html lang="jp">
<head>
<title>libface-Reference</title>
<meta http-equiv="Content-Type" content= text/html; charset=Shift_JIS>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="Text/css>
<meta name="Author"Content=" Sony Computer Entertainment Inc.">
</head>
<body bgcolor="#ffffff" text="#000000" >
<a name=TOP></a>
<table WIDTH="100%">
<tr><td>
<h3>PSP&reg; Programmer Tool Runtime Library Release 6.6.0</h3>
</td>
</tr>
</table>
<hr noshade size=6>
<center><h1>
libface リファレンス
</h1></center>
</a>
<!-- sce_hd1 -->
<div style="margin-left:50px;"><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceMallocFunction"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceMallocFunction<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[メモリ管理のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>malloc関数ポインタ型<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef void *(*<b>SceFaceMallocFunction</b>)(SceSize <i>size</i>);

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">libfaceライブラリ内部から呼び出されるメモリ確保関数のポインタ型です。<br>malloc()関数とインタフェース互換です。<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()の引数の型に用いられます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceFreeFunction"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceFreeFunction<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[メモリ管理のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>free関数ポインタ型<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef void (*<b>SceFaceFreeFunction</b>)(void *<i>p</i>);

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">libfaceライブラリ内部から呼び出されるメモリ解放関数のポインタ型です。<br>free()関数とインタフェース互換です。<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()の引数の型に用いられます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceSetMallocFunction"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceSetMallocFunction<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[メモリ管理のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>メモリ管理関数の設定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libace.h&gt;
void <b>sceFaceSetMallocFunction</b>(
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceMallocFunction">SceFaceMallocFunction</a> <i>malloc_func</i>,
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceFreeFunction">SceFaceFreeFunction</a> <i>free_func</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>malloc_func</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;malloc()関数とインタフェース互換のメモリ確保関数へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>free_func</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;free()関数とインタフェース互換のメモリ解放関数へのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">なし<br><br></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">libfaceライブラリ内部で用いられるメモリ確保および解放関数を設定するための関数です。<br>libfaceを使用する際には最初に必ず本関数を呼び出してください。<br><br>libfaceはライブラリ関数内部で処理に必要な作業領域分のメモリをヒープメモリから動的に確保・解放する処理を行いますが、アプリケーション側でメモリ管理を自由に行えるよう、メモリ管理関数を固定化していません。libface.prxモジュールをロード後、必ず本関数を呼び出してlibface内部で用いるメモリ管理関数のポインタを設定してから顔認識処理を実行するようにしてください。メモリ管理関数を未設定のまま顔認識処理を実行した場合には、顔認識処理実行関数の返り値にメモリ確保に失敗したことを示すエラーコード<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a> (0x80580001) が返り、顔認識処理は実行されません。<br><br>標準ライブラリのmalloc(),free()を用いる場合でも本関数による設定が必要です。使用例を参照してください。また、ユーザー定義のメモリ管理関数を設定することもできますが、使用例に示すようにユーザー定義のメモリ関数はmalloc(),free()関数と互換性のある形式にしてください。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>一般的な初期化の例（標準ライブラリのmalloc,freeを使う場合）
SceUID mid = <a href="../kernel/Module_Manager-Reference-Japanese.htm#sceKernelLoadModule">sceKernelLoadModule</a>("host0:../../../module/libface.prx", 0, NULL);
if (mid &lt; 0) { printf("error!\n"); return; }
int ret = <a href="../kernel/Module_Manager-Reference-Japanese.htm#sceKernelStartModule">sceKernelStartModule</a>(mid, 0, NULL, NULL, NULL);
if (ret &lt; 0) { printf("error!\n"); return; }
sceFaceSetMallocFunction(malloc, free);

ユーザー定義のメモリ管理関数を設定する例
void *my_malloc(size_t size) { return malloc(size); }
void my_free(void *ptr) { free(ptr); }

sceFaceSetMallocFunction(my_malloc, my_free);

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">動的メモリ確保および解放を行う関数は、顔検出実行関数である<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()および<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()、顔パーツ検出実行関数である<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()、顔属性判別実行関数である<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()です。これらの関数内部では処理に必要な作業領域分のメモリを動的に確保してから顔認識処理を開始し、関数内で確保したメモリを全て解放してから関数から抜けます。それ以外の関数内部ではヒープメモリ確保のような動的メモリ確保は行われません。<br><br>各関数内部で動的に確保されるメモリサイズは、主に画像サイズの影響を受けますが、辞書の種類や検出された顔のサイズ、検出精度を調整するパラメータなどの影響も受けます。<br>必要なメモリ量に関しては、実際に使用する条件に合わせた実行テストを行って実際に消費されるメモリ量を計測した上で多少の余裕を見込んでください。サンプルsimple_face_my_mallocにおいて簡易的にメモリ消費量を調べることができますので参考にしてください。<br><br>本関数内の処理は、libfaceライブラリ内部の動的メモリ確保・解放に用いている関数ポインタ（グローバル変数）内のアドレス値を書き換えるだけです。エラー処理等は一切行っていませんので誤ったアドレスを設定しないようにしてください。またアプリケーション中で一度呼び出せばそれ以降ずっとその設定が有効となります。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceMallocFunction">SceFaceMallocFunction</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceFreeFunction">SceFaceFreeFunction</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(),<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceDetectDictPtr"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceDetectDictPtr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>顔検出用辞書データのポインタ型<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef void *<b>SceFaceDetectDictPtr</b>;

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出で使用する辞書データへのポインタ型定義です。<br>顔検出実行関数<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()の引数の型に用いられます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceDetectionResult"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceDetectionResult<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>顔検出の結果（検出された顔領域）<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef struct{
	float <i>faceX</i>;
	float <i>faceY</i>;
	float <i>faceW</i>;
	float <i>faceH</i>;
	float <i>faceRoll</i>;
	float <i>facePitch</i>;
	float <i>faceYaw</i>;
	unsigned int <i>angleLabel</i>;
	int <i>score</i>;
	int <i>averageScore</i>;
	unsigned int <i>numDetect</i>;
} <b>SceFaceDetectionResult</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceX</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔領域の左上隅のx座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceY</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔領域の左上隅のy座標&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceW</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔領域の横幅&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceH</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔領域の高さ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceRoll</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔領域の平面（ロール軸）回転角度[radian]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>facePitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔領域の垂直方向（ピッチ軸）回転角度[radian]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceYaw</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔領域の水平方向（ヨー軸）回転角度[radian]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>angleLabel</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔領域の角度ラベル表現（libface内部で使用）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>score</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔領域の最大スコア（固定小数点表現）（libface内部で使用）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>averageScore</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔領域の平均スコア（固定小数点表現）（libface内部で使用）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>numDetect</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出結果をマージしたときの検出回数（libface内部で使用）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出の結果を表すデータ型です。顔検出実行関数<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()または<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()を呼び出すと、これらの関数の引数<i>resultFaceArray</i>に設定したポインタがさすメモリ領域（SceFaceDetectionResult配列）に検出された顔の個数分のデータが書き込まれます。<br><br>また、<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()の処理にこの顔検出結果を用いますので、これらの関数の引数<i>detectedFace</i>に検出された顔データ（SceFaceDetectionResult）のポインタを設定します。<br><br><i>faceX</i>, <i>faceY</i>, <i>faceW</i>, <i>faceH</i>は入力画像の横幅／高さで正規化された座標系で表現されています。<br></div>

<div align=center>
<p>
<img src="gif/libface-Reference-Japanese001.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 1  顔検出結果</b><br>
</div>
<br>
<div style="margin-left:50px;"><br><i>faceRoll</i>, <i>facePitch</i>, <i>faceYaw</i>は図2に示すような右手座標系で定義されています。<br><br></div>

<div align=center>
<p>
<img src="gif/libface-Reference-Japanese002.jpg">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 2  顔検出結果における回転軸（ロール、ピッチ、ヨー）とその方向</b><br>
</div>
<br>
<div style="margin-left:50px;">以下のコードにより、顔領域（<i>faceX</i>, <i>faceY</i>, <i>faceW</i>, <i>faceH</i>, <i>faceRoll</i>, <i>facePitch</i>, <i>faceYaw</i>）を入力画像上の座標に変換することができます。<br><br></div>
        <div style="margin-left:50px;"><pre><font size=3>void rotate(int* ox, int *oy, int ix, int iy, int cx, int cy, float radian)
{
    const float c = cosf(radian);
    const float s = sinf(radian);
    ix -= cx;
    iy -= cy;
    *ox = (int)(ix * c - iy * s + cx);
    *oy = (int)(ix * s + iy * c + cy);
}

SceFaceDetectionResult face;
const int x1 = (int)( face.faceX * image_width);
const int y1 = (int)( face.faceY * image_height);
const int x2 = (int)((face.faceX + face.faceW) * image_width);
const int y2 = (int)((face.faceY + face.faceH) * image_height);
const int cx = (int)((face.faceX + face.faceW / 2) * image_width);
const int cy = (int)((face.faceY + face.faceH / 2) * image_height);
int face_top_left_x, face_top_left_y;  // pixel position
int face_top_right_x, face_top_right_y;  // pixel position
int face_bottom_left_x, face_bottom_left_y;  // pixel position
int face_bottom_right_x, face_bottom_right_y;  // pixel position

rotate(&amp;face_top_left_x, &amp;face_top_left_y, x1, y1, cx, cy, -face.faceRoll);
rotate(&amp;face_top_right_x, &amp;face_top_right_x, x2, y1, cx, cy, -face.faceRoll);
rotate(&amp;face_bottom_left_x, &amp;face_bottom_left_y, x1, y2, cx, cy, -face.faceRoll);
rotate(&amp;face_bottom_right_x, &amp;face_bottom_right_y, x2, y2, cx, cy, -face.faceRoll);

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceDetection"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceDetection<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>顔検出の実行<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
int <b>sceFaceDetection</b>(
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> <i>pDetectDict</i>,
	const unsigned char *<i>imgPtr</i>,
	int <i>width</i>,
	int <i>height</i>,
	int <i>rowstride</i>,
	float <i>magBegin</i>,
	float <i>magStep</i>,
	float <i>magEnd</i>
	int <i>xScanStep</i>,
	int <i>yScanStep</i>,
	float <i>thresholdBias</i>,
	int <i>resultPrecision</i>,
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> <i>resultFaceArray[]</i>,
	int <i>resultFaceArraySize</i>,
	int *<i>numResultFace</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pDetectDict</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データへのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>imgPtr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像（8bitグレースケール）へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像の横幅[pixel]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像の高さ[pixel]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rowstride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像のデータ幅&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>magBegin</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像のスケーリング開始倍率&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>magStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像のスケーリング率（推奨値：0.841f）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>magEnd</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像のスケーリング終了倍率（推奨値：0.0f）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>xScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出ウィンドウの水平方向シフト量[pixel]（推奨値：2）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>yScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出ウィンドウの垂直方向シフト量[pixel]（推奨値：2）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>thresholdBias</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出率の調整値（推奨値：1.0f）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultPrecision</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出結果位置精度設定値&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultFaceArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出の結果の出力領域へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultFaceArraySize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>resultFaceArray</i>配列の要素数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>numResultFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔の数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合はSCE_OK(0)を返します。<br>エラーの場合は次のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_NO_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メモリ確保に失敗&nbsp;&nbsp;<br>&nbsp;&nbsp;メモリ管理関数が未設定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_INVALID_DICT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔認識辞書データが不正&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出を行うための関数です。<br><br><i>pDetectDict</i>には、アプリケーションの用途に合わせて、顔検出用辞書データファイル<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a>のいずれかを読み込んだメモリ領域へのポインタを設定してください。<br>これらの顔検出辞書の違いは主に検出可能な顔の角度範囲と処理時間のトレードオフになります。<br><i>magBegin</i>には、入力画像のスケーリングの開始倍率として1.0f以下の値を設定してください。20/<i>magBegin</i>が入力画像上での最小顔検出サイズ[pixel]になります。<i>magBegin</i>は可能な限り小さい値に設定した方が処理時間は短くなりますが、小さすぎると入力画像上の大きな顔しか検出できなくなります。<i>magBegin</i>の値は処理時間に比較的大きな影響を与えますので、必ずアプリケーションの用途や画像サイズに合わせて適切な値に調整するようにしてください。<br><i>magEnd</i>には、入力画像のスケーリング終了倍率として0.0f以上の値を設定してください。20/<i>magEnd</i>が入力画像上での最大顔検出サイズ[pixel]になりますが、<i>magEnd</i>の設定変更による処理時間の変化は一般的にはそれほど大きくないので、画像サイズに関わらず常に画像一杯の大きさの顔まで検出できる0.0fを推奨値とします。<br><i>magStep</i>の推奨値は0.841fです。入力画像を<i>magBegin</i>から<i>magEnd</i>まで<i>magStep</i>倍しながら顔を探索していくことによって様々な大きさの顔を検出していますので、<i>magStep</i>を小さめ（例えば0.75fなど）に設定することで中間倍率の数を減らし全体の処理時間の短縮を図ることは可能ですが、大きさについては粗く顔検出することになりますので検出精度は低下します。<br><i>xScanStep</i>および<i>yScanStep</i>の推奨値は2[pixel]です。これらは顔検出処理の位置的な粗さを表し、1[pixel]に設定すると検出精度は上がりますが、処理時間は長くなります。逆に3[pixel]にすると処理時間は短くなりますが、検出漏れが発生する可能性が出てきます。<i>xScanStep</i>と<i>yScanStep</i>は異なる値を設定することも可能です。<br><br></div>


<div align=center>
<p>
<img src="gif/libface-Reference-Japanese003.gif">
</div>
<br>
<br>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 3  入力画像のスケーリング</b><br>
</div>
<br>
<div style="margin-left:50px;"><br><i>resultPrecision</i>には、アプリケーションの用途に合わせて、<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_PRECISE">SCE_FACE_RESULT_PRECISE</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_FAST">SCE_FACE_RESULT_FAST</a>のいずれかを選択して設定します。<br>上記のように検出精度と処理時間は相反する関係にありますので、これらのパラメータを調整することでアプリケーションの用途に合わせた最適なバランスに設定してください。パラメータ調整の際には、なるべく実際のアプリケーションの使用状況に近い条件で実行テストを行うことを推奨します。<br><br><i>thresholdBias</i>で検出率の微調整が可能です。0.0f〜1.0fの値を設定してください。通常は1.0fを指定しますが、誤検出（顔でないところを顔と判定してしまうこと）が多少増えても検出漏れが少ない場合がよいというときには小さめの値を設定してください。このパラメータを変更しても処理時間には影響ありません。<br><br><i>resultFaceArray</i>には、顔検出結果を保存する<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>配列のポインタを設定してください。<br><i>resultFaceArraySize</i>には<i>resultFaceArray</i>の配列要素数を設定してください。出力される顔検出結果の個数は、バッファオーバーランが起こらないよう<i>resultFaceArraySize</i>以下に制限されます。<br><i>numResultFace</i>には検出された顔の個数が返ります。<br><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>エラーが発生した場合には、<i>numResultFace</i>には常に0が返ります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* 顔認識辞書データファイルの読み込み */
unsigned char detectDict[SCE_FACE_DETECT_FRONTAL_DICT_SIZE];
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, detectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);

unsigned char y_img[320*240];
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult[16];
int i, num_face, ret;

/* 顔検出の実行 */
ret = sceFaceDetection(		detectDict,
				y_img, 320, 240, 320,
				0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
				<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>,
				detectResult, 16, &amp;num_face);
if (ret != SCE_OK) { printf("error!\n"); return; }
for (i = 0; i &lt; num_face; i++) {
	printf("face[%d] x = %f y = %f w = %f h = %f\n", i,
			detectResult[i].faceX, detectResult[i].faceY,
			detectResult[i].faceW, detectResult[i].faceH);
}

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">本関数を実行する前に一度も<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()が呼ばれていない場合には、返り値に<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>が返ります。本関数を実行する前に必ず一度<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()を呼び出してメモリ管理関数を設定してください。<br><br>本関数内部ではヒープ領域のメモリ動的にを確保・使用・解放しているため、ヒープメモリサイズがごく小さい設定になっていると下記のような現象が起こる場合があります。<br>顔検出処理の初期段階におけるまとまった量の動的メモリ確保で失敗した場合は、顔検出処理を実行せず返り値<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>ですぐに関数から返ります。<br>顔検出処理の開始までは成功したものの、内部での中間結果の一時的保存領域が途中で不足した場合には、出力された検出精度が若干悪化する場合があります。<br><br>入力画像の撮影条件が好ましくなく、逆光や光量不足によって顔部分が暗くなってしまっている場合や逆に露出オーバーで顔が白く飛んでしまっている場合、あるいはノイズが多い画像などでは、プログラム上は正常に処理が行われても顔検出率が悪化する場合があります。必要に応じて入力画像品質の調整をしてから本関数を呼び出すようにしてください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>,<br><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a>,<br><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a>,<br><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceDetectionLocal"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceDetectionLocal<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>局所サーチによる高速顔検出の実行<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
int <b>sceFaceDetectionLocal</b>(
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> <i>pDetectDict</i>,
	const unsigned char *<i>imgPtr</i>,
	int <i>width</i>,
	int <i>height</i>,
	int <i>rowstride</i>,
	float <i>magExpandFaceRegion</i>,
	float <i>magStep</i>,
	int <i>xScanStep</i>,
	int <i>yScanStep</i>,
	float <i>thresholdBias</i>,
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> <i>referenceFaceArray[]</i>,
	int <i>numReferenceFace</i>,
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> <i>resultFaceArray[]</i>,
	int <i>resultFaceArraySize</i>,
	int *<i>numResultFace</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pDetectDict</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出用辞書データへのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>imgPtr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像（8bitグレースケール）へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像の横幅[pixel]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像の高さ[pixel]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rowstride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像のデータ幅&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>magExpandFaceRegion</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;参照する顔領域の拡大率（探索範囲の調整）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>magStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像のスケーリング率（推奨値：0.841f）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>xScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出ウィンドウの水平方向シフト量[pixel]（推奨値：1）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>yScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出ウィンドウの垂直方向シフト量[pixel]（推奨値：1）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>thresholdBias</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出率の調整値（推奨値：1.0f）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>referenceFaceArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;参照する顔検出結果配列へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>numReferenceFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;参照する顔検出結果の顔の数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultFaceArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出の結果の出力領域へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultFaceArraySize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>resultFaceArray</i>配列の要素数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>numResultFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出された顔の数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合はSCE_OK(0)を返します。<br>エラーの場合は次のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_NO_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メモリ確保に失敗&nbsp;&nbsp;<br>&nbsp;&nbsp;メモリ管理関数が未設定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_INVALID_DICT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔認識辞書データが不正&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">局所サーチを使って高速に顔検出を行うための関数です。<br>ビデオ信号など時系列画像から顔検出を行う場合、前フレームで検出された顔領域の周辺でのみ顔探索処理を実行する（局所サーチを行う）ことにより、検出速度を向上させることができます。<br><br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()と同じ引数の説明は省略します。<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()の解説を参照してください。<br><br><i>referenceFaceArray</i>には、<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()によって画像全体に対して顔検出処理を行った結果が保存されている<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>配列もしくはsceFaceDetectionLocal()による前フレームの局所サーチ顔検出の結果が保存されている<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>配列を指定し、<i>numReferenceFace</i>には、その顔の数を指定してください。<br><i>referenceFaceArray</i>に指定した顔領域の位置と大きさを参照して、顔検出処理のスケーリング処理とスキャン処理に対して範囲の絞り込みを行うことで画像全体の探索に比べて大幅な高速化が可能になります。<br><br><i>magExpandFaceRegion</i>には、参照する顔領域の拡大率として1.0f以上の値を指定してください。この値を小さくするほど狭い範囲を探索することになり処理時間の大幅な短縮が可能ですが、小さくしすぎると顔が速く動いた場合に対応できず、顔を見失いやすくなってしまいます。<br><i>xScanStep</i>および<i>yScanStep</i>の役割は<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()の場合と同じですが、1[pixel]の方が検出ミスが発生しにくく位置精度も上がり、全体の処理時間はそれほどかからないため1[pixel]を推奨値としますが、より高速な処理が必要な場合には、<i>xScanStep</i>および<i>yScanStep</i>の片方または両方の値を2[pixel]に設定してください。その場合には検出ミスが発生しやすくなる可能性があります。<br><br><i>magStep</i>の役割も<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()の場合と同じで推奨値は0.841fですが、内部でのスケーリング段数は参照する顔領域の大きさを中心とした3段階のみに制限されます。さらに高速化が必要な場合でかつ顔の大きさがほとんど変化しない場合には、1.0fまたは0.0fを設定するとスケーリングについては1段階しか処理を行わなくなりさらなる高速化が図られますが、顔の大きさの変化には対応できなくなります。<br><br>上記のように探索範囲と処理時間は相反する関係にありますので、これらのパラメータを調整することでアプリケーションの用途に合わせた最適なバランスに設定してください。パラメータ調整の際には、なるべく実際のアプリケーションの使用状況に近い条件で実行テストを行うことを推奨します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* 顔認識辞書データファイルの読み込み */
unsigned char detectDict[SCE_FACE_DETECT_FRONTAL_DICT_SIZE];
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, detectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);

unsigned char y_img[320*240];
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult[16];
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult2[16];
int i, num_face, ret;

/* 顔検出の実行 */
ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(		detectDict,
				y_img, 320, 240, 320,
				0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
				<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>,
				detectResult, 16, &amp;num_face);
if (ret != SCE_OK) { printf("error!\n"); return; }
/* 局所サーチ顔検出の実行 */
ret = sceFaceDetectionLocal(	detectDict,
				y_img, 320, 240, 320,
				1.1f, 0.841f, 1, 1, 1.0f,
				detectResult, num_face,
				detectResult2, 16, &amp;num_face2);
if (ret != SCE_OK) { printf("error!\n"); return; }
for (i = 0; i &lt; num_face2; i++) {
	printf("face[%d] x = %f y = %f w = %f h = %f\n", i,
			detectResult2[i].faceX, detectResult2[i].faceY,
			detectResult2[i].faceW, detectResult2[i].faceH);
}

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()の備考と同じ内容のため省略します。<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()の備考を参照してください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>,<br><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a>,<br><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a>,<br><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_FRONTAL_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_FRONTAL_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>顔検出用辞書データファイル（正面顔専用）<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_FRONTAL_DICT</b> "face_detect_frontal.fdt"
#define <b>SCE_FACE_DETECT_FRONTAL_DICT_SIZE</b> 25180

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出で使用する辞書データのファイル名とファイルサイズ（バイト）です。<br>顔検出実行関数<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()の引数<i>pDetectDict</i>に本ファイルを読み込んだメモリ領域へのポインタを設定してください。<br>この辞書データは正面顔のみを検出します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> pDetectDict = (<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>)malloc(
					SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face"
				SCE_FACE_DETECT_FRONTAL_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pDetectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(pDetectDict, y_img, 320, 240, 320, 0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
			<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, detectResult, 16, &amp;num_face);

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">この辞書はほぼ正面を向き傾きもない顔しか検出できませんが、他の顔検出用辞書に比べ処理時間が短くなります。<br><br>顔検出用辞書の種類はアプリケーションの使用目的に応じて使い分けてください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_FRONTAL_FAST_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_FRONTAL_FAST_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>顔検出用辞書データファイル（正面顔専用高速版）<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_FRONTAL_FAST_DICT</b> "face_detect_frontal_fast.fdt"
#define <b>SCE_FACE_DETECT_FRONTAL_FAST_DICT_SIZE</b> 23132

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出で使用する辞書データのファイル名とファイルサイズ（バイト）です。<br>顔検出実行関数<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()の引数<i>pDetectDict</i>に本ファイルを読み込んだメモリ領域へのポインタを設定してください。<br>この辞書データは正面顔のみを検出し、<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>よりも若干高速です。<br></div>
<br>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> pDetectDict = (<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>)malloc(
					SCE_FACE_DETECT_FRONTAL_FAST_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
			SCE_FACE_DETECT_FRONTAL_FAST_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pDetectDict, SCE_FACE_DETECT_FRONTAL_FAST_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(pDetectDict, y_img, 320, 240, 320, 0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
			<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, detectResult, 16, &amp;num_face);

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">この辞書は<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>と同一の正面顔専用の辞書内容のまま、さらなる処理速度の向上を図ったものです。内部の実装を見直しインストラクションキャッシュの使用比率を高めることで、他の処理がほとんどない場合には<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>を用いた場合よりも10％〜15％程度高速になります。ただしアプリケーション側の他の処理内容によってはインストラクションキャッシュミスが増加する副作用が発生する可能性もありますので、状況に応じて使い分けてください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_ROLL_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_ROLL_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>顔検出用辞書データファイル（傾き対応）<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_ROLL_DICT</b> "face_detect_roll.fdt"
#define <b>SCE_FACE_DETECT_ROLL_DICT_SIZE</b> 78368

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出で使用する辞書データのファイル名とファイルサイズ（バイト）です。<br>顔検出実行関数<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()の引数<i>pDetectDict</i>に本ファイルを読み込んだメモリ領域へのポインタを設定してください。<br>この辞書データは傾きのある顔（ロール角付きの顔）にも対応します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> pDetectDict = (<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>)malloc(
					SCE_FACE_DETECT_ROLL_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
			SCE_FACE_DETECT_ROLL_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pDetectDict, SCE_FACE_DETECT_ROLL_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(pDetectDict, y_img, 320, 240, 320, 0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
			<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, detectResult, 16, &amp;num_face);

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">この辞書は傾きのある（ロール角付き）の顔は検出可能ですが、横向き（ヨー角付き）の顔は検出できません。処理時間は中間になります。<br><br>顔検出用辞書の種類はアプリケーションの使用目的に応じて使い分けてください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_ROLL_YAW_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_ROLL_YAW_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>顔検出用辞書データファイル（傾き横向き対応）<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_ROLL_YAW_DICT</b> "face_detect_roll_yaw.fdt"
#define <b>SCE_FACE_DETECT_ROLL_YAW_DICT_SIZE</b> 170876

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出で使用する辞書データのファイル名とファイルサイズ（バイト）です。<br>顔検出を実行する関数<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()の引数<i>pDetectDict</i>に本ファイルを読み込んだメモリ領域へのポインタを設定してください。<br>この辞書データは傾きのある顔や横向きの顔（ロール角やヨー角付きの顔）にも対応します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> pDetectDict = (<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>)malloc(
				SCE_FACE_DETECT_ROLL_YAW_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
			SCE_FACE_DETECT_ROLL_YAW_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pDetectDict, SCE_FACE_DETECT_ROLL_YAW_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(pDetectDict, y_img, 320, 240, 320, 0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
			<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, detectResult, 16, &amp;num_face);

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">この辞書は検出可能な顔の角度範囲は広いですが、前述の他の辞書に比べ処理時間が長くなります。上下方向の角度の大きな顔検出には対応せず正確なピッチ角の出力もできません。<br><br>顔検出用辞書の種類はアプリケーションの使用目的に応じて使い分けてください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>顔検出用辞書データファイル（傾き横向き上下向き対応）<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</b> "face_detect_roll_yaw_pitch.fdt"
#define <b>SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT_SIZE</b> 100832

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出で使用する辞書データのファイル名とファイルサイズ（バイト）です。<br>顔検出を実行する関数<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()の引数<i>pDetectDict</i>に本ファイルを読み込んだメモリ領域へのポインタを設定してください。<br>この辞書データは傾きのある顔や横向きの顔や上下に向いた顔（ロール角やヨー角やピッチ角付きの顔）にも対応します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a> pDetectDict = (<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>)malloc(
			SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
		SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pDetectDict, SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(pDetectDict, y_img, 320, 240, 320, 0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
			<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>, detectResult, 16, &amp;num_face);

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">この辞書は検出可能な顔の角度範囲は最も広くなりますが、処理時間は最も長くなります。ピッチ角の出力にも対応します。<br><br>顔検出用辞書の種類はアプリケーションの使用目的に応じて使い分けてください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectDictPtr">SceFaceDetectDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetectionLocal">sceFaceDetectionLocal</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_DETECT_DICT_SIZE_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_DETECT_DICT_SIZE_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>顔検出用辞書データファイルの最大サイズ<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_DETECT_DICT_SIZE_MAX</b> 170876

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出で使用する辞書データファイルの最大サイズです。<br>同じデータバッファを異なる種類の顔検出用辞書データで使いまわすような場合のバッファサイズとして用いたりすることができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="顔検出用マクロ"></a>
<table width="100%"><td width="70%"><font size=6>顔検出用マクロ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[顔検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>顔検出結果位置精度設定で使用される定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;通常用途向けの顔検出結果位置精度設定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_RESULT_PRECISE">SCE_FACE_RESULT_PRECISE</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;処理時間より位置精度を優先した精度設定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_RESULT_FAST">SCE_FACE_RESULT_FAST</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;位置精度より速度を優先した精度設定&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出結果位置精度設定で使用される定数です。<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()の引数<i>resultPrecision</i>に上記のいずれかを指定します。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>()<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFacePartsDictPtr"></a>
<table width="100%"><td width="70%"><font size=6>SceFacePartsDictPtr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[パーツ検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>パーツ検出用辞書データのポインタ型<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef void *<b>SceFacePartsDictPtr</b>;

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パーツ検出で使用する辞書データへのポインタ型定義です。<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()の引数の型に用いられます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFacePartsResult"></a>
<table width="100%"><td width="70%"><font size=6>SceFacePartsResult<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[パーツ検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>パーツ検出の結果<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef struct{
	unsigned int <i>partsId</i>;
	float <i>partsX</i>;
	float <i>partsY</i>;
	float <i>score</i>;
} <b>SceFacePartsResult</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>partsId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出されたパーツの種類&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>partsX</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出されたパーツのx位置&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>partsY</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出されたパーツのy位置&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>score</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出されたパーツのスコア（libface内部で使用）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パーツ検出の結果として出力されるデータの型です。<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()を呼び出すと、引数<i>resultPartsArray</i>に設定した領域に、検出されたパーツの情報が本構造体の配列として書き込まれます。<br><br><i>partsId</i>には次のいずれかの値が入ります。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ID_UNDEF">SCE_FACE_PARTS_ID_UNDEF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;未定義パーツ（検出失敗）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ID_R_EYE_CENTER">SCE_FACE_PARTS_ID_R_EYE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;右目中心&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ID_L_EYE_CENTER">SCE_FACE_PARTS_ID_L_EYE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;左目中心&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ID_NOSE_CENTER">SCE_FACE_PARTS_ID_NOSE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;鼻中心&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ID_MOUTH_CENTER">SCE_FACE_PARTS_ID_MOUTH_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;口中心&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><i>partsX</i>, <i>partsY</i>は顔領域の左上を(0.0, 0.0)、右下を(1.0, 1.0)とした座標系で表現されています。<br><br>以下のコードにより入力画像上の座標に変換することができます。<br><br></div>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> face;
SceFacePartsResult parts;
int parts_x_of_image = (face.faceX + face.faceW * parts.partsX) * image_width;
int parts_y_of_image = (face.faceY + face.faceH * parts.partsY) * image_height;
</font></pre></div>
<div style="margin-left:50px;"><br></div>

<div align=center>
<p>
<img src="gif/libface-Reference-Japanese004.gif">
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- sce_fignum -->
<div align=center>
<p>
<b>図 4  パーツ検出結果</b><br>
</div>
<br>
<div style="margin-left:50px;"><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceAngle"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceAngle<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[パーツ検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>パーツ検出結果に基づく顔角度<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef struct{
	float <i>faceRoll</i>;
	float <i>facePitch</i>;
	float <i>faceYaw</i>;
} <b>SceFaceAngle</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceRoll</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔の平面（ロール軸）回転角度[radian]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>facePitch</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔の垂直方向（ピッチ軸）回転角度[radian]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>faceYaw</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔の水平方向（ヨー軸）回転角度[radian]&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">右目・左目・鼻・口の位置に基づいて算出された顔の回転角度を表す構造体です。<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()によってすべてのパーツ（右目・左目・鼻・口）が検出できた場合、そのパーツ検出結果を<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>()に入力すると、顔回転角度が計算され、その引数<i>resultFaceAngle</i>で設定した領域に、本構造体型のデータが書き込まれます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>(), <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceEstimateAngle">sceFaceEstimateAngle</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceParts"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceParts<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[パーツ検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>パーツ検出の実行<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
int <b>sceFaceParts</b>(
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a> <i>pPartsDict</i>,
	const unsigned char *<i>imgPtr</i>,
	int <i>width</i>,
	int <i>height</i>,
	int <i>rowstride</i>,
	int <i>xScanStep</i>,
	int <i>yScanStep</i>,
	const <a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> *<i>detectedFace</i>,
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a> <i>resultPartsArray[]</i>,
	int <i>resultPartsArraySize</i>,
	int *<i>numResultParts</i>
)
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pPartsDict</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出用辞書データへのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>imgPtr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像（8bitグレースケール）へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像の横幅[pixel]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像の高さ[pixel]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rowstride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像のデータ幅&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>xScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出ウィンドウの水平方向シフト量[pixel]（推奨値：1）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>yScanStep</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出ウィンドウの垂直方向シフト量[pixel]（推奨値：1）&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>detectedFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出結果へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultPartsArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出結果の出力領域へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultPartsArraySize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>resultPartsArray</i>配列の要素数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>numResultParts</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出されたパーツの数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合はSCE_OK(0)を返します。<br>エラーの場合は次のエラーコード（負の値）を返します。<br></div>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_NO_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メモリ確保に失敗&nbsp;&nbsp;<br>&nbsp;&nbsp;メモリ管理関数が未設定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_INVALID_DICT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔認識辞書データが不正&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出によって得られた顔領域から目・鼻・口のパーツを検出するための関数です。<br><br><i>pPartsDict</i>には、パーツ検出用辞書データファイル<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>または<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ROLL_YAW_DICT">SCE_FACE_PARTS_ROLL_YAW_DICT</a>を読み込んだメモリ領域へのポインタを設定してください。<br>これらの辞書の使い分けは、検出精度よりも高速化を優先して軽量な辞書を選択する場合などを除いて、基本的には顔検出辞書の種類に合わせるようにします。<br><br><i>imgPtr</i>に設定する入力画像は、原則としては顔検出処理で使用したものをそのまま使用し、本処理が全て終了し本関数から返ってくるまでは画像の更新やクリアをしないようにしてください。<br>動画像などのように大きな画像変化がなければ、必ずしも完全に同一の画像である必要はありませんが、顔検出結果から得られた顔領域と顔角度を用いてその範囲しか探索処理を行いませんので、画像内容の変化が大きいほど検出ミスが発生する可能性が高くなります。<br><i>detectedFace</i>には、顔検出結果の顔ひとつ分のデータへのポインタを設定してください。<br><i>resultPartsArray</i>には、パーツ検出結果を保存する<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>配列へのポインタを設定してください。通常この<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>配列の要素数は<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>(4)として、<i>resultPartsArraySize</i>には、<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>(4)を設定してください。<br>正常にパーツ検出が実行されると<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>(4)個分のパーツ検出結果データが<i>resultPartsArray</i>に設定したメモリ領域に出力され、検出されたパーツの個数が<i>numResultParts</i>に返ります。<br><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>エラーが発生した場合には、<i>numResultParts</i>には常に0が返ります。<br><br>正常に検出を行えなかったパーツについては、検出結果の<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>構造体の<i>partsId</i>メンバが<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ID_UNDEF">SCE_FACE_PARTS_ID_UNDEF</a>となっています。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* 顔認識辞書データファイルの読み込み */
unsigned char detectDict[SCE_FACE_DETECT_FRONTAL_DICT_SIZE];
unsigned char partsDict[SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE];
SceUID fd;
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, detectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, partsDict, SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE);
sceIoClose(fd);

unsigned char y_img[320*240];
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult[16];
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a> resultPartsArray[<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>];
int i, j, num_face, num_parts, ret;

/* 顔検出の実行 */
ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(		detectDict,
				y_img, 320, 240, 320,
				0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
				<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>,
				detectResult, 16, &amp;num_face);
if (ret != SCE_OK) { printf("error!\n"); return; }
for (i = 0; i &lt; num_face; i++) {
	/* パーツ検出の実行 */
	ret = sceFaceParts(	partsDict,
				y_img, 320, 240, 320,
				1, 1, &amp;detectResult[i],
				resultPartsArray, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>,
				&amp;num_parts);
	if (ret != SCE_OK) { printf("error!\n"); return; }
	for (j = 0; j &lt; num_parts; j++) {
		printf("parts[%d] id = %d x = %f y = %f\n", j,
				resultPartsArray[j].partsId,
				resultPartsArray[j].partsX,
				resultPartsArray[j].partsY);
	}
}

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">本関数を実行する前に一度も<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()が呼ばれていない場合には、返り値に<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>が返ります。本関数を実行する前に必ず一度<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()を呼び出してメモリ管理関数を設定してください。<br><br>本関数内部ではヒープ領域のメモリ動的にを確保・使用・解放しているため、ヒープメモリサイズがごく小さい設定になっていると下記のような現象が起こる場合があります。<br>パーツ検出処理の初期段階におけるまとまった量の動的メモリ確保で失敗した場合は、パーツ検出処理を実行せず返り値<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>ですぐに関数から返ります。<br>パーツ検出処理の開始までは成功したものの、内部での中間結果の一時的保存領域が途中で不足した場合には、出力された検出精度が若干悪化する場合があります。<br><br>入力画像の撮影条件が好ましくなく、逆光や光量不足によって顔部分が暗くなってしまっている場合や逆に露出オーバーで顔が白く飛んでしまっている場合、あるいはノイズが多い画像などでは、プログラム上は正常に処理が行われてもパーツ検出率が悪化する場合があります。必要に応じて入力画像品質の調整をしてから本関数を呼び出すようにしてください。<br><br>その他、顔角度が大きい場合、例えば顔がほとんど横向きで片方の目がほとんど見えないような場合や、髪の毛や眼鏡その他によって顔の一部が隠れるような場合などは、上記のような原因がなくてもパーツ検出は失敗する場合があります。<br><br>状況によっては、プログラム上は正常に動作したものの誤った位置を検出してしまう場合もあり、そのような場合には返り値によるパーツ検出数や検出結果の<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>構造体の<i>partsId</i>メンバの内容によって誤検出かどうかの判別はできませんのでご注意ください。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>,<br><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ROLL_YAW_DICT">SCE_FACE_PARTS_ROLL_YAW_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>,<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceEstimateAngle"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceEstimateAngle<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[パーツ検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>検出されたパーツ位置による顔角度の推定<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
int <b>sceFaceEstimateAngle</b>(
	int <i>width</i>,
	int <i>height</i>,
	const <a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> *<i>detectedFace</i>,
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a> <i>detectedPartsArray[]</i>,
	int <i>numDetectedParts</i>,
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAngle">SceFaceAngle</a> *<i>resultFaceAngle</i>
)

</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフである<br><br></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像の横幅[pixel]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像の高さ[pixel]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>detectedFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出結果へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>detectedPartsArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出結果配列へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>numDetectedParts</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出されたパーツの数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>resultFaceAngle</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;角度推定結果の出力領域へのポインタ&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合はSCE_OK(0)を返します。<br>エラーの場合は次のエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_IMPERF_PARTS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツが不完全&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">右目・左目・鼻・口の位置に基づいて顔の回転角度を計算する関数です。<br>画像認識などは行わず、顔やパーツの検出結果だけから計算を行います。<br><br><i>resultFaceAngle</i>に出力される<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAngle">SceFaceAngle</a>構造体のメンバ<i>faceRoll</i>, <i>facePitch</i>, <i>faceYaw</i>は図 2に示すような右手座標系で定義されています。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* 顔認識辞書データファイルの読み込み */
unsigned char detectDict[SCE_FACE_DETECT_FRONTAL_DICT_SIZE];
unsigned char partsDict[SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE];
SceUID fd;
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, detectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, partsDict, SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE);
sceIoClose(fd);

unsigned char y_img[320*240];
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult[16];
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a> resultPartsArray[<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>];
int i, num_face, num_parts, ret;

/* 顔検出の実行 */
ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(		detectDict,
				y_img, 320, 240, 320,
				0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
				<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>,
				detectResult, 16, &amp;num_face);
if (ret != SCE_OK) { printf("error!\n"); return; }
for (i = 0; i &lt; num_face; i++) {
	/* パーツ検出の実行 */
	ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>(	partsDict,
				y_img, 320, 240, 320,
				1, 1, &amp;detectResult[i],
				resultPartsArray, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>,
				&amp;num_parts);
	if (ret != SCE_OK) { printf("error!\n"); return; }
	/* パーツ位置による顔角度の推定 */
	ret = sceFaceEstimateAngle(320, 240, &amp;detectResult[i],
				resultPartsArray, num_parts,
				&amp;resultFaceAngle);
	if (ret != SCE_OK) { printf("error!\n"); return; }
	printf("roll = %f pitch = %f yaw = %f\n",
				resultFaceAngle.faceRoll,
				resultFaceAngle.facePitch,
				resultFaceAngle.faceYaw);
}

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">入力するパーツ情報は4つのパーツ（左右の目・鼻・口）全て正常な検出結果が揃っている必要があります。そうでない場合は顔の角度を計算することができませんのでエラーとなり、返り値に<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_IMPERF_PARTS">SCE_FACE_ERROR_IMPERF_PARTS</a>が返ります。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAngle">SceFaceAngle</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_PARTS_FRONTAL_ROLL_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_PARTS_FRONTAL_ROLL_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[パーツ検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>パーツ検出用辞書データファイル（正面顔・傾き対応）<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_PARTS_FRONTAL_ROLL_DICT</b> "face_parts_frontal_roll.pdt"
#define <b>SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE</b> 40592

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パーツ検出で使用する辞書データのファイル名とファイルサイズ（バイト）です。<br>パーツ検出実行関数<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()の引数<i>pPartsDict</i>に本ファイルを読み込んだメモリ領域へのポインタを設定してください。<br>この辞書データは正面顔や傾きのある顔（ロール角付きの顔）に対応しています。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a> pPartsDict = (<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a>)malloc(
				SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
		SCE_FACE_PARTS_FRONTAL_ROLL_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pPartsDict, SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>(pPartsDict, y_img, 320, 240, 320, 1, 1, &amp;detectResult[i],
		resultPartsArray, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>, &amp;num_parts);

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ROLL_YAW_DICT">SCE_FACE_PARTS_ROLL_YAW_DICT</a>よりも処理時間が短い辞書ですが、横向きの顔（ヨー角の大きい顔）ではパーツの誤検出が多くなります。<br></div>
<br>
<div style="margin-left:50px;">顔検出において顔検出用の辞書として<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_FAST_DICT">SCE_FACE_DETECT_FRONTAL_FAST_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_DICT">SCE_FACE_DETECT_ROLL_DICT</a>を使用した場合に適します。それ以外の顔検出辞書を用いた顔検出結果に対しても使用はできますが、検出された顔のヨー角が大きい場合にはパーツの誤検出が多くなる可能性があります。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_PARTS_ROLL_YAW_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_PARTS_ROLL_YAW_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[パーツ検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>パーツ検出用辞書データファイル（傾き横向き対応）<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_PARTS_ROLL_YAW_DICT</b> "face_parts_roll_yaw.pdt"
#define <b>SCE_FACE_PARTS_ROLL_YAW_DICT_SIZE</b> 125324

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パーツ検出で使用する辞書データのファイル名とファイルサイズ（バイト）です。<br>パーツ検出実行関数<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()の引数<i>pPartsDict</i>に本ファイルを読み込んだメモリ領域へのポインタを設定してください。<br>この辞書データは傾きのある顔や横向きの顔（ロール角やヨー角付きの顔）にも対応します。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a> pPartsDict = (<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a>)malloc(
				SCE_FACE_PARTS_ROLL_YAW_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
			SCE_FACE_PARTS_ROLL_YAW_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pPartsDict, SCE_FACE_PARTS_ROLL_YAW_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>(pPartsDict, y_img, 320, 240, 320, 1, 1, &amp;detectResult[i],
		resultPartsArray, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>, &amp;num_parts);

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>よりも横向きの顔（ヨー角の大きい顔）におけるパーツの誤検出が少ない辞書ですが、処理時間は長くなります。<br><br>顔検出において顔検出用の辞書として<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_DICT">SCE_FACE_DETECT_ROLL_YAW_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT">SCE_FACE_DETECT_ROLL_YAW_PITCH_DICT</a>を使用した場合に適します。それ以外の顔検出辞書を用いた顔検出結果に対しても使用はできますが、その場合には必要のない冗長な処理を内部で行うことになり、処理時間が無駄になります。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsDictPtr">SceFacePartsDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_PARTS_DICT_SIZE_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_PARTS_DICT_SIZE_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[パーツ検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>パーツ検出用辞書データファイルの最大サイズ<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_PARTS_DICT_SIZE_MAX</b> 125324

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パーツ検出で使用する辞書データファイルの最大サイズです。<br>同じデータバッファを異なる種類のパーツ検出用辞書データで使いまわすような場合のバッファサイズとして用いたりすることができます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_ROLL_YAW_DICT">SCE_FACE_PARTS_ROLL_YAW_DICT</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="パーツ検出用マクロ"></a>
<table width="100%"><td width="70%"><font size=6>パーツ検出用マクロ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[パーツ検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>パーツ検出で使用される定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;最大パーツ検出個数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パーツ検出で使用される定数です。<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="パーツ検出用パーツIDマクロ"></a>
<table width="100%"><td width="70%"><font size=6>パーツ検出用パーツIDマクロ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[パーツ検出のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>パーツ検出で使用されるパーツID定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_ID_UNDEF">SCE_FACE_PARTS_ID_UNDEF</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;未定義&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_ID_R_EYE_CENTER">SCE_FACE_PARTS_ID_R_EYE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;右目中心&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_ID_L_EYE_CENTER">SCE_FACE_PARTS_ID_L_EYE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;2&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;左目中心&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_ID_NOSE_CENTER">SCE_FACE_PARTS_ID_NOSE_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;3&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;鼻中心&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_PARTS_ID_MOUTH_CENTER">SCE_FACE_PARTS_ID_MOUTH_CENTER</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;4&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;口中心&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><pre><font size=3></font></pre></div>

<div style="margin-left:50px;">
<p>
<img src="gif/libface-Reference-Japanese005.jpg">
</div>
<div style="margin-left:50px;"><pre><font size=3>

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">パーツ検出で使用されるパーツID定数です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceAttribDictPtr"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceAttribDictPtr<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[属性判別のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>属性判別用辞書データのポインタ型<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef void *<b>SceFaceAttribDictPtr</b>;

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">属性判別で使用する辞書データへのポインタ型定義です。<br><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()の引数の型に用いられます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SceFaceAttribResult"></a>
<table width="100%"><td width="70%"><font size=6>SceFaceAttribResult<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[属性判別のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>属性判別の結果<br></div><br>

<!-- 構造 -->
<div style="margin-left:10px;"><b>構造</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
typedef struct{
	unsigned int <i>attribId</i>;
	float <i>score</i>;
} <b>SceFaceAttribResult</b>;

</font></pre></div>

<!-- メンバ -->
<div style="margin-left:10px;"><b>メンバ</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>attribId</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;属性ID&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>score</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;属性スコア&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">属性判別の結果として出力されるデータの型です。<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()を呼び出すと、判別した結果が、引数<i>resultAttribArray</i>で設定した領域に、本構造体の配列として書き込まれます。<br><br><i>attribId</i>には次のいずれかの値が入ります。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ATTRIB_ID_UNDEF&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;未定義属性&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ATTRIB_ID_SMILE&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;笑顔（0.0:悲しい、20.0:無表情、100.0:大笑い）&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>
<div style="margin-left:50px;"><i>score</i>に入る値は、<i>attribId</i>がSCE_FACE_ATTRIB_ID_SMILEの場合、笑顔度合いに連動して0.0〜100.0に正規化された値で出力されます。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="sceFaceAttribute"></a>
<table width="100%"><td width="70%"><font size=6>sceFaceAttribute<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[属性判別のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>属性判別の実行<br></div><br>

<!-- 形式 -->
<div style="margin-left:10px;"><b>形式</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
int <b>sceFaceAttribute</b>(
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribDictPtr">SceFaceAttribDictPtr</a> <i>pAttribDict</i>,
	const unsigned char *<i>imgPtr</i>,
	int <i>width</i>,
	int <i>height</i>,
	int <i>rowstride</i>,
	const <a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> *<i>detectedFace</i>,
	const <a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a> <i>detectedPartsArray[]</i>,
	int <i>numDetectedParts</i>,
	<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribResult">SceFaceAttribResult</a> <i>resultAttribArray[]</i>,
	int <i>resultAttribArraySize</i>,
	int *<i>numResultAttrib</i>
)
</font></pre></div>
<div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 呼出条件 -->
<div style="margin-left:10px;"><b>呼出条件</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">割り込みハンドラから呼び出し可能<br>スレッドから呼び出し可能（割り込み禁止 / 許可状態に依存しない）<br>マルチスレッドセーフでない<br></div>
        <div style="margin-left:50px;"><pre><font size=3>
</font></pre></div>

<!-- 引数 -->
<div style="margin-left:10px;"><b>引数</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=0>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>pAttribDict</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;属性判別用辞書データへのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>imgPtr</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像（8bitグレースケール）へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>width</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像の横幅[pixel]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>height</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像の高さ[pixel]&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>rowstride</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;入力画像のデータ幅&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>detectedFace</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔検出結果へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>detectedPartsArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツ検出結果へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>numDetectedParts</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;検出されたパーツの数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultAttribArray[]</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;属性判別結果の出力領域へのポインタ&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<i>resultAttribArraySize</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;<i>resultAttribArray</i>配列の要素数&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;*<i>numResultAttrib</i>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;判別された属性の数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>

<!-- 返り値 -->
<div style="margin-left:10px;"><b>返り値</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">正常終了の場合はSCE_OK(0)を返します。<br>エラーの場合は次のいずれかのエラーコード（負の値）を返します。<br><br></div>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_NO_MEMORY&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メモリ確保に失敗&nbsp;&nbsp;<br>&nbsp;&nbsp;メモリ管理関数が未設定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_IMPERF_PARTS&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツが不完全&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;SCE_FACE_ERROR_INVALID_DICT&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔認識辞書データが不正&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">顔検出結果および、目・鼻・口のパーツ検出結果を用いて、属性判別を行うための関数です。<br><br><i>pAttribDict</i>には、属性判別用辞書データファイル<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a>を読み込んだメモリ領域へのポインタを設定してください。<br><i>imgPtr</i>に設定する入力画像はパーツ検出で用いたものと同一である必要があります。<br><i>detectedFace</i>に設定する顔検出結果は、パーツ検出の入力に用いたものと同一である必要があります。<br><i>detectedPartsArray</i>に設定するパーツ検出結果は、目・鼻・口の全ての検出が正常に行われたものである必要があり、<i>numDetectedParts</i>も<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>(4)である必要があります。<br>設定されたパーツ検出結果がこれらの条件を満たしておらず属性判別が不可能な場合には、返り値に<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_IMPERF_PARTS">SCE_FACE_ERROR_IMPERF_PARTS</a>が返ります。<br><br><i>resultAttribArray</i>には、<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>(1)個の要素を持つ<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribResult">SceFaceAttribResult</a>配列へのポインタを設定し、<i>resultAttribArraySize</i>には<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>(1)を設定してください。<br>正常に属性判別処理が行われた際には<i>numResultAttrib</i>に<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>(1)が返り、属性判別の結果は、<i>resultAttribArray</i>で指定された領域に、<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>(1)個の<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribResult">SceFaceAttribResult</a>として出力されます。<br><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>または<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_IMPERF_PARTS">SCE_FACE_ERROR_IMPERF_PARTS</a>エラーが発生した場合には、<i>numResultAttrib</i>には常に0が返ります。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3>/* 顔認識辞書データファイルの読み込み */
unsigned char detectDict[SCE_FACE_DETECT_FRONTAL_DICT_SIZE];
unsigned char partsDict[SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE];
unsigned char attribDict[SCE_FACE_ATTRIB_SMILE_DICT_SIZE];
SceUID fd;
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_DETECT_FRONTAL_DICT">SCE_FACE_DETECT_FRONTAL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, detectDict, SCE_FACE_DETECT_FRONTAL_DICT_SIZE);
sceIoClose(fd);
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_FRONTAL_ROLL_DICT">SCE_FACE_PARTS_FRONTAL_ROLL_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, partsDict, SCE_FACE_PARTS_FRONTAL_ROLL_DICT_SIZE);
sceIoClose(fd);
fd = sceIoOpen("host0:../../../data/or_dict/face/"
		<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a>, SCE_O_RDONLY, 0);
sceIoRead(fd, attribDict, SCE_FACE_ATTRIB_SMILE_DICT_SIZE);
sceIoClose(fd);

unsigned char y_img[320*240];
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a> detectResult[16];
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a> resultPartsArray[<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>];
<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribResult">SceFaceAttribResult</a> resultAttribArray[<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>];
int i, j, num_face, num_parts, num_attrib, ret;

/* 顔検出の実行 */
ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceDetection">sceFaceDetection</a>(		detectDict,
				y_img, 320, 240, 320,
				0.4f, 0.841f, 0.0f, 2, 2, 1.0f,
				<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_RESULT_NORMAL">SCE_FACE_RESULT_NORMAL</a>,
				detectResult, 16, &amp;num_face);
if (ret != SCE_OK) { printf("error!\n"); return; }
for (i = 0; i &lt; num_face; i++) {
	/* パーツ検出の実行 */
	ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceParts">sceFaceParts</a>(	partsDict,
				y_img, 320, 240, 320,
				1, 1, &amp;detectResult[i],
				resultPartsArray, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_PARTS_NUM_MAX">SCE_FACE_PARTS_NUM_MAX</a>,
				&amp;num_parts);
	if (ret != SCE_OK) { printf("error!\n"); return; }
	/* 属性判別の実行 */
	ret = sceFaceAttribute(	attribDict,
				y_img, 320, 240, 320, &amp;detectResult[i],
				resultPartsArray, num_parts,
				resultAttribArray, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>,
				&amp;num_attrib);
	if (ret != SCE_OK) { printf("error!\n"); return; }
	for (j = 0; j &lt; num_attrib; j++) {
		printf("facial attribute: id = %d score = %f\n",
			resultAttribArray[j].attribId, resultAttribArray[j].score);
	}
}

</font></pre></div>

<!-- 備考 -->
<div style="margin-left:10px;"><b>備考</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">本関数を実行する前に一度も<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()が呼ばれていない場合には、返り値に<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>が返ります。本関数を実行する前に必ず一度<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()を呼び出してメモリ管理関数を設定してください。<br><br>本関数内部ではヒープ領域のメモリ動的にを確保・使用・解放しているため、ヒープメモリサイズがごく小さい設定になっていると、属性判別処理の初期段階の動的メモリ確保で失敗する場合があります。この場合は処理を実行せず返り値に<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>が返ります。<br><br>入力画像の撮影条件が好ましくなく、逆光や光量不足によって顔部分が暗くなってしまっている場合や逆に露出オーバーで顔が白く飛んでしまっている場合、あるいはノイズが多い画像などでは、プログラム上は正常に処理が行われても属性判別性能が悪化する場合があります。必要に応じて入力画像品質の調整をしてから本関数を呼び出すようにしてください。<br><br>顔の向きが正面からずれる（顔の角度が大きくなる）ほど属性判別性能が悪化する傾向があります。<br>また、画像品質その他の要因により、プログラム上はエラーではないものの本当のパーツ位置からずれた位置をパーツ位置と誤認識してしまう場合もありますが、そのような場合には属性判別の結果も本来のものと異なる結果になる場合があります。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribDictPtr">SceFaceAttribDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceDetectionResult">SceFaceDetectionResult</a>,<br><a href="../image_recognition/libface-Reference-Japanese.htm#SceFacePartsResult">SceFacePartsResult</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribResult">SceFaceAttribResult</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceSetMallocFunction">sceFaceSetMallocFunction</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_ATTRIB_SMILE_DICT"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_ATTRIB_SMILE_DICT<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[属性判別のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>属性判別用辞書データファイル（笑顔度合い）<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_ATTRIB_SMILE_DICT</b> "face_attrib_smile.adt"
#define <b>SCE_FACE_ATTRIB_SMILE_DICT_SIZE</b> 6568

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">属性判別で使用する辞書データのファイル名とファイルサイズ（バイト）です。<br>属性判別実行関数<a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()の引数<i>pAttribDict</i>に本ファイルを読み込んだメモリ領域へのポインタを設定してください。<br>この辞書データを用いることで笑顔度合いについての判別を行うことができます。<br><br></div>

<!-- 使用例 -->
<div style="margin-left:10px;"><b>使用例</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
        <div style="margin-left:50px;"><pre><font size=3><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribDictPtr">SceFaceAttribDictPtr</a> pAttribDict = (<a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribDictPtr">SceFaceAttribDictPtr</a>)malloc(
					SCE_FACE_ATTRIB_SMILE_DICT_SIZE);
SceUID fd = sceIoOpen("host0:../../../data/or_dict/face/"
				SCE_FACE_ATTRIB_SMILE_DICT, SCE_O_RDONLY, 0);
sceIoRead(fd, pAttribDict, SCE_FACE_ATTRIB_SMILE_DICT_SIZE);
sceIoClose(fd);

ret = <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>(pAttribDict, y_img, 320, 240, 320, &amp;detectResult[i],
		resultPartsArray, num_parts,
		resultAttribArray, <a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>, &amp;num_attrib);

</font></pre></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SceFaceAttribDictPtr">SceFaceAttribDictPtr</a>, <a href="../image_recognition/libface-Reference-Japanese.htm#sceFaceAttribute">sceFaceAttribute</a>()<br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="SCE_FACE_ATTRIB_DICT_SIZE_MAX"></a>
<table width="100%"><td width="70%"><font size=6>SCE_FACE_ATTRIB_DICT_SIZE_MAX<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[属性判別のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>属性判別用辞書データファイルの最大サイズ<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><pre><font size=3>#include &lt;libface.h&gt;
#define <b>SCE_FACE_ATTRIB_DICT_SIZE_MAX</b> 6568

</font></pre></div>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">属性判別で使用する辞書データファイルの最大サイズです。<br>現在、属性判別用辞書データファイルは<a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a>のみですので、SCE_FACE_ATTRIB_SMILE_DICT_SIZEと同じ値です。<br><br></div>

<!-- 関連項目 -->
<div style="margin-left:10px;"><b>関連項目</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;"><a href="../image_recognition/libface-Reference-Japanese.htm#SCE_FACE_ATTRIB_SMILE_DICT">SCE_FACE_ATTRIB_SMILE_DICT</a><br><br></div>
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="属性判別用マクロ"></a>
<table width="100%"><td width="70%"><font size=6>属性判別用マクロ<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[属性判別のAPI]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>属性判別で使用される定数<br></div><br>

<!-- 定義 -->
<div style="margin-left:10px;"><b>定義</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_ATTRIB_NUM_MAX">SCE_FACE_ATTRIB_NUM_MAX</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;1&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;最大属性判別数&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<br>

<!-- 解説 -->
<div style="margin-left:10px;"><b>解説</b></div>
<hr noshade align="left" size=2 width=20%>
<br>
<div style="margin-left:50px;">属性判別で使用される定数です。<br><br></div>

<!-- sce_hd2 -->
<!-- sce_funcname -->
<hr noshade Size=6 >
<a name="エラーコード一覧"></a>
<table width="100%"><td width="70%"><font size=6>エラーコード一覧<br></font></a></td>
<td width="30%"valign="center"align="right"><b><font size=4>[エラーコード]</font></b></td></table>
<hr noshade Size=4 >
<!-- sce_function -->
<!-- hp -->
<div align=right>libfaceの返すエラーコード<br></div><br>
<div style="margin-left:50px;">
<table border=1>
<tr>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>マクロ</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>値</b>&nbsp;&nbsp;</td>
<td valign="TOP" bgcolor="#cccccc">&nbsp;&nbsp;<b>説明</b>&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_OK">SCE_OK</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;正常終了&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_ERROR_NO_MEMORY">SCE_FACE_ERROR_NO_MEMORY</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580001&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;メモリ確保に失敗&nbsp;&nbsp;<br>&nbsp;&nbsp;メモリ管理関数が未設定&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_ERROR_IMPERF_PARTS">SCE_FACE_ERROR_IMPERF_PARTS</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580002&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;パーツが不完全&nbsp;&nbsp;</td>
</tr>
<tr>
<td valign="TOP">&nbsp;&nbsp;<a name="SCE_FACE_ERROR_INVALID_DICT">SCE_FACE_ERROR_INVALID_DICT</a>&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;0x80580003&nbsp;&nbsp;</td>
<td valign="TOP">&nbsp;&nbsp;顔認識辞書データが不正&nbsp;&nbsp;</td>
</tr>
</table>
</div>
<br>
<p><p><hr>
<div ALIGN="right">
    &copy;2009 Sony Computer Entertainment Inc.  All Rights Reserved.<br>
    SCE CONFIDENTIAL
</div>
</body>
</html>
